{"version":3,"sources":["webpack:///./src/js/lib2.js"],"names":["jm","collapsible","containers","Map","init","container","multiple","addEventListener","querySelectorAll","forEach","el","style","opacity","self","this","has","header","slideToggle","set","e","preventDefault","section","nextElementSibling","parentElement","get","sec","toggleSection","previousElementSibling","height","scrollHeight","classList","toggle","console","log","contains","destroy","removeEventListener","headerClickHandler","delete"],"mappings":"0FAAA,0CAAO,MAAMA,EAAK,CAEdC,YAAa,CACTC,WAAY,IAAIC,IAChBC,KAAM,SAAUC,EAAWC,GAIvBD,EAAUE,iBAAiB,iBAAiB,WACxCF,EAAUG,iBAAiB,+BAA+BC,QAAQC,IAC9DA,EAAGC,MAAMC,QAA+B,MAArBF,EAAGC,MAAMC,QAAkB,OAAS,SAI/D,IAAIC,EAAOC,KACX,IAAKA,KAAKZ,WAAWa,IAAIV,GAAY,CACnBA,EAAUG,iBAAiB,+BACjCC,QAAQO,IACZA,EAAOT,iBAAiB,QAASM,EAAKI,eAE1CH,KAAKZ,WAAWgB,IAAIb,EAAW,CAAEA,YAAWC,eAGpDW,YAAa,SAAUE,GACnBA,EAAEC,iBAEF,IAAIC,EAAUP,KAAKQ,mBACfjB,EAAYS,KAAKS,eACjB,SAAEjB,GAAaN,EAAGC,YAAYC,WAAWsB,IAAInB,GAEjD,IAAQC,EAAW,CACID,EAAUG,iBAAiB,gBACjCC,QAASgB,IAAUJ,IAAYI,GAAOzB,EAAGC,YAAYyB,cAAcD,KAIpFzB,EAAGC,YAAYyB,cAAcL,IAEjCK,cAAe,SAAUL,GACrB,IAAIL,EAASK,EAAQM,uBACrBN,EAAQV,MAAMiB,OAASP,EAAQQ,aAAe,KAC9Cb,EAAOc,UAAUC,OAAO,QAKxBC,QAAQC,IAAIZ,EAAQQ,cACpBR,EAAQV,MAAMiB,OAASZ,EAAOc,UAAUI,SAAS,QAAUb,EAAQQ,aAAe,KAAO,GAE7FM,QAAS,SAAU9B,GACf,GAAIS,KAAKZ,WAAWa,IAAIV,GAAY,CAClBA,EAAUG,iBAAiB,+BACjCC,QAAQO,IACZA,EAAOoB,oBAAoB,QAASC,sBAExCvB,KAAKZ,WAAWoC,OAAOjC,GACvB2B,QAAQC,IAAI","file":"chunkFilename.lib2.bundle.js","sourcesContent":["export const jm = {\r\n\r\n    collapsible: {\r\n        containers: new Map(),\r\n        init: function (container, multiple) { // multiple: allow multiple sections to be open simultaneously\r\n\r\n            // FIXES THE \"BOARDER DISSAPPEARING\" PROBLEM, BUT UGLY ! USE IT ONLY IF NEEDED (COLLAPSIBLE PANELS)\r\n            // this approach is simpler but works not 100%:  will-change: transform;  ON .section class\r\n            container.addEventListener(\"transitionend\", function () {\r\n                container.querySelectorAll(\":scope > .list-group-header\").forEach(el => {\r\n                    el.style.opacity = el.style.opacity === \"1\" ? \"0.99\" : \"1\";\r\n                });\r\n            });\r\n\r\n            let self = this;\r\n            if (!this.containers.has(container)) {\r\n                let headers = container.querySelectorAll(\":scope > .list-group-header\");\r\n                headers.forEach(header => {\r\n                    header.addEventListener('click', self.slideToggle);\r\n                });\r\n                this.containers.set(container, { container, multiple });\r\n            }\r\n        },\r\n        slideToggle: function (e) {\r\n            e.preventDefault();\r\n\r\n            let section = this.nextElementSibling;\r\n            let container = this.parentElement;\r\n            let { multiple } = jm.collapsible.containers.get(container);\r\n\r\n            if (!(!!multiple)) {\r\n                let openSections = container.querySelectorAll(\":scope .open\");\r\n                openSections.forEach((sec) => { section !== sec && jm.collapsible.toggleSection(sec); });\r\n\r\n            }\r\n\r\n            jm.collapsible.toggleSection(section);\r\n        },\r\n        toggleSection: function (section) {\r\n            let header = section.previousElementSibling;\r\n            section.style.height = section.scrollHeight + 'px';\r\n            header.classList.toggle('open');\r\n\r\n            // Something like console.log(section.scrollHeight); also works, just something to prevent render skipping\r\n            // so instead of bsectionow line, you could: console.log(section.scrollHeight);\r\n            // section.scrollHeight = section.scrollHeight;\r\n            console.log(section.scrollHeight);\r\n            section.style.height = header.classList.contains('open') ? section.scrollHeight + 'px' : 0;\r\n        },\r\n        destroy: function (container) {\r\n            if (this.containers.has(container)) {\r\n                let headers = container.querySelectorAll(\":scope > .list-group-header\");\r\n                headers.forEach(header => {\r\n                    header.removeEventListener('click', headerClickHandler);\r\n                });\r\n                this.containers.delete(container);\r\n                console.log(\"destroy called on collapsible\");\r\n            }\r\n        }\r\n    }\r\n};\r\n"],"sourceRoot":""}