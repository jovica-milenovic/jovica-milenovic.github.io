{"version":3,"sources":["webpack:///./node_modules/@amcharts/amcharts4/.internal/core/utils/Cache.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/themes/animated.js","webpack:///./node_modules/@amcharts/amcharts4/themes/animated.js","webpack:///./node_modules/tslib/tslib.es6.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/Registry.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/utils/Array.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/utils/Object.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/utils/Dictionary.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/utils/EventDispatcher.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/utils/AsyncPending.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/utils/String.js"],"names":["Cache","this","_storage","ttl","prototype","set","owner","key","value","ownerStorage","insertKeyIfEmpty","item","Date","getTime","setKey","get","undefined","hasKey","getKey","cacheItem","touched","expired","removeKey","clear","cache","object","transitionDuration","rangeChangeDuration","interpolationDuration","sequencedInterpolation","defaultState","hiddenState","animationDuration","properties","opacity","showOnInit","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","Symbol","iterator","v","op","TypeError","pop","push","__values","o","m","__read","r","ar","error","__spread","concat","isNaN","Number","getType","toString","getDefault","optional","checkString","Error","checkBoolean","checkNumber","checkObject","checkArray","isArray","checkDate","castString","castNumber","number","JSON","stringify","toBoolean","toNumber","hasValue","isNumber","converted","isString","replace","toText","isObject","toNumberOrPercent","indexOf","a","getValue","getValueDefault","defaultValue","isDate","Registry","events","themes","loadedThemes","_uidCount","registeredClasses","_placeholders","invalidSprites","invalidDatas","invalidRawDatas","invalidDataItems","invalidDataRange","invalidPositions","invalidLayouts","baseSprites","baseSpritesByUid","queue","uid","getUniqueId","noBase","defineProperty","_map","enumerable","configurable","setCache","getCache","dispatch","eventType","data","isEnabled","type","target","dispatchImmediately","getPlaceholder","addToInvalidComponents","component","baseId","removeFromInvalidComponents","addToInvalidSprites","sprite","removeFromInvalidSprites","addToInvalidPositions","removeFromInvalidPositions","addToInvalidLayouts","removeFromInvalidLayouts","registry","is","name","x","PI","Math","HALFPI","RADIANS","DEGREES","toNumberRange","min","max","fitToRange","round","precision","floor","rounded","pow","ceil","stretch","from","to","minValue","maxValue","temp","sin","tan","cos","left","right","closest","values","referenceValue","reduce","prev","curr","abs","intersect","range1","range2","start1","start","start2","end1","end","end2","invertRange","range","intersection","startMax","endMin","getDistance","point1","point2","sqrt","getHorizontalDistance","getVerticalDistance","getCubicCurveDistance","controlPointA","controlPointB","stepCount","distance","prevPoint","point","getPointOnCubicCurve","getScale","startPoint1","startPoint2","initialDistance","currentDistance","getMidPoint","position","getRotation","diff","getAngle","diffX","diffY","angle","atan2","normalizeAngle","getCenterShift","center","getBBox","points","length_1","top_1","bottom","width","height","getCommonRectangle","rectangles","minX","minY","maxX","maxY","rectangle","getPointOnQuadraticCurve","pointA","pointB","controlPoint","mt1","mt2","mt3","getCubicControlPointA","p0","p1","p2","p3","tensionX","tensionY","adjustTension","getCubicControlPointB","tension","fitAngleToRange","startAngle","endAngle","count","getArcRect","radius","MAX_VALUE","bpoints","getArcPoint","fromAngle","toAngle","pt","arc","isInRectangle","getLineIntersection","pointA1","pointA2","pointB1","pointB2","array","any","test","map","fn","output","each","eachReverse","eachContinue","shiftLeft","index","last","first","insert","element","splice","setIndex","remove","pushAll","input","found","move","toIndex","removeIndex","insertIndex","add","unshift","ind","toArray","has","copy","slice","getSortedIndex","ordering","pivot","order","findIndex","matches","find","shuffle","temporaryValue","randomIndex","currentIndex","random","Disposer","dispose","_disposed","_dispose","isDisposed","MultiDisposer","_super","disposers","MutableValueDisposer","_this","_disposer","_value","disposer","reset","CounterDisposer","_counter","increment","fromArray","iter","sum","sort","filter","args","_i","go","push2","flatten","indexed","findMap","contains","foldl","init","min2","max2","join","separator","ListIterator","list","createNewItems","_create","_listCopy","getFirst","returnItem","getLast","removeItem","Percent","percent","isPercent","entries","keys","keysOrdered","eachOrdered","ord","merge","object1","object2","copyProperties","source","softCopyProperties","forceCopyProperties","copyAllProperties","DictionaryDisposer","dict","on","oldValue","Dictionary","_dictionary","insertKey","newValue","updateKey","ifEmpty","copyFrom","_a","_b","_c","sortedIterator","DictionaryTemplate","template","_template","isTemplate","clone","EventDispatcher","_listeners","_killed","_disabled","_iterating","_enabled","hasListeners","hasListenersByType","killed","enable","disable","enableType","disableType","amount","Infinity","_removeListener","listener","_removeExistingListener","once","callback","context","_eachListener","info","_shouldDispatch","event","_on","shouldClone","onAll","off","TargetedEventDispatcher","pendingFrame","nextQueue","readQueue","writeQueue","idleQueue","raf","requestAnimationFrame","setTimeout","frameLoop","now","pendFrame","nextFrame","readFrame","writeFrame","whenIdle","triggerIdle","shift","repeat","string","chars","res","choice","charAt"],"mappings":"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","file":"chunkFilename.amcharts4-animated.bundle.js","sourcesContent":["/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Dictionary } from \"./Dictionary\";\r\nimport * as $type from \"./Type\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Represents object cache.\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Better storage\r\n * @todo TTL logging\r\n * @todo Garbage collector\r\n */\r\nvar Cache = /** @class */ (function () {\r\n    function Cache() {\r\n        /**\r\n         * Storage for cache items.\r\n         */\r\n        this._storage = new Dictionary();\r\n        /**\r\n         * Default TTL in milliseconds.\r\n         */\r\n        this.ttl = 1000;\r\n    }\r\n    /**\r\n     * Caches or updates cached value, resets TTL.\r\n     *\r\n     * If `ttl` is set to zero, item will never expire.\r\n     *\r\n     * @param owner  An id of the object that owns this cache\r\n     * @param key    Index key\r\n     * @param value  Value\r\n     * @param ttl    TTL of the cache to live in milliseconds\r\n     */\r\n    Cache.prototype.set = function (owner, key, value, ttl) {\r\n        // Create if storage does not exist for this owner\r\n        var ownerStorage = this._storage.insertKeyIfEmpty(owner, function () { return new Dictionary(); });\r\n        // Create cache item\r\n        var item = {\r\n            \"touched\": new Date().getTime(),\r\n            \"ttl\": $type.isNumber(ttl) ? ttl : this.ttl,\r\n            \"value\": value\r\n        };\r\n        // Set\r\n        ownerStorage.setKey(key, item);\r\n    };\r\n    /**\r\n     * Rerturns cached item, respecting TTL.\r\n     *\r\n     * @param owner  An id of the object that owns this cache\r\n     * @param key    Index key\r\n     * @param value  Value to return if cache not available\r\n     * @return Value, or `undefined` if not set\r\n     */\r\n    Cache.prototype.get = function (owner, key, value) {\r\n        if (value === void 0) { value = undefined; }\r\n        // \t\t || ypeof this._storage[owner][key] === \"undefined\" || this._storage[owner][key].expired === true) {\r\n        if (this._storage.hasKey(owner)) {\r\n            var ownerStorage = this._storage.getKey(owner);\r\n            if (ownerStorage.hasKey(key)) {\r\n                var cacheItem = ownerStorage.getKey(key);\r\n                if (cacheItem.ttl && ((cacheItem.touched + cacheItem.ttl) < new Date().getTime())) {\r\n                    cacheItem.expired = true;\r\n                }\r\n                if (cacheItem.expired) {\r\n                    ownerStorage.removeKey(key);\r\n                    return value;\r\n                }\r\n                return cacheItem.value;\r\n            }\r\n            else {\r\n                return value;\r\n            }\r\n        }\r\n        else {\r\n            return value;\r\n        }\r\n    };\r\n    /**\r\n     * Clears cache for specific owner or everything.\r\n     *\r\n     * @param owner Owner to clear cache for\r\n     */\r\n    Cache.prototype.clear = function (owner) {\r\n        if (owner) {\r\n            this._storage.removeKey(owner);\r\n        }\r\n        else {\r\n            this._storage.clear();\r\n        }\r\n    };\r\n    return Cache;\r\n}());\r\nexport { Cache };\r\n/**\r\n * ============================================================================\r\n * GLOBAL INSTANCE\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * A global instance of cache. Use this instance to cache any values.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport var cache = new Cache();\r\n//# sourceMappingURL=Cache.js.map","import { is } from \"../core/Registry\";\r\nvar theme = function (object) {\r\n    if (is(object, \"SpriteState\")) {\r\n        object.transitionDuration = 400;\r\n    }\r\n    if (is(object, \"Component\")) {\r\n        object.rangeChangeDuration = 500;\r\n        object.interpolationDuration = 500;\r\n        object.sequencedInterpolation = false;\r\n        if (is(object, \"SankeyDiagram\")) {\r\n            object.sequencedInterpolation = true;\r\n        }\r\n        if (is(object, \"FunnelSeries\")) {\r\n            object.sequencedInterpolation = true;\r\n        }\r\n    }\r\n    if (is(object, \"Chart\")) {\r\n        object.defaultState.transitionDuration = 2000;\r\n        object.hiddenState.transitionDuration = 1000;\r\n    }\r\n    if (is(object, \"Tooltip\")) {\r\n        object.animationDuration = 400;\r\n        object.defaultState.transitionDuration = 400;\r\n        object.hiddenState.transitionDuration = 400;\r\n    }\r\n    if (is(object, \"Scrollbar\")) {\r\n        object.animationDuration = 500;\r\n    }\r\n    if (is(object, \"Series\")) {\r\n        object.defaultState.transitionDuration = 1000;\r\n        object.hiddenState.transitionDuration = 700;\r\n        object.hiddenState.properties.opacity = 1;\r\n        object.showOnInit = true;\r\n    }\r\n    if (is(object, \"MapSeries\")) {\r\n        object.hiddenState.properties.opacity = 0;\r\n    }\r\n    if (is(object, \"PercentSeries\")) {\r\n        object.hiddenState.properties.opacity = 0;\r\n    }\r\n    if (is(object, \"FunnelSlice\")) {\r\n        object.defaultState.transitionDuration = 800;\r\n        object.hiddenState.transitionDuration = 1000;\r\n        object.hiddenState.properties.opacity = 1;\r\n    }\r\n    if (is(object, \"Slice\")) {\r\n        object.defaultState.transitionDuration = 700;\r\n        object.hiddenState.transitionDuration = 1000;\r\n        object.hiddenState.properties.opacity = 1;\r\n    }\r\n    if (is(object, \"Preloader\")) {\r\n        object.hiddenState.transitionDuration = 2000;\r\n    }\r\n    if (is(object, \"Column\")) {\r\n        object.defaultState.transitionDuration = 700;\r\n        object.hiddenState.transitionDuration = 1000;\r\n        object.hiddenState.properties.opacity = 1;\r\n    }\r\n    if (is(object, \"Column3D\")) {\r\n        object.hiddenState.properties.opacity = 0;\r\n    }\r\n};\r\nexport default theme;\r\n//# sourceMappingURL=animated.js.map","export { default } from \"../.internal/themes/animated\";\r\n//# sourceMappingURL=animated.js.map","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\r\n * A collection of utility functions for various type checks and conversion\r\n * @todo Review unused functions for removal\r\n * @hidden\r\n */\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { percent, isPercent } from \"./Percent\";\r\n/**\r\n * ============================================================================\r\n * TYPE CHECK\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Returns `true` if value is not a number (NaN).\r\n *\r\n * @param value Input value\r\n * @return Is NaN?\r\n * @deprecated Is not used anywhere. JS built-in isNaN is used everywhere. Maybe we don't need this, or if we do, then we should use it everywhere\r\n */\r\nexport function isNaN(value) {\r\n    return Number(value) !== value;\r\n}\r\n/**\r\n * Returns a type of the value.\r\n *\r\n * @param value  Input value\r\n * @return Type of the value\r\n */\r\nexport function getType(value) {\r\n    return ({}).toString.call(value);\r\n}\r\n/**\r\n * Returns a default value if the passed in value is empty.\r\n *\r\n * @param value     Input value\r\n * @param optional  Default value\r\n * @return Value or default value whichever is available\r\n * @deprecated Not used anywhere\r\n */\r\nexport function getDefault(value, optional) {\r\n    return value || optional;\r\n}\r\n/**\r\n * Checks if the passed in value is a string.\r\n *\r\n * @param value  Value\r\n * @return Is string?\r\n * @throws {Error}\r\n * @deprecated Not used anywhere\r\n */\r\nexport function checkString(value) {\r\n    if (typeof value === \"string\") {\r\n        return true;\r\n    }\r\n    else {\r\n        throw new Error(\"Expected a string but got \" + getType(value));\r\n    }\r\n}\r\n/**\r\n * Checks if the passed in value is a boolean.\r\n *\r\n * @param value  Value\r\n * @return Is boolean?\r\n * @throws {Error}\r\n * @deprecated Not used anywhere\r\n */\r\nexport function checkBoolean(value) {\r\n    if (typeof value === \"boolean\") {\r\n        return true;\r\n    }\r\n    else {\r\n        throw new Error(\"Expected a boolean but got \" + getType(value));\r\n    }\r\n}\r\n/**\r\n * Checks if the passed in value is a number.\r\n *\r\n * @param value  Value\r\n * @return Is number?\r\n * @throws {Error}\r\n */\r\nexport function checkNumber(value) {\r\n    if (typeof value === \"number\") {\r\n        if (isNaN(value)) {\r\n            throw new Error(\"Expected a number but got NaN\");\r\n        }\r\n    }\r\n    else {\r\n        throw new Error(\"Expected a number but got \" + getType(value));\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Checks if the passed in value is an object.\r\n *\r\n * @param value  Value\r\n * @return Is object?\r\n * @throws {Error}\r\n * @todo Is the input type correct?\r\n * @deprecated Not used anywhere\r\n */\r\nexport function checkObject(value) {\r\n    var t = getType(value);\r\n    if (t === \"[object Object]\") {\r\n        return true;\r\n    }\r\n    else {\r\n        throw new Error(\"Expected an object but got \" + t);\r\n    }\r\n}\r\n/**\r\n * Checks if the passed in value is an array.\r\n *\r\n * @param value  Value\r\n * @return Is array?\r\n * @throws {Error}\r\n * @deprecated Not used anywhere\r\n */\r\nexport function checkArray(value) {\r\n    if (Array.isArray(value)) {\r\n        return true;\r\n    }\r\n    else {\r\n        throw new Error(\"Expected an array but got \" + getType(value));\r\n    }\r\n}\r\n/**\r\n * Checks if the passed in value is a Date object.\r\n *\r\n * @param value  Value\r\n * @return Is Date object?\r\n * @throws {Error}\r\n * @deprecated Not used anywhere\r\n */\r\nexport function checkDate(value) {\r\n    var t = getType(value);\r\n    if (t === \"[object Date]\") {\r\n        return true;\r\n    }\r\n    else {\r\n        throw new Error(\"Expected a date but got \" + t);\r\n    }\r\n}\r\n/**\r\n * ============================================================================\r\n * TYPE CASTING\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Casts string or a number into string.\r\n *\r\n * @param value  Input\r\n * @return String value\r\n * @deprecated Not used anywhere\r\n */\r\nexport function castString(value) {\r\n    if (typeof value === \"string\") {\r\n        return value;\r\n    }\r\n    else if (typeof value === \"number\") {\r\n        return \"\" + value;\r\n    }\r\n    else {\r\n        throw new Error(\"Expected a string or number but got \" + getType(value));\r\n    }\r\n}\r\n/**\r\n * Casts string or a number into a number.\r\n *\r\n * @param value   Input value\r\n * @return Number  value\r\n * @throws {Error}\r\n */\r\nexport function castNumber(value) {\r\n    if (typeof value === \"string\") {\r\n        var number = +value;\r\n        if (isNaN(number)) {\r\n            throw new Error(\"Cannot cast string \" + JSON.stringify(value) + \" to a number\");\r\n        }\r\n        else {\r\n            return number;\r\n        }\r\n    }\r\n    else if (typeof value === \"number\") {\r\n        if (isNaN(value)) {\r\n            throw new Error(\"Expected a number but got NaN\");\r\n        }\r\n        else {\r\n            return value;\r\n        }\r\n    }\r\n    else {\r\n        var t = getType(value);\r\n        if (t === \"[object Date]\") {\r\n            return value.getTime();\r\n        }\r\n        else {\r\n            throw new Error(\"Expected a string, number, or date but got \" + t);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Casts number, string or Date into a Date object.\r\n *\r\n * @param value  Input value\r\n * @return Date object\r\n * @deprecated Not used anywhere\r\n * @throws {Error}\r\n * @hidden\r\n * @deprecated\r\n */\r\n/*export function castDate(value: string | number | Date, formatter?: DateFormatter): Date {\r\n    if (typeof value === \"string\") {\r\n        if (formatter) {\r\n            return formatter.parse(value);\r\n        }\r\n        return new Date(value);\r\n\r\n    } else if (typeof value === \"number\") {\r\n        return new Date(value);\r\n\r\n    } else {\r\n        const t = getType(value);\r\n\r\n        if (t === \"[object Date]\") {\r\n            return value;\r\n\r\n        } else {\r\n            throw new Error(\"Expected a string, number, or date but got \" + t);\r\n        }\r\n    }\r\n}*/\r\n/**\r\n * ============================================================================\r\n * QUICK CONVERSION\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Converts any value into `boolean`.\r\n *\r\n * @param value  Source value\r\n * @return `true` or `false`\r\n */\r\nexport function toBoolean(value) {\r\n    return value ? true : false;\r\n}\r\n/**\r\n * Converts any value into a `number`.\r\n *\r\n * @param value  Source value\r\n * @return Number representation of value\r\n */\r\nexport function toNumber(value) {\r\n    if (hasValue(value) && !isNumber(value)) {\r\n        var converted = Number(value);\r\n        if (isNaN(converted) && isString(value) && value != \"\") {\r\n            return toNumber(value.replace(/[^0-9.\\-]+/g, ''));\r\n        }\r\n        return converted;\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * Converts any value into a string (text).\r\n *\r\n * @param value  Source value\r\n * @return String representation of the input\r\n */\r\nexport function toText(value) {\r\n    if (hasValue(value) && !isString(value)) {\r\n        if (isNumber(value)) {\r\n            return castString(value);\r\n        }\r\n        else if (isObject(value)) {\r\n            return value.toString();\r\n        }\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * Converts any value to a number or [[Percent]].\r\n *\r\n * If the parameter is a string and contains \"%\", it will\r\n * convert it into a [[Percent]].\r\n *\r\n * Otherwise, it will convert into a number.\r\n *\r\n * @param value  Number or percent\r\n * @return Percent object\r\n */\r\nexport function toNumberOrPercent(value) {\r\n    if (!hasValue(value) || isNumber(value) || isPercent(value)) {\r\n        return value;\r\n    }\r\n    if (isString(value) && value.indexOf(\"%\") != -1) {\r\n        return percent(toNumber(value));\r\n    }\r\n    return toNumber(value);\r\n}\r\n/**\r\n * Checks if a variable has a value.\r\n *\r\n * @param a  Input value\r\n * @returns                        Has value?\r\n */\r\nexport function hasValue(a) {\r\n    return a != null;\r\n}\r\n/**\r\n * Returns a value or throws an {Error} exception if the variable has not\r\n * value.\r\n *\r\n * @param a  Input value\r\n * @returns                        Value\r\n */\r\nexport function getValue(a) {\r\n    if (hasValue(a)) {\r\n        return a;\r\n    }\r\n    else {\r\n        throw new Error(\"Value doesn't exist\");\r\n    }\r\n}\r\n/**\r\n * Returns a value, or returns the default value if it doesn't have a value.\r\n *\r\n * @param a  Input value\r\n * @returns                        Value\r\n */\r\nexport function getValueDefault(a, defaultValue) {\r\n    if (hasValue(a)) {\r\n        return a;\r\n    }\r\n    else {\r\n        return defaultValue;\r\n    }\r\n}\r\n/**\r\n * ============================================================================\r\n * TYPE CHECK\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Checks if parameter is `Date`.\r\n *\r\n * @param value  Input value\r\n * @return Is Date?\r\n */\r\nexport function isDate(value) {\r\n    return getType(value) === \"[object Date]\";\r\n}\r\n/**\r\n * Checks if parameter is `string`.\r\n *\r\n * @param value  Input value\r\n * @return Is string?\r\n */\r\nexport function isString(value) {\r\n    return typeof value === \"string\";\r\n}\r\n/**\r\n * Checks if parameter is `number`.\r\n *\r\n * @param value  Input value\r\n * @return Is number?\r\n */\r\nexport function isNumber(value) {\r\n    return typeof value === \"number\" && Number(value) == value;\r\n}\r\n/**\r\n * Checks if parameter is `object`.\r\n *\r\n * @param value  Input value\r\n * @return Is object?\r\n */\r\nexport function isObject(value) {\r\n    return typeof value === \"object\" && value != null;\r\n}\r\n/**\r\n * Checks if parameter is `Array`.\r\n *\r\n * @param value  Input value\r\n * @return Is Array?\r\n */\r\nexport function isArray(value) {\r\n    return Array.isArray(value);\r\n}\r\n//# sourceMappingURL=Type.js.map","import { EventDispatcher } from \"./utils/EventDispatcher\";\r\nimport { Dictionary } from \"./utils/Dictionary\";\r\nimport { cache } from \"./utils/Cache\";\r\nimport * as $type from \"./utils/Type\";\r\nimport * as $string from \"./utils/String\";\r\nimport * as $array from \"./utils/Array\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Registry is used to store miscellaneous system-wide information, like ids,\r\n * maps, themes, and registered classes.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nvar Registry = /** @class */ (function () {\r\n    function Registry() {\r\n        /**\r\n         * Event dispacther.\r\n         */\r\n        this.events = new EventDispatcher();\r\n        /**\r\n         * All currently applied themes. All new chart instances created will\r\n         * automatically inherit and retain System's themes.\r\n         */\r\n        this.themes = [];\r\n        /**\r\n         * List of all loaded available themes.\r\n         *\r\n         * Whenever a theme loads, it registers itself in System's `loadedThemes`\r\n         * collection.\r\n         */\r\n        this.loadedThemes = {};\r\n        /**\r\n         * An indeternal counter used to generate unique IDs.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        this._uidCount = 0;\r\n        /**\r\n         * Keeps register of class references so that they can be instnatiated using\r\n         * string key.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        this.registeredClasses = {};\r\n        /**\r\n         * Holds all generated placeholders.\r\n         */\r\n        this._placeholders = {};\r\n        /**\r\n         * A list of invalid(ated) [[Sprite]] objects that need to be re-validated\r\n         * during next cycle.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        this.invalidSprites = {};\r\n        /**\r\n         * Components are added to this list when their data provider changes to\r\n         * a new one or data is added/removed from their data provider.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        this.invalidDatas = {};\r\n        /**\r\n         * Components are added to this list when values of their raw data change.\r\n         * Used when we want a smooth animation from one set of values to another.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        this.invalidRawDatas = [];\r\n        /**\r\n         * Components are added to this list when values of their data changes\r\n         * (but not data provider itself).\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        this.invalidDataItems = [];\r\n        /**\r\n         * Components are added to this list when their data range (selection) is\r\n         * changed, e.g. zoomed.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        this.invalidDataRange = [];\r\n        /**\r\n         * A list of [[Sprite]] objects that have invalid(ated) positions, that need\r\n         * to be recalculated.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        this.invalidPositions = {};\r\n        /**\r\n         * A list of [[Container]] objects with invalid(ated) layouts.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        this.invalidLayouts = {};\r\n        /**\r\n         * An array holding all active (non-disposed) top level elemens.\r\n         *\r\n         * When, for example, a new chart is created, its instance will be added to\r\n         * this array, and will be removed when the chart is disposed.\r\n         */\r\n        this.baseSprites = [];\r\n        this.baseSpritesByUid = {};\r\n        this.queue = [];\r\n        this.uid = this.getUniqueId();\r\n        this.invalidSprites.noBase = [];\r\n        this.invalidDatas.noBase = [];\r\n        this.invalidLayouts.noBase = [];\r\n        this.invalidPositions.noBase = [];\r\n    }\r\n    /**\r\n     * Generates a unique chart system-wide ID.\r\n     *\r\n     * @return Generated ID\r\n     */\r\n    Registry.prototype.getUniqueId = function () {\r\n        var uid = this._uidCount;\r\n        this._uidCount += 1;\r\n        return \"id-\" + uid;\r\n    };\r\n    Object.defineProperty(Registry.prototype, \"map\", {\r\n        /**\r\n         * Returns a universal collection for mapping ids with objects.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return Map collection\r\n         */\r\n        get: function () {\r\n            if (!this._map) {\r\n                this._map = new Dictionary();\r\n            }\r\n            return this._map;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Caches value in object's cache.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param key    Key\r\n     * @param value  Value\r\n     * @param ttl    TTL in seconds\r\n     */\r\n    Registry.prototype.setCache = function (key, value, ttl) {\r\n        cache.set(this.uid, key, value, ttl);\r\n    };\r\n    /**\r\n     * Retrieves cached value.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param key    Key\r\n     * @param value  Value to return if cache is not available\r\n     * @return Value\r\n     */\r\n    Registry.prototype.getCache = function (key, value) {\r\n        if (value === void 0) { value = undefined; }\r\n        return cache.get(this.uid, key, value);\r\n    };\r\n    /**\r\n     * Dispatches an event using own event dispatcher. Will automatically\r\n     * populate event data object with event type and target (this element).\r\n     * It also checks if there are any handlers registered for this sepecific\r\n     * event.\r\n     *\r\n     * @param eventType Event type (name)\r\n     * @param data      Data to pass into event handler(s)\r\n     */\r\n    Registry.prototype.dispatch = function (eventType, data) {\r\n        // @todo Implement proper type check\r\n        if (this.events.isEnabled(eventType)) {\r\n            if (data) {\r\n                data.type = eventType;\r\n                data.target = data.target || this;\r\n                this.events.dispatch(eventType, {\r\n                    type: eventType,\r\n                    target: this\r\n                });\r\n            }\r\n            else {\r\n                this.events.dispatch(eventType, {\r\n                    type: eventType,\r\n                    target: this\r\n                });\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Works like `dispatch`, except event is triggered immediately, without\r\n     * waiting for the next frame cycle.\r\n     *\r\n     * @param eventType Event type (name)\r\n     * @param data      Data to pass into event handler(s)\r\n     */\r\n    Registry.prototype.dispatchImmediately = function (eventType, data) {\r\n        // @todo Implement proper type check\r\n        if (this.events.isEnabled(eventType)) {\r\n            if (data) {\r\n                data.type = eventType;\r\n                data.target = data.target || this;\r\n                this.events.dispatchImmediately(eventType, data);\r\n            }\r\n            else {\r\n                this.events.dispatchImmediately(eventType, {\r\n                    type: eventType,\r\n                    target: this\r\n                });\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a unique placeholder suitable for the key.\r\n     *\r\n     * @param key  Key\r\n     * @return Random string to be used as placeholder\r\n     */\r\n    Registry.prototype.getPlaceholder = function (key) {\r\n        if ($type.hasValue(this._placeholders[key])) {\r\n            return this._placeholders[key];\r\n        }\r\n        this._placeholders[key] = \"__amcharts_\" + key + \"_\" + $string.random(8) + \"__\";\r\n        return this._placeholders[key];\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    Registry.prototype.addToInvalidComponents = function (component) {\r\n        if (component.baseId) {\r\n            $array.move(this.invalidDatas[component.baseId], component);\r\n        }\r\n        else {\r\n            $array.move(this.invalidDatas[\"noBase\"], component);\r\n        }\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    Registry.prototype.removeFromInvalidComponents = function (component) {\r\n        if (component.baseId) {\r\n            $array.remove(this.invalidDatas[component.baseId], component);\r\n        }\r\n        $array.remove(this.invalidDatas[\"noBase\"], component);\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    Registry.prototype.addToInvalidSprites = function (sprite) {\r\n        if (sprite.baseId) {\r\n            $array.add(this.invalidSprites[sprite.baseId], sprite);\r\n        }\r\n        else {\r\n            $array.add(this.invalidSprites[\"noBase\"], sprite);\r\n        }\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    Registry.prototype.removeFromInvalidSprites = function (sprite) {\r\n        if (sprite.baseId) {\r\n            $array.remove(this.invalidSprites[sprite.baseId], sprite);\r\n        }\r\n        $array.remove(this.invalidSprites[\"noBase\"], sprite);\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    Registry.prototype.addToInvalidPositions = function (sprite) {\r\n        if (sprite.baseId) {\r\n            $array.add(this.invalidPositions[sprite.baseId], sprite);\r\n        }\r\n        else {\r\n            $array.add(this.invalidPositions[\"noBase\"], sprite);\r\n        }\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    Registry.prototype.removeFromInvalidPositions = function (sprite) {\r\n        if (sprite.baseId) {\r\n            $array.remove(this.invalidPositions[sprite.baseId], sprite);\r\n        }\r\n        $array.remove(this.invalidPositions[\"noBase\"], sprite);\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    Registry.prototype.addToInvalidLayouts = function (sprite) {\r\n        if (sprite.baseId) {\r\n            $array.add(this.invalidLayouts[sprite.baseId], sprite);\r\n        }\r\n        else {\r\n            $array.add(this.invalidLayouts[\"noBase\"], sprite);\r\n        }\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    Registry.prototype.removeFromInvalidLayouts = function (sprite) {\r\n        if (sprite.baseId) {\r\n            $array.remove(this.invalidLayouts[sprite.baseId], sprite);\r\n        }\r\n        $array.remove(this.invalidLayouts[\"noBase\"], sprite);\r\n    };\r\n    return Registry;\r\n}());\r\nexport { Registry };\r\n/**\r\n * A singleton global instance of [[Registry]].\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport var registry = new Registry();\r\n/**\r\n * Returns `true` if object is an instance of the class. It's the same as `instanceof` except it doesn't need to import the class.\r\n *\r\n * @param object Object\r\n * @param name Class name\r\n * @return Is instance of class\r\n */\r\nexport function is(object, name) {\r\n    var x = registry.registeredClasses[name];\r\n    return x != null && object instanceof x;\r\n}\r\n//# sourceMappingURL=Registry.js.map","/**\r\n * A collection of Math-related functions\r\n *\r\n * @todo Comment trigonometric functions?\r\n */\r\nimport * as $type from \"./Type\";\r\n/**\r\n * ============================================================================\r\n * CONSTANTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nexport var PI = Math.PI;\r\nexport var HALFPI = PI / 2;\r\nexport var RADIANS = PI / 180;\r\nexport var DEGREES = 180 / PI;\r\n/**\r\n * Converts any value and fits it into a specific value range.\r\n *\r\n * @param value  Source value\r\n * @param min    Minimum allowable value\r\n * @param max    Maximum allowable value\r\n * @return Number\r\n */\r\nexport function toNumberRange(value, min, max) {\r\n    if ($type.hasValue(value)) {\r\n        value = $type.toNumber(value);\r\n        return fitToRange(value, min, max);\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * Rounds the numeric value to whole number or specific precision of set.\r\n *\r\n * @param value      Value\r\n * @param precision  Precision (number of decimal points)\r\n * @param floor  In case value ends with 0.5 and precision is 0, we might need to floor the value instead of ceiling it.\r\n * @return Rounded value\r\n */\r\nexport function round(value, precision, floor) {\r\n    if (!$type.isNumber(precision) || precision <= 0) {\r\n        var rounded = Math.round(value);\r\n        if (floor) {\r\n            if (rounded - value == 0.5) {\r\n                rounded--;\r\n            }\r\n        }\r\n        return rounded;\r\n    }\r\n    else {\r\n        var d = Math.pow(10, precision);\r\n        return Math.round(value * d) / d;\r\n    }\r\n}\r\n/**\r\n * Ceils the numeric value to whole number or specific precision of set.\r\n *\r\n * @param value      Value\r\n * @param precision  Precision (number of decimal points)\r\n * @return Rounded value\r\n */\r\nexport function ceil(value, precision) {\r\n    if (!$type.isNumber(precision) || precision <= 0) {\r\n        return Math.ceil(value);\r\n    }\r\n    else {\r\n        var d = Math.pow(10, precision);\r\n        return Math.ceil(value * d) / d;\r\n    }\r\n}\r\n/**\r\n * Stretches `t` so that it will always be between `from` and `to`.\r\n *\r\n * @param t     Number from 0 to 1\r\n * @param from  Lowest possible value\r\n * @param to    Highest possible value\r\n * @return Adjusted value\r\n */\r\nexport function stretch(t, from, to) {\r\n    return (t * (to - from)) + from;\r\n}\r\n/**\r\n * Adjust numeric value so it fits to specific value range.\r\n *\r\n * @param value     Value\r\n * @param minValue  Lowest possible value\r\n * @param maxValue  Highest possible value\r\n * @return Adjusted value\r\n */\r\nexport function fitToRange(value, minValue, maxValue) {\r\n    if ($type.isNumber(minValue)) {\r\n        if ($type.isNumber(maxValue) && maxValue < minValue) {\r\n            var temp = maxValue;\r\n            maxValue = minValue;\r\n            minValue = temp;\r\n        }\r\n        if (value < minValue) {\r\n            value = minValue;\r\n        }\r\n    }\r\n    if ($type.isNumber(maxValue)) {\r\n        if (value > maxValue) {\r\n            value = maxValue;\r\n        }\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * Returns sine of a number.\r\n *\r\n * @param value  Value\r\n * @return Sine\r\n */\r\nexport function sin(value) {\r\n    return round(Math.sin(RADIANS * value), 10);\r\n}\r\n/**\r\n * Returns tan of a number.\r\n *\r\n * @param value  Value\r\n * @return Sine\r\n */\r\nexport function tan(value) {\r\n    return round(Math.tan(RADIANS * value), 10);\r\n}\r\n/**\r\n * Returns cosine of a number.\r\n *\r\n * @param value  Value\r\n * @return Cosine\r\n */\r\nexport function cos(value) {\r\n    return round(Math.cos(RADIANS * value), 10);\r\n}\r\nexport function max(left, right) {\r\n    if ($type.isNumber(left)) {\r\n        if ($type.isNumber(right)) {\r\n            if (right > left) {\r\n                return right;\r\n            }\r\n            else {\r\n                return left;\r\n            }\r\n        }\r\n        else {\r\n            return left;\r\n        }\r\n    }\r\n    else if ($type.isNumber(right)) {\r\n        return right;\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\nexport function min(left, right) {\r\n    if ($type.isNumber(left)) {\r\n        if ($type.isNumber(right)) {\r\n            if (right < left) {\r\n                return right;\r\n            }\r\n            else {\r\n                return left;\r\n            }\r\n        }\r\n        else {\r\n            return left;\r\n        }\r\n    }\r\n    else if ($type.isNumber(right)) {\r\n        return right;\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\n/**\r\n * Returns the closest value from the array of values to the reference value.\r\n *\r\n * @param values  Array of values\r\n * @param value   Reference value\r\n * @return Closes value from the array\r\n */\r\nexport function closest(values, referenceValue) {\r\n    return values.reduce(function (prev, curr) {\r\n        return (Math.abs(curr - referenceValue) < Math.abs(prev - referenceValue) ? curr : prev);\r\n    });\r\n}\r\n/**\r\n * Checks whether two ranges of values intersect.\r\n *\r\n * @param range1  Range 1\r\n * @param range2  Range 2\r\n * @return Any intersecting numbers?\r\n */\r\nexport function intersect(range1, range2) {\r\n    var start1 = $type.getValue(range1.start);\r\n    var start2 = $type.getValue(range2.start);\r\n    var end1 = $type.getValue(range1.end);\r\n    var end2 = $type.getValue(range2.end);\r\n    return Math.max(start1, start2) <= Math.min(end1, end2);\r\n}\r\n/**\r\n * Inverts the range of values.\r\n *\r\n * @param range  Range\r\n */\r\nexport function invertRange(range) {\r\n    var start = $type.getValue(range.start);\r\n    var end = $type.getValue(range.end);\r\n    return { start: 1 - end, end: 1 - start };\r\n}\r\n/**\r\n * Returns an intersection range between two ranges of values.\r\n *\r\n * @param range1  Range 1\r\n * @param range2  Range 2\r\n * @return Intersecting value range\r\n */\r\nexport function intersection(range1, range2) {\r\n    var start1 = $type.getValue(range1.start);\r\n    var start2 = $type.getValue(range2.start);\r\n    var end1 = $type.getValue(range1.end);\r\n    var end2 = $type.getValue(range2.end);\r\n    var startMax = Math.max(start1, start2);\r\n    var endMin = Math.min(end1, end2);\r\n    if (endMin < startMax) {\r\n        return undefined;\r\n    }\r\n    else {\r\n        return { start: startMax, end: endMin };\r\n    }\r\n}\r\n/**\r\n * Returns pixel \"distance\" between two points.\r\n *\r\n * If second point is not specified, distance from {x:0, y:0} point is\r\n * calculated.\r\n *\r\n * @param point1  Point 1\r\n * @param point2  Point 2\r\n * @return Distance in relative pixels\r\n */\r\nexport function getDistance(point1, point2) {\r\n    if (!point1) {\r\n        return 0;\r\n    }\r\n    if (!point2) {\r\n        point2 = { x: 0, y: 0 };\r\n    }\r\n    return Math.sqrt(Math.pow(Math.abs(point1.x - point2.x), 2) + Math.pow(Math.abs(point1.y - point2.y), 2));\r\n}\r\n/**\r\n * Returns pixel \"horizontal distance\" between two points.\r\n *\r\n * If second point is not specified, distance from {x:0, y:0} point is\r\n * calculated.\r\n *\r\n * @param point1  Point 1\r\n * @param point2  Point 2\r\n * @return Distance in relative pixels\r\n */\r\nexport function getHorizontalDistance(point1, point2) {\r\n    if (!point1) {\r\n        return 0;\r\n    }\r\n    if (!point2) {\r\n        point2 = { x: 0, y: 0 };\r\n    }\r\n    return Math.abs(point1.x - point2.x);\r\n}\r\n/**\r\n * Returns pixel \"vertical distance\" between two points.\r\n *\r\n * If second point is not specified, distance from {x:0, y:0} point is\r\n * calculated.\r\n *\r\n * @param point1  Point 1\r\n * @param point2  Point 2\r\n * @return Distance in relative pixels\r\n */\r\nexport function getVerticalDistance(point1, point2) {\r\n    if (!point1) {\r\n        return 0;\r\n    }\r\n    if (!point2) {\r\n        point2 = { x: 0, y: 0 };\r\n    }\r\n    return Math.abs(point1.y - point2.y);\r\n}\r\n/**\r\n * Returns approximate pixel \"distance\" between two points of cubic curve\r\n *\r\n * If second point is not specified, distance from {x:0, y:0} point is\r\n * calculated.\r\n *\r\n * @param point1  Point 1\r\n * @param point2  Point 2\r\n * @param controlPointA  Control Point 1\r\n * @param controlPointB  Control Point 2\r\n * @param stepCount  number of steps (the more, the more accurate result)\r\n * @return Distance in relative pixels\r\n */\r\nexport function getCubicCurveDistance(point1, point2, controlPointA, controlPointB, stepCount) {\r\n    if (!point1) {\r\n        return 0;\r\n    }\r\n    if (!point2) {\r\n        point2 = { x: 0, y: 0 };\r\n    }\r\n    var distance = 0;\r\n    var prevPoint = point1;\r\n    if (stepCount > 0) {\r\n        for (var s = 0; s <= stepCount; s++) {\r\n            var point = getPointOnCubicCurve(point1, point2, controlPointA, controlPointB, s / stepCount);\r\n            distance += getDistance(prevPoint, point);\r\n            prevPoint = point;\r\n        }\r\n    }\r\n    return distance;\r\n}\r\n/**\r\n * Returns scale based on original and end position of the two points.\r\n *\r\n * @param point1       Current position of point 1\r\n * @param startPoint1  Start position of point 1\r\n * @param point2       Current position of point 1\r\n * @param startPoint2  Start position of point 2\r\n * @return Scale        Calculated scale\r\n */\r\nexport function getScale(point1, startPoint1, point2, startPoint2) {\r\n    var initialDistance = getDistance(startPoint1, startPoint2);\r\n    var currentDistance = getDistance(point1, point2);\r\n    return Math.abs(currentDistance / initialDistance);\r\n}\r\n/**\r\n * Returns an exact mid point between two points.\r\n *\r\n * @param point1     Position of point 1\r\n * @param point2     Position of point 2\r\n * @return Mid point  Position of mid-point\r\n */\r\nexport function getMidPoint(point1, point2, position) {\r\n    if (!$type.isNumber(position)) {\r\n        position = 0.5;\r\n    }\r\n    return {\r\n        \"x\": (point1.x + (point2.x - point1.x) * position),\r\n        \"y\": (point1.y + (point2.y - point1.y) * position)\r\n    };\r\n}\r\n/**\r\n * Returns difference in angles between starting and ending position of two\r\n * vectors.\r\n *\r\n * @param point1       Current position of point 1\r\n * @param startPoint1  Start position of point 1\r\n * @param point2       Current position of point 1\r\n * @param startPoint2  Start position of point 2\r\n * @return Angle difference in degrees\r\n */\r\nexport function getRotation(point1, startPoint1, point2, startPoint2) {\r\n    // Get start and end angles\r\n    var startAngle = getAngle(startPoint1, startPoint2);\r\n    var angle = getAngle(point1, point2);\r\n    // Calculate angle\r\n    var diff = startAngle - angle;\r\n    if (diff < 0) {\r\n        diff += 360;\r\n    }\r\n    return diff;\r\n}\r\n/**\r\n * Calculates angle of the vector based on two or one point.\r\n *\r\n * @param point1  Point 1\r\n * @param point2  Point 2\r\n * @return Angle in degrees\r\n */\r\nexport function getAngle(point1, point2) {\r\n    if (!point2) {\r\n        point2 = { x: point1.x * 2, y: point1.y * 2 };\r\n    }\r\n    var diffX = point2.x - point1.x;\r\n    var diffY = point2.y - point1.y;\r\n    var angle = Math.atan2(diffY, diffX) * DEGREES;\r\n    if (angle < 0) {\r\n        angle += 360;\r\n    }\r\n    return normalizeAngle(angle);\r\n}\r\n/**\r\n * Returns the shift in coordinates of the center when item is rotated, moved\r\n * and scaled at the same time.\r\n *\r\n * @param center       Current center\r\n * @param point1       Frst reference point\r\n * @param startPoint1  Original position of the first reference point\r\n * @param point2       Second reference point\r\n * @param startPoint2  Original position of the first reference point\r\n * @return Shift in center point coordinates\r\n */\r\nexport function getCenterShift(center, point1, startPoint1, point2, startPoint2) {\r\n    // Get angle\r\n    var angle = getRotation(point1, startPoint1, point2, startPoint2) - 90;\r\n    if (angle < 0) {\r\n        angle += 360;\r\n    }\r\n    // Get distance between new position\r\n    var distance = getDistance(point1, point2);\r\n    // Calculate new X\r\n    var x = Math.cos(angle) / distance + point1.x;\r\n    var y = Math.cos(angle) / distance + point1.y;\r\n    var shift = {\r\n        \"x\": x - center.x,\r\n        \"y\": y - center.y\r\n    };\r\n    return shift;\r\n}\r\n/**\r\n * Converts an array of points into a bounding box rectangle.\r\n *\r\n * Array can contain any number of points.\r\n *\r\n * @param points  Points\r\n * @return Bounding box rectangle\r\n */\r\nexport function getBBox(points) {\r\n    if (points) {\r\n        var length_1 = points.length;\r\n        if (length_1 !== 0) {\r\n            var left = void 0;\r\n            var right = void 0;\r\n            var top_1;\r\n            var bottom = void 0;\r\n            for (var i = 0; i < length_1; i++) {\r\n                var point = points[i];\r\n                if (!$type.isNumber(right) || (point.x > right)) {\r\n                    right = point.x;\r\n                }\r\n                if (!$type.isNumber(left) || (point.x < left)) {\r\n                    left = point.x;\r\n                }\r\n                if (!$type.isNumber(top_1) || (point.y < top_1)) {\r\n                    top_1 = point.y;\r\n                }\r\n                if (!$type.isNumber(bottom) || (point.y > bottom)) {\r\n                    bottom = point.y;\r\n                }\r\n            }\r\n            return { x: left, y: top_1, width: right - left, height: bottom - top_1 };\r\n        }\r\n    }\r\n    return { x: 0, y: 0, width: 0, height: 0 };\r\n}\r\n/**\r\n * Returns a [[IRectangle]] object representing a common rectangle that fits\r\n * all passed in rectangles in it.\r\n *\r\n * @param rectangles  An array of rectangles\r\n * @return Common rectangle\r\n */\r\nexport function getCommonRectangle(rectangles) {\r\n    var length = rectangles.length;\r\n    if (length !== 0) {\r\n        var minX = void 0;\r\n        var minY = void 0;\r\n        var maxX = void 0;\r\n        var maxY = void 0;\r\n        for (var i = 0; i < length; i++) {\r\n            var rectangle = rectangles[i];\r\n            minX = min(rectangle.x, minX);\r\n            minY = min(rectangle.y, minY);\r\n            maxX = max(rectangle.x + rectangle.width, maxX);\r\n            maxY = max(rectangle.y + rectangle.height, maxY);\r\n        }\r\n        return { x: minX, y: minY, width: maxX - minX, height: maxY - minY };\r\n    }\r\n}\r\n/**\r\n * [getPointOnQuadraticCurve description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param pointA        [description]\r\n * @param pointB        [description]\r\n * @param controlPoint  [description]\r\n * @param position      [description]\r\n * @return [description]\r\n */\r\nexport function getPointOnQuadraticCurve(pointA, pointB, controlPoint, position) {\r\n    var x = (1 - position) * (1 - position) * pointA.x + 2 * (1 - position) * position * controlPoint.x + position * position * pointB.x;\r\n    var y = (1 - position) * (1 - position) * pointA.y + 2 * (1 - position) * position * controlPoint.y + position * position * pointB.y;\r\n    return { x: x, y: y };\r\n}\r\n/**\r\n * [getPointOnCubicCurve description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param pointA         [description]\r\n * @param pointB         [description]\r\n * @param controlPointA  [description]\r\n * @param controlPointB  [description]\r\n * @param position       [description]\r\n * @return [description]\r\n */\r\nexport function getPointOnCubicCurve(pointA, pointB, controlPointA, controlPointB, position) {\r\n    var point = { x: 0, y: 0 };\r\n    var mt1 = 1 - position;\r\n    var mt2 = mt1 * mt1;\r\n    var mt3 = mt2 * mt1;\r\n    point.x = pointA.x * mt3 + controlPointA.x * 3 * mt2 * position + controlPointB.x * 3 * mt1 * position * position + pointB.x * position * position * position;\r\n    point.y = pointA.y * mt3 + controlPointA.y * 3 * mt2 * position + controlPointB.y * 3 * mt1 * position * position + pointB.y * position * position * position;\r\n    return point;\r\n}\r\n/**\r\n * [getCubicControlPointA description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param p0        [description]\r\n * @param p1        [description]\r\n * @param p2        [description]\r\n * @param p3        [description]\r\n * @param tensionX  [description]\r\n * @param tensionY  [description]\r\n * @return [description]\r\n */\r\nexport function getCubicControlPointA(p0, p1, p2, p3, tensionX, tensionY) {\r\n    tensionX = adjustTension(tensionX);\r\n    tensionY = adjustTension(tensionY);\r\n    return { x: ((-p0.x + p1.x / tensionX + p2.x) * tensionX), y: ((-p0.y + p1.y / tensionY + p2.y) * tensionY) };\r\n}\r\n/**\r\n * [getCubicControlPointB description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param p0        [description]\r\n * @param p1        [description]\r\n * @param p2        [description]\r\n * @param p3        [description]\r\n * @param tensionX  [description]\r\n * @param tensionY  [description]\r\n * @return [description]\r\n */\r\nexport function getCubicControlPointB(p0, p1, p2, p3, tensionX, tensionY) {\r\n    tensionX = adjustTension(tensionX);\r\n    tensionY = adjustTension(tensionY);\r\n    return { x: ((p1.x + p2.x / tensionX - p3.x) * tensionX), y: ((p1.y + p2.y / tensionY - p3.y) * tensionY) };\r\n}\r\n/**\r\n * [adjustTension description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param tension  [description]\r\n * @return [description]\r\n */\r\nexport function adjustTension(tension) {\r\n    return 1 - tension + 0.00001;\r\n}\r\n/**\r\n * [normalizeAngle description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param value  [description]\r\n * @return [description]\r\n */\r\nexport function normalizeAngle(value) {\r\n    if (value == 360) {\r\n        return 360;\r\n    }\r\n    return value % 360;\r\n}\r\n/**\r\n * [normalizeAngleToRange description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @todo review this with various angles, can be tested on radar chart with custom start/end angles\r\n * @param value       [description]\r\n * @param startAngle  [description]\r\n * @param endAngle    [description]\r\n * @return [description]\r\n */\r\nexport function fitAngleToRange(value, startAngle, endAngle) {\r\n    if (startAngle > endAngle) {\r\n        var temp = startAngle;\r\n        startAngle = endAngle;\r\n        endAngle = temp;\r\n    }\r\n    value = normalizeAngle(value);\r\n    var count = (startAngle - normalizeAngle(startAngle)) / 360;\r\n    if (value < startAngle) {\r\n        value += 360 * (count + 1);\r\n    }\r\n    var maxEnd = startAngle + (endAngle - startAngle) / 2 + 180;\r\n    var maxStart = startAngle + (endAngle - startAngle) / 2 - 180;\r\n    if (value > endAngle) {\r\n        if (value - 360 > startAngle) {\r\n            value -= 360;\r\n        }\r\n        else {\r\n            if (value < maxEnd) {\r\n                value = endAngle;\r\n            }\r\n            else {\r\n                value = startAngle;\r\n            }\r\n        }\r\n    }\r\n    if (value < startAngle) {\r\n        if (value > maxStart) {\r\n            value = startAngle;\r\n        }\r\n        else {\r\n            value = endAngle;\r\n        }\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * Returns [[IRectangle]] of an arc in relative values, assuming that the\r\n * center is at the circle center.\r\n *\r\n * Used to find out max radius of an arc.\r\n *\r\n * @ignore Exclude from docs\r\n * @param startAngle  Start angle\r\n * @param endAngle    End angle\r\n * @param radius    \t Relative radius\r\n * @return Rectangle\r\n */\r\nexport function getArcRect(startAngle, endAngle, radius) {\r\n    var minX = Number.MAX_VALUE;\r\n    var minY = Number.MAX_VALUE;\r\n    var maxX = -Number.MAX_VALUE;\r\n    var maxY = -Number.MAX_VALUE;\r\n    var bpoints = [];\r\n    if (!$type.isNumber(radius)) {\r\n        radius = 1;\r\n    }\r\n    bpoints.push(getArcPoint(radius, startAngle));\r\n    bpoints.push(getArcPoint(radius, endAngle));\r\n    var fromAngle = Math.min(Math.floor(startAngle / 90) * 90, Math.floor(endAngle / 90) * 90);\r\n    var toAngle = Math.max(Math.ceil(startAngle / 90) * 90, Math.ceil(endAngle / 90) * 90);\r\n    for (var angle = fromAngle; angle <= toAngle; angle += 90) {\r\n        if (angle >= startAngle && angle <= endAngle) {\r\n            bpoints.push(getArcPoint(radius, angle));\r\n        }\r\n    }\r\n    for (var i = 0; i < bpoints.length; i++) {\r\n        var pt = bpoints[i];\r\n        if (pt.x < minX) {\r\n            minX = pt.x;\r\n        }\r\n        if (pt.y < minY) {\r\n            minY = pt.y;\r\n        }\r\n        if (pt.x > maxX) {\r\n            maxX = pt.x;\r\n        }\r\n        if (pt.y > maxY) {\r\n            maxY = pt.y;\r\n        }\r\n    }\r\n    return ({ x: minX, y: minY, width: maxX - minX, height: maxY - minY });\r\n}\r\n/**\r\n * Returns point on arc\r\n *\r\n * @param center point\r\n * @param radius\r\n * @param arc\r\n * @return {boolean}\r\n */\r\nexport function getArcPoint(radius, arc) {\r\n    return ({ x: radius * cos(arc), y: radius * sin(arc) });\r\n}\r\n/**\r\n * Returns true if a point is within rectangle\r\n *\r\n * @param point\r\n * @param rectangle\r\n * @return {boolean}\r\n */\r\nexport function isInRectangle(point, rectangle) {\r\n    if (point.x >= rectangle.x && point.x <= rectangle.x + rectangle.width && point.y > rectangle.y && point.y < rectangle.y + rectangle.height) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nexport function getLineIntersection(pointA1, pointA2, pointB1, pointB2) {\r\n    var x = ((pointA1.x * pointA2.y - pointA2.x * pointA1.y) * (pointB1.x - pointB2.x) - (pointA1.x - pointA2.x) * (pointB1.x * pointB2.y - pointB1.y * pointB2.x)) / ((pointA1.x - pointA2.x) * (pointB1.y - pointB2.y) - (pointA1.y - pointA2.y) * (pointB1.x - pointB2.x));\r\n    var y = ((pointA1.x * pointA2.y - pointA2.x * pointA1.y) * (pointB1.y - pointB2.y) - (pointA1.y - pointA2.y) * (pointB1.x * pointB2.y - pointB1.y * pointB2.x)) / ((pointA1.x - pointA2.x) * (pointB1.y - pointB2.y) - (pointA1.y - pointA2.y) * (pointB1.x - pointB2.x));\r\n    return { x: x, y: y };\r\n}\r\n//# sourceMappingURL=Math.js.map","import * as $math from \"./Math\";\r\nimport * as $type from \"./Type\";\r\n/**\r\n * ============================================================================\r\n * UTILITY FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Searches `array` for `value`.\r\n *\r\n * Returns -1 if not found.\r\n *\r\n * @param array  Source array\r\n * @param value  Value to search\r\n * @returns Index\r\n */\r\nexport function indexOf(array, value) {\r\n    var length = array.length;\r\n    for (var i = 0; i < length; ++i) {\r\n        // TODO handle NaN\r\n        if (array[i] === value) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * Calls `test` for each element in `array`.\r\n *\r\n * If `test` returns `true` then it immediately returns `true`.\r\n *\r\n * If `test` returns `false` for all of the elements in `array` then it returns `false`.\r\n *\r\n * @param array  Source array\r\n * @param test   Function which is called on each element\r\n * @returns Whether `test` returned true or not\r\n */\r\nexport function any(array, test) {\r\n    var length = array.length;\r\n    for (var i = 0; i < length; ++i) {\r\n        if (test(array[i])) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Calls `fn` function for every member of array and returns a new array out\r\n * of all outputs.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n * @returns New array\r\n */\r\nexport function map(array, fn) {\r\n    var length = array.length;\r\n    var output = new Array(length);\r\n    for (var i = 0; i < length; ++i) {\r\n        output[i] = fn(array[i], i);\r\n    }\r\n    return output;\r\n}\r\n/**\r\n * Iterates through all items in array and calls `fn` function for each of\r\n * them.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n */\r\nexport function each(array, fn) {\r\n    var length = array.length;\r\n    for (var i = 0; i < length; ++i) {\r\n        fn(array[i], i);\r\n    }\r\n}\r\n/**\r\n * Iterates through all items in array in reverse order and calls `fn` function for each of\r\n * them.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n */\r\nexport function eachReverse(array, fn) {\r\n    var i = array.length;\r\n    while (i--) {\r\n        fn(array[i], i);\r\n    }\r\n}\r\n/**\r\n * Iterates through all items in array and calls `fn` function for each of\r\n * them.\r\n *\r\n * If `fn` call evaluates to `false`, further iteration is cancelled.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n */\r\nexport function eachContinue(array, fn) {\r\n    var length = array.length;\r\n    for (var i = 0; i < length; ++i) {\r\n        if (!fn(array[i], i)) {\r\n            break;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Shifts an item at `index` towards beginning of the array.\r\n *\r\n * @param array  Source array\r\n * @param index  Target element index\r\n */\r\nexport function shiftLeft(array, index) {\r\n    var length = array.length;\r\n    for (var i = index; i < length; ++i) {\r\n        array[i - index] = array[i];\r\n    }\r\n    array.length = length - index;\r\n}\r\n/**\r\n * Returns the last item of the array.\r\n *\r\n * @param array  Source array\r\n * @returns Last item\r\n */\r\nexport function last(array) {\r\n    var length = array.length;\r\n    return length ? array[length - 1] : undefined;\r\n}\r\n/**\r\n * Returns the first item of the array.\r\n *\r\n * @param array  Source array\r\n * @returns Last item\r\n */\r\nexport function first(array) {\r\n    return array[0];\r\n}\r\n/**\r\n * Inserts `element` into `array` at `index`.\r\n *\r\n * Caps `index` to be between `0` and `array.length`\r\n *\r\n * @param array    Source array\r\n * @param element  Item to insert\r\n * @param array    Index to insert item at\r\n */\r\nexport function insert(array, element, index) {\r\n    //if (array) {\r\n    index = $math.fitToRange(index, 0, array.length);\r\n    array.splice(index, 0, element);\r\n    //}\r\n}\r\n/**\r\n * Removes all copies of `element` from `array` (if they exist) and then\r\n * inserts `element` at `index`.\r\n *\r\n * @param array    Source array\r\n * @param element  Item\r\n * @param array    Index to move item to\r\n */\r\nexport function setIndex(array, element, index) {\r\n    remove(array, element);\r\n    insert(array, element, index);\r\n}\r\n/**\r\n * Pushes all of the elements from `input` into `array`.\r\n *\r\n * @param array  Output array\r\n * @param input  Input array\r\n */\r\nexport function pushAll(array, input) {\r\n    var length = input.length;\r\n    for (var i = 0; i < length; ++i) {\r\n        array.push(input[i]);\r\n    }\r\n}\r\n/**\r\n * Removes `element` from `array`.\r\n *\r\n * If there are multiple copies of `element`, they are all removed.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to remove\r\n */\r\nexport function remove(array, element) {\r\n    var found = false;\r\n    var index = array.indexOf(element);\r\n    if (index !== -1) {\r\n        found = true;\r\n        array.splice(index, 1);\r\n        var length_1 = array.length;\r\n        while (index < length_1) {\r\n            // TODO handle NaN\r\n            if (array[index] === element) {\r\n                array.splice(index, 1);\r\n                --length_1;\r\n            }\r\n            else {\r\n                ++index;\r\n            }\r\n        }\r\n    }\r\n    return found;\r\n}\r\n/**\r\n * Adds an `element` to `array`.\r\n *\r\n * If array already contains and item like this, it is removed before adding\r\n * it again.\r\n *\r\n * Optionally `toIndex` can be specified to add element at specific index.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to add\r\n * @param array    Index to move item to\r\n */\r\nexport function move(array, element, toIndex) {\r\n    // @todo this implementation must be the same as the List.moveValue method\r\n    // @todo don't do anything if the desired index is the same as the current index\r\n    var index = indexOf(array, element);\r\n    // @todo remove all old values rather than only the first ?\r\n    if (index !== -1) {\r\n        removeIndex(array, index);\r\n    }\r\n    if (toIndex == null) {\r\n        array.push(element);\r\n    }\r\n    else {\r\n        insertIndex(array, toIndex, element);\r\n    }\r\n}\r\n/**\r\n * Inserts `element` into `array` at `index`.\r\n *\r\n * If `index` is not provided, it will insert `element` at the end of `array`.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to add\r\n * @param array    Index to add item at\r\n */\r\nexport function add(array, element, index) {\r\n    // Append to the end if index is not set\r\n    if (!$type.isNumber(index)) {\r\n        array.push(element);\r\n    }\r\n    // Add to the beginning of array if index is 0\r\n    else if (index === 0) {\r\n        array.unshift(element);\r\n    }\r\n    // Add to indicated place if index is set\r\n    else {\r\n        array.splice(index, 0, element);\r\n    }\r\n}\r\n/**\r\n * Removes `element` from `array` (if it exists) and then inserts `element` at\r\n * `index`.\r\n *\r\n * If `index` is not provided, it will insert `element` at the end of `array`.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to remove\r\n * @param array    Index to move item to\r\n */\r\nexport function replace(array, element, index) {\r\n    // check if exists\r\n    var ind = array.indexOf(element);\r\n    // remove if exists\r\n    if (ind !== -1) {\r\n        array.splice(ind, 1);\r\n    }\r\n    // add to end if index is not set\r\n    if (!$type.isNumber(index)) {\r\n        array.push(element);\r\n    }\r\n    // add to indicated place if index is set\r\n    else {\r\n        array.splice(index, 0, element);\r\n    }\r\n}\r\n/**\r\n * Wraps `input` in an array, if it isn't already an array.\r\n *\r\n * @param input  Source value\r\n * @return An array\r\n */\r\nexport function toArray(input) {\r\n    if (Array.isArray(input)) {\r\n        return input;\r\n    }\r\n    else {\r\n        return [input];\r\n    }\r\n}\r\n/**\r\n * Returns `true` if `element` exists in `array`.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to search for\r\n * @returns Item in array?\r\n */\r\nexport function has(array, element) {\r\n    return indexOf(array, element) !== -1;\r\n}\r\n/**\r\n * Returns a shallow copy of `array`.\r\n *\r\n * @param array  Source array\r\n * @returns Copy of the array\r\n */\r\nexport function copy(array) {\r\n    var length = array.length;\r\n    // It's faster to create the array with a pre-defined length\r\n    var output = new Array(length);\r\n    for (var i = 0; i < length; ++i) {\r\n        // Because the array has a pre-defined length, we have to assign rather than push\r\n        // This is also faster than pushing\r\n        output[i] = array[i];\r\n    }\r\n    return output;\r\n}\r\n/**\r\n * Returns a copy of `array` which contains all the elements between `start`\r\n * and `end`. (including `start` and excluding `end`)\r\n *\r\n * If `end` is not provided, it defaults to `array.length`.\r\n *\r\n * @param array  Source array\r\n * @param start  Start index\r\n * @param end    End index\r\n * @returns Part of the array\r\n */\r\nexport function slice(array, start, end) {\r\n    if (end === void 0) { end = array.length; }\r\n    var output = new Array(end - start);\r\n    for (var i = start; i < end; ++i) {\r\n        output[i - start] = array[i];\r\n    }\r\n    return output;\r\n}\r\n/**\r\n * Inserts a value into array at specific index.\r\n *\r\n * @param array  Source array\r\n * @param index  Index\r\n * @param value  Value to insert\r\n */\r\nexport function insertIndex(array, index, value) {\r\n    array.splice(index, 0, value);\r\n}\r\n/**\r\n * Removes a value from array at specific index.\r\n *\r\n * @param array  Source array\r\n * @param index  Index\r\n */\r\nexport function removeIndex(array, index) {\r\n    array.splice(index, 1);\r\n}\r\n/**\r\n * Orders an array using specific `ordering` function and returns index of\r\n * the `value`.\r\n *\r\n * @ignore Exclude from docs\r\n * @param array     Source array\r\n * @param ordering  An ordering function\r\n * @param value     Value to search for\r\n * @returns Result of the search\r\n */\r\nexport function getSortedIndex(array, ordering, value) {\r\n    var start = 0;\r\n    var end = array.length;\r\n    var found = false;\r\n    while (start < end) {\r\n        // TODO is this faster/slower than using Math.floor ?\r\n        var pivot = (start + end) >> 1;\r\n        var order = ordering(value, array[pivot]);\r\n        // less\r\n        if (order < 0) {\r\n            end = pivot;\r\n            // equal\r\n        }\r\n        else if (order === 0) {\r\n            found = true;\r\n            start = pivot + 1;\r\n            // more\r\n        }\r\n        else {\r\n            start = pivot + 1;\r\n        }\r\n    }\r\n    return {\r\n        found: found,\r\n        index: (found ? start - 1 : start)\r\n    };\r\n}\r\n/**\r\n * Searches the array using custom function and returns index of the item if\r\n * found.\r\n *\r\n * Will call `matches` function on all items of the array. If return value\r\n * evaluates to `true`, index is returned.\r\n *\r\n * Otherwise returns -1.\r\n *\r\n * @param array    Source array\r\n * @param matches  Search function\r\n * @returns Index of the item if found\r\n */\r\nexport function findIndex(array, matches) {\r\n    var length = array.length;\r\n    for (var i = 0; i < length; ++i) {\r\n        if (matches(array[i], i)) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * Searches the array using custom function and returns item if found.\r\n *\r\n * Will call `matches` function on all items of the array. If return value\r\n * evaluates to `true`, index is returned.\r\n *\r\n * Otherwise returns `undefined`.\r\n *\r\n * @param array    Source array\r\n * @param matches  Search function\r\n * @returns Item if found\r\n */\r\nexport function find(array, matches) {\r\n    var index = findIndex(array, matches);\r\n    if (index !== -1) {\r\n        return array[index];\r\n    }\r\n}\r\n/**\r\n * Iterates through all items in array and calls `fn` function for each of\r\n * them.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n */\r\nexport function shuffle(array) {\r\n    // https://stackoverflow.com/a/2450976/449477\r\n    var currentIndex = array.length, temporaryValue, randomIndex;\r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n        // Pick a remaining element...\r\n        randomIndex = Math.floor(Math.random() * currentIndex);\r\n        currentIndex -= 1;\r\n        // And swap it with the current element.\r\n        temporaryValue = array[currentIndex];\r\n        array[currentIndex] = array[randomIndex];\r\n        array[randomIndex] = temporaryValue;\r\n    }\r\n}\r\n//# sourceMappingURL=Array.js.map","import { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport * as $array from \"./Array\";\r\nimport * as $type from \"./Type\";\r\n/**\r\n * A base class for disposable objects.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nvar Disposer = /** @class */ (function () {\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param dispose  Function that disposes object\r\n     */\r\n    function Disposer(dispose) {\r\n        this._disposed = false;\r\n        this._dispose = dispose;\r\n    }\r\n    /**\r\n     * Checks if object is disposed.\r\n     *\r\n     * @return Disposed?\r\n     */\r\n    Disposer.prototype.isDisposed = function () {\r\n        return this._disposed;\r\n    };\r\n    /**\r\n     * Disposes the object.\r\n     */\r\n    Disposer.prototype.dispose = function () {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            this._dispose();\r\n        }\r\n    };\r\n    return Disposer;\r\n}());\r\nexport { Disposer };\r\n/**\r\n * A collection of related disposers that can be disposed in one go.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nvar MultiDisposer = /** @class */ (function (_super) {\r\n    __extends(MultiDisposer, _super);\r\n    function MultiDisposer(disposers) {\r\n        return _super.call(this, function () {\r\n            $array.each(disposers, function (x) {\r\n                x.dispose();\r\n            });\r\n        }) || this;\r\n    }\r\n    return MultiDisposer;\r\n}(Disposer));\r\nexport { MultiDisposer };\r\n/**\r\n * A special kind of Disposer that has attached value set.\r\n *\r\n * If a new value is set using `set()` method, the old disposer value is\r\n * disposed.\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nvar MutableValueDisposer = /** @class */ (function (_super) {\r\n    __extends(MutableValueDisposer, _super);\r\n    /**\r\n     * Constructor.\r\n     */\r\n    function MutableValueDisposer() {\r\n        var _this = _super.call(this, function () {\r\n            if ($type.hasValue(_this._disposer)) {\r\n                _this._disposer.dispose();\r\n                _this._disposer = undefined;\r\n            }\r\n        }) || this;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Returns current value.\r\n     *\r\n     * @return Value\r\n     */\r\n    MutableValueDisposer.prototype.get = function () {\r\n        return this._value;\r\n    };\r\n    /**\r\n     * Sets value and disposes previous disposer if it was set.\r\n     *\r\n     * @param value     New value\r\n     * @param disposer  Disposer\r\n     */\r\n    MutableValueDisposer.prototype.set = function (value, disposer) {\r\n        if ($type.hasValue(this._disposer)) {\r\n            this._disposer.dispose();\r\n        }\r\n        this._disposer = disposer;\r\n        this._value = value;\r\n    };\r\n    /**\r\n     * Resets the disposer value.\r\n     */\r\n    MutableValueDisposer.prototype.reset = function () {\r\n        this.set(undefined, undefined);\r\n    };\r\n    return MutableValueDisposer;\r\n}(Disposer));\r\nexport { MutableValueDisposer };\r\n/**\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nvar CounterDisposer = /** @class */ (function (_super) {\r\n    __extends(CounterDisposer, _super);\r\n    function CounterDisposer() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * [_counter description]\r\n         *\r\n         * @todo Description\r\n         */\r\n        _this._counter = 0;\r\n        return _this;\r\n    }\r\n    /**\r\n     * [increment description]\r\n     *\r\n     * @todo Description\r\n     */\r\n    CounterDisposer.prototype.increment = function () {\r\n        var _this = this;\r\n        // TODO throw an error if it is disposed\r\n        ++this._counter;\r\n        // TODO make this more efficient\r\n        return new Disposer(function () {\r\n            --_this._counter;\r\n            if (_this._counter === 0) {\r\n                _this.dispose();\r\n            }\r\n        });\r\n    };\r\n    return CounterDisposer;\r\n}(Disposer));\r\nexport { CounterDisposer };\r\n//# sourceMappingURL=Disposer.js.map","import * as $array from \"./Array\";\r\n/**\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport function fromArray(array) {\r\n    return function (push) {\r\n        var length = array.length;\r\n        for (var i = 0; i < length; ++i) {\r\n            if (!push(array[i])) {\r\n                break;\r\n            }\r\n        }\r\n    };\r\n}\r\n/**\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport function length(iter) {\r\n    var sum = 0;\r\n    iter(function (_) {\r\n        ++sum;\r\n        return true;\r\n    });\r\n    return sum;\r\n}\r\n/**\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport function toArray(iter) {\r\n    var output = [];\r\n    iter(function (value) {\r\n        output.push(value);\r\n        return true;\r\n    });\r\n    return output;\r\n}\r\n/**\r\n * [iter description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport function eachContinue(iter, fn) {\r\n    iter(fn);\r\n}\r\n/**\r\n * [iter description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport function each(iter, fn) {\r\n    iter(function (value) {\r\n        fn(value);\r\n        return true;\r\n    });\r\n}\r\n/**\r\n * [iter description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport function sort(iter, fn) {\r\n    return fromArray(toArray(iter).sort(fn));\r\n}\r\n/**\r\n * [A description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport function map(iter, fn) {\r\n    return function (push) { return iter(function (value) { return push(fn(value)); }); };\r\n}\r\n/**\r\n * [iter description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport function filter(iter, fn) {\r\n    return function (push) { return iter(function (value) {\r\n        if (fn(value)) {\r\n            return push(value);\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }); };\r\n}\r\n/**\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport function concat() {\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i] = arguments[_i];\r\n    }\r\n    return function (push) {\r\n        var go = true;\r\n        var push2 = function (value) { return (go = push(value)); };\r\n        var length = args.length;\r\n        for (var i = 0; i < length; ++i) {\r\n            args[i](push2);\r\n            if (!go) {\r\n                break;\r\n            }\r\n        }\r\n    };\r\n}\r\n/**\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport function flatten(iter) {\r\n    return function (push) {\r\n        var go = true;\r\n        var push2 = function (value) { return (go = push(value)); };\r\n        iter(function (value) {\r\n            value(push2);\r\n            return go;\r\n        });\r\n    };\r\n}\r\n/**\r\n * [number description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport function indexed(iter) {\r\n    return function (push) {\r\n        var index = 0;\r\n        iter(function (value) { return push([index++, value]); });\r\n    };\r\n}\r\n/**\r\n * [iter description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport function findIndex(iter, matches) {\r\n    var found = false;\r\n    var i = 0;\r\n    iter(function (value) {\r\n        if (matches(value)) {\r\n            found = true;\r\n            return false;\r\n        }\r\n        else {\r\n            ++i;\r\n            return true;\r\n        }\r\n    });\r\n    return (found ? i : -1);\r\n}\r\n/**\r\n * [iter description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport function find(iter, matches) {\r\n    var output;\r\n    iter(function (value) {\r\n        if (matches(value)) {\r\n            output = value;\r\n            return false;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    });\r\n    return output;\r\n}\r\n/**\r\n * [A description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport function findMap(iter, matches) {\r\n    var output;\r\n    iter(function (value) {\r\n        var v = matches(value);\r\n        if (v !== null) {\r\n            output = v;\r\n            return false;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    });\r\n    return output;\r\n}\r\n/**\r\n * [iter description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport function contains(iter, matches) {\r\n    var output = false;\r\n    iter(function (value) {\r\n        if (matches(value)) {\r\n            output = true;\r\n            return false;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    });\r\n    return output;\r\n}\r\n/**\r\n * [A description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport function foldl(iter, init, fn) {\r\n    iter(function (value) {\r\n        init = fn(init, value);\r\n        return true;\r\n    });\r\n    return init;\r\n}\r\n/**\r\n * [min2 description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param left [description]\r\n * @param right [description]\r\n * @return [description]\r\n */\r\nfunction min2(left, right) {\r\n    if (left == null || right < left) {\r\n        return right;\r\n    }\r\n    else {\r\n        return left;\r\n    }\r\n}\r\n/**\r\n * [min description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Verify that this works correctly\r\n * @todo Description\r\n * @param a [description]\r\n * @return [description]\r\n */\r\nexport function min(a) {\r\n    return foldl(a, null, min2);\r\n}\r\n/**\r\n * [max2 description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param left [description]\r\n * @param right [description]\r\n * @return [description]\r\n */\r\nfunction max2(left, right) {\r\n    if (left == null || right > left) {\r\n        return right;\r\n    }\r\n    else {\r\n        return left;\r\n    }\r\n}\r\n/**\r\n * [max description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Verify that this works correctly\r\n * @todo Description\r\n * @param a [description]\r\n * @return [description]\r\n */\r\nexport function max(a) {\r\n    return foldl(a, null, max2);\r\n}\r\n/**\r\n * [join description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param iter [description]\r\n * @param separator [description]\r\n * @return [description]\r\n */\r\nexport function join(iter, separator) {\r\n    if (separator === void 0) { separator = \"\"; }\r\n    var first = true;\r\n    var init = \"\";\r\n    iter(function (value) {\r\n        if (first) {\r\n            first = false;\r\n        }\r\n        else {\r\n            init += separator;\r\n        }\r\n        init += value;\r\n        return true;\r\n    });\r\n    return init;\r\n}\r\n/**\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nvar ListIterator = /** @class */ (function () {\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param list [description]\r\n     * @param create [description]\r\n     */\r\n    function ListIterator(list, create) {\r\n        // flag specifies if iterator should create new list item if it is reqested for a nextItem but there is no more left in the list\r\n        this.createNewItems = false;\r\n        this.list = list;\r\n        this._create = create;\r\n        this.reset();\r\n    }\r\n    ListIterator.prototype.reset = function () {\r\n        this._listCopy = toArray(this.list.iterator());\r\n    };\r\n    ListIterator.prototype.clear = function () {\r\n        this._listCopy.length = 0;\r\n    };\r\n    ListIterator.prototype.getFirst = function () {\r\n        return this.returnItem(0);\r\n    };\r\n    ListIterator.prototype.getLast = function () {\r\n        return this.returnItem(this._listCopy.length - 1);\r\n    };\r\n    ListIterator.prototype.find = function (fn) {\r\n        var index = $array.findIndex(this._listCopy, fn);\r\n        if (index !== -1) {\r\n            var item = this._listCopy[index];\r\n            // TODO use removeIndex instead ?\r\n            $array.remove(this._listCopy, item);\r\n            return item;\r\n        }\r\n        else {\r\n            return this.getLast();\r\n        }\r\n    };\r\n    ListIterator.prototype.removeItem = function (item) {\r\n        return $array.remove(this._listCopy, item);\r\n    };\r\n    ListIterator.prototype.returnItem = function (index) {\r\n        if (index >= 0 && index < this._listCopy.length) {\r\n            var item = this._listCopy[index];\r\n            // TODO use removeIndex instead ?\r\n            $array.remove(this._listCopy, item);\r\n            return item;\r\n        }\r\n        else if (this.createNewItems) {\r\n            return this._create();\r\n        }\r\n    };\r\n    ListIterator.prototype.iterator = function () {\r\n        return fromArray(this._listCopy);\r\n    };\r\n    return ListIterator;\r\n}());\r\nexport { ListIterator };\r\n//# sourceMappingURL=Iterator.js.map","/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Represents a relative value (percent).\r\n *\r\n * The Percent object, can be instantiated using two ways:\r\n *\r\n * * Via `new Percent(X)`.\r\n * * Via `am4core.percent(X)`.\r\n *\r\n * `Percent` type objects can be used in a number of dual-measuring or\r\n * positioning properties, like `width`. E.g.:\r\n *\r\n * ```TypeScript\r\n * chart.paddingRight = new Percent(10);\r\n * // or\r\n * chart.paddingRight = am4core.percent(10);\r\n * ```\r\n * ```JavaScript\r\n * chart.paddingRight = new Percent(10);\r\n * // or\r\n * chart.paddingRight = am4core.percent(10);\r\n * ```\r\n * ```JSON\r\n * {\r\n *   // ...\r\n *   \"paddingRight\": \"10%\"\r\n * }\r\n * ```\r\n */\r\nvar Percent = /** @class */ (function () {\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param percent  Percent value\r\n     */\r\n    function Percent(percent) {\r\n        this._value = percent;\r\n    }\r\n    Object.defineProperty(Percent.prototype, \"value\", {\r\n        /**\r\n         * Relative value.\r\n         *\r\n         * E.g. 100% is 1, 50% is 0.5, etc.\r\n         *\r\n         * This is useful to apply transformations to other values. E.g.:\r\n         *\r\n         * ```TypeScript\r\n         * let value = 256;\r\n         * let percent = new am4core.Percent(50);\r\n         * console.log(value * percent.value); // outputs 128\r\n         * ```\r\n         * ```JavaScript\r\n         * var value = 256;\r\n         * var percent = new am4core.Percent(50);\r\n         * console.log(value * percent.value); // outputs 128\r\n         * ```\r\n         *\r\n         * Alternatively, you can use `am4core.percent()` helper function:\r\n         *\r\n         * ```TypeScript\r\n         * let value = 256;\r\n         * let percent = am4core.percent(50);\r\n         * console.log(value * percent.value); // outputs 128\r\n         * ```\r\n         * ```JavaScript\r\n         * var value = 256;\r\n         * var percent = am4core.percent(50);\r\n         * console.log(value * percent.value); // outputs 128\r\n         * ```\r\n         *\r\n         * @readonly\r\n         * @return Relative value\r\n         */\r\n        get: function () {\r\n            return this._value / 100;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Percent.prototype, \"percent\", {\r\n        /**\r\n         * Value in percent.\r\n         *\r\n         * @return Percent\r\n         */\r\n        get: function () {\r\n            return this._value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Percent.prototype.toString = function () {\r\n        return \"\" + this._value + \"%\";\r\n    };\r\n    return Percent;\r\n}());\r\nexport { Percent };\r\n/**\r\n * Converts numeric percent value to a proper [[Percent]] object.\r\n *\r\n * ```TypeScript\r\n * pieSeries.radius = am4core.percent(80);\r\n * ```\r\n * ```JavaScript\r\n * pieSeries.radius = am4core.percent(80);\r\n * ```\r\n *\r\n * @param value  Percent\r\n * @return Percent object\r\n */\r\nexport function percent(value) {\r\n    return new Percent(value);\r\n}\r\n/**\r\n * Checks if value is a [[Percent]] object.\r\n *\r\n * @ignore Exclude from docs\r\n * @param value  Input value\r\n * @return Is percent?\r\n */\r\nexport function isPercent(value) {\r\n    return value instanceof Percent;\r\n}\r\n//# sourceMappingURL=Percent.js.map","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport * as $array from \"./Array\";\r\nimport * as $type from \"./Type\";\r\n/**\r\n * ============================================================================\r\n * UTILITY FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Returns an iterator for all entries in object.\r\n *\r\n * Can be used to safely iterate through all properties of the object.\r\n *\r\n * @param object  Source object\r\n * @returns Iterator\r\n */\r\nexport function entries(object) {\r\n    return function (push) {\r\n        // TODO make this more efficient ?\r\n        for (var key in object) {\r\n            if (hasKey(object, key)) {\r\n                if (!push([key, object[key]])) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    };\r\n}\r\n/**\r\n * Returns an array of object's property names.\r\n *\r\n * @param object  Source object\r\n * @returns Object property names\r\n */\r\nexport function keys(object) {\r\n    var output = [];\r\n    for (var key in object) {\r\n        if (hasKey(object, key)) {\r\n            output.push(key);\r\n        }\r\n    }\r\n    return output;\r\n}\r\n/**\r\n * Returns an array of object's property names ordered using specific ordering\r\n * function.\r\n *\r\n * @param object  Source object\r\n * @param order   Ordering function\r\n * @returns Object property names\r\n */\r\nexport function keysOrdered(object, order) {\r\n    return keys(object).sort(order);\r\n}\r\n/**\r\n * Checks if `object` has a specific `key`.\r\n *\r\n * @param object  Source object\r\n * @param key     Property name\r\n * @returns Has key?\r\n */\r\nexport function hasKey(object, key) {\r\n    return {}.hasOwnProperty.call(object, key);\r\n}\r\n/**\r\n * Returns value of the specific `key`.\r\n *\r\n * @param object  Source object\r\n * @param key     Property name\r\n * @returns Key value\r\n */\r\nexport function getKey(object, key) {\r\n    return object[key];\r\n}\r\n/**\r\n * Iterates through all properties of the object calling `fn` for each of them.\r\n *\r\n * If return value of the function evaluates to `false` further iteration is\r\n * cancelled.\r\n *\r\n * @param object  Source object\r\n * @param fn      Callback function\r\n */\r\nexport function eachContinue(object, fn) {\r\n    for (var key in object) {\r\n        if (hasKey(object, key)) {\r\n            if (!fn(key, object[key])) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * Iterates through all properties of the object calling `fn` for each of them.\r\n *\r\n * @param object  Source object\r\n * @param fn      Callback function\r\n */\r\nexport function each(object, fn) {\r\n    eachContinue(object, function (key, value) {\r\n        fn(key, value);\r\n        return true;\r\n    });\r\n}\r\n/**\r\n * Orders object properties using custom `ord` function and iterates through\r\n * them calling `fn` for each of them.\r\n *\r\n * @param object  Source object\r\n * @param fn      Callback function\r\n * @param order   Ordering function\r\n */\r\nexport function eachOrdered(object, fn, ord) {\r\n    $array.each(keysOrdered(object, ord), function (key) {\r\n        fn(key, object[key]);\r\n    });\r\n}\r\n/**\r\n * Returns a copy of the object.\r\n *\r\n * @param object  Source object\r\n * @returns Copy of the object\r\n */\r\nexport function copy(object) {\r\n    return Object.assign({}, object);\r\n}\r\n/**\r\n * Merges two objects and returns a new object that contains properties from\r\n * both source objects.\r\n *\r\n * @param object1  Source object #1\r\n * @param object2  Source object #2\r\n * @returns Combined object\r\n */\r\nexport function merge(object1, object2) {\r\n    return Object.assign({}, object1, object2);\r\n}\r\n/**\r\n * Copies a list of properties from one object to another.\r\n *\r\n * Will not copy empty properties.\r\n *\r\n * @param source  Source object\r\n * @param target    Target object\r\n * @param keys  List of keys to copy\r\n */\r\nexport function copyProperties(source, target, keys) {\r\n    $array.each(keys, function (key) {\r\n        if ($type.hasValue(source[key])) {\r\n            target[key] = source[key];\r\n        }\r\n    });\r\n}\r\n/**\r\n * Copies a list of properties from one object to another only if target does't have value of the property set.\r\n *\r\n * Will not copy empty properties.\r\n *\r\n * @param source  Source object\r\n * @param target    Target object\r\n * @param keys  List of keys to copy\r\n */\r\nexport function softCopyProperties(source, target, keys) {\r\n    $array.each(keys, function (key) {\r\n        if ($type.hasValue(source[key]) && !($type.hasValue(target[key]))) {\r\n            target[key] = source[key];\r\n        }\r\n    });\r\n}\r\n/**\r\n * Copies a list of properties from one object to another.\r\n *\r\n * Will copy empty properties.\r\n *\r\n * @param source  Source object\r\n * @param target    Target object\r\n * @param keys  List of keys to copy\r\n */\r\nexport function forceCopyProperties(source, target, keys) {\r\n    $array.each(keys, function (key) {\r\n        target[key] = source[key];\r\n    });\r\n}\r\n/**\r\n * Copies all properties from one object to another.\r\n *\r\n * @param from  Source object\r\n * @param to    Target object\r\n */\r\nexport function copyAllProperties(from, to) {\r\n    copyProperties(from, to, keys(from));\r\n}\r\n//# sourceMappingURL=Object.js.map","import { __extends, __generator, __read } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Disposer } from \"./Disposer\";\r\nimport { EventDispatcher } from \"./EventDispatcher\";\r\nimport * as $object from \"./Object\";\r\nimport * as $iter from \"./Iterator\";\r\nimport * as $string from \"./String\";\r\n/**\r\n * A disposable dictionary, which when disposed itself will call `dispose()`\r\n * method on all its items.\r\n */\r\nvar DictionaryDisposer = /** @class */ (function (_super) {\r\n    __extends(DictionaryDisposer, _super);\r\n    function DictionaryDisposer(dict) {\r\n        var _this = this;\r\n        var disposer = dict.events.on(\"removed\", function (x) {\r\n            x.oldValue.dispose();\r\n        }, undefined, false);\r\n        _this = _super.call(this, function () {\r\n            disposer.dispose();\r\n            // TODO clear the dictionary ?\r\n            $iter.each(dict.iterator(), function (a) {\r\n                var v = a[1];\r\n                v.dispose();\r\n            });\r\n        }) || this;\r\n        return _this;\r\n    }\r\n    return DictionaryDisposer;\r\n}(Disposer));\r\nexport { DictionaryDisposer };\r\n/**\r\n * A Dictionary is collection where values of some type can be mapped to\r\n * string keys.\r\n *\r\n * You might call it an \"associative list\" or \"associative array\".\r\n */\r\nvar Dictionary = /** @class */ (function () {\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Dictionary() {\r\n        /**\r\n         * Event dispatcher.\r\n         */\r\n        this.events = new EventDispatcher();\r\n        this._dictionary = {};\r\n    }\r\n    /**\r\n     * Returns `true` if key exists in Dictionary.\r\n     *\r\n     * @param key  The key to search for\r\n     * @return `true` if key exists, `false` if it doesn't\r\n     */\r\n    Dictionary.prototype.hasKey = function (key) {\r\n        return $object.hasKey(this._dictionary, key);\r\n    };\r\n    /**\r\n     * Returns the value for a specific key.\r\n     *\r\n     * @param key  The key to search for\r\n     * @return Value for the key, or `undefined` if it doesn't exist\r\n     */\r\n    Dictionary.prototype.getKey = function (key) {\r\n        return this._dictionary[key];\r\n    };\r\n    /**\r\n     * Inserts value at specific key.\r\n     *\r\n     * Will thrown an exception if the key already exists in the dictionary.\r\n     *\r\n     * @param key    Key\r\n     * @param value  Value\r\n     */\r\n    Dictionary.prototype.insertKey = function (key, value) {\r\n        if ($object.hasKey(this._dictionary, key)) {\r\n            throw new Error(\"Key \" + key + \" already exists in dictionary\");\r\n        }\r\n        else {\r\n            this._dictionary[key] = value;\r\n            if (this.events.isEnabled(\"insertKey\")) {\r\n                this.events.dispatchImmediately(\"insertKey\", {\r\n                    type: \"insertKey\",\r\n                    target: this,\r\n                    key: key,\r\n                    newValue: value\r\n                });\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Adds or updates key/value into dictionary.\r\n     *\r\n     * If the key already exists, the old value will be overwritten.\r\n     *\r\n     * If the new value is exactly the same as the old value (using ===), it won't do anything.\r\n     *\r\n     * @param key    Key\r\n     * @param value  Value\r\n     */\r\n    Dictionary.prototype.setKey = function (key, value) {\r\n        if ($object.hasKey(this._dictionary, key)) {\r\n            var oldValue = this._dictionary[key];\r\n            if (oldValue !== value) {\r\n                this._dictionary[key] = value;\r\n                if (this.events.isEnabled(\"setKey\")) {\r\n                    this.events.dispatchImmediately(\"setKey\", {\r\n                        type: \"setKey\",\r\n                        target: this,\r\n                        key: key,\r\n                        oldValue: oldValue,\r\n                        newValue: value\r\n                    });\r\n                }\r\n                if (this.events.isEnabled(\"removed\")) {\r\n                    this.events.dispatchImmediately(\"removed\", {\r\n                        type: \"removed\",\r\n                        target: this,\r\n                        oldValue: oldValue\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this._dictionary[key] = value;\r\n            if (this.events.isEnabled(\"insertKey\")) {\r\n                this.events.dispatchImmediately(\"insertKey\", {\r\n                    type: \"insertKey\",\r\n                    target: this,\r\n                    key: key,\r\n                    newValue: value\r\n                });\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Updates the value at specific `key` using custom function.\r\n     *\r\n     * Passes in current value into the function, and uses its output as a new\r\n     * value.\r\n     *\r\n     * If the new value is exactly the same as the old value (using ===), it won't do anything.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param key  Key\r\n     * @param fn   Function to transform the value\r\n     */\r\n    Dictionary.prototype.updateKey = function (key, fn) {\r\n        if ($object.hasKey(this._dictionary, key)) {\r\n            var oldValue = this._dictionary[key];\r\n            var newValue = fn(oldValue);\r\n            if (oldValue !== newValue) {\r\n                this._dictionary[key] = newValue;\r\n                if (this.events.isEnabled(\"setKey\")) {\r\n                    this.events.dispatchImmediately(\"setKey\", {\r\n                        type: \"setKey\",\r\n                        target: this,\r\n                        key: key,\r\n                        oldValue: oldValue,\r\n                        newValue: newValue\r\n                    });\r\n                }\r\n                if (this.events.isEnabled(\"removed\")) {\r\n                    this.events.dispatchImmediately(\"removed\", {\r\n                        type: \"removed\",\r\n                        target: this,\r\n                        oldValue: oldValue\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            throw new Error(\"Key \" + key + \" doesn't exist in dictionary\");\r\n        }\r\n    };\r\n    /**\r\n     * Removes value at specific `key` from dictionary.\r\n     *\r\n     * @param key  Key to remove\r\n     */\r\n    Dictionary.prototype.removeKey = function (key) {\r\n        if ($object.hasKey(this._dictionary, key)) {\r\n            var oldValue = this._dictionary[key];\r\n            delete this._dictionary[key];\r\n            if (this.events.isEnabled(\"removeKey\")) {\r\n                this.events.dispatchImmediately(\"removeKey\", {\r\n                    type: \"removeKey\",\r\n                    target: this,\r\n                    key: key,\r\n                    oldValue: oldValue\r\n                });\r\n            }\r\n            if (this.events.isEnabled(\"removed\")) {\r\n                this.events.dispatchImmediately(\"removed\", {\r\n                    type: \"removed\",\r\n                    target: this,\r\n                    oldValue: oldValue\r\n                });\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * [insertKeyIfEmpty description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo description\r\n     * @param key      [description]\r\n     * @param ifEmpty  [description]\r\n     * @return [description]\r\n     */\r\n    Dictionary.prototype.insertKeyIfEmpty = function (key, ifEmpty) {\r\n        if (!this.hasKey(key)) {\r\n            this.insertKey(key, ifEmpty());\r\n        }\r\n        return this.getKey(key);\r\n    };\r\n    /**\r\n     * Removes all items from the dictionary.\r\n     */\r\n    Dictionary.prototype.clear = function () {\r\n        var _this = this;\r\n        // TODO dispatch this after clear\r\n        if (this.events.isEnabled(\"removed\")) {\r\n            $object.each(this._dictionary, function (key, value) {\r\n                _this.events.dispatchImmediately(\"removed\", {\r\n                    type: \"removed\",\r\n                    target: _this,\r\n                    oldValue: value\r\n                });\r\n            });\r\n        }\r\n        this._dictionary = {};\r\n        if (this.events.isEnabled(\"cleared\")) {\r\n            this.events.dispatchImmediately(\"cleared\", {\r\n                type: \"cleared\",\r\n                target: this\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Copies items from another Dictionary.\r\n     *\r\n     * @param source  A Dictionary to copy items from\r\n     */\r\n    Dictionary.prototype.copyFrom = function (source) {\r\n        var _this = this;\r\n        $iter.each(source.iterator(), function (a) {\r\n            // TODO fix this type cast\r\n            _this.setKey(a[0], a[1]);\r\n        });\r\n    };\r\n    /**\r\n     * Returns an interator that can be used to iterate through all items in\r\n     * the dictionary.\r\n     *\r\n     * @return Iterator\r\n     */\r\n    Dictionary.prototype.iterator = function () {\r\n        // @todo fix this type after the Iterator bug is fixed\r\n        // https://github.com/Microsoft/TypeScript/issues/16730\r\n        return $object.entries(this._dictionary);\r\n    };\r\n    /**\r\n     * Returns an ES6 iterator for the keys/values of the dictionary.\r\n     */\r\n    Dictionary.prototype[Symbol.iterator] = function () {\r\n        var _a, _b, _i, key;\r\n        return __generator(this, function (_c) {\r\n            switch (_c.label) {\r\n                case 0:\r\n                    _a = [];\r\n                    for (_b in this._dictionary)\r\n                        _a.push(_b);\r\n                    _i = 0;\r\n                    _c.label = 1;\r\n                case 1:\r\n                    if (!(_i < _a.length)) return [3 /*break*/, 4];\r\n                    key = _a[_i];\r\n                    if (!$object.hasKey(this._dictionary, key)) return [3 /*break*/, 3];\r\n                    return [4 /*yield*/, [key, this._dictionary[key]]];\r\n                case 2:\r\n                    _c.sent();\r\n                    _c.label = 3;\r\n                case 3:\r\n                    _i++;\r\n                    return [3 /*break*/, 1];\r\n                case 4: return [2 /*return*/];\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Calls `f` for each key/value in the dictionary.\r\n     */\r\n    Dictionary.prototype.each = function (f) {\r\n        $iter.each(this.iterator(), function (_a) {\r\n            var _b = __read(_a, 2), key = _b[0], value = _b[1];\r\n            return f(key, value);\r\n        });\r\n    };\r\n    /**\r\n     * Returns an iterator that can be used to iterate through all items in\r\n     * the dictionary, ordered by key.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Iterator\r\n     */\r\n    Dictionary.prototype.sortedIterator = function () {\r\n        return $iter.sort(this.iterator(), function (x, y) { return $string.order(x[0], y[0]); });\r\n    };\r\n    return Dictionary;\r\n}());\r\nexport { Dictionary };\r\n/**\r\n * A version of a [[Dictionary]] that has a \"template\".\r\n *\r\n * A template is an instance of an object, that can be used to create new\r\n * elements in the list without actually needing to create instances for those.\r\n *\r\n * When new element is created in the list, e.g. by calling its `create()`\r\n * method, an exact copy of the element is created (including properties and\r\n * other attributes), inserted into the list and returned.\r\n */\r\nvar DictionaryTemplate = /** @class */ (function (_super) {\r\n    __extends(DictionaryTemplate, _super);\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param t Template object\r\n     */\r\n    function DictionaryTemplate(t) {\r\n        var _this = _super.call(this) || this;\r\n        _this.template = t;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(DictionaryTemplate.prototype, \"template\", {\r\n        /**\r\n         * @return Template object\r\n         */\r\n        get: function () {\r\n            return this._template;\r\n        },\r\n        /**\r\n         * A \"template\" object to copy all properties from when creating new list\r\n         * items.\r\n         *\r\n         * @param v  Template object\r\n         */\r\n        set: function (v) {\r\n            v.isTemplate = true;\r\n            this._template = v;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Copies all elements from other dictionary.\r\n     *\r\n     * @param source  Source dictionary\r\n     */\r\n    DictionaryTemplate.prototype.copyFrom = function (source) {\r\n        var _this = this;\r\n        $iter.each(source.iterator(), function (a) {\r\n            // TODO fix this type cast\r\n            // TODO why does this need to clone ?\r\n            _this.setKey(a[0], a[1].clone());\r\n        });\r\n    };\r\n    /**\r\n     * Instantiates a new object of the specified type, adds it to specified\r\n     * `key` in the dictionary, and returns it.\r\n     *\r\n     * @param make  Item type to use. Will use the default type for the dictionary if not specified.\r\n     * @return      Newly created item\r\n     */\r\n    DictionaryTemplate.prototype.create = function (key) {\r\n        var _this = this;\r\n        return this.insertKeyIfEmpty(key, function () { return _this.template.clone(); });\r\n    };\r\n    return DictionaryTemplate;\r\n}(Dictionary));\r\nexport { DictionaryTemplate };\r\n//# sourceMappingURL=Dictionary.js.map","/**\r\n * Event Dispatcher module is used for registering listeners and dispatching\r\n * events across amCharts system.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Disposer } from \"./Disposer\";\r\nimport * as $array from \"./Array\";\r\nimport * as $async from \"./AsyncPending\";\r\nimport * as $type from \"./Type\";\r\n/*export interface IEventDispatcher<T> {\r\n    isDisposed(): boolean;\r\n    dispose(): void;\r\n    hasListeners(): boolean;\r\n    enable(): void;\r\n    disable(): void;\r\n    enableType<Key extends keyof T>(type: Key): void;\r\n    disableType<Key extends keyof T>(type: Key, amount?: number): void;\r\n    isEnabled<Key extends keyof T>(type: Key): boolean;\r\n    has<C, Key extends keyof T>(type: Key, callback?: (this: C, event: T[Key]) => void, context?: C): boolean;\r\n    dispatchImmediately<Key extends keyof T>(type: Key, event: T[Key]): void;\r\n    dispatch<Key extends keyof T>(type: Key, event: T[Key]): void;\r\n    onAll<C, Key extends keyof T>(callback: (this: C, type: Key, event: T[Key]) => void, context?: C): IDisposer;\r\n    on<C, Key extends keyof T>(type: Key, callback: (this: C, event: T[Key]) => void, context?: C): IDisposer;\r\n    once<C, Key extends keyof T>(type: Key, callback: (this: C, event: T[Key]) => void, context?: C): IDisposer;\r\n    off<C, Key extends keyof T>(type: Key, callback: (this: C, event: T[Key]) => void, context?: C): void;\r\n    off<C, Key extends keyof T>(type: Key, callback: (this: C, event: T[Key]) => void, context?: C): void;\r\n    copyFrom(source: this): void;\r\n}*/\r\n/**\r\n * Universal Event Dispatcher.\r\n *\r\n * @important\r\n */\r\nvar EventDispatcher = /** @class */ (function () {\r\n    /**\r\n     * Constructor\r\n     */\r\n    function EventDispatcher() {\r\n        this._listeners = [];\r\n        this._killed = [];\r\n        this._disabled = {};\r\n        this._iterating = 0;\r\n        this._enabled = true;\r\n        this._disposed = false;\r\n    }\r\n    /**\r\n     * Returns if this object has been already disposed.\r\n     *\r\n     * @return Disposed?\r\n     */\r\n    EventDispatcher.prototype.isDisposed = function () {\r\n        return this._disposed;\r\n    };\r\n    /**\r\n     * Dispose (destroy) this object.\r\n     */\r\n    EventDispatcher.prototype.dispose = function () {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            var a = this._listeners;\r\n            this._iterating = 1;\r\n            this._listeners = null;\r\n            this._disabled = null;\r\n            try {\r\n                $array.each(a, function (x) {\r\n                    x.disposer.dispose();\r\n                });\r\n            }\r\n            finally {\r\n                this._killed = null;\r\n                this._iterating = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Checks if this particular event dispatcher has any listeners set.\r\n     *\r\n     * @return Has listeners?\r\n     */\r\n    EventDispatcher.prototype.hasListeners = function () {\r\n        return this._listeners.length !== 0;\r\n    };\r\n    /**\r\n     * Checks if this particular event dispatcher has any particular listeners set.\r\n     *\r\n     * @return Has particular event listeners?\r\n     */\r\n    EventDispatcher.prototype.hasListenersByType = function (type) {\r\n        return $array.any(this._listeners, function (x) { return (x.type === null || x.type === type) && !x.killed; });\r\n    };\r\n    /**\r\n     * Enable dispatching of events if they were previously disabled by\r\n     * `disable()`.\r\n     */\r\n    EventDispatcher.prototype.enable = function () {\r\n        this._enabled = true;\r\n    };\r\n    /**\r\n     * Disable dispatching of events until re-enabled by `enable()`.\r\n     */\r\n    EventDispatcher.prototype.disable = function () {\r\n        this._enabled = false;\r\n    };\r\n    /**\r\n     * Enable dispatching particular event, if it was disabled before by\r\n     * `disableType()`.\r\n     *\r\n     * @param type Event type\r\n     */\r\n    EventDispatcher.prototype.enableType = function (type) {\r\n        delete this._disabled[type];\r\n    };\r\n    /**\r\n     * Disable dispatching of events for a certain event type.\r\n     *\r\n     * Optionally, can set how many dispatches to skip before automatically\r\n     * re-enabling the dispatching.\r\n     *\r\n     * @param type    Event type\r\n     * @param amount  Number of event dispatches to skip\r\n     */\r\n    EventDispatcher.prototype.disableType = function (type, amount) {\r\n        if (amount === void 0) { amount = Infinity; }\r\n        this._disabled[type] = amount;\r\n    };\r\n    /**\r\n     * Removes listener from dispatcher.\r\n     *\r\n     * Will throw an exception if such listener does not exists.\r\n     *\r\n     * @param listener Listener to remove\r\n     */\r\n    EventDispatcher.prototype._removeListener = function (listener) {\r\n        if (this._iterating === 0) {\r\n            var index = this._listeners.indexOf(listener);\r\n            if (index === -1) {\r\n                throw new Error(\"Invalid state: could not remove listener\");\r\n            }\r\n            this._listeners.splice(index, 1);\r\n        }\r\n        else {\r\n            this._killed.push(listener);\r\n        }\r\n    };\r\n    /**\r\n     * Removes existing listener by certain parameters.\r\n     *\r\n     * @param once         Listener's once setting\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     */\r\n    EventDispatcher.prototype._removeExistingListener = function (once, type, callback, context) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        this._eachListener(function (info) {\r\n            if (info.once === once && // TODO is this correct ?\r\n                info.type === type &&\r\n                (callback == null || info.callback === callback) &&\r\n                info.context === context) {\r\n                info.disposer.dispose();\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Checks if dispatching for particular event type is enabled.\r\n     *\r\n     * @param type  Event type\r\n     * @return Enabled?\r\n     */\r\n    EventDispatcher.prototype.isEnabled = function (type) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        // TODO is this check correct ?\r\n        return this._enabled && this._listeners.length > 0 && this.hasListenersByType(type) && this._disabled[type] == null;\r\n    };\r\n    /**\r\n     * Checks if there's already a listener with specific parameters.\r\n     *\r\n     * @param type      Listener's type\r\n     * @param callback  Callback function\r\n     * @param context   Callback context\r\n     * @return Has listener?\r\n     */\r\n    EventDispatcher.prototype.has = function (type, callback, context) {\r\n        var index = $array.findIndex(this._listeners, function (info) {\r\n            return info.once !== true && // Ignoring \"once\" listeners\r\n                info.type === type &&\r\n                (callback == null || info.callback === callback) &&\r\n                info.context === context;\r\n        });\r\n        return index !== -1;\r\n    };\r\n    /**\r\n     * Checks whether event of the particular type should be dispatched.\r\n     *\r\n     * @param type  Event type\r\n     * @return Dispatch?\r\n     */\r\n    EventDispatcher.prototype._shouldDispatch = function (type) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        var count = this._disabled[type];\r\n        if (!$type.isNumber(count)) {\r\n            return this._enabled;\r\n        }\r\n        else {\r\n            if (count <= 1) {\r\n                delete this._disabled[type];\r\n            }\r\n            else {\r\n                --this._disabled[type];\r\n            }\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * [_eachListener description]\r\n     *\r\n     * All of this extra code is needed when a listener is removed while iterating\r\n     *\r\n     * @todo Description\r\n     * @param fn [description]\r\n     */\r\n    EventDispatcher.prototype._eachListener = function (fn) {\r\n        var _this = this;\r\n        ++this._iterating;\r\n        try {\r\n            $array.each(this._listeners, fn);\r\n        }\r\n        finally {\r\n            --this._iterating;\r\n            // TODO should this be inside or outside the finally ?\r\n            if (this._iterating === 0 && this._killed.length !== 0) {\r\n                // Remove killed listeners\r\n                $array.each(this._killed, function (killed) {\r\n                    _this._removeListener(killed);\r\n                });\r\n                this._killed.length = 0;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Dispatches an event immediately without waiting for next cycle.\r\n     *\r\n     * @param type   Event type\r\n     * @param event  Event object\r\n     * @todo automatically add in type and target properties if they are missing\r\n     */\r\n    EventDispatcher.prototype.dispatchImmediately = function (type, event) {\r\n        if (this._shouldDispatch(type)) {\r\n            // TODO check if it's faster to use an object of listeners rather than a single big array\r\n            // TODO if the function throws, maybe it should keep going ?\r\n            this._eachListener(function (listener) {\r\n                if (!listener.killed && (listener.type === null || listener.type === type)) {\r\n                    listener.dispatch(type, event);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Shelves the event to be dispatched within next update cycle.\r\n     *\r\n     * @param type   Event type\r\n     * @param event  Event object\r\n     * @todo automatically add in type and target properties if they are missing\r\n     */\r\n    EventDispatcher.prototype.dispatch = function (type, event) {\r\n        if (this._shouldDispatch(type)) {\r\n            this._eachListener(function (listener) {\r\n                // TODO check if it's faster to use an object of listeners rather than a single big array\r\n                if (!listener.killed && (listener.type === null || listener.type === type)) {\r\n                    // TODO if the function throws, maybe it should keep going ?\r\n                    // TODO dispatch during the update cycle, rather than using whenIdle\r\n                    $async.whenIdle(function () {\r\n                        if (!listener.killed) {\r\n                            listener.dispatch(type, event);\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Creates, catalogs and returns an [[EventListener]].\r\n     *\r\n     * Event listener can be disposed.\r\n     *\r\n     * @param once         Listener's once setting\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\r\n     * @param dispatch\r\n     * @returns An event listener\r\n     */\r\n    EventDispatcher.prototype._on = function (once, type, callback, context, shouldClone, dispatch) {\r\n        var _this = this;\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        this._removeExistingListener(once, type, callback, context);\r\n        var info = {\r\n            type: type,\r\n            callback: callback,\r\n            context: context,\r\n            shouldClone: shouldClone,\r\n            dispatch: dispatch,\r\n            killed: false,\r\n            once: once,\r\n            disposer: new Disposer(function () {\r\n                info.killed = true;\r\n                _this._removeListener(info);\r\n            })\r\n        };\r\n        this._listeners.push(info);\r\n        return info;\r\n    };\r\n    /**\r\n     * Creates an event listener to be invoked on **any** event.\r\n     *\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\r\n     * @returns A disposable event listener\r\n     * @todo what if `listen` is called on the same function twice ?\r\n     */\r\n    EventDispatcher.prototype.onAll = function (callback, context, shouldClone) {\r\n        if (shouldClone === void 0) { shouldClone = true; }\r\n        return this._on(false, null, callback, context, shouldClone, function (type, event) { return callback.call(context, type, event); }).disposer;\r\n    };\r\n    /**\r\n     * Creates an event listener to be invoked on a specific event type.\r\n     *\r\n     * ```TypeScript\r\n     * series.events.on(\"hidden\", (ev) => {\r\n     *   console.log(\"Series hidden: \" + ev.target.name);\r\n     * }, this);\r\n     * ```\r\n     * ```JavaScript\r\n     * series.events.on(\"hidden\", function(ev) {\r\n     *   console.log(\"Series hidden: \" + ev.target.name);\r\n     * }, this);\r\n     * ```\r\n     * ```JSON\r\n     * {\r\n     *   // ...\r\n     *   \"series\": [{\r\n     *     // ...\r\n     *     \"events\": {\r\n     *     \t\"hidden\": function(ev) {\r\n     *     \t  console.log(\"Series hidden: \" + ev.target.name);\r\n     *     \t}\r\n     *     }\r\n     *   }]\r\n     * }\r\n     * ```\r\n     *\r\n     * The above will invoke our custom event handler whenever series we put\r\n     * event on is hidden.\r\n     *\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\r\n     * @returns A disposable event listener\r\n     * @todo what if `listen` is called on the same function twice ?\r\n     */\r\n    EventDispatcher.prototype.on = function (type, callback, context, shouldClone) {\r\n        if (shouldClone === void 0) { shouldClone = true; }\r\n        return this._on(false, type, callback, context, shouldClone, function (type, event) { return callback.call(context, event); }).disposer;\r\n    };\r\n    /**\r\n     * Creates an event listener to be invoked on a specific event type once.\r\n     *\r\n     * Once the event listener is invoked, it is automatically disposed.\r\n     *\r\n     * ```TypeScript\r\n     * series.events.on(\"hidden\", (ev) => {\r\n     *   console.log(\"Series hidden: \" + ev.target.name);\r\n     * }, this);\r\n     * ```\r\n     * ```JavaScript\r\n     * series.events.on(\"hidden\", function(ev) {\r\n     *   console.log(\"Series hidden: \" + ev.target.name);\r\n     * }, this);\r\n     * ```\r\n     * ```JSON\r\n     * {\r\n     *   // ...\r\n     *   \"series\": [{\r\n     *     // ...\r\n     *     \"events\": {\r\n     *     \t\"hidden\": function(ev) {\r\n     *     \t  console.log(\"Series hidden: \" + ev.target.name);\r\n     *     \t}\r\n     *     }\r\n     *   }]\r\n     * }\r\n     * ```\r\n     *\r\n     * The above will invoke our custom event handler the first time series we\r\n     * put event on is hidden.\r\n     *\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\r\n     * @returns A disposable event listener\r\n     * @todo what if `listen` is called on the same function twice ?\r\n     */\r\n    EventDispatcher.prototype.once = function (type, callback, context, shouldClone) {\r\n        if (shouldClone === void 0) { shouldClone = true; }\r\n        var x = this._on(true, type, callback, context, shouldClone, function (type, event) {\r\n            x.disposer.dispose();\r\n            callback.call(context, event);\r\n        });\r\n        // TODO maybe this should return a different Disposer ?\r\n        return x.disposer;\r\n    };\r\n    /**\r\n     * Removes the event listener with specific parameters.\r\n     *\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     */\r\n    EventDispatcher.prototype.off = function (type, callback, context) {\r\n        this._removeExistingListener(false, type, callback, context);\r\n    };\r\n    /**\r\n     * Copies all dispatcher parameters, including listeners, from another event\r\n     * dispatcher.\r\n     *\r\n     * @param source Source event dispatcher\r\n     */\r\n    EventDispatcher.prototype.copyFrom = function (source) {\r\n        var _this = this;\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        if (source === this) {\r\n            throw new Error(\"Cannot copyFrom the same TargetedEventDispatcher\");\r\n        }\r\n        $array.each(source._listeners, function (x) {\r\n            // TODO is this correct ?\r\n            if (!x.killed && x.shouldClone) {\r\n                if (x.type === null) {\r\n                    _this.onAll(x.callback, x.context);\r\n                }\r\n                else if (x.once) {\r\n                    _this.once(x.type, x.callback, x.context);\r\n                }\r\n                else {\r\n                    _this.on(x.type, x.callback, x.context);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    return EventDispatcher;\r\n}());\r\nexport { EventDispatcher };\r\n/**\r\n * A version of the [[EventDispatcher]] that dispatches events for a specific\r\n * target object.\r\n *\r\n * @important\r\n */\r\nvar TargetedEventDispatcher = /** @class */ (function (_super) {\r\n    __extends(TargetedEventDispatcher, _super);\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param target Event dispatcher target\r\n     */\r\n    function TargetedEventDispatcher(target) {\r\n        var _this = _super.call(this) || this;\r\n        _this.target = target;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Copies all dispatcher parameters, including listeners, from another event\r\n     * dispatcher.\r\n     *\r\n     * @param source Source event dispatcher\r\n     */\r\n    TargetedEventDispatcher.prototype.copyFrom = function (source) {\r\n        var _this = this;\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        if (source === this) {\r\n            throw new Error(\"Cannot copyFrom the same TargetedEventDispatcher\");\r\n        }\r\n        $array.each(source._listeners, function (x) {\r\n            // TODO very hacky\r\n            if (x.context === source.target) {\r\n                return;\r\n            }\r\n            // TODO is this correct ?\r\n            if (!x.killed && x.shouldClone) {\r\n                if (x.type === null) {\r\n                    _this.onAll(x.callback, x.context);\r\n                }\r\n                else if (x.once) {\r\n                    _this.once(x.type, x.callback, x.context);\r\n                }\r\n                else {\r\n                    _this.on(x.type, x.callback, x.context);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    return TargetedEventDispatcher;\r\n}(EventDispatcher));\r\nexport { TargetedEventDispatcher };\r\n//# sourceMappingURL=EventDispatcher.js.map","/**\r\n * A collection of low-level async operation stuff.\r\n */\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport * as $array from \"./Array\";\r\nvar pendingFrame = false;\r\nvar nextQueue = [];\r\nvar readQueue = [];\r\nvar writeQueue = [];\r\nvar idleQueue = [];\r\nvar fps = 1000 / 60;\r\n/**\r\n * [raf description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport var raf = (typeof requestAnimationFrame === \"function\"\r\n    ? function (fn) {\r\n        requestAnimationFrame(fn);\r\n    }\r\n    : function (fn) {\r\n        setTimeout(fn, fps);\r\n    });\r\n/**\r\n * [frameLoop description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nfunction frameLoop() {\r\n    var now = Date.now();\r\n    var length = nextQueue.length;\r\n    for (var i = 0; i < length; ++i) {\r\n        nextQueue[i](now);\r\n    }\r\n    $array.shiftLeft(nextQueue, length);\r\n    for (var i = 0; i < readQueue.length; ++i) {\r\n        readQueue[i](now);\r\n    }\r\n    readQueue.length = 0;\r\n    for (var i = 0; i < writeQueue.length; ++i) {\r\n        writeQueue[i](now);\r\n    }\r\n    writeQueue.length = 0;\r\n    if (nextQueue.length === 0 && readQueue.length === 0) {\r\n        pendingFrame = false;\r\n    }\r\n    else {\r\n        raf(frameLoop);\r\n    }\r\n}\r\n/**\r\n * [pendFrame description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nfunction pendFrame() {\r\n    if (!pendingFrame) {\r\n        pendingFrame = true;\r\n        raf(frameLoop);\r\n    }\r\n}\r\n/**\r\n * [nextFrame description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param fn [description]\r\n */\r\nexport function nextFrame(fn) {\r\n    nextQueue.push(fn);\r\n    pendFrame();\r\n}\r\n/**\r\n * [readFrame description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param fn [description]\r\n */\r\nexport function readFrame(fn) {\r\n    readQueue.push(fn);\r\n    pendFrame();\r\n}\r\n/**\r\n * [writeFrame description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param fn [description]\r\n */\r\nexport function writeFrame(fn) {\r\n    writeQueue.push(fn);\r\n    pendFrame();\r\n}\r\n/**\r\n * [whenIdle description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param fn [description]\r\n */\r\nexport function whenIdle(fn) {\r\n    idleQueue.push(fn);\r\n}\r\n/**\r\n * [triggerIdle description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @todo Maybe don't trigger a callback which was added while in the middle of triggering?\r\n */\r\nexport function triggerIdle() {\r\n    var now = Date.now();\r\n    var length = idleQueue.length;\r\n    for (var i = 0; i < length; ++i) {\r\n        idleQueue.shift()(now);\r\n    }\r\n}\r\n//# sourceMappingURL=AsyncPending.js.map","/**\r\n * ============================================================================\r\n * COMPARING FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Comparing function used for ordering.\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Use localeCompare\r\n * @param a  Item 1\r\n * @param b  Item 2\r\n * @return Result\r\n */\r\nexport function order(a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a < b) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n/**\r\n * ============================================================================\r\n * OTHER FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Repeats a `string` number of times as set in `amount`.\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Make this faster\r\n * @param string  Source string\r\n * @param amount  Number of times to repeat string\r\n * @return New string\r\n */\r\nexport function repeat(string, amount) {\r\n    return new Array(amount + 1).join(string);\r\n}\r\n/**\r\n * Generates a random string `characters` length.\r\n *\r\n * @param chars  Number of characters\r\n * @return Random string\r\n */\r\nexport function random(chars) {\r\n    var res = \"\";\r\n    var choice = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n    for (var i = 0; i < chars; i++) {\r\n        res += choice.charAt(Math.floor(Math.random() * choice.length));\r\n    }\r\n    return res;\r\n}\r\n//# sourceMappingURL=String.js.map"],"sourceRoot":""}