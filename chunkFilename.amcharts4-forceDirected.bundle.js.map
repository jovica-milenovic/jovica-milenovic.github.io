{"version":3,"sources":["webpack:///./node_modules/@amcharts/amcharts4/.internal/plugins/forceDirected/ForceDirectedLink.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/plugins/forceDirected/ForceDirectedNode.js","webpack:///./node_modules/d3-quadtree/src/add.js","webpack:///./node_modules/d3-quadtree/src/cover.js","webpack:///./node_modules/d3-quadtree/src/quad.js","webpack:///./node_modules/d3-quadtree/src/x.js","webpack:///./node_modules/d3-quadtree/src/y.js","webpack:///./node_modules/d3-quadtree/src/quadtree.js","webpack:///./node_modules/d3-quadtree/src/data.js","webpack:///./node_modules/d3-quadtree/src/extent.js","webpack:///./node_modules/d3-quadtree/src/find.js","webpack:///./node_modules/d3-quadtree/src/remove.js","webpack:///./node_modules/d3-quadtree/src/root.js","webpack:///./node_modules/d3-quadtree/src/size.js","webpack:///./node_modules/d3-quadtree/src/visit.js","webpack:///./node_modules/d3-quadtree/src/visitAfter.js","webpack:///./node_modules/d3-force/src/constant.js","webpack:///./node_modules/d3-force/src/jiggle.js","webpack:///./node_modules/d3-force/src/collide.js","webpack:///./node_modules/d3-force/src/link.js","webpack:///./node_modules/d3-dispatch/src/dispatch.js","webpack:///./node_modules/d3-timer/src/timer.js","webpack:///./node_modules/d3-force/src/simulation.js","webpack:///./node_modules/d3-force/src/x.js","webpack:///./node_modules/d3-force/src/y.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/plugins/forceDirected/ForceDirectedSeries.js","webpack:///./node_modules/d3-force/src/manyBody.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/plugins/forceDirected/ForceDirectedTree.js","webpack:///./node_modules/@amcharts/amcharts4/plugins/forceDirected.js","webpack:///./node_modules/tslib/tslib.es6.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/Registry.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/utils/Array.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/utils/Object.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/Base.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/Container.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/utils/Color.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/utils/InterfaceColorSet.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/utils/Dictionary.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/utils/DOM.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/utils/Adapter.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/interaction/Interaction.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/utils/EventDispatcher.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/utils/Strings.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/utils/Animation.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/utils/Ease.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/System.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/utils/AsyncPending.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/Options.js","webpack:///./node_modules/@amcharts/amcharts4/lang/en.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/utils/Language.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/utils/Responsive.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/rendering/Paper.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/elements/Label.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/formatters/TextFormatter.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/utils/Keyboard.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/elements/RoundedRectangle.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/utils/SortedList.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/rendering/fills/LinearGradient.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/interaction/Mouse.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/utils/String.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/utils/Colors.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/formatters/DateFormatter.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/DataItem.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/elements/Button.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/rendering/fills/RadialGradient.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/rendering/filters/Filter.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/utils/Cache.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/rendering/AMElement.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/Component.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/elements/Circle.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/utils/Number.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/elements/Bullet.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/SpriteState.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/utils/Order.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/SpriteEvents.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/interaction/InteractionObjectEvents.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/elements/Modal.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/rendering/fills/Pattern.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/formatters/NumberFormatter.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/formatters/DurationFormatter.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/utils/Validatable.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/elements/Rectangle.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/data/CSVParser.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/data/DataParser.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/data/JSONParser.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/utils/ColorSet.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/elements/PopupCSS.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/elements/Popup.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/utils/Time.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/series/Series.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/utils/Browser.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/rendering/SVGContainer.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/utils/Net.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/data/DataLoader.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/elements/Scrollbar.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/elements/Tooltip.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/Legend.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/defs/SVGDefaults.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/rendering/Group.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/interaction/InteractionObject.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/interaction/InteractionKeyboardObject.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/interaction/Inertia.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/export/Export.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/data/DataSource.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/elements/PointedRectangle.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/elements/PointedShape.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/elements/ResizeButton.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/rendering/filters/DropShadowFilter.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/types/SerialChart.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/export/ExportCSS.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/export/ExportMenu.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/elements/Grip.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/charts/Chart.js","webpack:///./node_modules/@amcharts/amcharts4/.internal/core/utils/Log.js","webpack:///./node_modules/css-element-queries/src/ResizeSensor.js"],"names":["_super","ForceDirectedLink","_this","call","this","className","interfaceColors","InterfaceColorSet","fillOpacity","strokeOpacity","stroke","getFor","isMeasured","nonScalingStroke","interactionsEnabled","distance","strength","applyTheme","prototype","validate","source","target","path","x","pixelX","y","pixelY","isHidden","isHiding","hide","show","Object","defineProperty","get","_source","set","value","_disposers","push","events","on","invalidate","enumerable","configurable","_target","_adapterO","isEnabled","apply","properties","setPropertyValue","getTooltipX","getPropertyValue","Percent","x1","getTooltipY","y1","Sprite","registeredClasses","ForceDirectedNode","applyOnClones","togglable","draggable","setStateOnChildren","isActive","expandAll","paddingRadius","linksWith","Dictionary","dataItem","component","nodeDragStarted","updateSimulation","outerCircle","createChild","Circle","shouldClone","strokeWidth","bgColor","fill","states","create","scale","outerActiveState","visible","circle","hiddenState","radius","addDisposer","updateLabelSize","label","Label","horizontalCenter","verticalCenter","textAlign","textValign","adapter","add","pixelRadius","text","dsRadius","defaultState","width","height","copyFrom","setActive","children","dataItemsInvalid","childrenInited","initNode","updateNodeList","each","child","node","parentLink","dispatchVisibility","restartSimulation","linkWith","link","getKey","uid","links","parent","zIndex","nodeIndex","nodes","indexOf","childIndex","forceLinks","childLinks","setKey","unlinkWith","removeKey","Container","tree","d","isNaN","xm","ym","xp","yp","right","bottom","i","j","_root","leaf","data","x0","_x0","y0","_y0","_x1","_y1","length","_x","_y","next","Array","defaultX","defaultY","quadtree","Quadtree","NaN","addAll","undefined","leaf_copy","copy","treeProto","pop","cover","n","xz","yz","Infinity","Math","floor","z","visit","extent","arguments","_","find","x2","y2","q","x3","y3","quads","dx","dy","d2","sqrt","remove","retainer","previous","removeAll","root","size","callback","visitAfter","random","vx","vy","index","nodeById","nodeId","Error","noop","dispatch","t","test","Dispatch","parseTypenames","typenames","types","trim","split","map","name","slice","hasOwnProperty","type","c","concat","constructor","typename","T","that","args","taskHead","taskTail","timeout","interval","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","now","Date","setFrame","window","requestAnimationFrame","bind","f","setTimeout","clearNow","Timer","_call","_time","_next","timer","delay","time","restart","wake","e","timerFlush","t0","t2","t1","sleep","nap","poke","clearTimeout","clearInterval","setInterval","TypeError","stop","initialRadius","initialAngle","PI","simulation","alpha","alphaMin","alphaDecay","pow","alphaTarget","velocityDecay","forces","Map","stepper","step","event","tick","iterations","k","forEach","force","fx","fy","initializeNodes","angle","cos","sin","initializeForce","initialize","delete","closest","strengths","constant","ForceDirectedSeriesDataItem","hasChildren","List","duration","fields","_visible","event_1","dispatchImmediately","toValue","event_2","values","setValue","_node","component_1","node_1","Disposer","removeValue","addSprite","itemsFocusable","role","focusable","once","ev","readerTitle","populateString","itemReaderText","hoverable","level","color","colors","getIndex","setProperty","hiddenInLegend","collapsed","fixed","handleFixed","createLegendMarker","marker","_legendDataItem","valueLabel","Series","ForceDirectedSeries","d3forceSimulation","maxRadius","minRadius","ColorSet","manyBodyStrength","centerStrength","updateRadiuses","dataItems","updateLinksAndNodes","w","innerWidth","h","innerHeight","getMaxValue","max","cmax","validateDataItems","chart","__disabled","_dataDisposers","_maxValue","reset","min","xField","propertyFields","yField","dataContext","dataFields","processLinkWith","feedLegend","dragFixedNodes","di","_linkForce","distances","count","bias","id","l","b","jiggle","m","initializeStrength","initializeDistance","_collisionForce","radii","xi","yi","ri","ri2","prepare","quad","rj","r","linkDatum","getDistance","getStrength","disabled","distanceMin2","distanceMax2","theta2","accumulate","weight","abs","distanceMin","distanceMax","theta","nodeDragEnded","updateRadius","minSide","cursorOverStyle","Mouse","pointer","default","maxLevels","index_1","diColor","dataItemToConnect","getDataItemById","linkWithStrength","createDataItem","_nodes","createNode","_links","createLink","RoundedRectangle","cornerRadius","legendDataItem","colorOrig","property","ForceDirectedTreeDataItem","SerialChart","ForceDirectedTree","seriesContainer","layout","createSeries","legend","legendData_1","series","legendSettings","labelText","labels","template","itemLabelText","valueText","valueLabels","itemValueText","applyInternalDefaults","language","translate","getExporting","exporting","info","format","extendStatics","setPrototypeOf","__proto__","p","__extends","__","__assign","assign","s","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","rejected","result","done","then","__generator","body","g","sent","trys","ops","verb","Symbol","iterator","v","op","__values","o","__read","ar","error","__spread","Number","getType","toString","getDefault","optional","checkString","checkBoolean","checkNumber","checkObject","checkArray","isArray","checkDate","castString","castNumber","number","JSON","stringify","getTime","toBoolean","toNumber","hasValue","isNumber","converted","isString","replace","toText","isObject","toNumberOrPercent","a","getValue","getValueDefault","defaultValue","isDate","Registry","themes","loadedThemes","_uidCount","_placeholders","invalidSprites","invalidDatas","invalidRawDatas","invalidDataItems","invalidDataRange","invalidPositions","invalidLayouts","baseSprites","baseSpritesByUid","queue","getUniqueId","noBase","_map","setCache","key","ttl","getCache","eventType","getPlaceholder","addToInvalidComponents","baseId","removeFromInvalidComponents","addToInvalidSprites","sprite","removeFromInvalidSprites","addToInvalidPositions","removeFromInvalidPositions","addToInvalidLayouts","removeFromInvalidLayouts","registry","is","object","HALFPI","RADIANS","DEGREES","toNumberRange","fitToRange","round","precision","rounded","ceil","stretch","from","to","minValue","maxValue","temp","tan","left","referenceValue","reduce","prev","curr","intersect","range1","range2","start1","start","start2","end1","end","end2","invertRange","range","intersection","startMax","endMin","point1","point2","getHorizontalDistance","getVerticalDistance","getCubicCurveDistance","controlPointA","controlPointB","stepCount","prevPoint","point","getPointOnCubicCurve","getScale","startPoint1","startPoint2","initialDistance","currentDistance","getMidPoint","position","getRotation","diff","getAngle","diffX","diffY","atan2","normalizeAngle","getCenterShift","center","getBBox","points","length_1","top_1","getCommonRectangle","rectangles","minX","minY","maxX","maxY","rectangle","getPointOnQuadraticCurve","pointA","pointB","controlPoint","mt1","mt2","mt3","getCubicControlPointA","p0","p1","p2","p3","tensionX","tensionY","adjustTension","getCubicControlPointB","tension","fitAngleToRange","startAngle","endAngle","getArcRect","MAX_VALUE","bpoints","getArcPoint","fromAngle","toAngle","pt","arc","isInRectangle","getLineIntersection","pointA1","pointA2","pointB1","pointB2","array","any","fn","output","eachReverse","eachContinue","shiftLeft","last","first","insert","element","splice","setIndex","pushAll","input","found","move","toIndex","removeIndex","insertIndex","unshift","ind","toArray","has","getSortedIndex","ordering","pivot","order","findIndex","matches","shuffle","temporaryValue","randomIndex","currentIndex","used","copyProperties","stripHash","url","exec","getBaseURI","baseURI","document","loc","location","href","softCopyProperties","isNotEmpty","relativeToValue","percent","full","relativeRadiusToValue","subtractIfNegative","valueToRelative","getPixelRatio","devicePixelRatio","camelToDashed","str","toLowerCase","capitalize","arr","toUpperCase","join","escapeForRgex","splitTextByCharCount","maxChars","fullWords","rtl","res","words","word","wordLength","parts","reverseString","match","RegExp","truncateWithEllipsis","ellipsis","rtrim","ltrim","reverse","unquote","padString","len","char","getFormat","hints","cleanFormat","stripTags","plainText","numberToString","negative","parsed","digits","decimals","exponent","zeros","anyToDate","num","anyToNumber","getYearDay","date","utc","getFullYear","getWeek","day","week","getDay","getMonthWeek","firstWeek","getMonth","currentWeek","getDayFromWeek","year","weekday","setUTCFullYear","get12Hours","hours","base","getTimeZone","long","savings","wotz","toLocaleString","wtz","timeZoneName","substr","fitNumber","fitNumberRelative","gap","svgPointToSprite","sprites","sprite_1","rotation","relativeX","ex","relativeY","ey","group","pixelPaddingLeft","pixelPaddingTop","spritePointToSvg","spritePointToSprite","toSprite","svgRectToSprite","rect","spriteRectToSvg","documentPointToSvg","svgContainer","cssScale","bbox","getBoundingClientRect","top","svgPointToDocument","documentPointToSprite","htmlContainer","spritePointToDocument","cs","getComputedStyle","paddingX","parseFloat","paddingLeft","paddingRight","borderX","borderLeftWidth","borderRightWidth","clientWidth","paddingY","paddingTop","paddingBottom","borderY","borderTopWidth","borderBottomWidth","clientHeight","decimalPlaces","urlRegexp","parseUrl","protocol","separator","authority","domain","port","query","hash","serializeUrl","isRelativeUrl","joinUrl","parsedLeft","parsedRight","leftPath","rightPath","isIE","MSInputMethodContext","documentMode","dispose","_disposed","_dispose","isDisposed","MultiDisposer","disposers","MutableValueDisposer","_disposer","_value","disposer","CounterDisposer","_counter","increment","fromArray","iter","sum","sort","filter","_i","go","push2","flatten","indexed","findMap","contains","foldl","init","min2","max2","ListIterator","list","createNewItems","_create","_listCopy","clear","getFirst","returnItem","getLast","item","removeItem","isPercent","IndexedIterable","_array","_start","_end","backwards","ListGrouper","newValue","_getKey","_insert","_remove","oldValue","_keys","_groups","_sort","_a","ListDisposer","checkBounds","initial","_values","hasIndex","_sortQuicksort","low","high","_sortPartition","swap","value_a","value_b","moveValue","shift","setAll","newArray","oldArray","ListTemplate","_template","isTemplate","clone","make","out","entries","hasKey","keys","keysOrdered","eachOrdered","ord","merge","object1","object2","forceCopyProperties","copyAllProperties","BaseObject","debug","_uid","_id","_delayedMap","addDelayedMap","delayedMap","processDelayedMap","target_1","getCurrentThemes","theme","_themes","clearCache","clonedFrom","clones","removeDispose","cloneId","newObject","_clones","_className","config","processConfig","raiseCriticalError","configKey","item_1","configValue","hasProperty","asIs","createClassInstance","processAdapters","processEvents","parent_1","asFunction","processListTemplate","processOrderedTemplate","templateValue","entryKey","entryValue","listItem","processDictionaryTemplate","processList","maybeColorOrPercent","processDictionary","isReserved","configOrder","processingErrors","errors","_processingErrors","entry","priority","getConfigEntryType","itemCount","createEntryInstance","field","prop","BaseObjectEvents","_eventDispatcher","visualProperties","_bindings","_isTemplate","_isPath","_inited","_ready","_isHidden","isShowing","isStandaloneInstance","_isActive","_mask","_positionPrecision","_language","_exporting","_exportable","_bbox","invalid","positionInvalid","_measuredWidthSelf","_measuredHeightSelf","maxLeft","maxRight","maxTop","maxBottom","maxLeftSelf","maxRightSelf","maxTopSelf","maxBottomSelf","_isDragged","_isResized","_disabled","_internalDisabled","_updateDisabled","_internalDefaultsApplied","rollOutDelay","isBaseSprite","appeared","dragWhileResize","measureFailed","preventShow","cloneTooltip","paper","addGroup","_prevMeasuredWidth","_prevMeasuredHeight","_measuredWidth","_measuredHeight","_isMeasured","autoSetClassName","setClassName","requestFrame","beforeDraw","draw","afterDraw","invalidatePosition","validatePosition","attr","removeSVGAttribute","sizeChanged","measure","prevGroupTransform","transformString","moveTo","nonScaling","globalScale","showTooltipOn","updateTooltipPosition","maskRectangle","_maskRectangle","_clipElement","e_1","measureElement","_b","_c","e_1_1","return","applyFilters","showOnInit","hidden","applyMask","dispatchReady","hideTooltip","showTooltip","isReady","reinit","setState","handleGlobalScale","updateFilterScale","filters","removeFromInvalids","interactions","plugins","configField","virtualParent","exportable","_tooltip","tooltip","_showSystemTooltip","showSystemTooltip","fillModifier","strokeModifier","childNodes","removeChild","firstChild","_svgContainer","_interactionDisposer","_urlDisposer","_numberFormatter","_focusFilter","_filters","_alwaysShowDisposers","applyAccessibility","_topParent","topParent","_parent","oldParent","_tooltipContainer","tooltipContainer","_dataItem","handleAlwaysShowTooltip","handleAlwaysShow","oldDisposers","oldDisposer","_virtualParent","appendDefs","filterElement","appendDef","fill_1","modify","stroke_1","_clipPath","_paper","setPaper","_htmlContainer","_titleElement","_descriptionElement","onAll","setSVGAttributes","opacity","shapeRendering","strokeDasharray","strokeDashoffset","strokeLinecap","strokeLinejoin","tabindex","setSVGAttribute","attribute","removeAttr","classNamePrefix","addClass","uidAttr","updateClipPath","mask","createClipPath","pixelWidth","pixelHeight","width_1","height_1","removeChildNodes","appendPrimitives","removeClipPath","setElement","_element","removeElement","SVGPathElement","definedBBox","svgBBox","updateCenter","prevElementTransform","elementX","elementY","elementWidth","elementHeigth","pixelPaddingRight","pixelPaddingBottom","measuredWidth","measuredHeight","pixelPerfect","positionPrecision","svg","matrix","createSVGMatrix","createSVGPoint","p4","pt1","matrixTransform","pt2","pt3","pt4","isHover","tooltipText","tooltipHTML","insertBefore","sortChildren","insertAfter","getRelativeX","getRelativeY","getPixelX","pixel","relative","getPixelY","isDragged","inited","hitTest","ax1","ay1","ax2","ay2","bx1","by1","bx2","by2","_states","state","processState","clickable","_animations","getSvgPoint","animate","animationOptions","easing","transitionDuration","setVisibility","transitionEasing","transitTo","applyCurrentState","animation","isDown","downPointers","isFocused","transition","options","propValues","allValues","propertyName","finalValue","currentValue","option","isFinished","newFilters_1","stateFilter","newFilter","currentFilter","isInTransition","animations","isInteractive","handleOver","isRealHover","handleOut","handleDown","handleUp","handleFocus","handleBlur","current","setDisabled","hasChild","deepInvalidate","_background","numberFormatter","_dateFormatter","dateFormatter","_durationFormatter","durationFormatter","string","tags","escape","tag","getTagValue","unescape","tagName","reg","params","reg2","matches2","method","getTagValueFromObject","populateStringFrom","formatApplied","part","numberValue","dateValue","parse","durationValue","encodeURIComponent","formatParts","formatterType","setDataItem","dataContext_1","dataContext_2","dataContext2_1","fieldValue","propValue","setColorProperty","setPercentProperty","transform","length_2","bindToProperty","modifier","observe","listener","context","title","description","readerDescription","readerHidden","checked","readerChecked","controls","readerControls","live","readerLive","orientation","readerOrientation","valueNow","readerValueNow","readerValueText","labelledByIds","describedByIds","labelledBy","readerLabelledBy","describedBy","readerDescribedBy","titleElement","titleId","textContent","descriptionId","descriptionElement","keyboardOptions","mouseOptions","_interaction","interaction","getInteraction","dom","trackable","swipeable","resizable","wheelable","contextMenuDisabled","inert","_tabindex","setEventDisposer","hasFocused","focusFilter","hoverOnFocus","inertiaOptions","applyCursorStyle","handleDragStart","handleDragMove","handleDragStop","isTouchProtected","touch","originalPosition","dragStart","dragStop","hoverOptions","_outTimeout","SVGContainer","targetSprite","keepTargetHover","handleOutReal","hitOptions","originalAngle","originalScale","handleToggle","urlHandler","_baseId","setBaseId","baseSprite","urlTarget","open","swipeOptions","handleResize","svgPoint1","svgPoint2","svgMidPoint","parentPoint1","parentPoint2","spritePoint1","spritePoint2","spriteMidPoint","parentPoint","cursorOptions","style","overStyle","defaultStyle","applyCursorOverStyle","downStyle","pointerEvents","exp","_export","nonExportableSprites","modalPrefix","modal","openModal","closeModal","popups","openPopup","closeAllPopups","invalidateLayout","maxWidth","parentWidth","align","pixelMarginLeft","pixelMarginRight","setMaxWidth","prevWidth","prevHeight","maxHeight","relativeWidth","previousWidth","previousHeight","parentHeight","valign","pixelMarginTop","pixelMarginBottom","setMaxHeight","relativeHeight","event_3","percentWidth","_pixelWidth","percentHeight","_relativeHeight","_pixelHeight","minWidth","minHeight","_relativeWidth","margin","marginTop","marginRight","marginBottom","marginLeft","padding","setPath","setFill","realFill","setStroke","realStroke","hex","_rtl","showReal","_hideAnimation","kill","_showHideDisposer","hideReal","currentSprite","getVisibility","event_4","toFront","toBack","tooltipDataItem","_tooltipDataItem","_tooltipColorSource","colorSource_1","tooltipColorSource_1","tooltipColorSource","getStrokeFromObject","getFillFromObject","background","animationDuration","rgb","autoTextColor","alternative","html","currentText","tooltipPosition","globalPoint","pointTooltipTo","instantly","showInViewport","pointTo","content","message","closable","verbose","console","log","getCursorStyle","cursorDowntyle","grab","grabbing","horizontalResize","verticalResize","setShowOnInit","_showOnInitDisposer","hideInitially","appear","_plugins","_systemUpdate","skippedSprites","_systemCheckIfValidate","_systemValidatePositions","_systemValidateLayouts","_childrenByLayout","_childrenDisposers","setStateOnSprites","layoutInvalid","_absoluteWidth","_absoluteHeight","_shouldBeReady","_tapToActivate","tapTimeout","handleChildAdded","handleChildRemoved","processChild","insertKey","handleChildTransform","sortAndAdd","err","addChildren","_children","fixed_1","relative_1","calculateRelativeSize","totalRelativeWidth","totalRelativeHeight","zindexed","sortArray","idx","ai","bi","val","group_1","isCorrect","addToBack","classType","removeChildren","disposeChildren","createBackground","processBackground","validateLayout","_availableWidth","_availableHeight","allValid","childMeasuredWidth","childMeasuredHeight","arrange","maxCellWidth","minCellWidth","columnCount","contentLeft","contentRight","contentTop","contentBottom","nextX","nextY","row","column","columnWidth","rowHeight","childrenCopy","reverseOrder","fixedWidthGrid","maxColumns","getColumnWidth","childMarginLeft","childMarginRight","childMarginTop","childMarginBottom","childWidth","childHeight","childLeft","childRight","childTop","childBottom","nextColumnWidth","noneBBox","measuredContentWidth","measuredContentHeight","contentAlign","contentValign","dx_1","dy_1","mwa","mha","ddx","ddy","oldBBox","contentWidth","contentHeight","prevLeft","prevTop","prevBotttom","prevRight","dummyData","updateBackground","fitsToBounds","preloader","_preloader","changed","invalidateLabels","stateName","allReady_1","dataInvalid","setTapToActivate","handleTapToActivate","initTapTimeout","isLocalElement","handleTapToActivateDeactivation","_tapToActivateTimeout","tapToActivate","hasLicense","commercialLicense","licenses","polyline","lineTo","minStep","minPolylineStep","quadraticCurveTo","cubicCurveTo","closePath","arcTo","radiusY","segments","pax","pay","cx","cy","ax","ay","innerRadius","innerCornerRadius","crSin","innerRadiusY","cornerRadiusY","innerCornerRadiusY","crAngle","asin","crAngleY","crInnerAngle","crInnerAngleY","middleAngle","mPoint","a0","b0","c0","d0","b1","d1","arcToPoint","sweepFlag","largeArcFlag","xAxisRotation","Boolean","rectToPath","ccw","L","pathToPoints","pointCount","svgPath","setAttribute","getPointAtLength","getTotalLength","toPoints","spiralPoints","radiusStep","stepSize","degrees","pointsToPath","Color","_lightColor","_darkColor","rgba","lighten","brighten","saturate","saturation","darkColor","lightColor","cacheId","cached","isColor","castColor","toColor","_purposes","primaryButton","primaryButtonHover","primaryButtonDown","primaryButtonActive","primaryButtonText","primaryButtonStroke","secondaryButton","secondaryButtonHover","secondaryButtonDown","secondaryButtonActive","secondaryButtonText","secondaryButtonStroke","grid","alternativeBackground","alternativeText","disabledBackground","positive","purpose","setFor","DictionaryDisposer","dict","_dictionary","updateKey","insertKeyIfEmpty","ifEmpty","sortedIterator","DictionaryTemplate","rootStylesheet","SVGNS","XMLNS","XLINK","addEventListener","removeEventListener","getElement","el","getElementById","getElementsByClassName","HTMLElement","classList","currentClassName","getAttribute","removeClass","setStyle","currentStyle","defaultView","blur","createElement","appendChild","focus","fo","createElementNS","outerHTML","twrap","tnode","cloneNode","innerHTML","isElement","nodeType","cursor","parentNode","host","getRoot","owner","ownerDocument","eventTarget","composedPath","copyAttributes","attributes","fixPixelPerfect","left_1","getStylesheet","head","sheet","StyleRule","selector","styles","cssRules","_rule","deleteRule","insertRule","makeStylesheet","selectorText","_setVendorPrefixName","styleId","StyleClass","ready","readyState","listener_1","findFont","font","parentElement","findFontSize","parent_2","isElementInViewport","viewportTarget","viewportRect","documentElement","GlobalAdapter","_callbackId","_callbacks","scope","applyAll","callbacks","globalAdapter","Adapter","enableKey","disableKey","amount","_hasListenersByType","_shouldDispatch","Interaction","_globalEventsAdded","_pointerEvents","_usePointerEventsOnly","_useTouchEventsOnly","_addHoverEvents","_passiveSupported","_delayedEvents","overObjects","downObjects","trackedObjects","transformedObjects","pointers","pointerdown","pointerup","pointermove","pointercancel","pointerover","pointerout","matchMedia","navigator","userAgent","fullFF","wheel","onmousewheel","passiveSupported","addGlobalEvents","handleGlobalPointerDown","handleGlobalPointerMove","handleGlobalPointerUp","handleGlobalTouchStart","handleGlobalTouchMove","handleGlobalTouchEnd","handleGlobalKeyDown","handleGlobalKeyUp","processClickable","io","processTouchable","processContextMenu","eventDisposers","preventDefault","processHoverable","handlePointerOut","handlePointerOver","processMovable","isGlobalElement","prepElement","processTrackable","processDraggable","processSwipeable","processResizable","processWheelable","handleMouseWheel","passive","unlockWheel","lockWheel","processFocusable","handleFocusBlur","handleTouchDown","handlePointerDown","isPaused","imev","getHitOption","disableType","enableType","focusedObject","isKey","ko","getEventKey","directionY","directionX","getPointer","getPointerPoint","addBreadCrumb","handleGlobalMove","processDelayed","preventTouchAction","defaultPrevented","cancelled","handleGlobalUp","changedTouches","which","button","resetPointer","deltaX","deltaY","mod","deltaMode","getMouseOption","WheelEvent","wheelDeltaX","wheelDeltaY","handleWheel","maybePreventDefault","handleHit","lastHit","lastHitPointer","soft","overPointers","handleTrack","hasDelayedOut","old","behavior","getHoverOption","keepUntil","delayedEvent","stopInertia","applyCursorDownStyle","processDragStart","processResizeStart","restoreCursorDownStyle","swiped","handleSwipe","moved","handleInertia","processDragStop","processResizeStop","cancelable","lastEvent","swiping","handleTransform","skipCheck","startPoint","handleMoveInertia","handleResizeInertia","inertia","ref","getTrailPoint","getInertiaOption","factor","inertias","lastUpEvent","pointer2","pointer1","singlePoint","nextPointer","pointer1Moved","dragStartEvents","handleTransformMove","pointer2Moved","handleTransformResize","ctrlKey","pointerMoved","dragTarget","getDragPointer","lastDownEvent","getPointerId","identifier","pointerId","clientX","clientY","isPointerTouch","Touch","PointerEvent","pointerType","MouseEvent","startTime","track","swipeCanceled","lockDocument","unlockDocument","restoreAllStyles","lockElement","unlockElement","wheelLockEvent","elementFromPoint","local","props","setTemporaryStyle","unprepElement","restoreStyle","getSwipeOption","getKeyboardOption","setGlobalStyle","restoreGlobalStyle","tolerance","minTime","getShift","timestamp","pointerExists","exists","replacedStyles","logTouch","TouchEvent","EventDispatcher","_listeners","_killed","_iterating","_enabled","hasListeners","hasListenersByType","killed","enable","disable","_removeListener","_removeExistingListener","_eachListener","_on","off","TargetedEventDispatcher","PX","STRING","NUMBER","DATE","DURATION","PLACEHOLDER","PLACEHOLDER2","disposed","loop","getProgressNumber","progress","getProgressPercent","getProgressColor","getHybridProperty","charAt","AnimationDisposer","Animation","_loop","_pause","_delayTimeout","_isFinished","pause","id_1","stopSameAnimations","_startTime","staticOptions","childObject","updateMethod","convertedFrom","applyStaticOptions","update","resume","setProgress","skipEvent","timeProgress","delayed","killed_1","newOptions","oldOptions","linear","quadIn","quadOut","quadInOut","polyIn","polyOut","polyInOut","polyIn3","polyOut3","polyInOut3","expIn","expOut","expInOut","sinIn","sinOut","sinInOut","cubicIn","cubicOut","cubicInOut","circleIn","circleOut","circleInOut","b2","b3","b4","b5","b6","b7","b8","b9","bounceIn","bounceOut","bounceInOut","tau","amplitude","period","elasticIn","elasticOut","elasticInOut","System","_isPaused","dummyCounter","_frameRequested","updateStepDuration","reportTime","msg","invalidData","dataProvider","validateData","dataValidationProgress","validateRawData","validateDataRange","skipRangeEvent","validateLayouts","validatePositions","hasSkipped","checkIfValidate2","all0_1","softInvalidate","container","hardInvalidate","VERSION","system","pendingFrame","nextQueue","readQueue","writeQueue","idleQueue","raf","frameLoop","pendFrame","nextFrame","readFrame","writeFrame","whenIdle","triggerIdle","onlyShowOnViewport","Language","_locale","en","_defaultLocale","defaultLocale","locale","getLocale","prompt","rest","translation","translations","getTranslations","translateAny","translateEmpty","translateFunc","translateAll","isDefault","Base","Responsive","_rules","_appliedRules","_appliedTargets","_useDefault","_noStates","rules","checkRules","_component","_sizeEventDisposer","enabled","applyRules","defaultRules","useDefault","isApplied","ruleId","rule","allRules","rulesChanged","relevant","newTarget","defaultStateApplied","isApplied_1","getState","stateId","tmpId","ResponsiveBreakpoints","widthXXS","XXS","widthXS","XS","widthS","S","widthM","M","widthL","widthXL","XL","widthXXL","XXL","heightXXS","heightXS","heightS","heightM","heightL","heightXL","heightXXL","isXXS","isXS","isS","isM","isL","isXL","isXXL","maybeXXS","maybeXS","maybeS","maybeM","maybeL","maybeXL","maybeXXL","Paper","setAttributeNS","desc","createTextNode","defs","overflow","elementName","groupName","append","foreignObject","supportsForeignObject","implementation","hasFeature","ghostPaper","getGhostPaper","ghostDiv","ghostSvgContainer","isOversized","wrap","truncate","baseLineRatio","handleMaxSize","handleValidate","availableWidth","availableHeight","alignSVGText","updateCurrentText","_currentFormat","_prevStatus","getLineBBox","lineInfo","oldW","oldH","status","lines","display","getAttr","textPathElement","resetBBox","currentHeight","currentFormat","line","chunks","chunk","ignoreFormatting","currentLineHeight","firstChunk","skipTextChunks","getLineInfo","getSVGLineElement","complex","translateStyleShortcuts","tspan","getSvgElement","lineText","avgCharWidth","excessChars","addEllipsis","node_2","elementText","lastNode","lastChild","splitLines","cleanUp","restOfLine","addLineInfo","tempElement","offset","lineInfo_1","maybeHideOversized","hideUnused","lineElement","getHTMLLineElement","setStyles","pathElement","hideOversized","removeAttribute","div","wordWrap","whiteSpace","direction","selectable","addStyle","removeStyle","initLineCache","attrNS","_sourceDataItemEvents","formatter","TextFormatter","formatted","texts","wrapHtml","wrapSvg","styleSvgToHtml","getHtmlElement","quotedBlocks","noFormatting","chunks2","i2","chunk2","isImage","getTextFormatter","Keyboard","keyCode","eventKey","shiftKey","altKey","metaKey","keyboard","cornerRadiusTopLeft","cornerRadiusTopRight","cornerRadiusBottomRight","cornerRadiusBottomLeft","maxcr","crtl","crtr","crbr","crbl","tl","tr","bl","br","OrderedList","findClosestIndex","closestValue","closestDifference","closestIndex","difference","SortedList","_ordering","OrderedListTemplate","SortedListTemplate","LinearGradient","_stops","_rotation","gradientElement","gradientStop","addColor","stops","MouseCursorStyle","notAllowed","repeat","chars","choice","namedColors","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgrey","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","grey","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","hexToRgb","rgbaToRgb","parseInt","rgbToHex","pad2","rgbToRGBA","interpolate","rgb1","rgb2","getLightnessStep","getBrightnessStep","hsl","rgbToHsl","hslToRgb","hue2rgb","rgbToHsv","hsvToRgb","isLight","DateFormatter","_dateFormat","_inputDateFormat","_utc","_firstDayOfWeek","_months","_monthsShort","_weekdays","_weekdaysShort","_outputFormat","dateFormat","intlLocales","Intl","DateTimeFormat","parseFormat","timezoneOffset","setMinutes","getMinutes","getTimezoneOffset","applyFormat","fullYear","month","minutes","seconds","milliseconds","getUTCFullYear","getUTCMonth","getUTCDay","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","getDate","getHours","getSeconds","getMilliseconds","firstDayOfWeek","tz","tzh","tzm","toISOString","toUTCString","inputDateFormat","parsedIndexes","resValues","indexAdjust","year3","year2","year1","getStringList","monthLong","monthShort","yearDay","weekdayLong","weekdayShort","am","hour12Base1","hourBase0","hour12Base0","hourBase1","minute","second","millisecond","millisecondDigits","zone","iso","regex","resolveMonth","resolveShortMonth","hour","isAm","dir","UTC","invalidateSprite","_intlLocales","_timezoneOffset","DataItem","hasProperties","categories","dates","locations","workingLocations","_index","_hidden","_ignoreMinMax","_valueAnimations","_locationAnimations","noChangeValues","animation_1","_hideDisposer","setWorkingValue","animation_2","anim","getDuration","interpolationDuration","calculated","getWorkingValue","realName","workingValue","getActualWorkingValue","newDuration","handleDataItemValueChange","setCalculatedValue","handleDataItemCalculatedValueChange","interpolationEasing","handleInterpolationProgress","valueAnimation","handleDataItemWorkingValueChange","setLocation","event_5","setWorkingLocation","workingLocation","locationAnimation","event_6","handleDataItemWorkingLocationChange","setDate","event_7","handleDataItemPropertyChange","setCategory","event_8","event_9","depth","_dataContext","Button","tooltipY","iconPosition","hoverState","downState","icon","currentIcon","_label","RadialGradient","_cx","_cy","_fx","_fy","Filter","_scale","_nonScaling","filterPrimitives","filterPrimitive","updateScale","setSprite","_sprite","Cache","_storage","ownerStorage","cacheItem","touched","expired","cache","AMElement","_isDisposed","_rotationY","_rotationX","removeNode","_transformString","transfromString","rotateString","svgbbox","attributeName","attributeValue","ns","getAttrNS","getAttributeNS","getStyle","setClass","Component","_dataSources","_parseDataFrom","_currentDataSetId","rangeChangeDuration","rangeChangeEasing","parsingStepDuration","rawDataInvalid","dataRangeInvalid","sequencedInterpolation","sequencedInterpolationDelay","_addAllDataItems","_usesData","minZoomCount","maxZoomCount","_dataItems","handleDataItemAdded","handleDataItemRemoved","invalidateData","dataUsers","handleDataUserAdded","maxZoomDeclination","invalidateDataItems","processDataItem","hasSomeValues_1","fieldName","mainDataSet","rawDataItem","childDataItem","updateDataItem","validateDataElements","endIndex","startIndex","validateDataElement","addData","removeCount","removeData","dataUser","dataItem_1","invalidateDataUsers","invalidateDataRange","_prevStartIndex","_prevEndIndex","rangeChangeUpdate","appendDataItems","sliceData","_workingStartIndex","_workingEndIndex","invalidateRawData","disposeData","_startIndex","_endIndex","_dataSets","getDataItem","_data","counter","_loop_1","this_1","dataUserDataItem","state_1","setData","getDataSource","setDataSourceEvents","dataSourceDateFields","dataSourceNumberFields","loadData","load","populateDataSourceFields","targetList","ds","incremental","keepCount","updateCurrentData","_responsive","zoom","declination","maxZoomFactor","_finalStart","_finalEnd","minZoomFactor","rangeChangeAnimation","zoomToIndexes","indexToPosition","dataSets","setDataSet","_updateDataItemIndexes","bindDataField","invalidateProcessedData","resetProcessedRange","_dataUsers","_exportData","menu","handleDataUpdated","arg","_showOnInitDisposer2","Bullet","tooltipX","copyToLegendMarker","SpriteState","spriteValue","or","SpriteEventDispatcher","_interactionEvents","_dispatchSpriteEvent","_dispatchSpritePointEvent","spritePoint","svgPoint","_addInteractionObjectEvent","InteractionObjectEventDispatcher","_domEvents","_addDOMEvent","callback_1","_dispatchKeyboardEvent","Modal","showCurtain","Pattern","_elements","patternUnits","backgroundFill","backgroundOpacity","patternElement","rotationX","rotationY","addElement","elements","NumberFormatter","_negativeBase","_numberFormat","_smallNumberThreshold","NumberFormat","details","zero","partFormat","mods","modSpacing","thousands","active","prefix","suffix","a_1","applyPrefix","bytePrefixes","a_2","smallNumberThreshold","smallNumberPrefixes","bigNumberPrefixes","ol","toPrecision","toExponential","ints","ip","intsr","decs","prefixes","newvalue","applied","_bigNumberPrefixes","_smallNumberPrefixes","_bytePrefixes","outputFormat","DurationFormatter","_baseUnit","_unitValues","_unitAliases","baseUnit","durationFormat","dirs","absolute","tstamp","toTimeStamp","unit","toTimeUnit","code","maxUnit","getValueUnit","durationFormats","currentUnit","ms","_durationFormat","_durationFormats","Validatable","_validateDisposer","Rectangle","separators","CSVParser","contentType","delimiter","skipRows","skipEmpty","useColumnNames","isCSV","getDelimiterFromData","sep","columns","lineColums","csv","col","CSVToArray","empty","emptyAs","numbers","parsableNumbers","parsableDates","cols","dataPoint","maybeToEmpty","maybeToNumber","maybeToDate","objPattern","arrData","arrMatches","strMatchedDelimiter","strMatchedValue","DataParser","numberFields","dateFields","JSONParser","isJSON","_list","_currentStep","_currentPass","baseColor","stepOptions","passOptions","minColors","minLightness","maxLightness","reuse","generate","getReusableColor","tmpstep","curColor","currentColor","hueStep","hue","lightness","hues","applyStepOptions","pass","Popup","_IOs","_content","_title","_classPrefix","_defaultStyles","_showCurtain","_draggable","_align","_verticalAlign","_shift","_tempShift","_readerTitle","_closable","_cssLoaded","_fitTo","_sized","wrapper","curtain","positionElement","close","releasePointers","forceResize","toStyle","verticalAlign","setupDragging","header","createContentElement","getClassNames","wrapperClass","classPrefix","headerClass","titleClass","contentClass","insideClass","curtainClass","closeClass","classNames","disablePointers","visibility","defaultStyles","loadDefaultCSS","createCurtainElement","applyEvents","applyReaderSettings","_left","_right","_top","_bottom","fg","bg","abg","_spriteInteractionsEnabled","classPrefixRaw","timeUnitDurations","getNextUnit","checkChange","dateOne","dateTwo","timeZoneOffset1","timeZoneOffset2","setUTCMinutes","nextUnit","timeZoneOffset","setUTCDate","setUTCSeconds","setUTCMilliseconds","setUTCHours","setUTCMonth","wday","newTimeZoneOffset","firstDateOfWeek","firstDate","unitCount","setTime","weekDay","SeriesDataItem","_bullets","bullets","_showBullets","_tmin","_tmax","_smin","_smax","dataItemsByAxis","skipFocusThreshold","_itemReaderTextChanged","calculatePercent","autoDispose","simplifiedProcessing","axisRanges","processAxisRange","minBulletDistance","mainContainer","bulletsContainer","_chart","positionBullet","bullet","processBullet","removeBullet","eachBullet","processValues","getFirstValue","getAbsoluteFirstValue","working","count_1","sum_1","absoluteSum_1","low_1","high_1","open_1","close_1","previous_1","first_1","absoluteFirst_1","startIndex_1","dataItem_2","prevValue","_loop_2","dataItem_3","ksum","zeroItem_1","dataItem_4","axisRange","updateTooltipBounds","setBounds","shouldCreateBullet","bulletTemplate","disabledField","currentDataItem","readerText_1","isDynamic","itemWidth","itemHeight","createMask","rangesContainer","contents","isRange","getAxisField","axis","showTooltipAtPosition","xPosition","yPosition","readerText","_itemReaderText","itemContainer","updateLegendValue","notRange","_heatRules","heatRule","dataField_1","dataField","min_1","max_1","seriesDataItem_1","property_1","foundSprite","anySprite","anyChild","foundSprite_1","ruleTarget","propertyField","heatRules","listitem","isSafari","vendor","isInternetExplorer","svgContainers","htmlElement","ghost","autoResize","resizeSensor","detach","checkTransform","_container","_modal","_popups","popupTemplate","popup","success","isBlob","responseType","xhr","XMLHttpRequest","onload","blob_1","response","blob","reader","FileReader","onerror","readAsText","getResponseHeader","responseText","withCredentials","requestHeaders","setRequestHeader","send","DataLoader","sources","promises","requestOptions","all","processData","catch","getParserByType","parser","getParserByData","dataLoader","Scrollbar","_previousStart","_previousEnd","_prevStart","_prevEnd","_isBusy","_skipRangeEvents","updateWhileMoving","animationEasing","startGrip","endGrip","updateThumb","thumb","dispatchRangeChange","hideGrips","updateSize","updateExtremes","handleBgHit","makeBusy","thumbX","_thumbAnimation","thumbY","makeUnbusy","_thumb","_unbusyTimeout","stopAnimations","_zoomAnimation","makeUnbusyReal","_usingGrip","innerWidth_1","innerHeight_1","getPosition","__start","__end","skipRangeEvents","fixRange","updateByOrientation","_startGrip","processGrip","_endGrip","handleGripDrag","cursorDownStyle","handleThumbPosition","handleDoubleClick","newStart","newEnd","zoomAnimation","innerWidth_2","innerHeight_2","_hideGrips","_overDisposer","_outDisposer","Tooltip","_boundingRect","_pointTo","fitPointerToBounds","_verticalOrientation","pointerLength","pointerBaseWidth","dropShadow","drawBackground","pointerOrientation","handleVisibility","textX","textY","boundingRect","textW","textH","documentWidth","offsetWidth","offsetHeight","textWidth","textHeight","bgWidth","bgX","bgHeight","bgY","boundX1","boundX2","boundY1","boundY2","pointerX","pointerY","_animation","oldRect","_boundingContainer","updateBounds","boundingContainer","LegendDataItem","childrenCreated","label_1","_valueLabel","valueLabel_1","_itemContainer","itemContainer_1","itemContainers","toggleDataItem","focusedItem","visibilitychanged","_marker","marker_1","markers","LegendSettings","createMarker","Legend","disabledColor","activeState","handleScrollbar","useDefaultMarker","maxLabelWidth","maxValueLabelWidth","maxMarkerWidth","maxAdjustedLabelWidth","trueMaxWidth","scrollbar","scrollable","updateMasks","_mouseWheelDisposer","delta","SVGDefaults","Group","childNode","InteractionObject","_clickable","_contextMenuDisabled","_hoverable","_trackable","_swipeable","_resizable","_wheelable","_inert","_isHover","_isHoverByTouch","_isDown","_isFocused","_isTouchProtected","_inertiaOptions","_hitOptions","_hoverOptions","_swipeOptions","_keyboardOptions","_mouseOptions","_cursorOptions","isHoverByTouch","_overPointers","_downPointers","_focusable","_originalPosition","_originalScale","_originalAngle","InteractionKeyboardObject","keyboardEvent","_startedOn","speed","accelleration","accellerationDelay","accelleratedMs","accellerationFactor","Inertia","handleMove","pdfmakePromise","fontFamilySrcRegexp","getCssRules","loadStylesheet","doc","e_2","eachStylesheet","topUrl","CSSRule","IMPORT_RULE","eachStylesheets","iframe","doc_1","src","contentDocument","styleSheets","Export","_formatOptions","_extraSprites","_validateSprites","_dynamicDataFields","_removedObjects","_hiddenObjects","_objectsAlreadyHidden","_filePrefix","useWebFonts","useRetina","useSimplifiedExport","timeoutDelay","quality","fontSize","imageFormat","addURL","addColumnNames","indent","useLocale","printMethod","formatOptions","_menu","branch","unsupported","typeSupported","export","_disablePointers","_releasePointers","obj","supported","_hasData","print","_getFunction","getImage","getSVG","getPDF","getExcel","getCSV","getJSON","getHTML","getPrint","func","handleCustom","showPreloader","hideTimeout","_timeoutTimeout","showTimeout","hideNonExportableSprites","restoreNonExportableSprites","hidePreloader","download","filePrefix","callbackTarget","getFontFamilies","DOMURL","blobs","getDOMURL","FONT_FACE_RULE","cssText_1","cssText","urls","after","fullUrl","url_1","e_3","msSaveOrOpenBlob","createObjectURL","readAsDataURL","includeExtras","prehidden","canvas","uri","e_4","getFormatOptions","awaitValidSprites","simplifiedImageExport","getCanvas","addExtras","toDataURL","getContentType","disposeCanvas","stack","warn","getImageAdvanced","advanced","middleLeft_1","middleTop_1","middleWidth_1","middleHeight_1","extraRight_1","extraBottom_1","extras","newCanvas","ctx_1","right_1","bottom_1","extraSprites","extraSprite","extra","extraCanvas","extraWidth","extraHeight","getCanvasAdvanced","crop","getDisposableCanvas","getContext","backgroundColor","findBackgroundColor","fillStyle","fillRect","drawImage","pixelRatio","ctx","img","setTransform","fonts","imagesToDataURI","prepForeignObjects","normalizeSVG","serializeElement","Blob","loadNewImage","revokeObjectURL","restoreRemovedObjects","canvg","useCORS","ignoreDimensions","scaleWidth","scaleHeight","images","image","querySelectorAll","svgToDataURI","imageToDataURI","objects","temporarilyRemoveObject","keepTainted","charset","btoa","placeholder","crossOrigin","currentHref","Image","onabort","self","URL","webkitURL","dimParams","styleParams","XMLSerializer","serializeToString","pdfmake","defaultMargins","_d","pageSize","pageOrientation","pageMargins","bold","fit","getPageSizeFit","getPDFData","table","createPdf","getDataUrl","dataRow","dataValue","convertToSpecialFormat","getPDFDataRow","headerRows","items","convertEmptyValue","margins","newMargins","fitSize","A0","A1","A2","A3","A4","A5","A6","A7","A8","A9","A10","B0","B1","B2","B3","B4","B5","B6","B7","B8","B9","B10","C0","C1","C2","C3","C4","C5","C6","C7","C8","C9","C10","RA0","RA1","RA2","RA3","RA4","SRA0","SRA1","SRA2","SRA3","SRA4","EXECUTIVE","FOLIO","LEGAL","LETTER","TABLOID","XLSX","wbOptions","sheetName","wb","xlsx","bookType","bookSST","normalizeExcelSheetName","SheetNames","Sheets","getExcelRow","utils","aoa_to_sheet","write","getCSVRow","forceQuotes","search","tableClass","getHTMLRow","headerRow","rowClass","charCodeAt","useTag","cellClass","sourceData","json","newValue_1","keepOriginal","isDateField","isDurationField","isNumberField","numberFormat","useTimestamps","fileName","link_1","decoded","blob_2","url_2","charCode","url_3","idoc","msBlobDownloadSupport","decodeURIComponent","msSaveBlob","atob","Uint8Array","blobDownloadSupport","click","linkDownloadSupport","legacyIE","showModal","execCommand","downloadSupport","getElementsByTagName","printViaCSS","printViaIframe","scroll","originalTitle","scrollTop","clipPath","MSStream","contentWindow","validateSprites","_dataFields","generateDataFields","_dateFields","_numberFields","_durationFields","durationFields","_backgroundColor","hideModal","_canvg","vfs_fonts","global","pdfMake","vfs","_pdfmake","_xlsx","setFormatOptions","DataSource","_requestOptions","_incremental","_incrementalParams","_keepCount","_updateCurrentData","lastLoad","disableCache","timestampUrl","_url","addUrlParams","incrementalParams","_parser","_reloadFrequency","_reloadDisposer","_reloadTimeout","reloadFrequency","PointedRectangle","cr","stemX","stemY","bwh","lineT","lineR","lineB","lineL","arcTR","arcBR","arcBL","arcTL","PointedShape","ResizeButton","DropShadowFilter","feGaussianBlur","feOffset","feFlood","feComposite","operator","feMerge","SerialChartDataItem","chartContainer","patterns","_series","handleSeriesAdded","handleSeriesRemoved","handleSeriesAdded2","ExportMenu","closeDelay","closeOnClick","_menuTag","_itemTag","_labelTag","_iconTag","_ignoreNextClose","_items","getMenuItemClass","createMenuElement","drawBranch","menuElement","moveSelection","ascendants","createItemElement","createIconElement","createSvgElement","createLabelElement","readerLabel","getReaderLabel","typeClickable","submenu_1","getSubMenu","selectBranch","setFocus","delayUnselectBranch","local_level","submenu","hideBranch","menuTag","itemTag","labelTag","iconTag","DOMParser","parseFromString","hasSubMenu","newPrefix","colorSet","_currentSelection","setBlur","closeTimeout","ascendant","unselectBranch","simple","newSelection","getPrevSibling","getNextSibling","getParentItem","getSiblings","siblings","showBranch","Grip","autoHideDelay","_autoHideTimeout","ChartDataItem","Chart","_legend","titles","chartAndLegendContainer","processTitle","updateReaderTitleReferences","fixLayout","titleIds_1","setLegend","_dragGrip","grip_1","messages","globalWindow","Function","mozRequestAnimationFrame","webkitRequestAnimationFrame","forEachElement","elementsType","isCollectionTyped","jQuery","Elements","getElementSize","ResizeSensor","EventQueue","sizeInfo","newQueue","attachResizeEvent","resized","resizedAttached","styleChild","expand","expandChild","shrink","shrinkChild","dirty","rafId","computedStyle","lastWidth","lastHeight","initialHiddenCheck","lastAnimationFrame","scrollLeft","resetSensor","onResized","onScroll","addEvent","cb","attachEvent","elem","MutationObserver","observer","mutations","addedNodes","childList","subtree"],"mappings":"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","file":"chunkFilename.amcharts4-forceDirected.bundle.js","sourcesContent":["/**\r\n * ForceDirectedLink module.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\nimport { percent, Percent } from \"../../core/utils/Percent\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * A class that builds links between [[ForceDirectedNode]] elements.\r\n *\r\n * @see {@link IForceDirectedLinkEvents} for a list of available events\r\n * @see {@link IForceDirectedLinkAdapters} for a list of available Adapters\r\n * @since 4.3.8\r\n * @important\r\n */\r\nvar ForceDirectedLink = /** @class */ (function (_super) {\r\n    __extends(ForceDirectedLink, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ForceDirectedLink() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"ForceDirectedLink\";\r\n        var interfaceColors = new InterfaceColorSet();\r\n        _this.fillOpacity = 0;\r\n        _this.strokeOpacity = 0.5;\r\n        _this.stroke = interfaceColors.getFor(\"grid\");\r\n        _this.isMeasured = false;\r\n        _this.nonScalingStroke = true;\r\n        _this.interactionsEnabled = false;\r\n        _this.distance = 1.5;\r\n        _this.strength = 1;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Validates element:\r\n     * * Triggers events\r\n     * * Redraws the element\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    ForceDirectedLink.prototype.validate = function () {\r\n        _super.prototype.validate.call(this);\r\n        var source = this.source;\r\n        var target = this.target;\r\n        if (source && target) {\r\n            this.path = $path.moveTo({ x: source.pixelX, y: source.pixelY }) + $path.lineTo({ x: target.pixelX, y: target.pixelY });\r\n            if (source.isHidden || target.isHidden || source.isHiding || target.isHiding) {\r\n                this.hide();\r\n            }\r\n            else {\r\n                this.show();\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(ForceDirectedLink.prototype, \"source\", {\r\n        /**\r\n         * @return Source node\r\n         */\r\n        get: function () {\r\n            return this._source;\r\n        },\r\n        /**\r\n         * Source node - a node link starts from.\r\n         *\r\n         * @param  value  Source node\r\n         */\r\n        set: function (value) {\r\n            if (value) {\r\n                this._source = value;\r\n                this._disposers.push(value.events.on(\"positionchanged\", this.invalidate, this, false));\r\n                this._disposers.push(value.events.on(\"validated\", this.invalidate, this, false));\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedLink.prototype, \"target\", {\r\n        /**\r\n         * @return Target node\r\n         */\r\n        get: function () {\r\n            return this._target;\r\n        },\r\n        /**\r\n         * Target node - a node link ends at.\r\n         *\r\n         * @param  value  Target node\r\n         */\r\n        set: function (value) {\r\n            if (value) {\r\n                this._target = value;\r\n                this._disposers.push(value.events.on(\"positionchanged\", this.invalidate, this, false));\r\n                this._disposers.push(value.events.on(\"validated\", this.invalidate, this, false));\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedLink.prototype, \"distance\", {\r\n        /**\r\n         * @return Distance\r\n         */\r\n        get: function () {\r\n            if (this._adapterO) {\r\n                if (this._adapterO.isEnabled(\"distance\")) {\r\n                    return this._adapterO.apply(\"distance\", this.properties.distance);\r\n                }\r\n            }\r\n            return this.properties.distance;\r\n        },\r\n        /**\r\n         * Distance between centers of source and target nodes.\r\n         *\r\n         * This is relative to the radii to sum of both source and target nodes.\r\n         *\r\n         * E.g. if this would be set to `1` both nodes would be touching each other.\r\n         *\r\n         * @default 1.5\r\n         * @param  value  Distance\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"distance\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedLink.prototype, \"strength\", {\r\n        /**\r\n         * @return Strength\r\n         */\r\n        get: function () {\r\n            if (this._adapterO) {\r\n                if (this._adapterO.isEnabled(\"strength\")) {\r\n                    return this._adapterO.apply(\"strength\", this.properties.strength);\r\n                }\r\n            }\r\n            return this.properties.strength;\r\n        },\r\n        /**\r\n         * Relative \"strength\" of the traction between linked nodes.\r\n         *\r\n         * Available values: 0 to XX.\r\n         *\r\n         * The bigger the number, the more rigid the link and the less it will\r\n         * stretch when node is dragged.\r\n         *\r\n         * Carefully with very big numbers: nodes and links might start behaving\r\n         * quite \"nerviously\".\r\n         *\r\n         * @default 1\r\n         * @param  value  Strength\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"strength\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * X coordinate for the slice tooltip.\r\n     *\r\n     * @ignore\r\n     * @return X\r\n     */\r\n    ForceDirectedLink.prototype.getTooltipX = function () {\r\n        var x = this.getPropertyValue(\"tooltipX\");\r\n        if (!(x instanceof Percent)) {\r\n            x = percent(50);\r\n        }\r\n        if (x instanceof Percent) {\r\n            var source = this.source;\r\n            var target = this.target;\r\n            if (source && target) {\r\n                var x1 = source.pixelX;\r\n                var x2 = target.pixelX;\r\n                return x1 + (x2 - x1) * x.value;\r\n            }\r\n        }\r\n        return 0;\r\n    };\r\n    /**\r\n     * Y coordinate for the slice tooltip.\r\n     *\r\n     * @ignore\r\n     * @return Y\r\n     */\r\n    ForceDirectedLink.prototype.getTooltipY = function () {\r\n        var y = this.getPropertyValue(\"tooltipY\");\r\n        if (!(y instanceof Percent)) {\r\n            y = percent(50);\r\n        }\r\n        if (y instanceof Percent) {\r\n            var source = this.source;\r\n            var target = this.target;\r\n            if (source && target) {\r\n                var y1 = source.pixelY;\r\n                var y2 = target.pixelY;\r\n                return y1 + (y2 - y1) * y.value;\r\n            }\r\n        }\r\n        return 0;\r\n    };\r\n    return ForceDirectedLink;\r\n}(Sprite));\r\nexport { ForceDirectedLink };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ForceDirectedLink\"] = ForceDirectedLink;\r\n//# sourceMappingURL=ForceDirectedLink.js.map","/**\r\n * Module that defines everything related to building ForceDirectedNodes.\r\n *\r\n * It is a container which has ForceDirectedNode element which is a RoundedRectangle.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container } from \"../../core/Container\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { Circle } from \"../../core/elements/Circle\";\r\nimport { Label } from \"../../core/elements/Label\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { Dictionary, DictionaryDisposer } from \"../../core/utils/Dictionary\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Class used to creates [[ForceDirectedNode]] elements (circles).\r\n *\r\n * @see {@link IForceDirectedNodeEvents} for a list of available events\r\n * @see {@link IForceDirectedNodeAdapters} for a list of available Adapters\r\n * @since 4.3.8\r\n * @important\r\n */\r\nvar ForceDirectedNode = /** @class */ (function (_super) {\r\n    __extends(ForceDirectedNode, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ForceDirectedNode() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"ForceDirectedNode\";\r\n        //this.isMeasured = true; // for correct position of the tooltip\r\n        _this.applyOnClones = true;\r\n        _this.togglable = true;\r\n        _this.draggable = true;\r\n        _this.setStateOnChildren = true;\r\n        _this.isActive = false;\r\n        _this.expandAll = true;\r\n        _this.paddingRadius = 0;\r\n        _this.linksWith = new Dictionary();\r\n        _this._disposers.push(new DictionaryDisposer(_this.linksWith));\r\n        _this.events.on(\"dragstart\", function () {\r\n            if (_this.dataItem.component) {\r\n                _this.dataItem.component.nodeDragStarted();\r\n            }\r\n        }, _this, false);\r\n        _this.events.on(\"drag\", function () {\r\n            _this.updateSimulation();\r\n        }, _this, false);\r\n        var outerCircle = _this.createChild(Circle);\r\n        outerCircle.shouldClone = false;\r\n        outerCircle.strokeWidth = 2;\r\n        var bgColor = new InterfaceColorSet().getFor(\"background\");\r\n        outerCircle.fill = bgColor;\r\n        _this.outerCircle = outerCircle;\r\n        var hoverState = outerCircle.states.create(\"hover\");\r\n        hoverState.properties.scale = 1.1;\r\n        var outerActiveState = outerCircle.states.create(\"active\");\r\n        outerActiveState.properties.scale = 1.1;\r\n        outerActiveState.properties.visible = true;\r\n        var activeHoverState = outerCircle.states.create(\"hoverActive\");\r\n        activeHoverState.properties.scale = 1;\r\n        var circle = _this.createChild(Circle);\r\n        var activeState = circle.states.create(\"active\");\r\n        activeState.properties.visible = true;\r\n        circle.shouldClone = false;\r\n        circle.interactionsEnabled = false;\r\n        circle.hiddenState.properties.radius = 0.01;\r\n        circle.events.on(\"validated\", _this.updateSimulation, _this, false);\r\n        circle.hiddenState.properties.visible = true;\r\n        _this.circle = circle;\r\n        _this.addDisposer(circle.events.on(\"validated\", _this.updateLabelSize, _this, false));\r\n        _this._disposers.push(_this.circle);\r\n        var label = _this.createChild(Label);\r\n        label.shouldClone = false;\r\n        label.horizontalCenter = \"middle\";\r\n        label.verticalCenter = \"middle\";\r\n        label.fill = bgColor;\r\n        label.strokeOpacity = 0;\r\n        label.interactionsEnabled = false;\r\n        label.textAlign = \"middle\";\r\n        label.textValign = \"middle\";\r\n        _this.label = label;\r\n        _this.adapter.add(\"tooltipY\", function (y, target) {\r\n            return -target.circle.pixelRadius;\r\n        });\r\n        return _this;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    ForceDirectedNode.prototype.updateLabelSize = function () {\r\n        if (this.label.text) {\r\n            var circle = this.circle;\r\n            var radius = circle.pixelRadius;\r\n            var ds = circle.defaultState;\r\n            var dsRadius = ds.properties.radius;\r\n            if ($type.isNumber(dsRadius)) {\r\n                radius = dsRadius;\r\n            }\r\n            this.label.width = 2 * radius;\r\n            this.label.height = 2 * radius;\r\n        }\r\n    };\r\n    /**\r\n     * Copies all parameters from another [[ForceDirectedNode]].\r\n     *\r\n     * @param source Source ForceDirectedNode\r\n     */\r\n    ForceDirectedNode.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        if (this.circle) {\r\n            this.circle.copyFrom(source.circle);\r\n        }\r\n        if (this.label) {\r\n            this.label.copyFrom(source.label);\r\n        }\r\n        if (this.outerCircle) {\r\n            this.outerCircle.copyFrom(source.outerCircle);\r\n        }\r\n    };\r\n    /**\r\n     * Sets node as \"active\" (expanded).\r\n     *\r\n     * @ignore\r\n     * @param  value  Active or not?\r\n     */\r\n    ForceDirectedNode.prototype.setActive = function (value) {\r\n        var _this = this;\r\n        _super.prototype.setActive.call(this, value);\r\n        var dataItem = this.dataItem;\r\n        if (dataItem) {\r\n            var children = dataItem.children;\r\n            var component = dataItem.component;\r\n            if (!component.dataItemsInvalid) {\r\n                if (value && children && !dataItem.childrenInited) {\r\n                    component.initNode(dataItem);\r\n                    component.updateNodeList();\r\n                }\r\n                if (value) {\r\n                    this.show();\r\n                    if (children) {\r\n                        children.each(function (child) {\r\n                            child.node.show();\r\n                            child.node.interactionsEnabled = true;\r\n                            if (child.parentLink) {\r\n                                child.parentLink.show();\r\n                            }\r\n                            if (_this.expandAll) {\r\n                                child.node.isActive = true;\r\n                            }\r\n                            else {\r\n                                child.node.isActive = false;\r\n                                //child.node.hide(0)\r\n                            }\r\n                        });\r\n                    }\r\n                    dataItem.dispatchVisibility(true);\r\n                }\r\n                else {\r\n                    if (children) {\r\n                        children.each(function (child) {\r\n                            if (child.parentLink) {\r\n                                child.parentLink.hide();\r\n                            }\r\n                            child.node.isActive = false;\r\n                            child.node.interactionsEnabled = false;\r\n                            child.node.hide();\r\n                        });\r\n                    }\r\n                    dataItem.dispatchVisibility(false);\r\n                }\r\n            }\r\n        }\r\n        this.updateSimulation();\r\n    };\r\n    /**\r\n     * @ignore\r\n     * @todo description\r\n     */\r\n    ForceDirectedNode.prototype.updateSimulation = function () {\r\n        var dataItem = this.dataItem;\r\n        if (dataItem && dataItem.component) {\r\n            dataItem.component.restartSimulation();\r\n        }\r\n    };\r\n    Object.defineProperty(ForceDirectedNode.prototype, \"expandAll\", {\r\n        /**\r\n         * @return Expand all?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"expandAll\");\r\n        },\r\n        /**\r\n         * If set to `true` (default) toggling a node on will automatically expand\r\n         * all nodes across the whole tree (all levels) of its descendants.\r\n         *\r\n         * Setting to `false` will only expand immediate children (one level).\r\n         *\r\n         * @default true\r\n         * @since 4.4.8\r\n         * @param  value  Expand all?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"expandAll\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a new link between two nodes.\r\n     *\r\n     * Use this method to dynamically add links without requiring to revalidate\r\n     * whole of the data.\r\n     *\r\n     * @since 4.4.8\r\n     * @param   node      Target node\r\n     * @param   strength  Link strength\r\n     * @return            New link\r\n     */\r\n    ForceDirectedNode.prototype.linkWith = function (node, strength) {\r\n        var link = this.linksWith.getKey(node.uid);\r\n        if (!link) {\r\n            link = node.linksWith.getKey(this.uid);\r\n        }\r\n        if (!link) {\r\n            var dataItem = this.dataItem;\r\n            var component = dataItem.component;\r\n            link = component.links.create();\r\n            link.parent = component;\r\n            link.zIndex = -1;\r\n            link.source = this;\r\n            link.target = node;\r\n            link.stroke = dataItem.node.fill;\r\n            link.dataItem = node.dataItem;\r\n            if ($type.isNumber(strength)) {\r\n                link.strength = strength;\r\n            }\r\n            var nodeIndex = component.nodes.indexOf(dataItem.node);\r\n            var childIndex = component.nodes.indexOf(node);\r\n            component.forceLinks.push({ source: nodeIndex, target: childIndex });\r\n            component.updateNodeList();\r\n            dataItem.childLinks.push(link);\r\n            this.linksWith.setKey(node.uid, link);\r\n        }\r\n        return link;\r\n    };\r\n    /**\r\n     * Removes a link between two nodes.\r\n     *\r\n     * @since 4.4.8\r\n     * @param  node  Target node\r\n     */\r\n    ForceDirectedNode.prototype.unlinkWith = function (node) {\r\n        this.linksWith.removeKey(node.uid);\r\n    };\r\n    Object.defineProperty(ForceDirectedNode.prototype, \"paddingRadius\", {\r\n        /**\r\n         * @return Padding radius\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"paddingRadius\");\r\n        },\r\n        /**\r\n         * Padding of the nodes, in pixels.\r\n         *\r\n         * @since 4.6.7\r\n         * @default 0\r\n         * @param  value  padding radius\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"paddingRadius\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ForceDirectedNode;\r\n}(Container));\r\nexport { ForceDirectedNode };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ForceDirectedNode\"] = ForceDirectedNode;\r\n//# sourceMappingURL=ForceDirectedNode.js.map","export default function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nexport function addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, abort.\n  if (x0 > x1 || y0 > y1) return this;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n","export default function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    while (x0 > x || x >= x1 || y0 > y || y >= y1) {\n      i = (y < y0) << 1 | (x < x0);\n      parent = new Array(4), parent[i] = node, node = parent, z *= 2;\n      switch (i) {\n        case 0: x1 = x0 + z, y1 = y0 + z; break;\n        case 1: x0 = x1 - z, y1 = y0 + z; break;\n        case 2: x1 = x0 + z, y0 = y1 - z; break;\n        case 3: x0 = x1 - z, y0 = y1 - z; break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n","export default function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n","export function defaultX(d) {\n  return d[0];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n","export function defaultY(d) {\n  return d[1];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n","import tree_add, {addAll as tree_addAll} from \"./add.js\";\nimport tree_cover from \"./cover.js\";\nimport tree_data from \"./data.js\";\nimport tree_extent from \"./extent.js\";\nimport tree_find from \"./find.js\";\nimport tree_remove, {removeAll as tree_removeAll} from \"./remove.js\";\nimport tree_root from \"./root.js\";\nimport tree_size from \"./size.js\";\nimport tree_visit from \"./visit.js\";\nimport tree_visitAfter from \"./visitAfter.js\";\nimport tree_x, {defaultX} from \"./x.js\";\nimport tree_y, {defaultY} from \"./y.js\";\n\nexport default function quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = tree_addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = tree_removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n","export default function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n","export default function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n","import Quad from \"./quad.js\";\n\nexport default function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n","export default function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nexport function removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n","export default function() {\n  return this._root;\n}\n","export default function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n","import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n","import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function() {\n  return (Math.random() - 0.5) * 1e-6;\n}\n","import {quadtree} from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nexport default function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nexport default function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = new Map(nodes.map((d, i) => [id(d, i, nodes), d])),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}\n","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _) || /[\\s.]/.test(t)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer} from \"d3-timer\";\n\nexport function x(d) {\n  return d.x;\n}\n\nexport function y(d) {\n  return d.y;\n}\n\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nexport default function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = new Map(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick(iterations) {\n    var i, n = nodes.length, node;\n\n    if (iterations === undefined) iterations = 1;\n\n    for (var k = 0; k < iterations; ++k) {\n      alpha += (alphaTarget - alpha) * alphaDecay;\n\n      forces.forEach(function(force) {\n        force(alpha);\n      });\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        if (node.fx == null) node.x += node.vx *= velocityDecay;\n        else node.x = node.fx, node.vx = 0;\n        if (node.fy == null) node.y += node.vy *= velocityDecay;\n        else node.y = node.fy, node.vy = 0;\n      }\n    }\n\n    return simulation;\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (node.fx != null) node.x = node.fx;\n      if (node.fy != null) node.y = node.fy;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.forEach(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.delete(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n","import constant from \"./constant.js\";\n\nexport default function(x) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x;\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\n\nexport default function(y) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : y;\n  };\n\n  return force;\n}\n","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { __extends } from \"tslib\";\r\nimport { Series, SeriesDataItem } from \"../../charts/series/Series\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { ListTemplate, ListDisposer, List } from \"../../core/utils/List\";\r\nimport { ForceDirectedNode } from \"./ForceDirectedNode\";\r\nimport { Disposer } from \"../../core/utils/Disposer\";\r\nimport { ForceDirectedLink } from \"./ForceDirectedLink\";\r\nimport { ColorSet } from \"../../core/utils/ColorSet\";\r\nimport * as d3force from \"d3-force\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport { Percent, percent } from \"../../core/utils/Percent\";\r\nimport { MouseCursorStyle } from \"../../core/interaction/Mouse\";\r\nimport { RoundedRectangle } from \"../../core/elements/RoundedRectangle\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[ForceDirectedSeries]].\r\n *\r\n * @see {@link DataItem}\r\n * @since 4.3.8\r\n */\r\nvar ForceDirectedSeriesDataItem = /** @class */ (function (_super) {\r\n    __extends(ForceDirectedSeriesDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ForceDirectedSeriesDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * Have all children already been initialized?\r\n         */\r\n        _this.childrenInited = false;\r\n        _this.className = \"ForceDirectedSeriesDataItem\";\r\n        _this.hasChildren.children = true;\r\n        _this.childLinks = new List();\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Shows the Data Item and related visual elements.\r\n     *\r\n     * @param duration  Animation duration (ms)\r\n     * @param delay     Delay animation (ms)\r\n     * @param fields    A list of fields to set values of\r\n     */\r\n    ForceDirectedSeriesDataItem.prototype.show = function (duration, delay, fields) {\r\n        this._visible = true;\r\n        if (this.node) {\r\n            this.node.isActive = true;\r\n        }\r\n        return;\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    ForceDirectedSeriesDataItem.prototype.dispatchVisibility = function (visible) {\r\n        if (this.events.isEnabled(\"visibilitychanged\")) {\r\n            var event_1 = {\r\n                type: \"visibilitychanged\",\r\n                target: this,\r\n                visible: visible\r\n            };\r\n            this.events.dispatchImmediately(\"visibilitychanged\", event_1);\r\n        }\r\n    };\r\n    /**\r\n     * Hides the Data Item and related visual elements.\r\n     *\r\n     * @param duration  Animation duration (ms)\r\n     * @param delay     Delay animation (ms)\r\n     * @param toValue   A value to set to `fields` when hiding\r\n     * @param fields    A list of data fields to set value to `toValue`\r\n     */\r\n    ForceDirectedSeriesDataItem.prototype.hide = function (duration, delay, toValue, fields) {\r\n        this._visible = false;\r\n        if (this.events.isEnabled(\"visibilitychanged\")) {\r\n            var event_2 = {\r\n                type: \"visibilitychanged\",\r\n                target: this,\r\n                visible: false\r\n            };\r\n            this.events.dispatchImmediately(\"visibilitychanged\", event_2);\r\n        }\r\n        if (this.node) {\r\n            this.node.isActive = false;\r\n        }\r\n        return;\r\n    };\r\n    Object.defineProperty(ForceDirectedSeriesDataItem.prototype, \"value\", {\r\n        /**\r\n         * @return Value\r\n         */\r\n        get: function () {\r\n            var value = this.values.value.value;\r\n            if (!$type.isNumber(value)) {\r\n                if (this.children) {\r\n                    value = 0;\r\n                    this.children.each(function (child) {\r\n                        value += child.value;\r\n                    });\r\n                }\r\n            }\r\n            return value;\r\n        },\r\n        /**\r\n         * Numeric value of the item.\r\n         *\r\n         * @param value  Value\r\n         */\r\n        set: function (value) {\r\n            this.setValue(\"value\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedSeriesDataItem.prototype, \"node\", {\r\n        /**\r\n         * An element, related to this data item. (node)\r\n         *\r\n         * @readonly\r\n         * @return node element\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            if (!this._node) {\r\n                var component_1 = this.component;\r\n                var node_1 = component_1.nodes.create();\r\n                node_1.draggable = true;\r\n                this._node = node_1;\r\n                this._disposers.push(node_1);\r\n                this._disposers.push(new Disposer(function () {\r\n                    component_1.nodes.removeValue(node_1);\r\n                }));\r\n                this.addSprite(node_1);\r\n                node_1.visible = this.visible;\r\n                node_1.hiddenState.properties.visible = true;\r\n                // Apply accessibility\r\n                if (component_1.itemsFocusable()) {\r\n                    this.component.role = \"menu\";\r\n                    node_1.role = \"menuitem\";\r\n                    node_1.focusable = true;\r\n                }\r\n                else {\r\n                    this.component.role = \"list\";\r\n                    node_1.role = \"listitem\";\r\n                    node_1.focusable = false;\r\n                }\r\n                // Apply screen reader label\r\n                if (node_1.focusable) {\r\n                    node_1.events.once(\"focus\", function (ev) {\r\n                        node_1.readerTitle = component_1.populateString(component_1.itemReaderText, _this);\r\n                    }, undefined, false);\r\n                    node_1.events.once(\"blur\", function (ev) {\r\n                        node_1.readerTitle = \"\";\r\n                    }, undefined, false);\r\n                }\r\n                if (node_1.hoverable) {\r\n                    node_1.events.once(\"over\", function (ev) {\r\n                        node_1.readerTitle = component_1.populateString(component_1.itemReaderText, _this);\r\n                    }, undefined, false);\r\n                    node_1.events.once(\"out\", function (ev) {\r\n                        node_1.readerTitle = \"\";\r\n                    }, undefined, false);\r\n                }\r\n            }\r\n            return this._node;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedSeriesDataItem.prototype, \"level\", {\r\n        /**\r\n         * Depth level in the series hierarchy.\r\n         *\r\n         * The top-level item will have level set at 0. Its children will have\r\n         * level 1, and so on.\r\n         *\r\n         * @readonly\r\n         * @return Level\r\n         */\r\n        get: function () {\r\n            if (!this.parent) {\r\n                return 0;\r\n            }\r\n            else {\r\n                return this.parent.level + 1;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedSeriesDataItem.prototype, \"percent\", {\r\n        /**\r\n         * Percent value of a node.\r\n         *\r\n         * @since 4.9.0\r\n         * @return Percent\r\n         */\r\n        get: function () {\r\n            if (this.parent) {\r\n                return this.value / this.parent.value * 100;\r\n            }\r\n            return 100;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedSeriesDataItem.prototype, \"color\", {\r\n        /**\r\n         * @return Color\r\n         */\r\n        get: function () {\r\n            var color = this.properties.color;\r\n            if (color == undefined) {\r\n                if (this.parent) {\r\n                    color = this.parent.color;\r\n                }\r\n            }\r\n            if (color == undefined) {\r\n                if (this.component) {\r\n                    color = this.component.colors.getIndex(this.component.colors.step * this.index);\r\n                }\r\n            }\r\n            return color;\r\n        },\r\n        /**\r\n         * Item's color.\r\n         *\r\n         * If not set, will use parent's color, or, if that is not set either,\r\n         * automatically assigned color from chart's color set. (`chart.colors`)\r\n         *\r\n         * @param value  : Color | LinearGradient | RadialGradient | Pattern\r\n         */\r\n        set: function (value) {\r\n            this.setProperty(\"color\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedSeriesDataItem.prototype, \"linkWith\", {\r\n        /**\r\n         * @return Link list\r\n         */\r\n        get: function () {\r\n            return this.properties.linkWith;\r\n        },\r\n        /**\r\n         * An array of id's of other nodes outside of the child/parent tree to link\r\n         * with.\r\n         *\r\n         * @param  value  Link list\r\n         */\r\n        set: function (value) {\r\n            this.setProperty(\"linkWith\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedSeriesDataItem.prototype, \"hiddenInLegend\", {\r\n        /**\r\n         * @return Hidden in legend?\r\n         */\r\n        get: function () {\r\n            return this.properties.hiddenInLegend;\r\n        },\r\n        /**\r\n         * Should dataItem (node) be hidden in legend?\r\n         *\r\n         * @param value Visible in legend?\r\n         */\r\n        set: function (value) {\r\n            this.setProperty(\"hiddenInLegend\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedSeriesDataItem.prototype, \"collapsed\", {\r\n        /**\r\n         * @return Collapsed?\r\n         */\r\n        get: function () {\r\n            return this.properties.collapsed;\r\n        },\r\n        /**\r\n         * Indicates whether node should start off as collapsed.\r\n         *\r\n         * This can be used to specify whether node should start off as collapsed\r\n         * via data.\r\n         *\r\n         * To toggle actual node, use its `isActive` property instead.\r\n         *\r\n         * @param  value  Collapsed?\r\n         */\r\n        set: function (value) {\r\n            this.setProperty(\"collapsed\", value);\r\n            this.node.isActive = !value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedSeriesDataItem.prototype, \"fixed\", {\r\n        /**\r\n         * @return Fixed?\r\n         */\r\n        get: function () {\r\n            return this.properties.fixed;\r\n        },\r\n        /**\r\n         * Is this node fixed (immovable)?\r\n         *\r\n         * @since 4.6.2\r\n         * @param  value  Fixed?\r\n         */\r\n        set: function (value) {\r\n            this.setProperty(\"fixed\", value);\r\n            if (this.component) {\r\n                this.component.handleFixed(this);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedSeriesDataItem.prototype, \"children\", {\r\n        /**\r\n         * @return Item's children\r\n         */\r\n        get: function () {\r\n            return this.properties.children;\r\n        },\r\n        /**\r\n         * A list of item's sub-children.\r\n         *\r\n         * @param children  Item's children\r\n         */\r\n        set: function (children) {\r\n            this.setProperty(\"children\", children);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a marker used in the legend for this slice.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param marker  Marker container\r\n     */\r\n    ForceDirectedSeriesDataItem.prototype.createLegendMarker = function (marker) {\r\n        this.component.createLegendMarker(marker, this);\r\n        if (!this.node.isActive) {\r\n            this.hide();\r\n        }\r\n    };\r\n    Object.defineProperty(ForceDirectedSeriesDataItem.prototype, \"legendDataItem\", {\r\n        /**\r\n         * @return Legend data item\r\n         */\r\n        get: function () {\r\n            return this._legendDataItem;\r\n        },\r\n        /**\r\n         * A legend's data item, that corresponds to this data item.\r\n         *\r\n         * @param value  Legend data item\r\n         */\r\n        set: function (value) {\r\n            this._legendDataItem = value;\r\n            if (value.label) {\r\n                value.label.dataItem = this;\r\n            }\r\n            if (value.valueLabel) {\r\n                value.valueLabel.dataItem = this;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ForceDirectedSeriesDataItem;\r\n}(SeriesDataItem));\r\nexport { ForceDirectedSeriesDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines [[Series]] for a [[ForceDirectedTree]] chart.\r\n *\r\n * @see {@link IForceDirectedSeriesEvents} for a list of available Events\r\n * @see {@link IForceDirectedSeriesAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/ForceDirectedTree/} For more information\r\n * @todo Example\r\n * @since 4.3.8\r\n * @important\r\n */\r\nvar ForceDirectedSeries = /** @class */ (function (_super) {\r\n    __extends(ForceDirectedSeries, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ForceDirectedSeries() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"ForceDirectedSeries\";\r\n        _this.d3forceSimulation = d3force.forceSimulation();\r\n        _this.maxRadius = percent(8);\r\n        _this.minRadius = percent(1);\r\n        _this.width = percent(100);\r\n        _this.height = percent(100);\r\n        _this.colors = new ColorSet();\r\n        _this.colors.step = 2;\r\n        _this.width = percent(100);\r\n        _this.height = percent(100);\r\n        _this.manyBodyStrength = -15;\r\n        _this.centerStrength = 0.8;\r\n        _this.setPropertyValue(\"dragFixedNodes\", false);\r\n        _this.events.on(\"maxsizechanged\", function () {\r\n            _this.updateRadiuses(_this.dataItems);\r\n            _this.updateLinksAndNodes();\r\n            _this.dataItems.each(function (dataItem) {\r\n                _this.handleFixed(dataItem);\r\n            });\r\n            var d3forceSimulation = _this.d3forceSimulation;\r\n            var w = $math.max(50, _this.innerWidth);\r\n            var h = $math.max(50, _this.innerHeight);\r\n            if (d3forceSimulation) {\r\n                d3forceSimulation.force(\"x\", d3force.forceX().x(w / 2).strength(_this.centerStrength * 100 / w));\r\n                d3forceSimulation.force(\"y\", d3force.forceY().y(h / 2).strength(_this.centerStrength * 100 / h));\r\n                if (d3forceSimulation.alpha() < 0.4) {\r\n                    d3forceSimulation.alpha(0.4);\r\n                    d3forceSimulation.restart();\r\n                }\r\n            }\r\n        });\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Returns maximum value from all supplied data items.\r\n     *\r\n     * @ignore\r\n     * @param   dataItems  List of data items\r\n     * @param   max        Default max\r\n     * @return             Max\r\n     */\r\n    ForceDirectedSeries.prototype.getMaxValue = function (dataItems, max) {\r\n        var _this = this;\r\n        dataItems.each(function (dataItem) {\r\n            if (dataItem.value > max) {\r\n                max = dataItem.value;\r\n            }\r\n            if (dataItem.children) {\r\n                var cmax = _this.getMaxValue(dataItem.children, max);\r\n                if (cmax > max) {\r\n                    max = cmax;\r\n                }\r\n            }\r\n        });\r\n        return max;\r\n    };\r\n    /**\r\n     * Validates (processes) data items.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    ForceDirectedSeries.prototype.validateDataItems = function () {\r\n        var _this = this;\r\n        if (this.chart.__disabled) {\r\n            _super.prototype.validateDataItems.call(this);\r\n            return;\r\n        }\r\n        this._dataDisposers.push(new ListDisposer(this.links));\r\n        this._maxValue = this.getMaxValue(this.dataItems, 0);\r\n        this.forceLinks = [];\r\n        this.colors.reset();\r\n        var index = 0;\r\n        var radius = Math.min(this.innerHeight / 3, this.innerWidth / 3);\r\n        if (this.dataItems.length <= 1) {\r\n            radius = 0;\r\n        }\r\n        this.dataItems.each(function (dataItem) {\r\n            var angle = index / _this.dataItems.length * 360;\r\n            var node = dataItem.node;\r\n            var xField = node.propertyFields.x;\r\n            var yField = node.propertyFields.y;\r\n            if (xField && $type.hasValue(dataItem.dataContext[xField])) {\r\n                node.x = dataItem.dataContext[xField];\r\n            }\r\n            else {\r\n                node.x = _this.innerWidth / 2 + radius * $math.cos(angle);\r\n            }\r\n            if (yField && $type.hasValue(dataItem.dataContext[yField])) {\r\n                node.y = dataItem.dataContext[yField];\r\n            }\r\n            else {\r\n                node.y = _this.innerHeight / 2 + radius * $math.sin(angle);\r\n            }\r\n            dataItem.node.fill = dataItem.color;\r\n            dataItem.node.stroke = dataItem.color;\r\n            index++;\r\n            _this.initNode(dataItem);\r\n        });\r\n        if (this.dataFields.linkWith) {\r\n            this.dataItems.each(function (dataItem) {\r\n                _this.processLinkWith(dataItem);\r\n            });\r\n        }\r\n        var d3forceSimulation = this.d3forceSimulation;\r\n        d3forceSimulation.on(\"tick\", function () {\r\n            _this.updateLinksAndNodes();\r\n        });\r\n        // helps to avoid initial scatter\r\n        for (var i = 0; i < 10; i++) {\r\n            d3forceSimulation.tick();\r\n        }\r\n        d3forceSimulation.alphaDecay(1 - Math.pow(0.001, 1 / 600));\r\n        this.chart.feedLegend();\r\n        _super.prototype.validateDataItems.call(this);\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    ForceDirectedSeries.prototype.handleFixed = function (dataItem) {\r\n        var _this = this;\r\n        var node = dataItem.node;\r\n        var xField = node.propertyFields.x;\r\n        var yField = node.propertyFields.y;\r\n        if (xField && $type.hasValue(dataItem.dataContext[xField])) {\r\n            node.x = dataItem.dataContext[xField];\r\n        }\r\n        if (yField && $type.hasValue(dataItem.dataContext[yField])) {\r\n            node.y = dataItem.dataContext[yField];\r\n        }\r\n        if (dataItem.fixed) {\r\n            if (node.x instanceof Percent) {\r\n                node.fx = $utils.relativeToValue(node.x, this.innerWidth);\r\n            }\r\n            else {\r\n                node.fx = node.x;\r\n            }\r\n            if (node.y instanceof Percent) {\r\n                node.fy = $utils.relativeToValue(node.y, this.innerHeight);\r\n            }\r\n            else {\r\n                node.fy = node.y;\r\n            }\r\n            node.draggable = this.dragFixedNodes;\r\n            node.validate(); // for links to redraw\r\n        }\r\n        else {\r\n            node.fx = undefined;\r\n            node.fy = undefined;\r\n            node.draggable = true;\r\n        }\r\n        if (dataItem && dataItem.children) {\r\n            dataItem.children.each(function (di) {\r\n                _this.handleFixed(di);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @ignore\r\n     * @todo description\r\n     */\r\n    ForceDirectedSeries.prototype.updateNodeList = function () {\r\n        var d3forceSimulation = this.d3forceSimulation;\r\n        d3forceSimulation.nodes(this.nodes.values);\r\n        this._linkForce = d3force.forceLink(this.forceLinks);\r\n        d3forceSimulation.force(\"link\", this._linkForce);\r\n        this._collisionForce = d3force.forceCollide();\r\n        d3forceSimulation.force(\"collision\", this._collisionForce);\r\n        var w = $math.max(50, this.innerWidth);\r\n        var h = $math.max(50, this.innerHeight);\r\n        d3forceSimulation.force(\"x\", d3force.forceX().x(w / 2).strength(this.centerStrength * 100 / w));\r\n        d3forceSimulation.force(\"y\", d3force.forceY().y(h / 2).strength(this.centerStrength * 100 / h));\r\n    };\r\n    /**\r\n     * @ignore\r\n     * @todo description\r\n     */\r\n    ForceDirectedSeries.prototype.updateLinksAndNodes = function () {\r\n        var _this = this;\r\n        if (this._linkForce) {\r\n            this._linkForce.distance(function (linkDatum) {\r\n                return _this.getDistance(linkDatum);\r\n            });\r\n            this._linkForce.strength(function (linkDatum) {\r\n                return _this.getStrength(linkDatum);\r\n            });\r\n        }\r\n        if (this._collisionForce) {\r\n            this._collisionForce.radius(function (node) {\r\n                if (node instanceof ForceDirectedNode) {\r\n                    var radius = node.circle.pixelRadius;\r\n                    if (!node.outerCircle.__disabled && !node.outerCircle.disabled && node.outerCircle.visible) {\r\n                        radius = (radius + 3) * node.outerCircle.scale;\r\n                    }\r\n                    return radius + node.paddingRadius;\r\n                }\r\n                return 1;\r\n            });\r\n        }\r\n        this.d3forceSimulation.force(\"manybody\", d3force.forceManyBody().strength(function (node) {\r\n            if (node instanceof ForceDirectedNode) {\r\n                return node.circle.pixelRadius * _this.manyBodyStrength;\r\n            }\r\n            return _this.manyBodyStrength;\r\n        }));\r\n    };\r\n    /**\r\n     * @ignore\r\n     * @todo description\r\n     */\r\n    ForceDirectedSeries.prototype.getDistance = function (linkDatum) {\r\n        var source = linkDatum.source;\r\n        var target = linkDatum.target;\r\n        var distance = 0;\r\n        if (target.dataItem && source.dataItem) {\r\n            var link = source.linksWith.getKey(target.uid);\r\n            if (link) {\r\n                distance = link.distance;\r\n            }\r\n            if (!source.isActive) {\r\n                distance = 1;\r\n            }\r\n            if (target.isHidden) {\r\n                return 0;\r\n            }\r\n            return (distance * (source.circle.pixelRadius + target.circle.pixelRadius));\r\n        }\r\n        return distance;\r\n    };\r\n    /**\r\n     * @ignore\r\n     * @todo description\r\n     */\r\n    ForceDirectedSeries.prototype.getStrength = function (linkDatum) {\r\n        var source = linkDatum.source;\r\n        var target = linkDatum.target;\r\n        var strength = 0;\r\n        var link = source.linksWith.getKey(target.uid);\r\n        if (link) {\r\n            strength = link.strength;\r\n        }\r\n        if (target.isHidden) {\r\n            return 0;\r\n        }\r\n        return strength;\r\n    };\r\n    /**\r\n     * Handler for drag end event.\r\n     *\r\n     * @ignore\r\n     */\r\n    ForceDirectedSeries.prototype.nodeDragEnded = function () {\r\n        this.d3forceSimulation.alphaTarget(0);\r\n    };\r\n    /**\r\n     * Handler for drag start event.\r\n     *\r\n     * @ignore\r\n     */\r\n    ForceDirectedSeries.prototype.nodeDragStarted = function () {\r\n        this.d3forceSimulation.alpha(0.1);\r\n        this.d3forceSimulation.restart();\r\n    };\r\n    /**\r\n     * Resets positions of whole tree.\r\n     *\r\n     * @ignore\r\n     */\r\n    ForceDirectedSeries.prototype.restartSimulation = function () {\r\n        if (this.d3forceSimulation.alpha() <= 0.3) {\r\n            this.d3forceSimulation.alpha(0.3);\r\n            this.d3forceSimulation.restart();\r\n        }\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    ForceDirectedSeries.prototype.updateRadiuses = function (dataItems) {\r\n        var _this = this;\r\n        dataItems.each(function (dataItem) {\r\n            _this.updateRadius(dataItem);\r\n            if (dataItem.childrenInited) {\r\n                _this.updateRadiuses(dataItem.children);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    ForceDirectedSeries.prototype.updateRadius = function (dataItem) {\r\n        var node = dataItem.node;\r\n        var minSide = (this.innerWidth + this.innerHeight) / 2;\r\n        var minRadius = $utils.relativeToValue(this.minRadius, minSide);\r\n        var maxRadius = $utils.relativeToValue(this.maxRadius, minSide);\r\n        var radius = minRadius + dataItem.value / this._maxValue * (maxRadius - minRadius);\r\n        if (!$type.isNumber(radius)) {\r\n            radius = minRadius;\r\n        }\r\n        //if(!node.circle.isHidden){\r\n        node.circle.radius = radius;\r\n        //}\r\n        node.outerCircle.radius = radius + 3;\r\n        node.circle.states.getKey(\"active\").properties.radius = radius;\r\n        node.circle.defaultState.properties.radius = radius;\r\n    };\r\n    /**\r\n     * Initializes node.\r\n     *\r\n     * @ignore\r\n     */\r\n    ForceDirectedSeries.prototype.initNode = function (dataItem) {\r\n        var _this = this;\r\n        var node = dataItem.node;\r\n        node.parent = this;\r\n        this.updateRadius(dataItem);\r\n        //let nodeIndex = this.nodes.indexOf(dataItem.node);\r\n        if (!dataItem.children || dataItem.children.length == 0) {\r\n            node.outerCircle.disabled = true;\r\n            node.circle.interactionsEnabled = true;\r\n            node.cursorOverStyle = MouseCursorStyle.default;\r\n        }\r\n        else {\r\n            node.cursorOverStyle = MouseCursorStyle.pointer;\r\n        }\r\n        if (this.dataItemsInvalid && (dataItem.level >= this.maxLevels - 1 || dataItem.collapsed)) {\r\n            node.isActive = false;\r\n            this.updateNodeList();\r\n            return;\r\n        }\r\n        if (!node.isActive) {\r\n            node.hide(0);\r\n        }\r\n        this.handleFixed(dataItem);\r\n        if (dataItem.children) {\r\n            var index_1 = 0;\r\n            dataItem.childrenInited = true;\r\n            if (this.dataItems.length == 1 && dataItem.level == 0) {\r\n                this.colors.next();\r\n            }\r\n            dataItem.children.each(function (child) {\r\n                /*\r\n                let link = this.links.create();\r\n                link.parent = this;\r\n                link.zIndex = -1;\r\n                dataItem.childLinks.push(link);\r\n                link.source = dataItem.node;\r\n                let childIndex = this.nodes.indexOf(child.node);\r\n                link.target = child.node;\r\n                child.parentLink = link;\r\n\r\n                this._forceLinks.push({ source: nodeIndex, target: childIndex });\r\n                */\r\n                var link = node.linkWith(child.node);\r\n                child.parentLink = link;\r\n                var radius = 2 * node.circle.pixelRadius + child.node.circle.pixelRadius;\r\n                var angle = index_1 / dataItem.children.length * 360;\r\n                child.node.x = node.pixelX + radius * $math.cos(angle);\r\n                child.node.y = node.pixelY + radius * $math.sin(angle);\r\n                child.node.circle.radius = 0;\r\n                var color;\r\n                var diColor = child.properties.color;\r\n                if ($type.hasValue(diColor)) {\r\n                    color = diColor;\r\n                }\r\n                else {\r\n                    if (_this.dataItems.length == 1 && dataItem.level == 0) {\r\n                        color = _this.colors.next();\r\n                    }\r\n                    else {\r\n                        color = dataItem.color;\r\n                    }\r\n                }\r\n                child.color = color;\r\n                child.node.fill = color;\r\n                child.node.stroke = color;\r\n                child.parentLink.stroke = color;\r\n                _this.initNode(child);\r\n                index_1++;\r\n            });\r\n        }\r\n        node.isActive = true;\r\n        node.show();\r\n        this.updateNodeList();\r\n    };\r\n    /**\r\n     * @ignore\r\n     * @todo description\r\n     */\r\n    ForceDirectedSeries.prototype.processLinkWith = function (dataItem) {\r\n        var _this = this;\r\n        if (dataItem.linkWith) {\r\n            $array.each(dataItem.linkWith, function (id, index) {\r\n                var dataItemToConnect = _this.getDataItemById(_this.dataItems, id);\r\n                if (dataItemToConnect) {\r\n                    dataItem.node.linkWith(dataItemToConnect.node, _this.linkWithStrength);\r\n                }\r\n            });\r\n        }\r\n        if (dataItem.children) {\r\n            dataItem.children.each(function (child) {\r\n                _this.processLinkWith(child);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Returns a [[ForceDirectedSeriesDataItem]] related to node by specific id.\r\n     *\r\n     * @param   dataItems  List of data items to search in\r\n     * @param   id         Id to search for\r\n     * @return             Data item\r\n     */\r\n    ForceDirectedSeries.prototype.getDataItemById = function (dataItems, id) {\r\n        for (var i = dataItems.length - 1; i >= 0; i--) {\r\n            var dataItem = dataItems.getIndex(i);\r\n            if (dataItem.id == id) {\r\n                return dataItem;\r\n            }\r\n            if (dataItem.children) {\r\n                var di = this.getDataItemById(dataItem.children, id);\r\n                if (di) {\r\n                    return di;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a new/empty DataItem of the type appropriate for this object.\r\n     *\r\n     * @see {@link DataItem}\r\n     * @return Data Item\r\n     */\r\n    ForceDirectedSeries.prototype.createDataItem = function () {\r\n        return new ForceDirectedSeriesDataItem();\r\n    };\r\n    Object.defineProperty(ForceDirectedSeries.prototype, \"nodes\", {\r\n        /**\r\n         * A list of nodes in series.\r\n         *\r\n         * @return  Node list\r\n         */\r\n        get: function () {\r\n            if (!this._nodes) {\r\n                var node = this.createNode();\r\n                node.applyOnClones = true;\r\n                this._disposers.push(node);\r\n                this._nodes = new ListTemplate(node);\r\n                this._disposers.push(new ListDisposer(this._nodes));\r\n            }\r\n            return this._nodes;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedSeries.prototype, \"links\", {\r\n        /**\r\n         * A list of links between nodes.\r\n         *\r\n         * @return  Link list\r\n         */\r\n        get: function () {\r\n            if (!this._links) {\r\n                var link = this.createLink();\r\n                link.applyOnClones = true;\r\n                this._disposers.push(link);\r\n                this._links = new ListTemplate(link);\r\n                this._disposers.push(new ListDisposer(this._links));\r\n            }\r\n            return this._links;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a new node.\r\n     */\r\n    ForceDirectedSeries.prototype.createNode = function () {\r\n        return new ForceDirectedNode();\r\n    };\r\n    /**\r\n     * Creates a new link.\r\n     */\r\n    ForceDirectedSeries.prototype.createLink = function () {\r\n        return new ForceDirectedLink();\r\n    };\r\n    Object.defineProperty(ForceDirectedSeries.prototype, \"minRadius\", {\r\n        /**\r\n         * @return Minimum radius (px or percent)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"minRadius\");\r\n        },\r\n        /**\r\n         * Smallest possible radius in pixels of the node circle.\r\n         *\r\n         * If set in percent, it radius will be calculated from average width and\r\n         * height of series.\r\n         *\r\n         * @default Percent(1)\r\n         * @param  value  Minimum radius (px or percent)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"minRadius\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedSeries.prototype, \"maxRadius\", {\r\n        /**\r\n         * @return Maximum radius (px or Percent)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"maxRadius\");\r\n        },\r\n        /**\r\n         * Biggest possible radius in pixels of the node circle.\r\n         *\r\n         * If set in percent, it radius will be calculated from average width and\r\n         * height of series.\r\n         *\r\n         * @default Percent(8)\r\n         * @param  value  Maximum radius (px or Percent)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"maxRadius\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedSeries.prototype, \"colors\", {\r\n        /**\r\n         * @return Color set\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"colors\");\r\n        },\r\n        /**\r\n         * A color set to be used for nodes.\r\n         *\r\n         * iIt works like this:\r\n         *\r\n         * The first level with more than one node, assigns different colors to all\r\n         * nodes in this list. Their child nodes inherit the color.\r\n         *\r\n         * For example, if the top level has one node with three children, the top\r\n         * node will get first color, the first child will get second color, etc.\r\n         *\r\n         * If there are two top nodes, the first top node gets first color, the\r\n         * second top node gets the second color. Their subsequent children inherit\r\n         * colors.\r\n         *\r\n         * @param value  Color set\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"colors\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedSeries.prototype, \"maxLevels\", {\r\n        /**\r\n         * @return Number of levels\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"maxLevels\");\r\n        },\r\n        /**\r\n         * Number of levels to be displayed initially.\r\n         *\r\n         * @param  value  Number of levels\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"maxLevels\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedSeries.prototype, \"manyBodyStrength\", {\r\n        /**\r\n         * @return  Body push/attrack strength\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"manyBodyStrength\");\r\n        },\r\n        /**\r\n         * Relative strength each node pushes (or attracts) other nodes (it is\r\n         * multiplied by `node.circle.radius` for big nodes to push stronger).\r\n         *\r\n         * Positive value will make nodes attract each other, while negative will\r\n         * push away each other. The bigger the negative number is, the more\r\n         * scattered nodes will be.\r\n         *\r\n         * Available value range: `-XX` to `XX`.\r\n         *\r\n         * @default -15\r\n         * @param  value  Body push/attrack strength\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"manyBodyStrength\", value)) {\r\n                this.restartSimulation();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedSeries.prototype, \"centerStrength\", {\r\n        /**\r\n         * @return  Stregth of attraction to center\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"centerStrength\");\r\n        },\r\n        /**\r\n         * Relative strength each child node is pushes (or attracted) to the center\r\n         * of the chart.\r\n         *\r\n         * Positive value will make nodes to be attracted to center, while negative\r\n         * will push them away.\r\n         *\r\n         * Available value range: `-50` to `50`.\r\n         *\r\n         * @default 0.8\r\n         * @param  value  Stregth of attraction to center\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"centerStrength\", value)) {\r\n                this.restartSimulation();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedSeries.prototype, \"linkWithStrength\", {\r\n        /**\r\n         * @return Strength\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"linkWithStrength\");\r\n        },\r\n        /**\r\n         * Relative attraction strength between the nodes connected with `linkWith`.\r\n         *\r\n         * @since 4.4.8\r\n         * @param  value  Strength\r\n         * @default undefined\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"linkWithStrength\", value)) {\r\n                this.restartSimulation();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ForceDirectedSeries.prototype, \"dragFixedNodes\", {\r\n        /**\r\n         * @return Allow drag fixed nodes?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"dragFixedNodes\");\r\n        },\r\n        /**\r\n         * Specifies if user can drag fixed nodes.\r\n         *\r\n         * @since 4.9.0\r\n         * @default false\r\n         * @param  value  Allow drag fixed nodes?\r\n         */\r\n        set: function (value) {\r\n            var _this = this;\r\n            if (this.setPropertyValue(\"dragFixedNodes\", value)) {\r\n                this.dataItems.each(function (dataItem) {\r\n                    _this.handleFixed(dataItem);\r\n                });\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Binds related legend data item's visual settings to this series' visual\r\n     * settings.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param marker    Container\r\n     * @param dataItem  Data item\r\n     */\r\n    ForceDirectedSeries.prototype.createLegendMarker = function (marker, dataItem) {\r\n        marker.children.each(function (child) {\r\n            var node = dataItem.node;\r\n            if (child instanceof RoundedRectangle) {\r\n                child.cornerRadius(40, 40, 40, 40);\r\n            }\r\n            child.defaultState.properties.fill = node.fill;\r\n            child.defaultState.properties.stroke = node.stroke;\r\n            child.defaultState.properties.fillOpacity = node.fillOpacity;\r\n            child.defaultState.properties.strokeOpacity = node.strokeOpacity;\r\n            child.fill = node.fill;\r\n            child.stroke = node.stroke;\r\n            child.fillOpacity = node.fillOpacity;\r\n            child.strokeOpacity = node.strokeOpacity;\r\n            if (child.fill == undefined) {\r\n                child.__disabled = true;\r\n            }\r\n            var legendDataItem = marker.dataItem;\r\n            legendDataItem.color = node.fill;\r\n            legendDataItem.colorOrig = node.fill;\r\n            node.events.on(\"propertychanged\", function (ev) {\r\n                if (ev.property == \"fill\") {\r\n                    child.__disabled = false;\r\n                    if (!child.isActive) {\r\n                        child.fill = node.fill;\r\n                    }\r\n                    child.defaultState.properties.fill = node.fill;\r\n                    legendDataItem.color = node.fill;\r\n                    legendDataItem.colorOrig = node.fill;\r\n                }\r\n                if (ev.property == \"stroke\") {\r\n                    if (!child.isActive) {\r\n                        child.stroke = node.stroke;\r\n                    }\r\n                    child.defaultState.properties.stroke = node.stroke;\r\n                }\r\n            }, undefined, false);\r\n        });\r\n    };\r\n    return ForceDirectedSeries;\r\n}(Series));\r\nexport { ForceDirectedSeries };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ForceDirectedSeries\"] = ForceDirectedSeries;\r\nregistry.registeredClasses[\"ForceDirectedSeriesDataItem\"] = ForceDirectedSeriesDataItem;\r\n//# sourceMappingURL=ForceDirectedSeries.js.map","import {quadtree} from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\nimport {x, y} from \"./simulation.js\";\n\nexport default function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x, y).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, weight = 0, x, y, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(), l += x * x;\n        if (y === 0) y = jiggle(), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(), l += x * x;\n      if (y === 0) y = jiggle(), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}\n","/**\r\n * ForceDirectedTree chart module.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { SerialChart, SerialChartDataItem } from \"../../charts/types/SerialChart\";\r\nimport { ForceDirectedSeries } from \"./ForceDirectedSeries\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[ForceDirectedTree]].\r\n *\r\n * @since 4.3.8\r\n * @see {@link DataItem}\r\n */\r\nvar ForceDirectedTreeDataItem = /** @class */ (function (_super) {\r\n    __extends(ForceDirectedTreeDataItem, _super);\r\n    function ForceDirectedTreeDataItem() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return ForceDirectedTreeDataItem;\r\n}(SerialChartDataItem));\r\nexport { ForceDirectedTreeDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * A main class for [[ForceDirectedTree]] chart type.\r\n *\r\n * @see {@link IForceDirectedTreeEvents} for a list of available Events\r\n * @see {@link IForceDirectedTreeAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/force-directed/} For more information\r\n * @since 4.3.8\r\n * @important\r\n */\r\nvar ForceDirectedTree = /** @class */ (function (_super) {\r\n    __extends(ForceDirectedTree, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ForceDirectedTree() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        _this.className = \"ForceDirectedTree\";\r\n        _this.seriesContainer.isMeasured = true;\r\n        _this.seriesContainer.layout = \"absolute\";\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates and returns a new series of the suitable type.\r\n     *\r\n     * @return New series\r\n     */\r\n    ForceDirectedTree.prototype.createSeries = function () {\r\n        return new ForceDirectedSeries();\r\n    };\r\n    /**\r\n     * Returns a new/empty DataItem of the type appropriate for this object.\r\n     *\r\n     * @see {@link DataItem}\r\n     * @return Data Item\r\n     */\r\n    ForceDirectedTree.prototype.createDataItem = function () {\r\n        return new ForceDirectedTreeDataItem();\r\n    };\r\n    /**\r\n     * Setups the legend to use the chart's data.\r\n     *\r\n     * @ignore\r\n     */\r\n    ForceDirectedTree.prototype.feedLegend = function () {\r\n        var legend = this.legend;\r\n        if (legend) {\r\n            var legendData_1 = [];\r\n            this.series.each(function (series) {\r\n                if (!series.hiddenInLegend) {\r\n                    var dataItems = series.dataItems;\r\n                    if (dataItems.length == 1) {\r\n                        var children = series.dataItems.getIndex(0).children;\r\n                        if (children.length > 0) {\r\n                            dataItems = children;\r\n                        }\r\n                    }\r\n                    dataItems.each(function (dataItem) {\r\n                        if (!dataItem.hiddenInLegend) {\r\n                            legendData_1.push(dataItem);\r\n                            var legendSettings = series.legendSettings;\r\n                            if (legendSettings) {\r\n                                if (legendSettings.labelText) {\r\n                                    legend.labels.template.text = legendSettings.labelText;\r\n                                }\r\n                                if (legendSettings.itemLabelText) {\r\n                                    legend.labels.template.text = legendSettings.itemLabelText;\r\n                                }\r\n                                if (legendSettings.valueText) {\r\n                                    legend.valueLabels.template.text = legendSettings.valueText;\r\n                                }\r\n                                if (legendSettings.itemValueText) {\r\n                                    legend.valueLabels.template.text = legendSettings.itemValueText;\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n            legend.data = legendData_1;\r\n            legend.dataFields.name = \"name\";\r\n        }\r\n    };\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    ForceDirectedTree.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        // Add a default screen reader title for accessibility\r\n        // This will be overridden in screen reader if there are any `titles` set\r\n        if (!$type.hasValue(this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"Force directed tree\");\r\n        }\r\n    };\r\n    /**\r\n     * Since this chart uses hierarchical data, we need to remove childrent\r\n     * dataField from export of non-hierarchical formats such as CSV and XSLX.\r\n     *\r\n     * @return Export\r\n     */\r\n    ForceDirectedTree.prototype.getExporting = function () {\r\n        var _this = this;\r\n        var exporting = _super.prototype.getExporting.call(this);\r\n        exporting.adapter.add(\"formatDataFields\", function (info) {\r\n            if (info.format == \"csv\" || info.format == \"xlsx\") {\r\n                _this.series.each(function (series) {\r\n                    if ($type.hasValue(series.dataFields.children)) {\r\n                        delete info.dataFields[series.dataFields.children];\r\n                    }\r\n                });\r\n            }\r\n            return info;\r\n        });\r\n        return exporting;\r\n    };\r\n    return ForceDirectedTree;\r\n}(SerialChart));\r\nexport { ForceDirectedTree };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ForceDirectedTree\"] = ForceDirectedTree;\r\nregistry.registeredClasses[\"ForceDirectedTreeDataItem\"] = ForceDirectedTreeDataItem;\r\n//# sourceMappingURL=ForceDirectedTree.js.map","export * from \"../.internal/plugins/forceDirected/ForceDirectedLink\";\r\nexport * from \"../.internal/plugins/forceDirected/ForceDirectedTree\";\r\nexport * from \"../.internal/plugins/forceDirected/ForceDirectedNode\";\r\nexport * from \"../.internal/plugins/forceDirected/ForceDirectedSeries\";\r\n//# sourceMappingURL=forceDirected.js.map","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\r\n * A collection of utility functions for various type checks and conversion\r\n * @todo Review unused functions for removal\r\n * @hidden\r\n */\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { percent, isPercent } from \"./Percent\";\r\n/**\r\n * ============================================================================\r\n * TYPE CHECK\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Returns `true` if value is not a number (NaN).\r\n *\r\n * @param value Input value\r\n * @return Is NaN?\r\n * @deprecated Is not used anywhere. JS built-in isNaN is used everywhere. Maybe we don't need this, or if we do, then we should use it everywhere\r\n */\r\nexport function isNaN(value) {\r\n    return Number(value) !== value;\r\n}\r\n/**\r\n * Returns a type of the value.\r\n *\r\n * @param value  Input value\r\n * @return Type of the value\r\n */\r\nexport function getType(value) {\r\n    return ({}).toString.call(value);\r\n}\r\n/**\r\n * Returns a default value if the passed in value is empty.\r\n *\r\n * @param value     Input value\r\n * @param optional  Default value\r\n * @return Value or default value whichever is available\r\n * @deprecated Not used anywhere\r\n */\r\nexport function getDefault(value, optional) {\r\n    return value || optional;\r\n}\r\n/**\r\n * Checks if the passed in value is a string.\r\n *\r\n * @param value  Value\r\n * @return Is string?\r\n * @throws {Error}\r\n * @deprecated Not used anywhere\r\n */\r\nexport function checkString(value) {\r\n    if (typeof value === \"string\") {\r\n        return true;\r\n    }\r\n    else {\r\n        throw new Error(\"Expected a string but got \" + getType(value));\r\n    }\r\n}\r\n/**\r\n * Checks if the passed in value is a boolean.\r\n *\r\n * @param value  Value\r\n * @return Is boolean?\r\n * @throws {Error}\r\n * @deprecated Not used anywhere\r\n */\r\nexport function checkBoolean(value) {\r\n    if (typeof value === \"boolean\") {\r\n        return true;\r\n    }\r\n    else {\r\n        throw new Error(\"Expected a boolean but got \" + getType(value));\r\n    }\r\n}\r\n/**\r\n * Checks if the passed in value is a number.\r\n *\r\n * @param value  Value\r\n * @return Is number?\r\n * @throws {Error}\r\n */\r\nexport function checkNumber(value) {\r\n    if (typeof value === \"number\") {\r\n        if (isNaN(value)) {\r\n            throw new Error(\"Expected a number but got NaN\");\r\n        }\r\n    }\r\n    else {\r\n        throw new Error(\"Expected a number but got \" + getType(value));\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Checks if the passed in value is an object.\r\n *\r\n * @param value  Value\r\n * @return Is object?\r\n * @throws {Error}\r\n * @todo Is the input type correct?\r\n * @deprecated Not used anywhere\r\n */\r\nexport function checkObject(value) {\r\n    var t = getType(value);\r\n    if (t === \"[object Object]\") {\r\n        return true;\r\n    }\r\n    else {\r\n        throw new Error(\"Expected an object but got \" + t);\r\n    }\r\n}\r\n/**\r\n * Checks if the passed in value is an array.\r\n *\r\n * @param value  Value\r\n * @return Is array?\r\n * @throws {Error}\r\n * @deprecated Not used anywhere\r\n */\r\nexport function checkArray(value) {\r\n    if (Array.isArray(value)) {\r\n        return true;\r\n    }\r\n    else {\r\n        throw new Error(\"Expected an array but got \" + getType(value));\r\n    }\r\n}\r\n/**\r\n * Checks if the passed in value is a Date object.\r\n *\r\n * @param value  Value\r\n * @return Is Date object?\r\n * @throws {Error}\r\n * @deprecated Not used anywhere\r\n */\r\nexport function checkDate(value) {\r\n    var t = getType(value);\r\n    if (t === \"[object Date]\") {\r\n        return true;\r\n    }\r\n    else {\r\n        throw new Error(\"Expected a date but got \" + t);\r\n    }\r\n}\r\n/**\r\n * ============================================================================\r\n * TYPE CASTING\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Casts string or a number into string.\r\n *\r\n * @param value  Input\r\n * @return String value\r\n * @deprecated Not used anywhere\r\n */\r\nexport function castString(value) {\r\n    if (typeof value === \"string\") {\r\n        return value;\r\n    }\r\n    else if (typeof value === \"number\") {\r\n        return \"\" + value;\r\n    }\r\n    else {\r\n        throw new Error(\"Expected a string or number but got \" + getType(value));\r\n    }\r\n}\r\n/**\r\n * Casts string or a number into a number.\r\n *\r\n * @param value   Input value\r\n * @return Number  value\r\n * @throws {Error}\r\n */\r\nexport function castNumber(value) {\r\n    if (typeof value === \"string\") {\r\n        var number = +value;\r\n        if (isNaN(number)) {\r\n            throw new Error(\"Cannot cast string \" + JSON.stringify(value) + \" to a number\");\r\n        }\r\n        else {\r\n            return number;\r\n        }\r\n    }\r\n    else if (typeof value === \"number\") {\r\n        if (isNaN(value)) {\r\n            throw new Error(\"Expected a number but got NaN\");\r\n        }\r\n        else {\r\n            return value;\r\n        }\r\n    }\r\n    else {\r\n        var t = getType(value);\r\n        if (t === \"[object Date]\") {\r\n            return value.getTime();\r\n        }\r\n        else {\r\n            throw new Error(\"Expected a string, number, or date but got \" + t);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Casts number, string or Date into a Date object.\r\n *\r\n * @param value  Input value\r\n * @return Date object\r\n * @deprecated Not used anywhere\r\n * @throws {Error}\r\n * @hidden\r\n * @deprecated\r\n */\r\n/*export function castDate(value: string | number | Date, formatter?: DateFormatter): Date {\r\n    if (typeof value === \"string\") {\r\n        if (formatter) {\r\n            return formatter.parse(value);\r\n        }\r\n        return new Date(value);\r\n\r\n    } else if (typeof value === \"number\") {\r\n        return new Date(value);\r\n\r\n    } else {\r\n        const t = getType(value);\r\n\r\n        if (t === \"[object Date]\") {\r\n            return value;\r\n\r\n        } else {\r\n            throw new Error(\"Expected a string, number, or date but got \" + t);\r\n        }\r\n    }\r\n}*/\r\n/**\r\n * ============================================================================\r\n * QUICK CONVERSION\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Converts any value into `boolean`.\r\n *\r\n * @param value  Source value\r\n * @return `true` or `false`\r\n */\r\nexport function toBoolean(value) {\r\n    return value ? true : false;\r\n}\r\n/**\r\n * Converts any value into a `number`.\r\n *\r\n * @param value  Source value\r\n * @return Number representation of value\r\n */\r\nexport function toNumber(value) {\r\n    if (hasValue(value) && !isNumber(value)) {\r\n        var converted = Number(value);\r\n        if (isNaN(converted) && isString(value) && value != \"\") {\r\n            return toNumber(value.replace(/[^0-9.\\-]+/g, ''));\r\n        }\r\n        return converted;\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * Converts any value into a string (text).\r\n *\r\n * @param value  Source value\r\n * @return String representation of the input\r\n */\r\nexport function toText(value) {\r\n    if (hasValue(value) && !isString(value)) {\r\n        if (isNumber(value)) {\r\n            return castString(value);\r\n        }\r\n        else if (isObject(value)) {\r\n            return value.toString();\r\n        }\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * Converts any value to a number or [[Percent]].\r\n *\r\n * If the parameter is a string and contains \"%\", it will\r\n * convert it into a [[Percent]].\r\n *\r\n * Otherwise, it will convert into a number.\r\n *\r\n * @param value  Number or percent\r\n * @return Percent object\r\n */\r\nexport function toNumberOrPercent(value) {\r\n    if (!hasValue(value) || isNumber(value) || isPercent(value)) {\r\n        return value;\r\n    }\r\n    if (isString(value) && value.indexOf(\"%\") != -1) {\r\n        return percent(toNumber(value));\r\n    }\r\n    return toNumber(value);\r\n}\r\n/**\r\n * Checks if a variable has a value.\r\n *\r\n * @param a  Input value\r\n * @returns                        Has value?\r\n */\r\nexport function hasValue(a) {\r\n    return a != null;\r\n}\r\n/**\r\n * Returns a value or throws an {Error} exception if the variable has not\r\n * value.\r\n *\r\n * @param a  Input value\r\n * @returns                        Value\r\n */\r\nexport function getValue(a) {\r\n    if (hasValue(a)) {\r\n        return a;\r\n    }\r\n    else {\r\n        throw new Error(\"Value doesn't exist\");\r\n    }\r\n}\r\n/**\r\n * Returns a value, or returns the default value if it doesn't have a value.\r\n *\r\n * @param a  Input value\r\n * @returns                        Value\r\n */\r\nexport function getValueDefault(a, defaultValue) {\r\n    if (hasValue(a)) {\r\n        return a;\r\n    }\r\n    else {\r\n        return defaultValue;\r\n    }\r\n}\r\n/**\r\n * ============================================================================\r\n * TYPE CHECK\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Checks if parameter is `Date`.\r\n *\r\n * @param value  Input value\r\n * @return Is Date?\r\n */\r\nexport function isDate(value) {\r\n    return getType(value) === \"[object Date]\";\r\n}\r\n/**\r\n * Checks if parameter is `string`.\r\n *\r\n * @param value  Input value\r\n * @return Is string?\r\n */\r\nexport function isString(value) {\r\n    return typeof value === \"string\";\r\n}\r\n/**\r\n * Checks if parameter is `number`.\r\n *\r\n * @param value  Input value\r\n * @return Is number?\r\n */\r\nexport function isNumber(value) {\r\n    return typeof value === \"number\" && Number(value) == value;\r\n}\r\n/**\r\n * Checks if parameter is `object`.\r\n *\r\n * @param value  Input value\r\n * @return Is object?\r\n */\r\nexport function isObject(value) {\r\n    return typeof value === \"object\" && value != null;\r\n}\r\n/**\r\n * Checks if parameter is `Array`.\r\n *\r\n * @param value  Input value\r\n * @return Is Array?\r\n */\r\nexport function isArray(value) {\r\n    return Array.isArray(value);\r\n}\r\n//# sourceMappingURL=Type.js.map","import { EventDispatcher } from \"./utils/EventDispatcher\";\r\nimport { Dictionary } from \"./utils/Dictionary\";\r\nimport { cache } from \"./utils/Cache\";\r\nimport * as $type from \"./utils/Type\";\r\nimport * as $string from \"./utils/String\";\r\nimport * as $array from \"./utils/Array\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Registry is used to store miscellaneous system-wide information, like ids,\r\n * maps, themes, and registered classes.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nvar Registry = /** @class */ (function () {\r\n    function Registry() {\r\n        /**\r\n         * Event dispacther.\r\n         */\r\n        this.events = new EventDispatcher();\r\n        /**\r\n         * All currently applied themes. All new chart instances created will\r\n         * automatically inherit and retain System's themes.\r\n         */\r\n        this.themes = [];\r\n        /**\r\n         * List of all loaded available themes.\r\n         *\r\n         * Whenever a theme loads, it registers itself in System's `loadedThemes`\r\n         * collection.\r\n         */\r\n        this.loadedThemes = {};\r\n        /**\r\n         * An indeternal counter used to generate unique IDs.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        this._uidCount = 0;\r\n        /**\r\n         * Keeps register of class references so that they can be instnatiated using\r\n         * string key.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        this.registeredClasses = {};\r\n        /**\r\n         * Holds all generated placeholders.\r\n         */\r\n        this._placeholders = {};\r\n        /**\r\n         * A list of invalid(ated) [[Sprite]] objects that need to be re-validated\r\n         * during next cycle.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        this.invalidSprites = {};\r\n        /**\r\n         * Components are added to this list when their data provider changes to\r\n         * a new one or data is added/removed from their data provider.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        this.invalidDatas = {};\r\n        /**\r\n         * Components are added to this list when values of their raw data change.\r\n         * Used when we want a smooth animation from one set of values to another.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        this.invalidRawDatas = [];\r\n        /**\r\n         * Components are added to this list when values of their data changes\r\n         * (but not data provider itself).\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        this.invalidDataItems = [];\r\n        /**\r\n         * Components are added to this list when their data range (selection) is\r\n         * changed, e.g. zoomed.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        this.invalidDataRange = [];\r\n        /**\r\n         * A list of [[Sprite]] objects that have invalid(ated) positions, that need\r\n         * to be recalculated.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        this.invalidPositions = {};\r\n        /**\r\n         * A list of [[Container]] objects with invalid(ated) layouts.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        this.invalidLayouts = {};\r\n        /**\r\n         * An array holding all active (non-disposed) top level elemens.\r\n         *\r\n         * When, for example, a new chart is created, its instance will be added to\r\n         * this array, and will be removed when the chart is disposed.\r\n         */\r\n        this.baseSprites = [];\r\n        this.baseSpritesByUid = {};\r\n        this.queue = [];\r\n        this.uid = this.getUniqueId();\r\n        this.invalidSprites.noBase = [];\r\n        this.invalidDatas.noBase = [];\r\n        this.invalidLayouts.noBase = [];\r\n        this.invalidPositions.noBase = [];\r\n    }\r\n    /**\r\n     * Generates a unique chart system-wide ID.\r\n     *\r\n     * @return Generated ID\r\n     */\r\n    Registry.prototype.getUniqueId = function () {\r\n        var uid = this._uidCount;\r\n        this._uidCount += 1;\r\n        return \"id-\" + uid;\r\n    };\r\n    Object.defineProperty(Registry.prototype, \"map\", {\r\n        /**\r\n         * Returns a universal collection for mapping ids with objects.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return Map collection\r\n         */\r\n        get: function () {\r\n            if (!this._map) {\r\n                this._map = new Dictionary();\r\n            }\r\n            return this._map;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Caches value in object's cache.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param key    Key\r\n     * @param value  Value\r\n     * @param ttl    TTL in seconds\r\n     */\r\n    Registry.prototype.setCache = function (key, value, ttl) {\r\n        cache.set(this.uid, key, value, ttl);\r\n    };\r\n    /**\r\n     * Retrieves cached value.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param key    Key\r\n     * @param value  Value to return if cache is not available\r\n     * @return Value\r\n     */\r\n    Registry.prototype.getCache = function (key, value) {\r\n        if (value === void 0) { value = undefined; }\r\n        return cache.get(this.uid, key, value);\r\n    };\r\n    /**\r\n     * Dispatches an event using own event dispatcher. Will automatically\r\n     * populate event data object with event type and target (this element).\r\n     * It also checks if there are any handlers registered for this sepecific\r\n     * event.\r\n     *\r\n     * @param eventType Event type (name)\r\n     * @param data      Data to pass into event handler(s)\r\n     */\r\n    Registry.prototype.dispatch = function (eventType, data) {\r\n        // @todo Implement proper type check\r\n        if (this.events.isEnabled(eventType)) {\r\n            if (data) {\r\n                data.type = eventType;\r\n                data.target = data.target || this;\r\n                this.events.dispatch(eventType, {\r\n                    type: eventType,\r\n                    target: this\r\n                });\r\n            }\r\n            else {\r\n                this.events.dispatch(eventType, {\r\n                    type: eventType,\r\n                    target: this\r\n                });\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Works like `dispatch`, except event is triggered immediately, without\r\n     * waiting for the next frame cycle.\r\n     *\r\n     * @param eventType Event type (name)\r\n     * @param data      Data to pass into event handler(s)\r\n     */\r\n    Registry.prototype.dispatchImmediately = function (eventType, data) {\r\n        // @todo Implement proper type check\r\n        if (this.events.isEnabled(eventType)) {\r\n            if (data) {\r\n                data.type = eventType;\r\n                data.target = data.target || this;\r\n                this.events.dispatchImmediately(eventType, data);\r\n            }\r\n            else {\r\n                this.events.dispatchImmediately(eventType, {\r\n                    type: eventType,\r\n                    target: this\r\n                });\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a unique placeholder suitable for the key.\r\n     *\r\n     * @param key  Key\r\n     * @return Random string to be used as placeholder\r\n     */\r\n    Registry.prototype.getPlaceholder = function (key) {\r\n        if ($type.hasValue(this._placeholders[key])) {\r\n            return this._placeholders[key];\r\n        }\r\n        this._placeholders[key] = \"__amcharts_\" + key + \"_\" + $string.random(8) + \"__\";\r\n        return this._placeholders[key];\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    Registry.prototype.addToInvalidComponents = function (component) {\r\n        if (component.baseId) {\r\n            $array.move(this.invalidDatas[component.baseId], component);\r\n        }\r\n        else {\r\n            $array.move(this.invalidDatas[\"noBase\"], component);\r\n        }\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    Registry.prototype.removeFromInvalidComponents = function (component) {\r\n        if (component.baseId) {\r\n            $array.remove(this.invalidDatas[component.baseId], component);\r\n        }\r\n        $array.remove(this.invalidDatas[\"noBase\"], component);\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    Registry.prototype.addToInvalidSprites = function (sprite) {\r\n        if (sprite.baseId) {\r\n            $array.add(this.invalidSprites[sprite.baseId], sprite);\r\n        }\r\n        else {\r\n            $array.add(this.invalidSprites[\"noBase\"], sprite);\r\n        }\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    Registry.prototype.removeFromInvalidSprites = function (sprite) {\r\n        if (sprite.baseId) {\r\n            $array.remove(this.invalidSprites[sprite.baseId], sprite);\r\n        }\r\n        $array.remove(this.invalidSprites[\"noBase\"], sprite);\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    Registry.prototype.addToInvalidPositions = function (sprite) {\r\n        if (sprite.baseId) {\r\n            $array.add(this.invalidPositions[sprite.baseId], sprite);\r\n        }\r\n        else {\r\n            $array.add(this.invalidPositions[\"noBase\"], sprite);\r\n        }\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    Registry.prototype.removeFromInvalidPositions = function (sprite) {\r\n        if (sprite.baseId) {\r\n            $array.remove(this.invalidPositions[sprite.baseId], sprite);\r\n        }\r\n        $array.remove(this.invalidPositions[\"noBase\"], sprite);\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    Registry.prototype.addToInvalidLayouts = function (sprite) {\r\n        if (sprite.baseId) {\r\n            $array.add(this.invalidLayouts[sprite.baseId], sprite);\r\n        }\r\n        else {\r\n            $array.add(this.invalidLayouts[\"noBase\"], sprite);\r\n        }\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    Registry.prototype.removeFromInvalidLayouts = function (sprite) {\r\n        if (sprite.baseId) {\r\n            $array.remove(this.invalidLayouts[sprite.baseId], sprite);\r\n        }\r\n        $array.remove(this.invalidLayouts[\"noBase\"], sprite);\r\n    };\r\n    return Registry;\r\n}());\r\nexport { Registry };\r\n/**\r\n * A singleton global instance of [[Registry]].\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport var registry = new Registry();\r\n/**\r\n * Returns `true` if object is an instance of the class. It's the same as `instanceof` except it doesn't need to import the class.\r\n *\r\n * @param object Object\r\n * @param name Class name\r\n * @return Is instance of class\r\n */\r\nexport function is(object, name) {\r\n    var x = registry.registeredClasses[name];\r\n    return x != null && object instanceof x;\r\n}\r\n//# sourceMappingURL=Registry.js.map","/**\r\n * A collection of Math-related functions\r\n *\r\n * @todo Comment trigonometric functions?\r\n */\r\nimport * as $type from \"./Type\";\r\n/**\r\n * ============================================================================\r\n * CONSTANTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nexport var PI = Math.PI;\r\nexport var HALFPI = PI / 2;\r\nexport var RADIANS = PI / 180;\r\nexport var DEGREES = 180 / PI;\r\n/**\r\n * Converts any value and fits it into a specific value range.\r\n *\r\n * @param value  Source value\r\n * @param min    Minimum allowable value\r\n * @param max    Maximum allowable value\r\n * @return Number\r\n */\r\nexport function toNumberRange(value, min, max) {\r\n    if ($type.hasValue(value)) {\r\n        value = $type.toNumber(value);\r\n        return fitToRange(value, min, max);\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * Rounds the numeric value to whole number or specific precision of set.\r\n *\r\n * @param value      Value\r\n * @param precision  Precision (number of decimal points)\r\n * @param floor  In case value ends with 0.5 and precision is 0, we might need to floor the value instead of ceiling it.\r\n * @return Rounded value\r\n */\r\nexport function round(value, precision, floor) {\r\n    if (!$type.isNumber(precision) || precision <= 0) {\r\n        var rounded = Math.round(value);\r\n        if (floor) {\r\n            if (rounded - value == 0.5) {\r\n                rounded--;\r\n            }\r\n        }\r\n        return rounded;\r\n    }\r\n    else {\r\n        var d = Math.pow(10, precision);\r\n        return Math.round(value * d) / d;\r\n    }\r\n}\r\n/**\r\n * Ceils the numeric value to whole number or specific precision of set.\r\n *\r\n * @param value      Value\r\n * @param precision  Precision (number of decimal points)\r\n * @return Rounded value\r\n */\r\nexport function ceil(value, precision) {\r\n    if (!$type.isNumber(precision) || precision <= 0) {\r\n        return Math.ceil(value);\r\n    }\r\n    else {\r\n        var d = Math.pow(10, precision);\r\n        return Math.ceil(value * d) / d;\r\n    }\r\n}\r\n/**\r\n * Stretches `t` so that it will always be between `from` and `to`.\r\n *\r\n * @param t     Number from 0 to 1\r\n * @param from  Lowest possible value\r\n * @param to    Highest possible value\r\n * @return Adjusted value\r\n */\r\nexport function stretch(t, from, to) {\r\n    return (t * (to - from)) + from;\r\n}\r\n/**\r\n * Adjust numeric value so it fits to specific value range.\r\n *\r\n * @param value     Value\r\n * @param minValue  Lowest possible value\r\n * @param maxValue  Highest possible value\r\n * @return Adjusted value\r\n */\r\nexport function fitToRange(value, minValue, maxValue) {\r\n    if ($type.isNumber(minValue)) {\r\n        if ($type.isNumber(maxValue) && maxValue < minValue) {\r\n            var temp = maxValue;\r\n            maxValue = minValue;\r\n            minValue = temp;\r\n        }\r\n        if (value < minValue) {\r\n            value = minValue;\r\n        }\r\n    }\r\n    if ($type.isNumber(maxValue)) {\r\n        if (value > maxValue) {\r\n            value = maxValue;\r\n        }\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * Returns sine of a number.\r\n *\r\n * @param value  Value\r\n * @return Sine\r\n */\r\nexport function sin(value) {\r\n    return round(Math.sin(RADIANS * value), 10);\r\n}\r\n/**\r\n * Returns tan of a number.\r\n *\r\n * @param value  Value\r\n * @return Sine\r\n */\r\nexport function tan(value) {\r\n    return round(Math.tan(RADIANS * value), 10);\r\n}\r\n/**\r\n * Returns cosine of a number.\r\n *\r\n * @param value  Value\r\n * @return Cosine\r\n */\r\nexport function cos(value) {\r\n    return round(Math.cos(RADIANS * value), 10);\r\n}\r\nexport function max(left, right) {\r\n    if ($type.isNumber(left)) {\r\n        if ($type.isNumber(right)) {\r\n            if (right > left) {\r\n                return right;\r\n            }\r\n            else {\r\n                return left;\r\n            }\r\n        }\r\n        else {\r\n            return left;\r\n        }\r\n    }\r\n    else if ($type.isNumber(right)) {\r\n        return right;\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\nexport function min(left, right) {\r\n    if ($type.isNumber(left)) {\r\n        if ($type.isNumber(right)) {\r\n            if (right < left) {\r\n                return right;\r\n            }\r\n            else {\r\n                return left;\r\n            }\r\n        }\r\n        else {\r\n            return left;\r\n        }\r\n    }\r\n    else if ($type.isNumber(right)) {\r\n        return right;\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\n/**\r\n * Returns the closest value from the array of values to the reference value.\r\n *\r\n * @param values  Array of values\r\n * @param value   Reference value\r\n * @return Closes value from the array\r\n */\r\nexport function closest(values, referenceValue) {\r\n    return values.reduce(function (prev, curr) {\r\n        return (Math.abs(curr - referenceValue) < Math.abs(prev - referenceValue) ? curr : prev);\r\n    });\r\n}\r\n/**\r\n * Checks whether two ranges of values intersect.\r\n *\r\n * @param range1  Range 1\r\n * @param range2  Range 2\r\n * @return Any intersecting numbers?\r\n */\r\nexport function intersect(range1, range2) {\r\n    var start1 = $type.getValue(range1.start);\r\n    var start2 = $type.getValue(range2.start);\r\n    var end1 = $type.getValue(range1.end);\r\n    var end2 = $type.getValue(range2.end);\r\n    return Math.max(start1, start2) <= Math.min(end1, end2);\r\n}\r\n/**\r\n * Inverts the range of values.\r\n *\r\n * @param range  Range\r\n */\r\nexport function invertRange(range) {\r\n    var start = $type.getValue(range.start);\r\n    var end = $type.getValue(range.end);\r\n    return { start: 1 - end, end: 1 - start };\r\n}\r\n/**\r\n * Returns an intersection range between two ranges of values.\r\n *\r\n * @param range1  Range 1\r\n * @param range2  Range 2\r\n * @return Intersecting value range\r\n */\r\nexport function intersection(range1, range2) {\r\n    var start1 = $type.getValue(range1.start);\r\n    var start2 = $type.getValue(range2.start);\r\n    var end1 = $type.getValue(range1.end);\r\n    var end2 = $type.getValue(range2.end);\r\n    var startMax = Math.max(start1, start2);\r\n    var endMin = Math.min(end1, end2);\r\n    if (endMin < startMax) {\r\n        return undefined;\r\n    }\r\n    else {\r\n        return { start: startMax, end: endMin };\r\n    }\r\n}\r\n/**\r\n * Returns pixel \"distance\" between two points.\r\n *\r\n * If second point is not specified, distance from {x:0, y:0} point is\r\n * calculated.\r\n *\r\n * @param point1  Point 1\r\n * @param point2  Point 2\r\n * @return Distance in relative pixels\r\n */\r\nexport function getDistance(point1, point2) {\r\n    if (!point1) {\r\n        return 0;\r\n    }\r\n    if (!point2) {\r\n        point2 = { x: 0, y: 0 };\r\n    }\r\n    return Math.sqrt(Math.pow(Math.abs(point1.x - point2.x), 2) + Math.pow(Math.abs(point1.y - point2.y), 2));\r\n}\r\n/**\r\n * Returns pixel \"horizontal distance\" between two points.\r\n *\r\n * If second point is not specified, distance from {x:0, y:0} point is\r\n * calculated.\r\n *\r\n * @param point1  Point 1\r\n * @param point2  Point 2\r\n * @return Distance in relative pixels\r\n */\r\nexport function getHorizontalDistance(point1, point2) {\r\n    if (!point1) {\r\n        return 0;\r\n    }\r\n    if (!point2) {\r\n        point2 = { x: 0, y: 0 };\r\n    }\r\n    return Math.abs(point1.x - point2.x);\r\n}\r\n/**\r\n * Returns pixel \"vertical distance\" between two points.\r\n *\r\n * If second point is not specified, distance from {x:0, y:0} point is\r\n * calculated.\r\n *\r\n * @param point1  Point 1\r\n * @param point2  Point 2\r\n * @return Distance in relative pixels\r\n */\r\nexport function getVerticalDistance(point1, point2) {\r\n    if (!point1) {\r\n        return 0;\r\n    }\r\n    if (!point2) {\r\n        point2 = { x: 0, y: 0 };\r\n    }\r\n    return Math.abs(point1.y - point2.y);\r\n}\r\n/**\r\n * Returns approximate pixel \"distance\" between two points of cubic curve\r\n *\r\n * If second point is not specified, distance from {x:0, y:0} point is\r\n * calculated.\r\n *\r\n * @param point1  Point 1\r\n * @param point2  Point 2\r\n * @param controlPointA  Control Point 1\r\n * @param controlPointB  Control Point 2\r\n * @param stepCount  number of steps (the more, the more accurate result)\r\n * @return Distance in relative pixels\r\n */\r\nexport function getCubicCurveDistance(point1, point2, controlPointA, controlPointB, stepCount) {\r\n    if (!point1) {\r\n        return 0;\r\n    }\r\n    if (!point2) {\r\n        point2 = { x: 0, y: 0 };\r\n    }\r\n    var distance = 0;\r\n    var prevPoint = point1;\r\n    if (stepCount > 0) {\r\n        for (var s = 0; s <= stepCount; s++) {\r\n            var point = getPointOnCubicCurve(point1, point2, controlPointA, controlPointB, s / stepCount);\r\n            distance += getDistance(prevPoint, point);\r\n            prevPoint = point;\r\n        }\r\n    }\r\n    return distance;\r\n}\r\n/**\r\n * Returns scale based on original and end position of the two points.\r\n *\r\n * @param point1       Current position of point 1\r\n * @param startPoint1  Start position of point 1\r\n * @param point2       Current position of point 1\r\n * @param startPoint2  Start position of point 2\r\n * @return Scale        Calculated scale\r\n */\r\nexport function getScale(point1, startPoint1, point2, startPoint2) {\r\n    var initialDistance = getDistance(startPoint1, startPoint2);\r\n    var currentDistance = getDistance(point1, point2);\r\n    return Math.abs(currentDistance / initialDistance);\r\n}\r\n/**\r\n * Returns an exact mid point between two points.\r\n *\r\n * @param point1     Position of point 1\r\n * @param point2     Position of point 2\r\n * @return Mid point  Position of mid-point\r\n */\r\nexport function getMidPoint(point1, point2, position) {\r\n    if (!$type.isNumber(position)) {\r\n        position = 0.5;\r\n    }\r\n    return {\r\n        \"x\": (point1.x + (point2.x - point1.x) * position),\r\n        \"y\": (point1.y + (point2.y - point1.y) * position)\r\n    };\r\n}\r\n/**\r\n * Returns difference in angles between starting and ending position of two\r\n * vectors.\r\n *\r\n * @param point1       Current position of point 1\r\n * @param startPoint1  Start position of point 1\r\n * @param point2       Current position of point 1\r\n * @param startPoint2  Start position of point 2\r\n * @return Angle difference in degrees\r\n */\r\nexport function getRotation(point1, startPoint1, point2, startPoint2) {\r\n    // Get start and end angles\r\n    var startAngle = getAngle(startPoint1, startPoint2);\r\n    var angle = getAngle(point1, point2);\r\n    // Calculate angle\r\n    var diff = startAngle - angle;\r\n    if (diff < 0) {\r\n        diff += 360;\r\n    }\r\n    return diff;\r\n}\r\n/**\r\n * Calculates angle of the vector based on two or one point.\r\n *\r\n * @param point1  Point 1\r\n * @param point2  Point 2\r\n * @return Angle in degrees\r\n */\r\nexport function getAngle(point1, point2) {\r\n    if (!point2) {\r\n        point2 = { x: point1.x * 2, y: point1.y * 2 };\r\n    }\r\n    var diffX = point2.x - point1.x;\r\n    var diffY = point2.y - point1.y;\r\n    var angle = Math.atan2(diffY, diffX) * DEGREES;\r\n    if (angle < 0) {\r\n        angle += 360;\r\n    }\r\n    return normalizeAngle(angle);\r\n}\r\n/**\r\n * Returns the shift in coordinates of the center when item is rotated, moved\r\n * and scaled at the same time.\r\n *\r\n * @param center       Current center\r\n * @param point1       Frst reference point\r\n * @param startPoint1  Original position of the first reference point\r\n * @param point2       Second reference point\r\n * @param startPoint2  Original position of the first reference point\r\n * @return Shift in center point coordinates\r\n */\r\nexport function getCenterShift(center, point1, startPoint1, point2, startPoint2) {\r\n    // Get angle\r\n    var angle = getRotation(point1, startPoint1, point2, startPoint2) - 90;\r\n    if (angle < 0) {\r\n        angle += 360;\r\n    }\r\n    // Get distance between new position\r\n    var distance = getDistance(point1, point2);\r\n    // Calculate new X\r\n    var x = Math.cos(angle) / distance + point1.x;\r\n    var y = Math.cos(angle) / distance + point1.y;\r\n    var shift = {\r\n        \"x\": x - center.x,\r\n        \"y\": y - center.y\r\n    };\r\n    return shift;\r\n}\r\n/**\r\n * Converts an array of points into a bounding box rectangle.\r\n *\r\n * Array can contain any number of points.\r\n *\r\n * @param points  Points\r\n * @return Bounding box rectangle\r\n */\r\nexport function getBBox(points) {\r\n    if (points) {\r\n        var length_1 = points.length;\r\n        if (length_1 !== 0) {\r\n            var left = void 0;\r\n            var right = void 0;\r\n            var top_1;\r\n            var bottom = void 0;\r\n            for (var i = 0; i < length_1; i++) {\r\n                var point = points[i];\r\n                if (!$type.isNumber(right) || (point.x > right)) {\r\n                    right = point.x;\r\n                }\r\n                if (!$type.isNumber(left) || (point.x < left)) {\r\n                    left = point.x;\r\n                }\r\n                if (!$type.isNumber(top_1) || (point.y < top_1)) {\r\n                    top_1 = point.y;\r\n                }\r\n                if (!$type.isNumber(bottom) || (point.y > bottom)) {\r\n                    bottom = point.y;\r\n                }\r\n            }\r\n            return { x: left, y: top_1, width: right - left, height: bottom - top_1 };\r\n        }\r\n    }\r\n    return { x: 0, y: 0, width: 0, height: 0 };\r\n}\r\n/**\r\n * Returns a [[IRectangle]] object representing a common rectangle that fits\r\n * all passed in rectangles in it.\r\n *\r\n * @param rectangles  An array of rectangles\r\n * @return Common rectangle\r\n */\r\nexport function getCommonRectangle(rectangles) {\r\n    var length = rectangles.length;\r\n    if (length !== 0) {\r\n        var minX = void 0;\r\n        var minY = void 0;\r\n        var maxX = void 0;\r\n        var maxY = void 0;\r\n        for (var i = 0; i < length; i++) {\r\n            var rectangle = rectangles[i];\r\n            minX = min(rectangle.x, minX);\r\n            minY = min(rectangle.y, minY);\r\n            maxX = max(rectangle.x + rectangle.width, maxX);\r\n            maxY = max(rectangle.y + rectangle.height, maxY);\r\n        }\r\n        return { x: minX, y: minY, width: maxX - minX, height: maxY - minY };\r\n    }\r\n}\r\n/**\r\n * [getPointOnQuadraticCurve description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param pointA        [description]\r\n * @param pointB        [description]\r\n * @param controlPoint  [description]\r\n * @param position      [description]\r\n * @return [description]\r\n */\r\nexport function getPointOnQuadraticCurve(pointA, pointB, controlPoint, position) {\r\n    var x = (1 - position) * (1 - position) * pointA.x + 2 * (1 - position) * position * controlPoint.x + position * position * pointB.x;\r\n    var y = (1 - position) * (1 - position) * pointA.y + 2 * (1 - position) * position * controlPoint.y + position * position * pointB.y;\r\n    return { x: x, y: y };\r\n}\r\n/**\r\n * [getPointOnCubicCurve description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param pointA         [description]\r\n * @param pointB         [description]\r\n * @param controlPointA  [description]\r\n * @param controlPointB  [description]\r\n * @param position       [description]\r\n * @return [description]\r\n */\r\nexport function getPointOnCubicCurve(pointA, pointB, controlPointA, controlPointB, position) {\r\n    var point = { x: 0, y: 0 };\r\n    var mt1 = 1 - position;\r\n    var mt2 = mt1 * mt1;\r\n    var mt3 = mt2 * mt1;\r\n    point.x = pointA.x * mt3 + controlPointA.x * 3 * mt2 * position + controlPointB.x * 3 * mt1 * position * position + pointB.x * position * position * position;\r\n    point.y = pointA.y * mt3 + controlPointA.y * 3 * mt2 * position + controlPointB.y * 3 * mt1 * position * position + pointB.y * position * position * position;\r\n    return point;\r\n}\r\n/**\r\n * [getCubicControlPointA description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param p0        [description]\r\n * @param p1        [description]\r\n * @param p2        [description]\r\n * @param p3        [description]\r\n * @param tensionX  [description]\r\n * @param tensionY  [description]\r\n * @return [description]\r\n */\r\nexport function getCubicControlPointA(p0, p1, p2, p3, tensionX, tensionY) {\r\n    tensionX = adjustTension(tensionX);\r\n    tensionY = adjustTension(tensionY);\r\n    return { x: ((-p0.x + p1.x / tensionX + p2.x) * tensionX), y: ((-p0.y + p1.y / tensionY + p2.y) * tensionY) };\r\n}\r\n/**\r\n * [getCubicControlPointB description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param p0        [description]\r\n * @param p1        [description]\r\n * @param p2        [description]\r\n * @param p3        [description]\r\n * @param tensionX  [description]\r\n * @param tensionY  [description]\r\n * @return [description]\r\n */\r\nexport function getCubicControlPointB(p0, p1, p2, p3, tensionX, tensionY) {\r\n    tensionX = adjustTension(tensionX);\r\n    tensionY = adjustTension(tensionY);\r\n    return { x: ((p1.x + p2.x / tensionX - p3.x) * tensionX), y: ((p1.y + p2.y / tensionY - p3.y) * tensionY) };\r\n}\r\n/**\r\n * [adjustTension description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param tension  [description]\r\n * @return [description]\r\n */\r\nexport function adjustTension(tension) {\r\n    return 1 - tension + 0.00001;\r\n}\r\n/**\r\n * [normalizeAngle description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param value  [description]\r\n * @return [description]\r\n */\r\nexport function normalizeAngle(value) {\r\n    if (value == 360) {\r\n        return 360;\r\n    }\r\n    return value % 360;\r\n}\r\n/**\r\n * [normalizeAngleToRange description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @todo review this with various angles, can be tested on radar chart with custom start/end angles\r\n * @param value       [description]\r\n * @param startAngle  [description]\r\n * @param endAngle    [description]\r\n * @return [description]\r\n */\r\nexport function fitAngleToRange(value, startAngle, endAngle) {\r\n    if (startAngle > endAngle) {\r\n        var temp = startAngle;\r\n        startAngle = endAngle;\r\n        endAngle = temp;\r\n    }\r\n    value = normalizeAngle(value);\r\n    var count = (startAngle - normalizeAngle(startAngle)) / 360;\r\n    if (value < startAngle) {\r\n        value += 360 * (count + 1);\r\n    }\r\n    var maxEnd = startAngle + (endAngle - startAngle) / 2 + 180;\r\n    var maxStart = startAngle + (endAngle - startAngle) / 2 - 180;\r\n    if (value > endAngle) {\r\n        if (value - 360 > startAngle) {\r\n            value -= 360;\r\n        }\r\n        else {\r\n            if (value < maxEnd) {\r\n                value = endAngle;\r\n            }\r\n            else {\r\n                value = startAngle;\r\n            }\r\n        }\r\n    }\r\n    if (value < startAngle) {\r\n        if (value > maxStart) {\r\n            value = startAngle;\r\n        }\r\n        else {\r\n            value = endAngle;\r\n        }\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * Returns [[IRectangle]] of an arc in relative values, assuming that the\r\n * center is at the circle center.\r\n *\r\n * Used to find out max radius of an arc.\r\n *\r\n * @ignore Exclude from docs\r\n * @param startAngle  Start angle\r\n * @param endAngle    End angle\r\n * @param radius    \t Relative radius\r\n * @return Rectangle\r\n */\r\nexport function getArcRect(startAngle, endAngle, radius) {\r\n    var minX = Number.MAX_VALUE;\r\n    var minY = Number.MAX_VALUE;\r\n    var maxX = -Number.MAX_VALUE;\r\n    var maxY = -Number.MAX_VALUE;\r\n    var bpoints = [];\r\n    if (!$type.isNumber(radius)) {\r\n        radius = 1;\r\n    }\r\n    bpoints.push(getArcPoint(radius, startAngle));\r\n    bpoints.push(getArcPoint(radius, endAngle));\r\n    var fromAngle = Math.min(Math.floor(startAngle / 90) * 90, Math.floor(endAngle / 90) * 90);\r\n    var toAngle = Math.max(Math.ceil(startAngle / 90) * 90, Math.ceil(endAngle / 90) * 90);\r\n    for (var angle = fromAngle; angle <= toAngle; angle += 90) {\r\n        if (angle >= startAngle && angle <= endAngle) {\r\n            bpoints.push(getArcPoint(radius, angle));\r\n        }\r\n    }\r\n    for (var i = 0; i < bpoints.length; i++) {\r\n        var pt = bpoints[i];\r\n        if (pt.x < minX) {\r\n            minX = pt.x;\r\n        }\r\n        if (pt.y < minY) {\r\n            minY = pt.y;\r\n        }\r\n        if (pt.x > maxX) {\r\n            maxX = pt.x;\r\n        }\r\n        if (pt.y > maxY) {\r\n            maxY = pt.y;\r\n        }\r\n    }\r\n    return ({ x: minX, y: minY, width: maxX - minX, height: maxY - minY });\r\n}\r\n/**\r\n * Returns point on arc\r\n *\r\n * @param center point\r\n * @param radius\r\n * @param arc\r\n * @return {boolean}\r\n */\r\nexport function getArcPoint(radius, arc) {\r\n    return ({ x: radius * cos(arc), y: radius * sin(arc) });\r\n}\r\n/**\r\n * Returns true if a point is within rectangle\r\n *\r\n * @param point\r\n * @param rectangle\r\n * @return {boolean}\r\n */\r\nexport function isInRectangle(point, rectangle) {\r\n    if (point.x >= rectangle.x && point.x <= rectangle.x + rectangle.width && point.y > rectangle.y && point.y < rectangle.y + rectangle.height) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nexport function getLineIntersection(pointA1, pointA2, pointB1, pointB2) {\r\n    var x = ((pointA1.x * pointA2.y - pointA2.x * pointA1.y) * (pointB1.x - pointB2.x) - (pointA1.x - pointA2.x) * (pointB1.x * pointB2.y - pointB1.y * pointB2.x)) / ((pointA1.x - pointA2.x) * (pointB1.y - pointB2.y) - (pointA1.y - pointA2.y) * (pointB1.x - pointB2.x));\r\n    var y = ((pointA1.x * pointA2.y - pointA2.x * pointA1.y) * (pointB1.y - pointB2.y) - (pointA1.y - pointA2.y) * (pointB1.x * pointB2.y - pointB1.y * pointB2.x)) / ((pointA1.x - pointA2.x) * (pointB1.y - pointB2.y) - (pointA1.y - pointA2.y) * (pointB1.x - pointB2.x));\r\n    return { x: x, y: y };\r\n}\r\n//# sourceMappingURL=Math.js.map","import * as $math from \"./Math\";\r\nimport * as $type from \"./Type\";\r\n/**\r\n * ============================================================================\r\n * UTILITY FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Searches `array` for `value`.\r\n *\r\n * Returns -1 if not found.\r\n *\r\n * @param array  Source array\r\n * @param value  Value to search\r\n * @returns Index\r\n */\r\nexport function indexOf(array, value) {\r\n    var length = array.length;\r\n    for (var i = 0; i < length; ++i) {\r\n        // TODO handle NaN\r\n        if (array[i] === value) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * Calls `test` for each element in `array`.\r\n *\r\n * If `test` returns `true` then it immediately returns `true`.\r\n *\r\n * If `test` returns `false` for all of the elements in `array` then it returns `false`.\r\n *\r\n * @param array  Source array\r\n * @param test   Function which is called on each element\r\n * @returns Whether `test` returned true or not\r\n */\r\nexport function any(array, test) {\r\n    var length = array.length;\r\n    for (var i = 0; i < length; ++i) {\r\n        if (test(array[i])) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Calls `fn` function for every member of array and returns a new array out\r\n * of all outputs.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n * @returns New array\r\n */\r\nexport function map(array, fn) {\r\n    var length = array.length;\r\n    var output = new Array(length);\r\n    for (var i = 0; i < length; ++i) {\r\n        output[i] = fn(array[i], i);\r\n    }\r\n    return output;\r\n}\r\n/**\r\n * Iterates through all items in array and calls `fn` function for each of\r\n * them.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n */\r\nexport function each(array, fn) {\r\n    var length = array.length;\r\n    for (var i = 0; i < length; ++i) {\r\n        fn(array[i], i);\r\n    }\r\n}\r\n/**\r\n * Iterates through all items in array in reverse order and calls `fn` function for each of\r\n * them.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n */\r\nexport function eachReverse(array, fn) {\r\n    var i = array.length;\r\n    while (i--) {\r\n        fn(array[i], i);\r\n    }\r\n}\r\n/**\r\n * Iterates through all items in array and calls `fn` function for each of\r\n * them.\r\n *\r\n * If `fn` call evaluates to `false`, further iteration is cancelled.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n */\r\nexport function eachContinue(array, fn) {\r\n    var length = array.length;\r\n    for (var i = 0; i < length; ++i) {\r\n        if (!fn(array[i], i)) {\r\n            break;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Shifts an item at `index` towards beginning of the array.\r\n *\r\n * @param array  Source array\r\n * @param index  Target element index\r\n */\r\nexport function shiftLeft(array, index) {\r\n    var length = array.length;\r\n    for (var i = index; i < length; ++i) {\r\n        array[i - index] = array[i];\r\n    }\r\n    array.length = length - index;\r\n}\r\n/**\r\n * Returns the last item of the array.\r\n *\r\n * @param array  Source array\r\n * @returns Last item\r\n */\r\nexport function last(array) {\r\n    var length = array.length;\r\n    return length ? array[length - 1] : undefined;\r\n}\r\n/**\r\n * Returns the first item of the array.\r\n *\r\n * @param array  Source array\r\n * @returns Last item\r\n */\r\nexport function first(array) {\r\n    return array[0];\r\n}\r\n/**\r\n * Inserts `element` into `array` at `index`.\r\n *\r\n * Caps `index` to be between `0` and `array.length`\r\n *\r\n * @param array    Source array\r\n * @param element  Item to insert\r\n * @param array    Index to insert item at\r\n */\r\nexport function insert(array, element, index) {\r\n    //if (array) {\r\n    index = $math.fitToRange(index, 0, array.length);\r\n    array.splice(index, 0, element);\r\n    //}\r\n}\r\n/**\r\n * Removes all copies of `element` from `array` (if they exist) and then\r\n * inserts `element` at `index`.\r\n *\r\n * @param array    Source array\r\n * @param element  Item\r\n * @param array    Index to move item to\r\n */\r\nexport function setIndex(array, element, index) {\r\n    remove(array, element);\r\n    insert(array, element, index);\r\n}\r\n/**\r\n * Pushes all of the elements from `input` into `array`.\r\n *\r\n * @param array  Output array\r\n * @param input  Input array\r\n */\r\nexport function pushAll(array, input) {\r\n    var length = input.length;\r\n    for (var i = 0; i < length; ++i) {\r\n        array.push(input[i]);\r\n    }\r\n}\r\n/**\r\n * Removes `element` from `array`.\r\n *\r\n * If there are multiple copies of `element`, they are all removed.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to remove\r\n */\r\nexport function remove(array, element) {\r\n    var found = false;\r\n    var index = array.indexOf(element);\r\n    if (index !== -1) {\r\n        found = true;\r\n        array.splice(index, 1);\r\n        var length_1 = array.length;\r\n        while (index < length_1) {\r\n            // TODO handle NaN\r\n            if (array[index] === element) {\r\n                array.splice(index, 1);\r\n                --length_1;\r\n            }\r\n            else {\r\n                ++index;\r\n            }\r\n        }\r\n    }\r\n    return found;\r\n}\r\n/**\r\n * Adds an `element` to `array`.\r\n *\r\n * If array already contains and item like this, it is removed before adding\r\n * it again.\r\n *\r\n * Optionally `toIndex` can be specified to add element at specific index.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to add\r\n * @param array    Index to move item to\r\n */\r\nexport function move(array, element, toIndex) {\r\n    // @todo this implementation must be the same as the List.moveValue method\r\n    // @todo don't do anything if the desired index is the same as the current index\r\n    var index = indexOf(array, element);\r\n    // @todo remove all old values rather than only the first ?\r\n    if (index !== -1) {\r\n        removeIndex(array, index);\r\n    }\r\n    if (toIndex == null) {\r\n        array.push(element);\r\n    }\r\n    else {\r\n        insertIndex(array, toIndex, element);\r\n    }\r\n}\r\n/**\r\n * Inserts `element` into `array` at `index`.\r\n *\r\n * If `index` is not provided, it will insert `element` at the end of `array`.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to add\r\n * @param array    Index to add item at\r\n */\r\nexport function add(array, element, index) {\r\n    // Append to the end if index is not set\r\n    if (!$type.isNumber(index)) {\r\n        array.push(element);\r\n    }\r\n    // Add to the beginning of array if index is 0\r\n    else if (index === 0) {\r\n        array.unshift(element);\r\n    }\r\n    // Add to indicated place if index is set\r\n    else {\r\n        array.splice(index, 0, element);\r\n    }\r\n}\r\n/**\r\n * Removes `element` from `array` (if it exists) and then inserts `element` at\r\n * `index`.\r\n *\r\n * If `index` is not provided, it will insert `element` at the end of `array`.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to remove\r\n * @param array    Index to move item to\r\n */\r\nexport function replace(array, element, index) {\r\n    // check if exists\r\n    var ind = array.indexOf(element);\r\n    // remove if exists\r\n    if (ind !== -1) {\r\n        array.splice(ind, 1);\r\n    }\r\n    // add to end if index is not set\r\n    if (!$type.isNumber(index)) {\r\n        array.push(element);\r\n    }\r\n    // add to indicated place if index is set\r\n    else {\r\n        array.splice(index, 0, element);\r\n    }\r\n}\r\n/**\r\n * Wraps `input` in an array, if it isn't already an array.\r\n *\r\n * @param input  Source value\r\n * @return An array\r\n */\r\nexport function toArray(input) {\r\n    if (Array.isArray(input)) {\r\n        return input;\r\n    }\r\n    else {\r\n        return [input];\r\n    }\r\n}\r\n/**\r\n * Returns `true` if `element` exists in `array`.\r\n *\r\n * @param array    Source array\r\n * @param element  Item to search for\r\n * @returns Item in array?\r\n */\r\nexport function has(array, element) {\r\n    return indexOf(array, element) !== -1;\r\n}\r\n/**\r\n * Returns a shallow copy of `array`.\r\n *\r\n * @param array  Source array\r\n * @returns Copy of the array\r\n */\r\nexport function copy(array) {\r\n    var length = array.length;\r\n    // It's faster to create the array with a pre-defined length\r\n    var output = new Array(length);\r\n    for (var i = 0; i < length; ++i) {\r\n        // Because the array has a pre-defined length, we have to assign rather than push\r\n        // This is also faster than pushing\r\n        output[i] = array[i];\r\n    }\r\n    return output;\r\n}\r\n/**\r\n * Returns a copy of `array` which contains all the elements between `start`\r\n * and `end`. (including `start` and excluding `end`)\r\n *\r\n * If `end` is not provided, it defaults to `array.length`.\r\n *\r\n * @param array  Source array\r\n * @param start  Start index\r\n * @param end    End index\r\n * @returns Part of the array\r\n */\r\nexport function slice(array, start, end) {\r\n    if (end === void 0) { end = array.length; }\r\n    var output = new Array(end - start);\r\n    for (var i = start; i < end; ++i) {\r\n        output[i - start] = array[i];\r\n    }\r\n    return output;\r\n}\r\n/**\r\n * Inserts a value into array at specific index.\r\n *\r\n * @param array  Source array\r\n * @param index  Index\r\n * @param value  Value to insert\r\n */\r\nexport function insertIndex(array, index, value) {\r\n    array.splice(index, 0, value);\r\n}\r\n/**\r\n * Removes a value from array at specific index.\r\n *\r\n * @param array  Source array\r\n * @param index  Index\r\n */\r\nexport function removeIndex(array, index) {\r\n    array.splice(index, 1);\r\n}\r\n/**\r\n * Orders an array using specific `ordering` function and returns index of\r\n * the `value`.\r\n *\r\n * @ignore Exclude from docs\r\n * @param array     Source array\r\n * @param ordering  An ordering function\r\n * @param value     Value to search for\r\n * @returns Result of the search\r\n */\r\nexport function getSortedIndex(array, ordering, value) {\r\n    var start = 0;\r\n    var end = array.length;\r\n    var found = false;\r\n    while (start < end) {\r\n        // TODO is this faster/slower than using Math.floor ?\r\n        var pivot = (start + end) >> 1;\r\n        var order = ordering(value, array[pivot]);\r\n        // less\r\n        if (order < 0) {\r\n            end = pivot;\r\n            // equal\r\n        }\r\n        else if (order === 0) {\r\n            found = true;\r\n            start = pivot + 1;\r\n            // more\r\n        }\r\n        else {\r\n            start = pivot + 1;\r\n        }\r\n    }\r\n    return {\r\n        found: found,\r\n        index: (found ? start - 1 : start)\r\n    };\r\n}\r\n/**\r\n * Searches the array using custom function and returns index of the item if\r\n * found.\r\n *\r\n * Will call `matches` function on all items of the array. If return value\r\n * evaluates to `true`, index is returned.\r\n *\r\n * Otherwise returns -1.\r\n *\r\n * @param array    Source array\r\n * @param matches  Search function\r\n * @returns Index of the item if found\r\n */\r\nexport function findIndex(array, matches) {\r\n    var length = array.length;\r\n    for (var i = 0; i < length; ++i) {\r\n        if (matches(array[i], i)) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * Searches the array using custom function and returns item if found.\r\n *\r\n * Will call `matches` function on all items of the array. If return value\r\n * evaluates to `true`, index is returned.\r\n *\r\n * Otherwise returns `undefined`.\r\n *\r\n * @param array    Source array\r\n * @param matches  Search function\r\n * @returns Item if found\r\n */\r\nexport function find(array, matches) {\r\n    var index = findIndex(array, matches);\r\n    if (index !== -1) {\r\n        return array[index];\r\n    }\r\n}\r\n/**\r\n * Iterates through all items in array and calls `fn` function for each of\r\n * them.\r\n *\r\n * @param array  Source array\r\n * @param fn     Callback function\r\n */\r\nexport function shuffle(array) {\r\n    // https://stackoverflow.com/a/2450976/449477\r\n    var currentIndex = array.length, temporaryValue, randomIndex;\r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n        // Pick a remaining element...\r\n        randomIndex = Math.floor(Math.random() * currentIndex);\r\n        currentIndex -= 1;\r\n        // And swap it with the current element.\r\n        temporaryValue = array[currentIndex];\r\n        array[currentIndex] = array[randomIndex];\r\n        array[randomIndex] = temporaryValue;\r\n    }\r\n}\r\n//# sourceMappingURL=Array.js.map","/**\r\n * A collection of universal utility functions.\r\n */\r\nimport { Percent } from \"./Percent\";\r\nimport { isSafari } from \"./Browser\";\r\nimport * as $math from \"../utils/Math\";\r\nimport * as $type from \"../utils/Type\";\r\nimport * as $string from \"./String\";\r\nimport * as $strings from \"./Strings\";\r\nimport * as $object from \"./Object\";\r\nimport * as $array from \"./Array\";\r\n/**\r\n * ============================================================================\r\n * MISC FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Marks a value as being used (e.g. because the value has side effects).\r\n */\r\nexport function used(value) { }\r\n/**\r\n * Copies all properties of one object to the other, omitting undefined.\r\n *\r\n * @param fromObject  Source object\r\n * @param toObject    Target object\r\n * @return Updated target object\r\n * @todo Maybe consolidate with utils.copy?\r\n */\r\nexport function copyProperties(source, target) {\r\n    $object.each(source, function (key, value) {\r\n        // only if value is set\r\n        if ($type.hasValue(value)) {\r\n            target[key] = value;\r\n        }\r\n    });\r\n    return target;\r\n}\r\n/**\r\n * Removes target from url\r\n */\r\nexport function stripHash(url) {\r\n    return /^[^#]*/.exec(url)[0];\r\n}\r\nexport function getBaseURI() {\r\n    var url = \"#\";\r\n    // Needed until https://bugs.webkit.org/show_bug.cgi?id=189499 is fixed\r\n    if (isSafari()) {\r\n        var baseURI = document.baseURI;\r\n        if (baseURI) {\r\n            baseURI = stripHash(baseURI);\r\n            var loc = stripHash(location.href);\r\n            if (baseURI !== loc) {\r\n                url = loc + url;\r\n            }\r\n        }\r\n    }\r\n    return url;\r\n}\r\n/**\r\n * Copies all properties of one object to the other, omitting undefined, but only if property in target object doesn't have a value set.\r\n *\r\n * @param fromObject  Source object\r\n * @param toObject    Target object\r\n * @return Updated target object\r\n * @todo Maybe consolidate with utils.copy?\r\n */\r\nexport function softCopyProperties(source, target) {\r\n    $object.each(source, function (key, value) {\r\n        // only if value is set\r\n        if ($type.hasValue(value) && !($type.hasValue(target[key]))) {\r\n            target[key] = value;\r\n        }\r\n    });\r\n    return target;\r\n}\r\n/**\r\n * Copies all properties of one object to the other.\r\n *\r\n * @param source     Source object\r\n * @param recipient  Target object\r\n * @return Updated target object\r\n */\r\nexport function copy(source, target) {\r\n    $object.each(source, function (key, value) {\r\n        target[key] = value;\r\n    });\r\n    return target;\r\n}\r\n/**\r\n * Checks if value is not empty (undefined or zero-length string).\r\n *\r\n * @param value  Value to check\r\n * @return `true` if value is not \"empty\"\r\n */\r\nexport function isNotEmpty(value) {\r\n    return $type.hasValue(value) && (value.toString() !== \"\");\r\n}\r\n/**\r\n * [relativeToValue description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param percent  [description]\r\n * @param full     [description]\r\n * @return [description]\r\n */\r\nexport function relativeToValue(percent, full) {\r\n    if ($type.isNumber(percent)) {\r\n        return percent;\r\n    }\r\n    else if (percent != null && $type.isNumber(percent.value) && $type.isNumber(full)) {\r\n        return full * percent.value;\r\n    }\r\n    else {\r\n        return 0;\r\n    }\r\n}\r\n/**\r\n * [relativeRadiusToValue description]\r\n *\r\n * Differs from relativeToValue so that if a value is negative, it subtracts\r\n * it from full value.\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param percent             [description]\r\n * @param full                [description]\r\n * @param subtractIfNegative  [description]\r\n * @return [description]\r\n */\r\nexport function relativeRadiusToValue(percent, full, subtractIfNegative) {\r\n    var value;\r\n    if ($type.isNumber(percent)) {\r\n        value = percent;\r\n        if (value < 0) {\r\n            if (subtractIfNegative) {\r\n                value = full + value;\r\n            }\r\n            else {\r\n                value = full - value;\r\n            }\r\n        }\r\n    }\r\n    else if (percent != null && $type.isNumber(percent.value)) {\r\n        value = full * percent.value;\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * [valueToRelative description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param value  [description]\r\n * @param full   [description]\r\n * @return [description]\r\n */\r\nexport function valueToRelative(value, full) {\r\n    if (value instanceof Percent) {\r\n        return value.value;\r\n    }\r\n    else {\r\n        return value / full;\r\n    }\r\n}\r\n/**\r\n * Returns pixel ratio of the current screen (used on retina displays).\r\n *\r\n * @return Pixel ratio\r\n */\r\nexport function getPixelRatio() {\r\n    var ratio = window.devicePixelRatio || 1;\r\n    return ratio;\r\n}\r\n/**\r\n * ============================================================================\r\n * STRING FORMATTING FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Converts camelCased text to dashed version:\r\n * (\"thisIsString\" > \"this-is-string\")\r\n *\r\n * @param str  Input\r\n * @return Output\r\n */\r\nexport function camelToDashed(str) {\r\n    return str.replace(/\\W+/g, '-').replace(/([a-z\\d])([A-Z])/g, '$1-$2').toLowerCase();\r\n}\r\n/**\r\n * Converts tring to uppercase.\r\n *\r\n * @param str  String to convert\r\n * @return uppercased string\r\n * @todo Maybe make it better\r\n */\r\nexport function capitalize(str) {\r\n    var arr = str.split(\"\");\r\n    arr[0] = arr[0].toUpperCase();\r\n    return arr.join(\"\");\r\n}\r\n/**\r\n * Converts any value into its string representation.\r\n *\r\n * @param value  Value\r\n * @return String represantation of the value\r\n */\r\nexport function stringify(value) {\r\n    return JSON.stringify(value);\r\n}\r\n/**\r\n * Escapes string so it can safely be used in a Regex.\r\n *\r\n * @param value  Unsescaped string\r\n * @return Escaped string\r\n */\r\nexport function escapeForRgex(value) {\r\n    return value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\r\n}\r\n/**\r\n * Splits the text into multiple lines, respecting maximum character count.\r\n * Prioretizes splitting on spaces and punctuation. Falls back on splitting\r\n * mid-word if there's no other option.\r\n *\r\n * @param text      Text\r\n * @param maxChars  Maximum number of characters per line\r\n * @return An array of split text\r\n */\r\nexport function splitTextByCharCount(text, maxChars, fullWords, rtl) {\r\n    // Maybe the text fits?\r\n    if (text.length <= maxChars) {\r\n        return [text];\r\n    }\r\n    // Init result\r\n    var res = [];\r\n    // Split by words or by charts\r\n    if (fullWords) {\r\n        // Split by words first\r\n        // Split by spacing\r\n        var currentIndex = -1;\r\n        var tmpText = text.replace(/([,;:!?\\\\\\/\\.]+[\\s]+|[\\s])/g, $strings.PLACEHOLDER + \"$1\" + $strings.PLACEHOLDER);\r\n        var words = tmpText.split($strings.PLACEHOLDER);\r\n        // Process each word\r\n        for (var i = 0; i < words.length; i++) {\r\n            // Get word and symbol count\r\n            var word = words[i];\r\n            var wordLength = word.length;\r\n            // Ignore empty words\r\n            if (wordLength === 0) {\r\n                continue;\r\n            }\r\n            // Check word length\r\n            //if ((wordLength > maxChars) && fullWords !== true) {\r\n            if (wordLength > maxChars) {\r\n                // A single word is longer than allowed symbol count\r\n                // Break it up\r\n                if (rtl) {\r\n                    word = reverseString(word);\r\n                }\r\n                var parts = word.match(new RegExp(\".{1,\" + maxChars + \"}\", \"g\"));\r\n                // TODO is this correct ?\r\n                if (parts) {\r\n                    if (rtl) {\r\n                        for (var x = 0; x < parts.length; x++) {\r\n                            parts[x] = reverseString(parts[x]);\r\n                        }\r\n                        //parts.reverse();\r\n                    }\r\n                    res = res.concat(parts);\r\n                }\r\n            }\r\n            else {\r\n                // Init current line\r\n                if (currentIndex === -1) {\r\n                    res.push(\"\");\r\n                    currentIndex = 0;\r\n                }\r\n                // Check if we need to break into another line\r\n                if (((res[currentIndex].length + wordLength + 1) > maxChars) && res[currentIndex] !== \"\") {\r\n                    res.push(\"\");\r\n                    currentIndex++;\r\n                }\r\n                // Add word\r\n                res[currentIndex] += word;\r\n            }\r\n            // Update index\r\n            currentIndex = res.length - 1;\r\n        }\r\n    }\r\n    else {\r\n        // Splitting by anywhere (living la vida facil)\r\n        var parts = text.match(new RegExp(\".{1,\" + maxChars + \"}\", \"g\"));\r\n        if (parts) {\r\n            if (rtl) {\r\n                for (var x = 0; x < parts.length; x++) {\r\n                    parts[x] = reverseString(parts[x]);\r\n                }\r\n            }\r\n            res = parts;\r\n        }\r\n    }\r\n    // Do we have only one word that does not fit?\r\n    // Since fullWords is set and we can't split the word, we end up with empty\r\n    // set.\r\n    if (res.length == 1 && fullWords && (res[0].length > maxChars)) {\r\n        res = [];\r\n    }\r\n    return res;\r\n}\r\n/**\r\n * Truncates the text to certain character count.\r\n *\r\n * Will add ellipsis if the string is truncated. Optionally, can truncate on\r\n * full words only.\r\n *\r\n * For RTL support, pass in the fifth parameter as `true`.\r\n *\r\n * @param text       Input text\r\n * @param maxChars   Maximum character count of output\r\n * @param ellipsis   Ellipsis string, i.e. \"...\"\r\n * @param fullWords  If `true`, will not break mid-word, unless there's a single word and it does not with into `maxChars`\r\n * @param rtl        Is this an RTL text?\r\n * @return Truncated text\r\n */\r\nexport function truncateWithEllipsis(text, maxChars, ellipsis, fullWords, rtl) {\r\n    if (text.length <= maxChars) {\r\n        return text;\r\n    }\r\n    // Calc max chars\r\n    maxChars -= ellipsis.length;\r\n    if (maxChars < 1) {\r\n        maxChars = 1;\r\n        //ellipsis = \"\";\r\n    }\r\n    // Get lines\r\n    var lines = splitTextByCharCount(text, maxChars, fullWords, rtl);\r\n    // Use first line\r\n    return (lines[0] || \"\") + ellipsis;\r\n}\r\n/**\r\n * Removes whitespace from beginning and end of the string.\r\n *\r\n * @param str  Input\r\n * @return Output\r\n */\r\nexport function trim(str) {\r\n    return str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, \"\");\r\n}\r\n;\r\n/**\r\n * Removes whitespace from end of the string.\r\n *\r\n * @param str  Input\r\n * @return Output\r\n */\r\nexport function rtrim(str) {\r\n    return str.replace(/[\\s\\uFEFF\\xA0]+$/g, \"\");\r\n}\r\n;\r\n/**\r\n * Removes whitespace from beginning of the string.\r\n *\r\n * @param str  Input\r\n * @return Output\r\n */\r\nexport function ltrim(str) {\r\n    return str.replace(/^[\\s\\uFEFF\\xA0]+/g, \"\");\r\n}\r\n;\r\n/**\r\n * Reverses string.\r\n *\r\n * @param str  Input\r\n * @return Output\r\n */\r\nexport function reverseString(str) {\r\n    return str.split(\"\").reverse().join(\"\");\r\n}\r\n/**\r\n * Removes quotes from the string.\r\n *\r\n * @param str  Input\r\n * @return Output\r\n */\r\nexport function unquote(str) {\r\n    var res = str.trim();\r\n    res = str.replace(/^'(.*)'$/, \"$1\");\r\n    if (res == str) {\r\n        res = str.replace(/^\"(.*)\"$/, \"$1\");\r\n    }\r\n    return res;\r\n}\r\n/**\r\n * Pads a string with additional characters to certain length.\r\n *\r\n * @param value  A numeric value\r\n * @param len    Result string length in characters\r\n * @param char   A character to use for padding\r\n * @return Padded value as string\r\n */\r\nexport function padString(value, len, char) {\r\n    if (len === void 0) { len = 0; }\r\n    if (char === void 0) { char = \"0\"; }\r\n    if (typeof value !== \"string\") {\r\n        value = value.toString();\r\n    }\r\n    return len > value.length ? Array(len - value.length + 1).join(char) + value : value;\r\n}\r\n/**\r\n * Tries to determine format type.\r\n *\r\n * @ignore Exclude from docs\r\n * @param format  Format string\r\n * @return Format type (\"string\" | \"number\" | \"date\" | \"duration\")\r\n */\r\nexport function getFormat(format) {\r\n    // Undefined?\r\n    if (typeof format === \"undefined\") {\r\n        return $strings.STRING;\r\n    }\r\n    // Cleanup and lowercase format\r\n    format = format.toLowerCase().replace(/^\\[[^\\]]*\\]/, \"\");\r\n    // Remove style tags\r\n    format = format.replace(/\\[[^\\]]+\\]/, \"\");\r\n    // Trim\r\n    format = format.trim();\r\n    // Check for any explicit format hints (i.e. /Date)\r\n    var hints = format.match(/\\/(date|number|duration)$/);\r\n    if (hints) {\r\n        return hints[1];\r\n    }\r\n    // Check for explicit hints\r\n    if (format === $strings.NUMBER) {\r\n        return $strings.NUMBER;\r\n    }\r\n    if (format === $strings.DATE) {\r\n        return $strings.DATE;\r\n    }\r\n    if (format === $strings.DURATION) {\r\n        return $strings.DURATION;\r\n    }\r\n    // Detect number formatting symbols\r\n    if (format.match(/[#0]/)) {\r\n        return $strings.NUMBER;\r\n    }\r\n    // Detect date formatting symbols\r\n    if (format.match(/[ymwdhnsqaxkzgtei]/)) {\r\n        return $strings.DATE;\r\n    }\r\n    // Nothing? Let's display as string\r\n    return $strings.STRING;\r\n}\r\n/**\r\n * Cleans up format:\r\n * * Strips out formatter hints\r\n *\r\n * @ignore Exclude from docs\r\n * @param format  Format\r\n * @return Cleaned format\r\n */\r\nexport function cleanFormat(format) {\r\n    return format.replace(/\\/(date|number|duration)$/i, \"\");\r\n}\r\n/**\r\n * Strips all tags from the string.\r\n *\r\n * @param text  Source string\r\n * @return String without tags\r\n */\r\nexport function stripTags(text) {\r\n    return text ? text.replace(/<[^>]*>/g, \"\") : text;\r\n}\r\n/**\r\n * Removes new lines and tags from a string.\r\n *\r\n * @param text  String to conver\r\n * @return Converted string\r\n */\r\nexport function plainText(text) {\r\n    return text ? stripTags(text.replace(/[\\n\\r]+/g, \". \")) : text;\r\n}\r\n/**\r\n * ============================================================================\r\n * TYPE CONVERSION FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Converts numeric value into string. Deals with large or small numbers that\r\n * would otherwise use exponents.\r\n *\r\n * @param value  Numeric value\r\n * @return Numeric value as string\r\n */\r\nexport function numberToString(value) {\r\n    // TODO handle Infinity and -Infinity\r\n    if ($type.isNaN(value)) {\r\n        return \"NaN\";\r\n    }\r\n    if (value === Infinity) {\r\n        return \"Infinity\";\r\n    }\r\n    if (value === -Infinity) {\r\n        return \"-Infinity\";\r\n    }\r\n    // Negative 0\r\n    if ((value === 0) && (1 / value === -Infinity)) {\r\n        return \"-0\";\r\n    }\r\n    // Preserve negative and deal with absoute values\r\n    var negative = value < 0;\r\n    value = Math.abs(value);\r\n    // TODO test this\r\n    var parsed = $type.getValue(/^([0-9]+)(?:\\.([0-9]+))?(?:e[\\+\\-]([0-9]+))?$/.exec(\"\" + value));\r\n    var digits = parsed[1];\r\n    var decimals = parsed[2] || \"\";\r\n    var res;\r\n    // Leave the nummber as it is if it does not use exponents\r\n    if (parsed[3] == null) {\r\n        res = (decimals === \"\" ? digits : digits + \".\" + decimals);\r\n    }\r\n    else {\r\n        var exponent = +parsed[3];\r\n        // Deal with decimals\r\n        if (value < 1) {\r\n            var zeros = exponent - 1;\r\n            res = \"0.\" + $string.repeat(\"0\", zeros) + digits + decimals;\r\n            // Deal with integers\r\n        }\r\n        else {\r\n            var zeros = exponent - decimals.length;\r\n            if (zeros === 0) {\r\n                res = digits + decimals;\r\n            }\r\n            else if (zeros < 0) {\r\n                res = digits + decimals.slice(0, zeros) + \".\" + decimals.slice(zeros);\r\n            }\r\n            else {\r\n                res = digits + decimals + $string.repeat(\"0\", zeros);\r\n            }\r\n        }\r\n    }\r\n    return negative ? \"-\" + res : res;\r\n}\r\n/**\r\n * Converts anything to Date object.\r\n *\r\n * @param value  A value of any type\r\n * @return Date object representing a value\r\n */\r\nexport function anyToDate(value) {\r\n    if ($type.isDate(value)) {\r\n        // TODO maybe don't create a new Date ?\r\n        return new Date(value);\r\n    }\r\n    else if ($type.isNumber(value)) {\r\n        return new Date(value);\r\n    }\r\n    else {\r\n        // Try converting to number (assuming timestamp)\r\n        var num = Number(value);\r\n        if (!$type.isNumber(num)) {\r\n            return new Date(value);\r\n        }\r\n        else {\r\n            return new Date(num);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Tries converting any value to a number.\r\n *\r\n * @param value  Source value\r\n * @return Number\r\n */\r\nexport function anyToNumber(value) {\r\n    if ($type.isDate(value)) {\r\n        return value.getTime();\r\n    }\r\n    else if ($type.isNumber(value)) {\r\n        return value;\r\n    }\r\n    else if ($type.isString(value)) {\r\n        // Try converting to number (assuming timestamp)\r\n        var num = Number(value);\r\n        if (!$type.isNumber(num)) {\r\n            // Failing\r\n            return undefined;\r\n        }\r\n        else {\r\n            return num;\r\n        }\r\n    }\r\n}\r\n/**\r\n * ============================================================================\r\n * DATE-RELATED FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Returns a year day.\r\n *\r\n * @param date  Date\r\n * @param utc   Assume UTC dates?\r\n * @return Year day\r\n * @todo Account for UTC\r\n */\r\nexport function getYearDay(date, utc) {\r\n    if (utc === void 0) { utc = false; }\r\n    var first = new Date(date.getFullYear(), 0, 1, 0, 0, 0, 0);\r\n    return Math.floor((date.getTime() - first.getTime()) / 86400000) + 1;\r\n}\r\n/**\r\n * Returns week number for a given date.\r\n *\r\n * @param date  Date\r\n * @param utc   Assume UTC dates?\r\n * @return Week number\r\n * @todo Account for UTC\r\n */\r\nexport function getWeek(date, utc) {\r\n    if (utc === void 0) { utc = false; }\r\n    var day = getYearDay(date, utc) - 1;\r\n    var week = Math.floor((day - (date.getDay() || 7) + 10) / 7);\r\n    if (week === 0) {\r\n        week = 53;\r\n    }\r\n    else if (week === 53) {\r\n        week = 1;\r\n    }\r\n    return week;\r\n}\r\n/**\r\n * Returns a week number in the month.\r\n *\r\n * @param date  Source Date\r\n * @param utc   Assume UTC dates?\r\n * @return Week number in month\r\n */\r\nexport function getMonthWeek(date, utc) {\r\n    if (utc === void 0) { utc = false; }\r\n    var firstWeek = getWeek(new Date(date.getFullYear(), date.getMonth(), 1), utc);\r\n    var currentWeek = getWeek(date, utc);\r\n    if (currentWeek == 1) {\r\n        currentWeek = 53;\r\n    }\r\n    return currentWeek - firstWeek + 1;\r\n}\r\n/**\r\n * Returns a year day out of the given week number.\r\n *\r\n * @param week     Week\r\n * @param year     Year\r\n * @param weekday  Weekday\r\n * @param utc      Assume UTC dates\r\n * @return Day in a year\r\n */\r\nexport function getDayFromWeek(week, year, weekday, utc) {\r\n    if (weekday === void 0) { weekday = 1; }\r\n    if (utc === void 0) { utc = false; }\r\n    var date = new Date(year, 0, 4, 0, 0, 0, 0);\r\n    if (utc) {\r\n        date.setUTCFullYear(year);\r\n    }\r\n    var day = week * 7 + weekday - ((date.getDay() || 7) + 3);\r\n    return day;\r\n}\r\n/**\r\n * Returns 12-hour representation out of the 24-hour hours.\r\n *\r\n * @param hours  24-hour number\r\n * @return 12-hour number\r\n */\r\nexport function get12Hours(hours, base) {\r\n    if (hours > 12) {\r\n        hours -= 12;\r\n    }\r\n    else if (hours === 0) {\r\n        hours = 12;\r\n    }\r\n    return $type.hasValue(base) ? hours + (base - 1) : hours;\r\n}\r\n/**\r\n * Returns a string name of the tome zone.\r\n *\r\n * @param date     Date object\r\n * @param long     Should return long (\"Pacific Standard Time\") or short abbreviation (\"PST\")\r\n * @param savings  Include information if it's in daylight savings mode\r\n * @param utc      Assume UTC dates\r\n * @return Time zone name\r\n */\r\nexport function getTimeZone(date, long, savings, utc) {\r\n    if (long === void 0) { long = false; }\r\n    if (savings === void 0) { savings = false; }\r\n    if (utc === void 0) { utc = false; }\r\n    if (utc) {\r\n        return long ? \"Coordinated Universal Time\" : \"UTC\";\r\n    }\r\n    var wotz = date.toLocaleString(\"UTC\");\r\n    var wtz = date.toLocaleString(\"UTC\", { timeZoneName: long ? \"long\" : \"short\" }).substr(wotz.length);\r\n    //wtz = wtz.replace(/[+-]+[0-9]+$/, \"\");\r\n    if (savings === false) {\r\n        wtz = wtz.replace(/ (standard|daylight|summer|winter) /i, \" \");\r\n    }\r\n    return wtz;\r\n}\r\n/**\r\n * ============================================================================\r\n * NUMBER-RELATED FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Returns a random number between `from` and `to`.\r\n *\r\n * @param from  From number\r\n * @param to    To number\r\n * @return Random number\r\n */\r\nexport function random(from, to) {\r\n    return Math.floor(Math.random() * to) + from;\r\n}\r\n/**\r\n * Fits the number into specific `min` and `max` bounds.\r\n *\r\n * @param value  Input value\r\n * @param min    Minimum value\r\n * @param max    Maximum value\r\n * @return Possibly adjusted value\r\n */\r\nexport function fitNumber(value, min, max) {\r\n    if (value > max) {\r\n        return max;\r\n    }\r\n    else if (value < min) {\r\n        return min;\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * Fits the number into specific `min` and `max` bounds.\r\n *\r\n * If the value is does not fit withing specified range, it \"wraps\" around the\r\n * values.\r\n *\r\n * For example, if we have input value 10 with min set at 1 and max set at 8,\r\n * the value will not fit. The remainder that does not fit (2) will be added\r\n * to `min`, resulting in 3.\r\n *\r\n * The output of regular `fitNumber()` would return 8 instead.\r\n *\r\n * @param value  Input value\r\n * @param min    Minimum value\r\n * @param max    Maximum value\r\n * @return Possibly adjusted value\r\n */\r\nexport function fitNumberRelative(value, min, max) {\r\n    var gap = max - min;\r\n    if (value > max) {\r\n        value = min + (value - gap * Math.floor(value / gap));\r\n    }\r\n    else if (value < min) {\r\n        value = min + (value - gap * Math.floor(value / gap));\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * ============================================================================\r\n * SPRITE-RELATED FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Converts SVG element coordinates to coordinates within specific [[Sprite]].\r\n *\r\n * @param point   SVG coordinates\r\n * @param sprite  Sprite\r\n * @return Sprite coordinates\r\n */\r\nexport function svgPointToSprite(point, sprite) {\r\n    var x = point.x;\r\n    var y = point.y;\r\n    var sprites = [];\r\n    if (sprite) {\r\n        while ($type.hasValue(sprite.parent)) {\r\n            sprites.push(sprite);\r\n            sprite = sprite.parent;\r\n        }\r\n        sprites.reverse();\r\n        for (var i = 0; i < sprites.length; i++) {\r\n            var sprite_1 = sprites[i];\r\n            var angle = sprite_1.rotation;\r\n            var relativeX = x - sprite_1.pixelX - sprite_1.ex;\r\n            var relativeY = y - sprite_1.pixelY - sprite_1.ey;\r\n            if (sprite_1.dx) {\r\n                x -= sprite_1.dx;\r\n            }\r\n            if (sprite_1.dy) {\r\n                y -= sprite_1.dy;\r\n            }\r\n            var scale = sprite_1.scale;\r\n            // this handles nonscaling\r\n            if (sprite_1.group) {\r\n                scale = sprite_1.group.scale;\r\n            }\r\n            x = ($math.cos(-angle) * relativeX - $math.sin(-angle) * relativeY) / scale - sprite_1.pixelPaddingLeft;\r\n            y = ($math.cos(-angle) * relativeY + $math.sin(-angle) * relativeX) / scale - sprite_1.pixelPaddingTop;\r\n        }\r\n    }\r\n    return { x: x, y: y };\r\n}\r\n/**\r\n * Converts coordinates within [[Sprite]] to coordinates relative to the whole\r\n * SVG element.\r\n *\r\n * @param point   Sprite coordinates\r\n * @param sprite  Sprite\r\n * @return SVG coordinates\r\n */\r\nexport function spritePointToSvg(point, sprite) {\r\n    var x = point.x;\r\n    var y = point.y;\r\n    if (sprite) {\r\n        while ($type.hasValue(sprite.parent)) {\r\n            var angle = sprite.rotation;\r\n            x += sprite.pixelPaddingLeft + sprite.ex;\r\n            y += sprite.pixelPaddingTop + sprite.ey;\r\n            if (sprite.dx) {\r\n                x += sprite.dx;\r\n            }\r\n            if (sprite.dy) {\r\n                y += sprite.dy;\r\n            }\r\n            var scale = sprite.scale;\r\n            // this handles nonscaling\r\n            if (sprite.group) {\r\n                scale = sprite.group.scale;\r\n            }\r\n            var relativeX = sprite.pixelX + ((x * $math.cos(angle) - y * $math.sin(angle))) * scale;\r\n            var relativeY = sprite.pixelY + ((x * $math.sin(angle) + y * $math.cos(angle))) * scale;\r\n            x = relativeX;\r\n            y = relativeY;\r\n            sprite = sprite.parent;\r\n        }\r\n    }\r\n    return { x: x, y: y };\r\n}\r\n/**\r\n * Converts coordinates of one sprite to another.\r\n *\r\n * @param point   Sprite coordinates\r\n * @param sprite  Sprite\r\n * @param toSprite  Sprite\r\n * @return converted coordinates\r\n */\r\nexport function spritePointToSprite(point, sprite, toSprite) {\r\n    return svgPointToSprite(spritePointToSvg(point, sprite), toSprite);\r\n}\r\n/**\r\n * Converts a rectangle expressed in SVG element coordinates to coordinates\r\n * within specific [[Sprite]].\r\n *\r\n * @param rect    SVG rectangle\r\n * @param sprite  Sprite\r\n * @return Sprite rectangle\r\n */\r\nexport function svgRectToSprite(rect, sprite) {\r\n    var p1 = svgPointToSprite(rect, sprite);\r\n    var p2 = svgPointToSprite({ x: rect.x + rect.width, y: rect.y + rect.height }, sprite);\r\n    return { x: p1.x, y: p1.y, width: p2.x - p1.x, height: p2.y - p1.y };\r\n}\r\n/**\r\n * Converts a rectangle expressed in [[Sprite]] coordinates to SVG coordinates.\r\n *\r\n * @param rect    Sprite rectangle\r\n * @param sprite  Sprite\r\n * @return SVG rectangle\r\n */\r\nexport function spriteRectToSvg(rect, sprite) {\r\n    var p1 = spritePointToSvg(rect, sprite);\r\n    var p2 = spritePointToSvg({ x: rect.x + rect.width, y: rect.y + rect.height }, sprite);\r\n    return { x: p1.x, y: p1.y, width: p2.x - p1.x, height: p2.y - p1.y };\r\n}\r\n/**\r\n * Converts global document-wide coordinates to coordinates within SVG element.\r\n *\r\n * @param point         Global coordinates\r\n * @param svgContainer  SVG element\r\n * @return SVG coordinates\r\n */\r\nexport function documentPointToSvg(point, svgContainer, cssScale) {\r\n    try {\r\n        var bbox = svgContainer.getBoundingClientRect();\r\n        if (!$type.isNumber(cssScale)) {\r\n            cssScale = 1;\r\n        }\r\n        return {\r\n            \"x\": (point.x - bbox.left) / cssScale,\r\n            \"y\": (point.y - bbox.top) / cssScale\r\n        };\r\n    }\r\n    catch (e) {\r\n        return point;\r\n    }\r\n}\r\n/**\r\n * Converts SVG coordinates to global document-wide coordinates.\r\n *\r\n * @param point         SVG coordinates\r\n * @param svgContainer  SVG element\r\n * @return Global coordinates\r\n */\r\nexport function svgPointToDocument(point, svgContainer) {\r\n    try {\r\n        var bbox = svgContainer.getBoundingClientRect();\r\n        return {\r\n            \"x\": point.x + bbox.left,\r\n            \"y\": point.y + bbox.top\r\n        };\r\n    }\r\n    catch (e) {\r\n        return point;\r\n    }\r\n}\r\n/**\r\n * Converts document-wide global coordinates to coordinates within specific\r\n * [[Sprite]].\r\n *\r\n * @param point   Global coordinates\r\n * @param sprite  Sprite\r\n * @return Sprite coordinates\r\n */\r\nexport function documentPointToSprite(point, sprite) {\r\n    if (sprite && sprite.htmlContainer) {\r\n        var svgPoint = documentPointToSvg(point, $type.getValue(sprite.htmlContainer), sprite.svgContainer.cssScale);\r\n        return svgPointToSprite(svgPoint, sprite);\r\n    }\r\n    else {\r\n        return point;\r\n    }\r\n}\r\n/**\r\n * Converts coordinates within [[Sprite]] to global document coordinates.\r\n *\r\n * @param point   Sprite coordinates\r\n * @param sprite  Sprite\r\n * @return Global coordinates\r\n */\r\nexport function spritePointToDocument(point, sprite) {\r\n    if (sprite && sprite.htmlContainer) {\r\n        var svgPoint = spritePointToSvg(point, sprite);\r\n        return svgPointToDocument(svgPoint, $type.getValue(sprite.htmlContainer));\r\n    }\r\n    else {\r\n        return point;\r\n    }\r\n}\r\n/**\r\n * ============================================================================\r\n * DEPRECATED FUNCTIONS\r\n * @todo Review and remove\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Returns element's width.\r\n *\r\n * @ignore Exclude from docs\r\n * @param element  Element\r\n * @return Width (px)\r\n * @deprecated Not used anywhere\r\n */\r\nexport function width(element) {\r\n    var cs = getComputedStyle(element);\r\n    var paddingX = parseFloat(cs.paddingLeft) + parseFloat(cs.paddingRight);\r\n    var borderX = parseFloat(cs.borderLeftWidth) + parseFloat(cs.borderRightWidth);\r\n    return element.clientWidth - paddingX - borderX;\r\n}\r\n/**\r\n * Returns element's height.\r\n *\r\n * @ignore Exclude from docs\r\n * @param element  Element\r\n * @return Height (px)\r\n * @deprecated Not used anywhere\r\n */\r\nexport function height(element) {\r\n    var cs = getComputedStyle(element);\r\n    var paddingY = parseFloat(cs.paddingTop) + parseFloat(cs.paddingBottom);\r\n    var borderY = parseFloat(cs.borderTopWidth) + parseFloat(cs.borderBottomWidth);\r\n    return element.clientHeight - paddingY - borderY;\r\n}\r\n/**\r\n * Returns number of decimals\r\n *\r\n * @ignore Exclude from docs\r\n * @param number  Input number\r\n * @return Number of decimals\r\n */\r\nexport function decimalPlaces(number) {\r\n    var match = ('' + number).match(/(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/);\r\n    if (!match) {\r\n        return 0;\r\n    }\r\n    return Math.max(0, (match[1] ? match[1].length : 0) - (match[2] ? +match[2] : 0));\r\n}\r\nvar urlRegexp = /^([a-zA-Z][a-zA-Z0-9\\+\\.\\-]*:)?(?:(\\/\\/)([^\\@]+\\@)?([^\\/\\?\\#\\:]*)(\\:[0-9]+)?)?([^\\?\\#]*)(\\?[^\\#]*)?(\\#.*)?$/;\r\n/**\r\n * Parses a URL\r\n *\r\n * @ignore Exclude from docs\r\n */\r\n// TODO test this\r\nexport function parseUrl(url) {\r\n    var match = urlRegexp.exec(url);\r\n    return {\r\n        protocol: (match && match[1]) || \"\",\r\n        separator: (match && match[2]) || \"\",\r\n        authority: (match && match[3]) || \"\",\r\n        domain: (match && match[4]) || \"\",\r\n        port: (match && match[5]) || \"\",\r\n        path: (match && match[6]) || \"\",\r\n        query: (match && match[7]) || \"\",\r\n        hash: (match && match[8]) || \"\"\r\n    };\r\n}\r\n/**\r\n * Serializes a Url into a string\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport function serializeUrl(url) {\r\n    return url.protocol + url.separator + url.authority + url.domain + url.port + url.path + url.query + url.hash;\r\n}\r\n/**\r\n * Checks whether a Url is relative or not\r\n *\r\n * @ignore Exclude from docs\r\n */\r\n// TODO is this correct ?\r\nfunction isRelativeUrl(url) {\r\n    return url.protocol === \"\" &&\r\n        url.separator === \"\" &&\r\n        url.authority === \"\" &&\r\n        url.domain === \"\" &&\r\n        url.port === \"\";\r\n}\r\n/**\r\n * Joins together two URLs, resolving relative URLs correctly\r\n *\r\n * @ignore Exclude from docs\r\n */\r\n// TODO test this\r\nexport function joinUrl(left, right) {\r\n    var parsedLeft = parseUrl(left);\r\n    var parsedRight = parseUrl(right);\r\n    if (isRelativeUrl(parsedLeft)) {\r\n        throw new Error(\"Left URL is not absolute\");\r\n    }\r\n    if (isRelativeUrl(parsedRight)) {\r\n        // TODO is this correct ?\r\n        if (parsedRight.path !== \"\") {\r\n            if (parsedRight.path[0] === \"/\") {\r\n                parsedLeft.path = parsedRight.path;\r\n                // TODO is this correct ?\r\n            }\r\n            else {\r\n                var leftPath = parsedLeft.path.split(/\\//);\r\n                var rightPath = parsedRight.path.split(/\\//);\r\n                // TODO is this correct ?\r\n                if (leftPath.length === 0) {\r\n                    if (rightPath.length !== 0) {\r\n                        leftPath.push(\"\");\r\n                    }\r\n                }\r\n                else if (leftPath.length > 1) {\r\n                    leftPath.pop();\r\n                }\r\n                $array.pushAll(leftPath, rightPath);\r\n                parsedLeft.path = leftPath.join(\"/\");\r\n                if (parsedLeft.path !== \"\" && parsedLeft.path[0] !== \"/\") {\r\n                    throw new Error(\"URL path must start with /\");\r\n                }\r\n            }\r\n        }\r\n        // TODO is this correct ?\r\n        parsedLeft.query = parsedRight.query;\r\n        parsedLeft.hash = parsedRight.hash;\r\n        return serializeUrl(parsedLeft);\r\n    }\r\n    else {\r\n        return serializeUrl(parsedRight);\r\n    }\r\n}\r\n/**\r\n * Detects MSIE.\r\n *\r\n * @return Is IE?\r\n */\r\nexport function isIE() {\r\n    return !!window.MSInputMethodContext && !!document.documentMode;\r\n}\r\n//# sourceMappingURL=Utils.js.map","import { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport * as $array from \"./Array\";\r\nimport * as $type from \"./Type\";\r\n/**\r\n * A base class for disposable objects.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nvar Disposer = /** @class */ (function () {\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param dispose  Function that disposes object\r\n     */\r\n    function Disposer(dispose) {\r\n        this._disposed = false;\r\n        this._dispose = dispose;\r\n    }\r\n    /**\r\n     * Checks if object is disposed.\r\n     *\r\n     * @return Disposed?\r\n     */\r\n    Disposer.prototype.isDisposed = function () {\r\n        return this._disposed;\r\n    };\r\n    /**\r\n     * Disposes the object.\r\n     */\r\n    Disposer.prototype.dispose = function () {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            this._dispose();\r\n        }\r\n    };\r\n    return Disposer;\r\n}());\r\nexport { Disposer };\r\n/**\r\n * A collection of related disposers that can be disposed in one go.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nvar MultiDisposer = /** @class */ (function (_super) {\r\n    __extends(MultiDisposer, _super);\r\n    function MultiDisposer(disposers) {\r\n        return _super.call(this, function () {\r\n            $array.each(disposers, function (x) {\r\n                x.dispose();\r\n            });\r\n        }) || this;\r\n    }\r\n    return MultiDisposer;\r\n}(Disposer));\r\nexport { MultiDisposer };\r\n/**\r\n * A special kind of Disposer that has attached value set.\r\n *\r\n * If a new value is set using `set()` method, the old disposer value is\r\n * disposed.\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nvar MutableValueDisposer = /** @class */ (function (_super) {\r\n    __extends(MutableValueDisposer, _super);\r\n    /**\r\n     * Constructor.\r\n     */\r\n    function MutableValueDisposer() {\r\n        var _this = _super.call(this, function () {\r\n            if ($type.hasValue(_this._disposer)) {\r\n                _this._disposer.dispose();\r\n                _this._disposer = undefined;\r\n            }\r\n        }) || this;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Returns current value.\r\n     *\r\n     * @return Value\r\n     */\r\n    MutableValueDisposer.prototype.get = function () {\r\n        return this._value;\r\n    };\r\n    /**\r\n     * Sets value and disposes previous disposer if it was set.\r\n     *\r\n     * @param value     New value\r\n     * @param disposer  Disposer\r\n     */\r\n    MutableValueDisposer.prototype.set = function (value, disposer) {\r\n        if ($type.hasValue(this._disposer)) {\r\n            this._disposer.dispose();\r\n        }\r\n        this._disposer = disposer;\r\n        this._value = value;\r\n    };\r\n    /**\r\n     * Resets the disposer value.\r\n     */\r\n    MutableValueDisposer.prototype.reset = function () {\r\n        this.set(undefined, undefined);\r\n    };\r\n    return MutableValueDisposer;\r\n}(Disposer));\r\nexport { MutableValueDisposer };\r\n/**\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nvar CounterDisposer = /** @class */ (function (_super) {\r\n    __extends(CounterDisposer, _super);\r\n    function CounterDisposer() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * [_counter description]\r\n         *\r\n         * @todo Description\r\n         */\r\n        _this._counter = 0;\r\n        return _this;\r\n    }\r\n    /**\r\n     * [increment description]\r\n     *\r\n     * @todo Description\r\n     */\r\n    CounterDisposer.prototype.increment = function () {\r\n        var _this = this;\r\n        // TODO throw an error if it is disposed\r\n        ++this._counter;\r\n        // TODO make this more efficient\r\n        return new Disposer(function () {\r\n            --_this._counter;\r\n            if (_this._counter === 0) {\r\n                _this.dispose();\r\n            }\r\n        });\r\n    };\r\n    return CounterDisposer;\r\n}(Disposer));\r\nexport { CounterDisposer };\r\n//# sourceMappingURL=Disposer.js.map","import * as $array from \"./Array\";\r\n/**\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport function fromArray(array) {\r\n    return function (push) {\r\n        var length = array.length;\r\n        for (var i = 0; i < length; ++i) {\r\n            if (!push(array[i])) {\r\n                break;\r\n            }\r\n        }\r\n    };\r\n}\r\n/**\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport function length(iter) {\r\n    var sum = 0;\r\n    iter(function (_) {\r\n        ++sum;\r\n        return true;\r\n    });\r\n    return sum;\r\n}\r\n/**\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport function toArray(iter) {\r\n    var output = [];\r\n    iter(function (value) {\r\n        output.push(value);\r\n        return true;\r\n    });\r\n    return output;\r\n}\r\n/**\r\n * [iter description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport function eachContinue(iter, fn) {\r\n    iter(fn);\r\n}\r\n/**\r\n * [iter description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport function each(iter, fn) {\r\n    iter(function (value) {\r\n        fn(value);\r\n        return true;\r\n    });\r\n}\r\n/**\r\n * [iter description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport function sort(iter, fn) {\r\n    return fromArray(toArray(iter).sort(fn));\r\n}\r\n/**\r\n * [A description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport function map(iter, fn) {\r\n    return function (push) { return iter(function (value) { return push(fn(value)); }); };\r\n}\r\n/**\r\n * [iter description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport function filter(iter, fn) {\r\n    return function (push) { return iter(function (value) {\r\n        if (fn(value)) {\r\n            return push(value);\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }); };\r\n}\r\n/**\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport function concat() {\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i] = arguments[_i];\r\n    }\r\n    return function (push) {\r\n        var go = true;\r\n        var push2 = function (value) { return (go = push(value)); };\r\n        var length = args.length;\r\n        for (var i = 0; i < length; ++i) {\r\n            args[i](push2);\r\n            if (!go) {\r\n                break;\r\n            }\r\n        }\r\n    };\r\n}\r\n/**\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport function flatten(iter) {\r\n    return function (push) {\r\n        var go = true;\r\n        var push2 = function (value) { return (go = push(value)); };\r\n        iter(function (value) {\r\n            value(push2);\r\n            return go;\r\n        });\r\n    };\r\n}\r\n/**\r\n * [number description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport function indexed(iter) {\r\n    return function (push) {\r\n        var index = 0;\r\n        iter(function (value) { return push([index++, value]); });\r\n    };\r\n}\r\n/**\r\n * [iter description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport function findIndex(iter, matches) {\r\n    var found = false;\r\n    var i = 0;\r\n    iter(function (value) {\r\n        if (matches(value)) {\r\n            found = true;\r\n            return false;\r\n        }\r\n        else {\r\n            ++i;\r\n            return true;\r\n        }\r\n    });\r\n    return (found ? i : -1);\r\n}\r\n/**\r\n * [iter description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport function find(iter, matches) {\r\n    var output;\r\n    iter(function (value) {\r\n        if (matches(value)) {\r\n            output = value;\r\n            return false;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    });\r\n    return output;\r\n}\r\n/**\r\n * [A description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport function findMap(iter, matches) {\r\n    var output;\r\n    iter(function (value) {\r\n        var v = matches(value);\r\n        if (v !== null) {\r\n            output = v;\r\n            return false;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    });\r\n    return output;\r\n}\r\n/**\r\n * [iter description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport function contains(iter, matches) {\r\n    var output = false;\r\n    iter(function (value) {\r\n        if (matches(value)) {\r\n            output = true;\r\n            return false;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    });\r\n    return output;\r\n}\r\n/**\r\n * [A description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport function foldl(iter, init, fn) {\r\n    iter(function (value) {\r\n        init = fn(init, value);\r\n        return true;\r\n    });\r\n    return init;\r\n}\r\n/**\r\n * [min2 description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param left [description]\r\n * @param right [description]\r\n * @return [description]\r\n */\r\nfunction min2(left, right) {\r\n    if (left == null || right < left) {\r\n        return right;\r\n    }\r\n    else {\r\n        return left;\r\n    }\r\n}\r\n/**\r\n * [min description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Verify that this works correctly\r\n * @todo Description\r\n * @param a [description]\r\n * @return [description]\r\n */\r\nexport function min(a) {\r\n    return foldl(a, null, min2);\r\n}\r\n/**\r\n * [max2 description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param left [description]\r\n * @param right [description]\r\n * @return [description]\r\n */\r\nfunction max2(left, right) {\r\n    if (left == null || right > left) {\r\n        return right;\r\n    }\r\n    else {\r\n        return left;\r\n    }\r\n}\r\n/**\r\n * [max description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Verify that this works correctly\r\n * @todo Description\r\n * @param a [description]\r\n * @return [description]\r\n */\r\nexport function max(a) {\r\n    return foldl(a, null, max2);\r\n}\r\n/**\r\n * [join description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param iter [description]\r\n * @param separator [description]\r\n * @return [description]\r\n */\r\nexport function join(iter, separator) {\r\n    if (separator === void 0) { separator = \"\"; }\r\n    var first = true;\r\n    var init = \"\";\r\n    iter(function (value) {\r\n        if (first) {\r\n            first = false;\r\n        }\r\n        else {\r\n            init += separator;\r\n        }\r\n        init += value;\r\n        return true;\r\n    });\r\n    return init;\r\n}\r\n/**\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nvar ListIterator = /** @class */ (function () {\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param list [description]\r\n     * @param create [description]\r\n     */\r\n    function ListIterator(list, create) {\r\n        // flag specifies if iterator should create new list item if it is reqested for a nextItem but there is no more left in the list\r\n        this.createNewItems = false;\r\n        this.list = list;\r\n        this._create = create;\r\n        this.reset();\r\n    }\r\n    ListIterator.prototype.reset = function () {\r\n        this._listCopy = toArray(this.list.iterator());\r\n    };\r\n    ListIterator.prototype.clear = function () {\r\n        this._listCopy.length = 0;\r\n    };\r\n    ListIterator.prototype.getFirst = function () {\r\n        return this.returnItem(0);\r\n    };\r\n    ListIterator.prototype.getLast = function () {\r\n        return this.returnItem(this._listCopy.length - 1);\r\n    };\r\n    ListIterator.prototype.find = function (fn) {\r\n        var index = $array.findIndex(this._listCopy, fn);\r\n        if (index !== -1) {\r\n            var item = this._listCopy[index];\r\n            // TODO use removeIndex instead ?\r\n            $array.remove(this._listCopy, item);\r\n            return item;\r\n        }\r\n        else {\r\n            return this.getLast();\r\n        }\r\n    };\r\n    ListIterator.prototype.removeItem = function (item) {\r\n        return $array.remove(this._listCopy, item);\r\n    };\r\n    ListIterator.prototype.returnItem = function (index) {\r\n        if (index >= 0 && index < this._listCopy.length) {\r\n            var item = this._listCopy[index];\r\n            // TODO use removeIndex instead ?\r\n            $array.remove(this._listCopy, item);\r\n            return item;\r\n        }\r\n        else if (this.createNewItems) {\r\n            return this._create();\r\n        }\r\n    };\r\n    ListIterator.prototype.iterator = function () {\r\n        return fromArray(this._listCopy);\r\n    };\r\n    return ListIterator;\r\n}());\r\nexport { ListIterator };\r\n//# sourceMappingURL=Iterator.js.map","/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Represents a relative value (percent).\r\n *\r\n * The Percent object, can be instantiated using two ways:\r\n *\r\n * * Via `new Percent(X)`.\r\n * * Via `am4core.percent(X)`.\r\n *\r\n * `Percent` type objects can be used in a number of dual-measuring or\r\n * positioning properties, like `width`. E.g.:\r\n *\r\n * ```TypeScript\r\n * chart.paddingRight = new Percent(10);\r\n * // or\r\n * chart.paddingRight = am4core.percent(10);\r\n * ```\r\n * ```JavaScript\r\n * chart.paddingRight = new Percent(10);\r\n * // or\r\n * chart.paddingRight = am4core.percent(10);\r\n * ```\r\n * ```JSON\r\n * {\r\n *   // ...\r\n *   \"paddingRight\": \"10%\"\r\n * }\r\n * ```\r\n */\r\nvar Percent = /** @class */ (function () {\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param percent  Percent value\r\n     */\r\n    function Percent(percent) {\r\n        this._value = percent;\r\n    }\r\n    Object.defineProperty(Percent.prototype, \"value\", {\r\n        /**\r\n         * Relative value.\r\n         *\r\n         * E.g. 100% is 1, 50% is 0.5, etc.\r\n         *\r\n         * This is useful to apply transformations to other values. E.g.:\r\n         *\r\n         * ```TypeScript\r\n         * let value = 256;\r\n         * let percent = new am4core.Percent(50);\r\n         * console.log(value * percent.value); // outputs 128\r\n         * ```\r\n         * ```JavaScript\r\n         * var value = 256;\r\n         * var percent = new am4core.Percent(50);\r\n         * console.log(value * percent.value); // outputs 128\r\n         * ```\r\n         *\r\n         * Alternatively, you can use `am4core.percent()` helper function:\r\n         *\r\n         * ```TypeScript\r\n         * let value = 256;\r\n         * let percent = am4core.percent(50);\r\n         * console.log(value * percent.value); // outputs 128\r\n         * ```\r\n         * ```JavaScript\r\n         * var value = 256;\r\n         * var percent = am4core.percent(50);\r\n         * console.log(value * percent.value); // outputs 128\r\n         * ```\r\n         *\r\n         * @readonly\r\n         * @return Relative value\r\n         */\r\n        get: function () {\r\n            return this._value / 100;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Percent.prototype, \"percent\", {\r\n        /**\r\n         * Value in percent.\r\n         *\r\n         * @return Percent\r\n         */\r\n        get: function () {\r\n            return this._value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Percent.prototype.toString = function () {\r\n        return \"\" + this._value + \"%\";\r\n    };\r\n    return Percent;\r\n}());\r\nexport { Percent };\r\n/**\r\n * Converts numeric percent value to a proper [[Percent]] object.\r\n *\r\n * ```TypeScript\r\n * pieSeries.radius = am4core.percent(80);\r\n * ```\r\n * ```JavaScript\r\n * pieSeries.radius = am4core.percent(80);\r\n * ```\r\n *\r\n * @param value  Percent\r\n * @return Percent object\r\n */\r\nexport function percent(value) {\r\n    return new Percent(value);\r\n}\r\n/**\r\n * Checks if value is a [[Percent]] object.\r\n *\r\n * @ignore Exclude from docs\r\n * @param value  Input value\r\n * @return Is percent?\r\n */\r\nexport function isPercent(value) {\r\n    return value instanceof Percent;\r\n}\r\n//# sourceMappingURL=Percent.js.map","import { __extends, __generator } from \"tslib\";\r\nimport { Disposer, MultiDisposer } from \"./Disposer\";\r\nimport { EventDispatcher } from \"./EventDispatcher\";\r\nimport * as $array from \"./Array\";\r\nimport * as $iter from \"./Iterator\";\r\n/**\r\n * @todo Description\r\n */\r\nvar IndexedIterable = /** @class */ (function () {\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param array  List items\r\n     * @param start  Start index\r\n     * @param end    End index\r\n     */\r\n    function IndexedIterable(array, start, end) {\r\n        this._array = array;\r\n        this._start = start;\r\n        this._end = end;\r\n    }\r\n    /**\r\n     * Returns a list item iterator.\r\n     *\r\n     * @return Iterator\r\n     */\r\n    IndexedIterable.prototype.iterator = function () {\r\n        var _this = this;\r\n        return function (push) {\r\n            if (_this._start !== _this._end) {\r\n                if (_this._start < _this._end) {\r\n                    for (var i = _this._start; i < _this._end; ++i) {\r\n                        if (!push(_this._array[i])) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    for (var i = _this._start - 1; i >= _this._end; --i) {\r\n                        if (!push(_this._array[i])) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     * Returns an interable list sorted backwards than current list.\r\n     *\r\n     * @return List\r\n     */\r\n    IndexedIterable.prototype.backwards = function () {\r\n        return new IndexedIterable(this._array, this._end, this._start);\r\n    };\r\n    /**\r\n     * Returns a new list consisting only of specific range of items between\r\n     * `start` and `end` indexes.\r\n     *\r\n     * @param start  Start index\r\n     * @param end    End index\r\n     * @return List\r\n     */\r\n    IndexedIterable.prototype.range = function (start, end) {\r\n        if (start <= end) {\r\n            if (this._start === this._end) {\r\n                return this;\r\n            }\r\n            else if (this._start < this._end) {\r\n                var diff = end - start;\r\n                start = Math.max(this._start + start, this._start);\r\n                end = Math.min(start + diff, this._end);\r\n                return new IndexedIterable(this._array, start, end);\r\n            }\r\n            else {\r\n                var diff = end - start;\r\n                start = Math.max(this._start - start, this._end);\r\n                end = Math.max(start - diff, this._end);\r\n                return new IndexedIterable(this._array, start, end);\r\n            }\r\n        }\r\n        else {\r\n            throw new Error(\"Start index must be lower than end index\");\r\n        }\r\n    };\r\n    return IndexedIterable;\r\n}());\r\nexport { IndexedIterable };\r\n/**\r\n * ListGrouper organizes [[List]] items into groups.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nvar ListGrouper = /** @class */ (function (_super) {\r\n    __extends(ListGrouper, _super);\r\n    /**\r\n     * Constructor.\r\n     */\r\n    function ListGrouper(list, getKey, sort) {\r\n        var _this = _super.call(this, [\r\n            list.events.on(\"inserted\", function (x) {\r\n                var value = x.newValue;\r\n                var key = _this._getKey(value);\r\n                var index = 0;\r\n                $iter.eachContinue(list.iterator(), function (x) {\r\n                    if (x === value) {\r\n                        return false;\r\n                    }\r\n                    else if (_this._getKey(x) === key) {\r\n                        ++index;\r\n                    }\r\n                    return true;\r\n                });\r\n                _this._insert(value, key, index);\r\n            }, undefined, false),\r\n            list.events.on(\"removed\", function (x) {\r\n                _this._remove(x.oldValue);\r\n            }, undefined, false)\r\n        ]) || this;\r\n        /**\r\n         * Grouping keys.\r\n         */\r\n        _this._keys = [];\r\n        /**\r\n         * List item groups.\r\n         */\r\n        _this._groups = {};\r\n        _this._getKey = getKey;\r\n        _this._sort = sort;\r\n        $iter.each(list.iterator(), function (x) {\r\n            _this._insert(x, getKey(x));\r\n        });\r\n        return _this;\r\n    }\r\n    /**\r\n     * Inserts an item (`x`) to a specific group (`key`) and specific `index`.\r\n     *\r\n     * @param x      Item\r\n     * @param key    Group name\r\n     * @param index  Index\r\n     */\r\n    ListGrouper.prototype._insert = function (x, key, index) {\r\n        if (this._groups[key] == null) {\r\n            this._groups[key] = [];\r\n            // TODO code duplication with SortedList\r\n            var _a = $array.getSortedIndex(this._keys, this._sort, key), found = _a.found, index_1 = _a.index;\r\n            if (found) {\r\n                throw new Error(\"Key already exists: \" + key);\r\n            }\r\n            else {\r\n                $array.insertIndex(this._keys, index_1, key);\r\n            }\r\n        }\r\n        if (index == null) {\r\n            this._groups[key].push(x);\r\n        }\r\n        else {\r\n            $array.insertIndex(this._groups[key], index, x);\r\n        }\r\n    };\r\n    /**\r\n     * Removes an item from the list.\r\n     *\r\n     * @param x Item to remove\r\n     */\r\n    ListGrouper.prototype._remove = function (x) {\r\n        var key = this._getKey(x);\r\n        var values = this._groups[key];\r\n        if (values != null) {\r\n            $array.remove(values, x);\r\n            if (values.length === 0) {\r\n                delete this._groups[key];\r\n                var _a = $array.getSortedIndex(this._keys, this._sort, key), found = _a.found, index = _a.index;\r\n                if (found) {\r\n                    $array.removeIndex(this._keys, index);\r\n                }\r\n                else {\r\n                    throw new Error(\"Key doesn't exist: \" + key);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns an iterator for the list.\r\n     *\r\n     * The iterator will iterate through all items in all groups.\r\n     *\r\n     * @return Iterator\r\n     */\r\n    ListGrouper.prototype.iterator = function () {\r\n        var _this = this;\r\n        return $iter.flatten($iter.map($iter.fromArray(this._keys), function (key) {\r\n            return $iter.fromArray(_this._groups[key]);\r\n        }));\r\n    };\r\n    return ListGrouper;\r\n}(MultiDisposer));\r\nexport { ListGrouper };\r\n/**\r\n * A disposable list, which when disposed itself will call `dispose()` method\r\n * on all its items.\r\n */\r\nvar ListDisposer = /** @class */ (function (_super) {\r\n    __extends(ListDisposer, _super);\r\n    function ListDisposer(list) {\r\n        var _this = this;\r\n        var disposer = list.events.on(\"removed\", function (x) {\r\n            x.oldValue.dispose();\r\n        }, undefined, false);\r\n        _this = _super.call(this, function () {\r\n            disposer.dispose();\r\n            // TODO clear the list ?\r\n            $iter.each(list.iterator(), function (x) {\r\n                x.dispose();\r\n            });\r\n        }) || this;\r\n        return _this;\r\n    }\r\n    return ListDisposer;\r\n}(Disposer));\r\nexport { ListDisposer };\r\n/**\r\n * Checks if specific index fits into length.\r\n *\r\n * @param index  Index\r\n * @param len    Length\r\n */\r\nfunction checkBounds(index, len) {\r\n    if (!(index >= 0 && index < len)) {\r\n        throw new Error(\"Index out of bounds: \" + index);\r\n    }\r\n}\r\n/**\r\n * A List class is used to hold a number of indexed items of the same type.\r\n */\r\nvar List = /** @class */ (function () {\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param initial  Inital list of values to add to list\r\n     */\r\n    function List(initial) {\r\n        if (initial === void 0) { initial = []; }\r\n        /**\r\n         * Event dispatcher.\r\n         */\r\n        this.events = new EventDispatcher();\r\n        this._values = initial;\r\n    }\r\n    Object.defineProperty(List.prototype, \"values\", {\r\n        /**\r\n         * An array of values in the list.\r\n         *\r\n         * Do not use this property to add values. Rather use dedicated methods, like\r\n         * `push()`, `removeIndex()`, etc.\r\n         *\r\n         * @readonly\r\n         * @return List values\r\n         */\r\n        get: function () {\r\n            return this._values;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Checks if list contains specific item reference.\r\n     *\r\n     * @param item  Item to search for\r\n     * @return `true` if found, `false` if not found\r\n     */\r\n    List.prototype.contains = function (value) {\r\n        return this._values.indexOf(value) !== -1;\r\n    };\r\n    /**\r\n     * Removes specific item from the list.\r\n     *\r\n     * @param item An item to remove\r\n     */\r\n    List.prototype.removeValue = function (value) {\r\n        var i = 0;\r\n        var length = this._values.length;\r\n        while (i < length) {\r\n            // TODO handle NaN\r\n            if (this._values[i] === value) {\r\n                this.removeIndex(i);\r\n                --length;\r\n            }\r\n            else {\r\n                ++i;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Searches the list for specific item and returns its index.\r\n     *\r\n     * @param item  An item to search for\r\n     * @return Index or -1 if not found\r\n     */\r\n    List.prototype.indexOf = function (value) {\r\n        return $array.indexOf(this._values, value);\r\n    };\r\n    Object.defineProperty(List.prototype, \"length\", {\r\n        /**\r\n         * Number of items in list.\r\n         *\r\n         * @readonly\r\n         * @return Number of items\r\n         */\r\n        get: function () {\r\n            return this._values.length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Checks if there's a value at specific index.\r\n     *\r\n     * @param index  Index\r\n     * @return Value exists?\r\n     */\r\n    List.prototype.hasIndex = function (index) {\r\n        return index >= 0 && index < this._values.length;\r\n    };\r\n    /**\r\n     * Returns an item at specified index.\r\n     *\r\n     * @param index  Index\r\n     * @return List item\r\n     */\r\n    List.prototype.getIndex = function (index) {\r\n        return this._values[index];\r\n    };\r\n    /**\r\n     * Sets value at specific index.\r\n     *\r\n     * If there's already a value at the index, it is overwritten.\r\n     *\r\n     * @param index  Index\r\n     * @param value  New value\r\n     * @return New value\r\n     */\r\n    List.prototype.setIndex = function (index, value) {\r\n        checkBounds(index, this._values.length);\r\n        var oldValue = this._values[index];\r\n        // Do nothing if the old value and the new value are the same\r\n        if (oldValue !== value) {\r\n            this._values[index] = value;\r\n            if (this.events.isEnabled(\"setIndex\")) {\r\n                this.events.dispatchImmediately(\"setIndex\", {\r\n                    type: \"setIndex\",\r\n                    target: this,\r\n                    index: index,\r\n                    oldValue: oldValue,\r\n                    newValue: value\r\n                });\r\n            }\r\n            if (this.events.isEnabled(\"removed\")) {\r\n                this.events.dispatchImmediately(\"removed\", {\r\n                    type: \"removed\",\r\n                    target: this,\r\n                    oldValue: oldValue\r\n                });\r\n            }\r\n            if (this.events.isEnabled(\"inserted\")) {\r\n                this.events.dispatchImmediately(\"inserted\", {\r\n                    type: \"inserted\",\r\n                    target: this,\r\n                    newValue: value\r\n                });\r\n            }\r\n        }\r\n        return oldValue;\r\n    };\r\n    /**\r\n     * Adds an item to the list at a specific index, which pushes all the other\r\n     * items further down the list.\r\n     *\r\n     * @param index Index\r\n     * @param item  An item to add\r\n     */\r\n    List.prototype.insertIndex = function (index, value) {\r\n        checkBounds(index, this._values.length + 1);\r\n        $array.insertIndex(this._values, index, value);\r\n        if (this.events.isEnabled(\"insertIndex\")) {\r\n            this.events.dispatchImmediately(\"insertIndex\", {\r\n                type: \"insertIndex\",\r\n                target: this,\r\n                index: index,\r\n                newValue: value\r\n            });\r\n        }\r\n        if (this.events.isEnabled(\"inserted\")) {\r\n            this.events.dispatchImmediately(\"inserted\", {\r\n                type: \"inserted\",\r\n                target: this,\r\n                newValue: value\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * [_sortQuicksort description]\r\n     *\r\n     * @todo Description\r\n     * @param low    [description]\r\n     * @param high   [description]\r\n     * @param order  [description]\r\n     */\r\n    List.prototype._sortQuicksort = function (low, high, order) {\r\n        if (low < high) {\r\n            var p = this._sortPartition(low, high, order);\r\n            this._sortQuicksort(low, p, order);\r\n            this._sortQuicksort(p + 1, high, order);\r\n        }\r\n    };\r\n    /**\r\n     * [_sortPartition description]\r\n     *\r\n     * @todo Description\r\n     * @param low    [description]\r\n     * @param high   [description]\r\n     * @param order  [description]\r\n     * @return [description]\r\n     */\r\n    List.prototype._sortPartition = function (low, high, order) {\r\n        var values = this._values;\r\n        var pivot = values[low];\r\n        var i = low - 1;\r\n        var j = high + 1;\r\n        for (;;) {\r\n            do {\r\n                ++i;\r\n            } while (order(values[i], pivot) < 0);\r\n            do {\r\n                --j;\r\n            } while (order(values[j], pivot) > 0);\r\n            if (i >= j) {\r\n                return j;\r\n            }\r\n            else {\r\n                this.swap(i, j);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Reorders list items according to specific ordering function.\r\n     *\r\n     * @param order  Ordering function\r\n     */\r\n    List.prototype.sort = function (order) {\r\n        // https://en.wikipedia.org/wiki/Quicksort#Hoare_partition_scheme\r\n        // @todo faster implementation of this\r\n        // @todo test this\r\n        this._sortQuicksort(0, this._values.length - 1, order);\r\n    };\r\n    /**\r\n     * Swaps indexes of two items in the list.\r\n     *\r\n     * @param a  Item 1\r\n     * @param b  Item 2\r\n     */\r\n    List.prototype.swap = function (a, b) {\r\n        var len = this._values.length;\r\n        checkBounds(a, len);\r\n        checkBounds(b, len);\r\n        if (a !== b) {\r\n            var value_a = this._values[a];\r\n            var value_b = this._values[b];\r\n            this._values[a] = value_b;\r\n            if (this.events.isEnabled(\"setIndex\")) {\r\n                this.events.dispatchImmediately(\"setIndex\", {\r\n                    type: \"setIndex\",\r\n                    target: this,\r\n                    index: a,\r\n                    oldValue: value_a,\r\n                    newValue: value_b\r\n                });\r\n            }\r\n            this._values[b] = value_a;\r\n            if (this.events.isEnabled(\"setIndex\")) {\r\n                this.events.dispatchImmediately(\"setIndex\", {\r\n                    type: \"setIndex\",\r\n                    target: this,\r\n                    index: b,\r\n                    oldValue: value_b,\r\n                    newValue: value_a\r\n                });\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Removes a value at specific index.\r\n     *\r\n     * @param index  Index of value to remove\r\n     * @return Removed value\r\n     */\r\n    List.prototype.removeIndex = function (index) {\r\n        checkBounds(index, this._values.length);\r\n        var oldValue = this._values[index];\r\n        $array.removeIndex(this._values, index);\r\n        if (this.events.isEnabled(\"removeIndex\")) {\r\n            this.events.dispatchImmediately(\"removeIndex\", {\r\n                type: \"removeIndex\",\r\n                target: this,\r\n                index: index,\r\n                oldValue: oldValue\r\n            });\r\n        }\r\n        if (this.events.isEnabled(\"removed\")) {\r\n            this.events.dispatchImmediately(\"removed\", {\r\n                type: \"removed\",\r\n                target: this,\r\n                oldValue: oldValue\r\n            });\r\n        }\r\n        return oldValue;\r\n    };\r\n    /**\r\n     * Moves an item to a specific index within the list.\r\n     *\r\n     * If the index is not specified it will move the item to the end of the\r\n     * list.\r\n     *\r\n     * @param value  Item to move\r\n     * @param index  Index to place item at\r\n     */\r\n    List.prototype.moveValue = function (value, toIndex) {\r\n        // TODO don't do anything if the desired index is the same as the current index\r\n        var index = this.indexOf(value);\r\n        // TODO remove all old values rather than only the first ?\r\n        if (index !== -1) {\r\n            var oldValue = this._values[index];\r\n            $array.removeIndex(this._values, index);\r\n            if (this.events.isEnabled(\"removeIndex\")) {\r\n                this.events.dispatchImmediately(\"removeIndex\", {\r\n                    type: \"removeIndex\",\r\n                    target: this,\r\n                    index: index,\r\n                    oldValue: oldValue\r\n                });\r\n            }\r\n        }\r\n        if (toIndex == null) {\r\n            toIndex = this._values.length;\r\n            this._values.push(value);\r\n        }\r\n        else {\r\n            $array.insertIndex(this._values, toIndex, value);\r\n        }\r\n        if (this.events.isEnabled(\"insertIndex\")) {\r\n            this.events.dispatchImmediately(\"insertIndex\", {\r\n                type: \"insertIndex\",\r\n                target: this,\r\n                index: toIndex,\r\n                newValue: value\r\n            });\r\n        }\r\n        if (index === -1) {\r\n            if (this.events.isEnabled(\"inserted\")) {\r\n                this.events.dispatchImmediately(\"inserted\", {\r\n                    type: \"inserted\",\r\n                    target: this,\r\n                    newValue: value\r\n                });\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Adds an item to the end of the list.\r\n     *\r\n     * @param item  An item to add\r\n     */\r\n    List.prototype.push = function (value) {\r\n        var index = this._values.push(value) - 1;\r\n        if (this.events.isEnabled(\"insertIndex\")) {\r\n            this.events.dispatchImmediately(\"insertIndex\", {\r\n                type: \"insertIndex\",\r\n                target: this,\r\n                index: index,\r\n                newValue: value\r\n            });\r\n        }\r\n        if (this.events.isEnabled(\"inserted\")) {\r\n            this.events.dispatchImmediately(\"inserted\", {\r\n                type: \"inserted\",\r\n                target: this,\r\n                newValue: value\r\n            });\r\n        }\r\n        return value;\r\n    };\r\n    /**\r\n     * Adds an item as a first item in the list.\r\n     *\r\n     * @param item  An item to add\r\n     */\r\n    List.prototype.unshift = function (value) {\r\n        this.insertIndex(0, value);\r\n    };\r\n    /**\r\n     * Adds multiple items to the list.\r\n     *\r\n     * @param items  An Array of items to add\r\n     */\r\n    List.prototype.pushAll = function (values) {\r\n        var _this = this;\r\n        $array.each(values, function (value) {\r\n            _this.push(value);\r\n        });\r\n    };\r\n    /**\r\n     * Copies and adds items from abother list.\r\n     *\r\n     * @param source  A list top copy items from\r\n     */\r\n    List.prototype.copyFrom = function (source) {\r\n        this.pushAll(source._values);\r\n    };\r\n    /**\r\n     * Returns the last item from the list, and removes it.\r\n     *\r\n     * @return Item\r\n     */\r\n    List.prototype.pop = function () {\r\n        var index = this._values.length - 1;\r\n        return index < 0 ? undefined : this.removeIndex(this._values.length - 1);\r\n    };\r\n    /**\r\n     * Returns the first item from the list, and removes it.\r\n     *\r\n     * @return Item\r\n     */\r\n    List.prototype.shift = function () {\r\n        return this._values.length ? this.removeIndex(0) : undefined;\r\n    };\r\n    /**\r\n     * Sets multiple items to the list.\r\n     *\r\n     * All current items are removed.\r\n     *\r\n     * @param newArray  New items\r\n     */\r\n    List.prototype.setAll = function (newArray) {\r\n        var _this = this;\r\n        // @tod if a value exists in both the new and old arrays, don't send remove/insert events\r\n        var oldArray = $array.copy(this._values);\r\n        this._values.length = 0;\r\n        $array.each(newArray, function (value) {\r\n            _this._values.push(value);\r\n        });\r\n        if (this.events.isEnabled(\"setAll\")) {\r\n            this.events.dispatchImmediately(\"setAll\", {\r\n                type: \"setAll\",\r\n                target: this,\r\n                oldArray: oldArray,\r\n                newArray: this._values // TODO make a copy ?\r\n            });\r\n        }\r\n        if (this.events.isEnabled(\"removed\")) {\r\n            $array.each(oldArray, function (x) {\r\n                _this.events.dispatchImmediately(\"removed\", {\r\n                    type: \"removed\",\r\n                    target: _this,\r\n                    oldValue: x\r\n                });\r\n            });\r\n        }\r\n        if (this.events.isEnabled(\"inserted\")) {\r\n            $array.each(this._values, function (x) {\r\n                _this.events.dispatchImmediately(\"inserted\", {\r\n                    type: \"inserted\",\r\n                    target: _this,\r\n                    newValue: x\r\n                });\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Removes all items from the list.\r\n     */\r\n    List.prototype.clear = function () {\r\n        this.setAll([]);\r\n    };\r\n    /**\r\n     * Returns a list iterator.\r\n     *\r\n     * @return Iterator\r\n     */\r\n    List.prototype.iterator = function () {\r\n        return $iter.fromArray(this._values);\r\n    };\r\n    /**\r\n     * Returns an ES6 iterator for the list.\r\n     */\r\n    List.prototype[Symbol.iterator] = function () {\r\n        var length, i;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    length = this._values.length;\r\n                    i = 0;\r\n                    _a.label = 1;\r\n                case 1:\r\n                    if (!(i < length)) return [3 /*break*/, 4];\r\n                    return [4 /*yield*/, this._values[i]];\r\n                case 2:\r\n                    _a.sent();\r\n                    _a.label = 3;\r\n                case 3:\r\n                    ++i;\r\n                    return [3 /*break*/, 1];\r\n                case 4: return [2 /*return*/];\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Calls `f` for each element in the list.\r\n     *\r\n     * `f` should have at least one parameter defined which will get a current\r\n     * item, with optional second argument - index.\r\n     */\r\n    List.prototype.each = function (f) {\r\n        $array.each(this._values, f);\r\n    };\r\n    /**\r\n     * Returns a specific range of list items, which can be iterated.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Code duplication with IndexedIterable\r\n     * @param start  Start index\r\n     * @param end    End index\r\n     * @return Range\r\n     */\r\n    List.prototype.range = function (start, end) {\r\n        if (start <= end) {\r\n            var diff = end - start;\r\n            start = Math.max(start, 0);\r\n            end = Math.min(start + diff, this._values.length);\r\n            return new IndexedIterable(this._values, start, end);\r\n        }\r\n        else {\r\n            throw new Error(\"Start index must be lower than end index\");\r\n        }\r\n    };\r\n    /**\r\n     * Returns an iterator that has list items sorted backwards.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return List\r\n     */\r\n    List.prototype.backwards = function () {\r\n        return new IndexedIterable(this._values, this._values.length, 0);\r\n    };\r\n    return List;\r\n}());\r\nexport { List };\r\n/**\r\n * A version of a [[List]] that has a \"template\".\r\n *\r\n * A template is an instance of an object, that can be used to create new\r\n * elements in the list without actually needing to create instances for those.\r\n *\r\n * When new element is created in the list, e.g. by calling its `create()`\r\n * method, an exact copy of the element is created (including properties and\r\n * other attributes), inserted into the list and returned.\r\n */\r\nvar ListTemplate = /** @class */ (function (_super) {\r\n    __extends(ListTemplate, _super);\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param t Template object\r\n     */\r\n    function ListTemplate(t) {\r\n        var _this = _super.call(this) || this;\r\n        _this.template = t;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ListTemplate.prototype, \"template\", {\r\n        /**\r\n         * @return Template object\r\n         */\r\n        get: function () {\r\n            return this._template;\r\n        },\r\n        /**\r\n         * A \"template\" object to copy all properties from when creating new list\r\n         * items.\r\n         *\r\n         * @param v  Template object\r\n         */\r\n        set: function (v) {\r\n            v.isTemplate = true;\r\n            this._template = v;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Copies all elements from other list.\r\n     *\r\n     * @param source  Source list\r\n     */\r\n    ListTemplate.prototype.copyFrom = function (source) {\r\n        var _this = this;\r\n        $iter.each(source.iterator(), function (value) {\r\n            _this.push(value.clone());\r\n        });\r\n    };\r\n    ListTemplate.prototype.create = function (make) {\r\n        var clone = (make != null\r\n            ? new make()\r\n            : this.template.clone());\r\n        this.push(clone);\r\n        return clone;\r\n    };\r\n    /**\r\n     * Creates an exact clone of the list, including its items and template.\r\n     *\r\n     * @return New list\r\n     */\r\n    ListTemplate.prototype.clone = function () {\r\n        var out = new ListTemplate(this.template);\r\n        var values = this.values;\r\n        var length = values.length;\r\n        for (var i = 0; i < length; ++i) {\r\n            out.push(values[i].clone());\r\n        }\r\n        return out;\r\n    };\r\n    return ListTemplate;\r\n}(List));\r\nexport { ListTemplate };\r\n//# sourceMappingURL=List.js.map","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport * as $array from \"./Array\";\r\nimport * as $type from \"./Type\";\r\n/**\r\n * ============================================================================\r\n * UTILITY FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Returns an iterator for all entries in object.\r\n *\r\n * Can be used to safely iterate through all properties of the object.\r\n *\r\n * @param object  Source object\r\n * @returns Iterator\r\n */\r\nexport function entries(object) {\r\n    return function (push) {\r\n        // TODO make this more efficient ?\r\n        for (var key in object) {\r\n            if (hasKey(object, key)) {\r\n                if (!push([key, object[key]])) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    };\r\n}\r\n/**\r\n * Returns an array of object's property names.\r\n *\r\n * @param object  Source object\r\n * @returns Object property names\r\n */\r\nexport function keys(object) {\r\n    var output = [];\r\n    for (var key in object) {\r\n        if (hasKey(object, key)) {\r\n            output.push(key);\r\n        }\r\n    }\r\n    return output;\r\n}\r\n/**\r\n * Returns an array of object's property names ordered using specific ordering\r\n * function.\r\n *\r\n * @param object  Source object\r\n * @param order   Ordering function\r\n * @returns Object property names\r\n */\r\nexport function keysOrdered(object, order) {\r\n    return keys(object).sort(order);\r\n}\r\n/**\r\n * Checks if `object` has a specific `key`.\r\n *\r\n * @param object  Source object\r\n * @param key     Property name\r\n * @returns Has key?\r\n */\r\nexport function hasKey(object, key) {\r\n    return {}.hasOwnProperty.call(object, key);\r\n}\r\n/**\r\n * Returns value of the specific `key`.\r\n *\r\n * @param object  Source object\r\n * @param key     Property name\r\n * @returns Key value\r\n */\r\nexport function getKey(object, key) {\r\n    return object[key];\r\n}\r\n/**\r\n * Iterates through all properties of the object calling `fn` for each of them.\r\n *\r\n * If return value of the function evaluates to `false` further iteration is\r\n * cancelled.\r\n *\r\n * @param object  Source object\r\n * @param fn      Callback function\r\n */\r\nexport function eachContinue(object, fn) {\r\n    for (var key in object) {\r\n        if (hasKey(object, key)) {\r\n            if (!fn(key, object[key])) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * Iterates through all properties of the object calling `fn` for each of them.\r\n *\r\n * @param object  Source object\r\n * @param fn      Callback function\r\n */\r\nexport function each(object, fn) {\r\n    eachContinue(object, function (key, value) {\r\n        fn(key, value);\r\n        return true;\r\n    });\r\n}\r\n/**\r\n * Orders object properties using custom `ord` function and iterates through\r\n * them calling `fn` for each of them.\r\n *\r\n * @param object  Source object\r\n * @param fn      Callback function\r\n * @param order   Ordering function\r\n */\r\nexport function eachOrdered(object, fn, ord) {\r\n    $array.each(keysOrdered(object, ord), function (key) {\r\n        fn(key, object[key]);\r\n    });\r\n}\r\n/**\r\n * Returns a copy of the object.\r\n *\r\n * @param object  Source object\r\n * @returns Copy of the object\r\n */\r\nexport function copy(object) {\r\n    return Object.assign({}, object);\r\n}\r\n/**\r\n * Merges two objects and returns a new object that contains properties from\r\n * both source objects.\r\n *\r\n * @param object1  Source object #1\r\n * @param object2  Source object #2\r\n * @returns Combined object\r\n */\r\nexport function merge(object1, object2) {\r\n    return Object.assign({}, object1, object2);\r\n}\r\n/**\r\n * Copies a list of properties from one object to another.\r\n *\r\n * Will not copy empty properties.\r\n *\r\n * @param source  Source object\r\n * @param target    Target object\r\n * @param keys  List of keys to copy\r\n */\r\nexport function copyProperties(source, target, keys) {\r\n    $array.each(keys, function (key) {\r\n        if ($type.hasValue(source[key])) {\r\n            target[key] = source[key];\r\n        }\r\n    });\r\n}\r\n/**\r\n * Copies a list of properties from one object to another only if target does't have value of the property set.\r\n *\r\n * Will not copy empty properties.\r\n *\r\n * @param source  Source object\r\n * @param target    Target object\r\n * @param keys  List of keys to copy\r\n */\r\nexport function softCopyProperties(source, target, keys) {\r\n    $array.each(keys, function (key) {\r\n        if ($type.hasValue(source[key]) && !($type.hasValue(target[key]))) {\r\n            target[key] = source[key];\r\n        }\r\n    });\r\n}\r\n/**\r\n * Copies a list of properties from one object to another.\r\n *\r\n * Will copy empty properties.\r\n *\r\n * @param source  Source object\r\n * @param target    Target object\r\n * @param keys  List of keys to copy\r\n */\r\nexport function forceCopyProperties(source, target, keys) {\r\n    $array.each(keys, function (key) {\r\n        target[key] = source[key];\r\n    });\r\n}\r\n/**\r\n * Copies all properties from one object to another.\r\n *\r\n * @param from  Source object\r\n * @param to    Target object\r\n */\r\nexport function copyAllProperties(from, to) {\r\n    copyProperties(from, to, keys(from));\r\n}\r\n//# sourceMappingURL=Object.js.map","/**\r\n * Base functionality\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport { List, ListTemplate } from \"./utils/List\";\r\nimport { OrderedListTemplate, SortedListTemplate } from \"./utils/SortedList\";\r\nimport { Dictionary, DictionaryTemplate } from \"./utils/Dictionary\";\r\nimport { Disposer } from \"./utils/Disposer\";\r\nimport { EventDispatcher } from \"./utils/EventDispatcher\";\r\nimport { Adapter } from \"./utils/Adapter\";\r\nimport { Color, color } from \"./utils/Color\";\r\nimport { Percent, percent } from \"./utils/Percent\";\r\nimport { registry } from \"./Registry\";\r\nimport { cache } from \"./utils/Cache\";\r\nimport * as $array from \"./utils/Array\";\r\nimport * as $object from \"./utils/Object\";\r\nimport * as $type from \"./utils/Type\";\r\n//import * as $debug from \"./utils/Debug\";\r\n/**\r\n * Provides base functionality for all derivative objects, like generating ids,\r\n * handling cache, etc.\r\n */\r\nvar BaseObject = /** @class */ (function () {\r\n    //protected _classes: { [index: string]: any } = {};\r\n    /**\r\n     * Constructor\r\n     * * Sets class name\r\n     */\r\n    function BaseObject() {\r\n        /**\r\n         * Indicates if this object has already been deleted. Any\r\n         * destruction/disposal code should take this into account when deciding\r\n         * wheter to run potentially costly disposal operations if they already have\r\n         * been run.\r\n         */\r\n        this._disposed = false;\r\n        /**\r\n         * List of IDisposer which will be disposed when the BaseObject is disposed.\r\n         */\r\n        this._disposers = [];\r\n        this.className = \"BaseObject\";\r\n        //this.debug();\r\n    }\r\n    BaseObject.prototype.debug = function () {\r\n        //$debug.debug(this);\r\n    };\r\n    Object.defineProperty(BaseObject.prototype, \"uid\", {\r\n        /**\r\n         * Returns object's internal unique ID.\r\n         *\r\n         * @return Unique ID\r\n         */\r\n        get: function () {\r\n            if (!this._uid) {\r\n                this._uid = registry.getUniqueId();\r\n                registry.map.setKey(this._uid, this);\r\n            }\r\n            return this._uid;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(BaseObject.prototype, \"id\", {\r\n        /**\r\n         * @return Id\r\n         */\r\n        get: function () {\r\n            return this._id;\r\n        },\r\n        /**\r\n         * Sets the user-defined id of the element.\r\n         *\r\n         * @param value Id\r\n         */\r\n        set: function (value) {\r\n            //registry.map.setKey(value, this); // registry.map only stores by uid\r\n            this._id = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(BaseObject.prototype, \"map\", {\r\n        /**\r\n         * Returns a universal collection for mapping ids with objects.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return Map collection\r\n         */\r\n        get: function () {\r\n            if (!this._map) {\r\n                this._map = new Dictionary();\r\n            }\r\n            return this._map;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(BaseObject.prototype, \"delayedMap\", {\r\n        /**\r\n         * Returns mapping for objects referenced by id in JSON config that are not yet\r\n         * available at processing time.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return Map collection\r\n         */\r\n        get: function () {\r\n            if (!this._delayedMap) {\r\n                this._delayedMap = new Dictionary();\r\n            }\r\n            return this._delayedMap;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Logs an id and property of the target element that is not yet available\r\n     * for later assignment.\r\n     *\r\n     * @ignore\r\n     * @param  property  Property to set\r\n     * @param  id        ID of the target element\r\n     */\r\n    BaseObject.prototype.addDelayedMap = function (property, id) {\r\n        var map = this.delayedMap;\r\n        if (!map.hasKey(id)) {\r\n            map.setKey(id, []);\r\n        }\r\n        var list = map.getKey(id);\r\n        list.push({\r\n            property: property,\r\n            target: this\r\n        });\r\n    };\r\n    /**\r\n     * Processes delayed JSON config items.\r\n     *\r\n     * @ignore\r\n     */\r\n    BaseObject.prototype.processDelayedMap = function () {\r\n        var _this = this;\r\n        this.delayedMap.each(function (id, list) {\r\n            if (_this.map.hasKey(id)) {\r\n                var target_1 = _this.map.getKey(id);\r\n                $array.each(list, function (item) {\r\n                    item.target[item.property] = target_1;\r\n                });\r\n                _this.delayedMap.removeKey(id);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Applies properties from all assigned themes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    BaseObject.prototype.applyTheme = function () {\r\n        var _this = this;\r\n        // TODO is this needed ?\r\n        if (registry) {\r\n            var themes = this.getCurrentThemes();\r\n            // TODO is this needed ?\r\n            if (themes) {\r\n                $array.each(themes, function (theme, index) {\r\n                    theme(_this);\r\n                });\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(BaseObject.prototype, \"themes\", {\r\n        /**\r\n         * @ignore Exclude from docs\r\n         * @return An array of themes\r\n         */\r\n        get: function () {\r\n            return this._themes;\r\n        },\r\n        /**\r\n         * A list of themes to be used for this element.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @param value An array of themes\r\n         */\r\n        set: function (value) {\r\n            this._themes = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns a list of themes that should be applied to this element. It could\r\n     * either be a list of themes set explicitly on this element, or system-wide.\r\n     *\r\n     * @return List of themes\r\n     */\r\n    BaseObject.prototype.getCurrentThemes = function () {\r\n        return this.themes || registry.themes;\r\n    };\r\n    /**\r\n     * Returns if this object has been already been disposed.\r\n     *\r\n     * @return Is disposed?\r\n     */\r\n    BaseObject.prototype.isDisposed = function () {\r\n        return this._disposed;\r\n    };\r\n    /**\r\n     * Destroys this object and all related data.\r\n     */\r\n    BaseObject.prototype.dispose = function () {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            var a = this._disposers;\r\n            this._disposers = null;\r\n            while (a.length !== 0) {\r\n                var disposer = a.shift();\r\n                disposer.dispose();\r\n            }\r\n            // Clear cache\r\n            this.clearCache();\r\n            // remove from clones list\r\n            if (this.clonedFrom) {\r\n                this.clonedFrom.clones.removeValue(this);\r\n            }\r\n            var uid = this._uid;\r\n            if (uid != null) {\r\n                registry.map.removeKey(uid);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Adds an IDisposer, which will be disposed when this object is disposed.\r\n     *\r\n     * @param target Object to dispose\r\n     * @ignore Exclude from docs\r\n     */\r\n    BaseObject.prototype.addDisposer = function (target) {\r\n        this._disposers.push(target);\r\n    };\r\n    /**\r\n     * Disposes disposable object and removes it from `_disposers`.\r\n     *\r\n     * @param target Object to dispose\r\n     * @ignore Exclude from docs\r\n     */\r\n    BaseObject.prototype.removeDispose = function (target) {\r\n        //if(target){\r\n        if (!this._disposed) {\r\n            var index = $array.indexOf(this._disposers, target);\r\n            if (index > -1) {\r\n                this._disposers.splice(index, 1);\r\n            }\r\n        }\r\n        target.dispose();\r\n        //}\r\n    };\r\n    /**\r\n     * Makes a copy of this object and returns the clone. Try to avoid cloning complex objects like chart, create new instances if you need them.\r\n     *\r\n     * @param cloneId  An id to use for clone (if not set a unique id will be generated)\r\n     * @returns Clone\r\n     */\r\n    BaseObject.prototype.clone = function (cloneId) {\r\n        if (!cloneId) {\r\n            cloneId = \"clone-\" + registry.getUniqueId();\r\n        }\r\n        var newObject = new this.constructor();\r\n        newObject.cloneId = cloneId;\r\n        newObject.copyFrom(this);\r\n        // add to clones list\r\n        // this.clones.push(newObject); // moved this to copyFrom\r\n        return newObject;\r\n    };\r\n    Object.defineProperty(BaseObject.prototype, \"clones\", {\r\n        /**\r\n         * Returns a collection of object's clones.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return Clones\r\n         */\r\n        get: function () {\r\n            if (!this._clones) {\r\n                this._clones = new List();\r\n            }\r\n            return this._clones;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Copies all properties and related data from different element.\r\n     *\r\n     * @param object Source element\r\n     */\r\n    BaseObject.prototype.copyFrom = function (object) {\r\n        object.clones.push(this); // do not moveValue, as it is expensive! even if there will be several items in clones list, it's not that bad.\r\n        this.clonedFrom = object;\r\n    };\r\n    Object.defineProperty(BaseObject.prototype, \"className\", {\r\n        /**\r\n         * @ignore Exclude from docs\r\n         * @return Class name\r\n         */\r\n        get: function () {\r\n            return this._className;\r\n        },\r\n        /**\r\n         * Element's class name. (a class that was used to instantiate the element)\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @param value  Class name\r\n         */\r\n        set: function (value) {\r\n            this._className = value;\r\n            /*if (registry) {\r\n                registry.registeredClasses[value] = typeof this;\r\n            }*/\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Caches value in object's cache.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param key    Key\r\n     * @param value  Value\r\n     * @param ttl    TTL in seconds\r\n     */\r\n    BaseObject.prototype.setCache = function (key, value, ttl) {\r\n        cache.set(this.uid, key, value, ttl);\r\n    };\r\n    /**\r\n     * Retrieves cached value.\r\n     *\r\n     * If optional second padarameter is specified, it will return that value\r\n     * if cache is not available or is expired.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param key    Key\r\n     * @param value  Value to return if cache is not available\r\n     * @return Value\r\n     */\r\n    BaseObject.prototype.getCache = function (key, value) {\r\n        if (value === void 0) { value = undefined; }\r\n        return cache.get(this.uid, key, value);\r\n    };\r\n    /**\r\n     * Clears object's local cache.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    BaseObject.prototype.clearCache = function () {\r\n        cache.clear(this.uid);\r\n    };\r\n    /**\r\n     * Creates [[Disposer]] for `setTimeout` function call. This ensures that all\r\n     * timeouts created by the object will be cleared when object itself is\r\n     * disposed.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param fn     Callback function\r\n     * @param delay  Timeout (ms)\r\n     * @return Disposer for timeout\r\n     */\r\n    BaseObject.prototype.setTimeout = function (fn, delay) {\r\n        var _this = this;\r\n        var id = setTimeout(function () {\r\n            _this.removeDispose(disposer);\r\n            fn();\r\n        }, delay);\r\n        var disposer = new Disposer(function () {\r\n            clearTimeout(id);\r\n        });\r\n        this._disposers.push(disposer);\r\n        return disposer;\r\n    };\r\n    /**\r\n     * Creates [[Disposer]] for `setInterval` function call. This ensures that all\r\n     * timeouts created by the object will be cleared when object itself is\r\n     * disposed.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param fn     Callback function\r\n     * @param delay  Timeout (ms)\r\n     * @return Disposer for timeout\r\n     */\r\n    BaseObject.prototype.setInterval = function (fn, delay) {\r\n        var _this = this;\r\n        var id = setInterval(function () {\r\n            _this.removeDispose(disposer);\r\n            fn();\r\n        }, delay);\r\n        var disposer = new Disposer(function () {\r\n            clearTimeout(id);\r\n        });\r\n        this._disposers.push(disposer);\r\n        return disposer;\r\n    };\r\n    Object.defineProperty(BaseObject.prototype, \"config\", {\r\n        /**\r\n         * ==========================================================================\r\n         * JSON-BASED CONFIG PROCESSING\r\n         * ==========================================================================\r\n         * @hidden\r\n         */\r\n        /**\r\n         * Use this property to set JSON-based config. When set, triggers processing\r\n         * routine, which will go through all properties, and try to apply values,\r\n         * create instances, etc.\r\n         *\r\n         * Use this with caution, as it is a time-consuming process. It's used for\r\n         * initialchart setup only, not routine operations.\r\n         *\r\n         * @param json JSON config\r\n         */\r\n        set: function (config) {\r\n            try {\r\n                this.processConfig(config);\r\n            }\r\n            catch (e) {\r\n                /*if (this instanceof Sprite) {\r\n                    this.raiseCriticalError(e);\r\n                }*/\r\n                this.raiseCriticalError(e);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Processes the JSON config.\r\n     *\r\n     * @param json  JSON config\r\n     * @ignore Exclude from docs\r\n     */\r\n    BaseObject.prototype.processConfig = function (config) {\r\n        var _this = this;\r\n        if (!config) {\r\n            return;\r\n        }\r\n        // Get target\r\n        var target = this;\r\n        // Iterate through all of the items\r\n        $object.eachOrdered(config, function (configKey, value) {\r\n            var configValue = value;\r\n            // Is this a callback?\r\n            if (configKey == \"callback\" && typeof value == \"function\") {\r\n                value.call(target);\r\n            }\r\n            // Check if there's a property in target\r\n            if (_this.hasProperty(configKey)) {\r\n                var item_1;\r\n                // Do we have instructions to create an object?\r\n                // We create a new object if \"type\" key is set, but only if the\r\n                // target object is of different type.\r\n                if ($type.isObject(configValue)\r\n                    && $type.hasValue(configValue[\"type\"])\r\n                    && (!$type.isObject(target[configKey])\r\n                        || !$type.hasValue(target[configKey].className)\r\n                        || configValue[\"forceCreate\"]\r\n                        || target[configKey].className != configValue[\"type\"])\r\n                    && !_this.asIs(configKey)) {\r\n                    item_1 = _this.createClassInstance(configValue[\"type\"]);\r\n                    // Create new instance\r\n                    if (item_1) {\r\n                        target[configKey] = item_1;\r\n                    }\r\n                    else {\r\n                        item_1 = target[configKey];\r\n                    }\r\n                }\r\n                else {\r\n                    // Get item from the object\r\n                    item_1 = target[configKey];\r\n                }\r\n                /**\r\n                 * It is...\r\n                 * --------------------------------------------------------------------\r\n                 */\r\n                if (item_1 instanceof Adapter) {\r\n                    // ... an Adapter, try to add handlers to it\r\n                    // ------------------------------------------------------------------\r\n                    _this.processAdapters(item_1, configValue);\r\n                }\r\n                else if (item_1 instanceof EventDispatcher) {\r\n                    // ... an EventDispatcher, try to add handlers to it\r\n                    // ------------------------------------------------------------------\r\n                    _this.processEvents(item_1, configValue);\r\n                }\r\n                else if (configKey == \"locale\" && $type.isString(configValue)) {\r\n                    // ... a locale specified as string, e.g. \"fr_FR\"\r\n                    // ------------------------------------------------------------------\r\n                    if (document[\"am4lang_\" + configValue]) {\r\n                        target[configKey] = document[\"am4lang_\" + configValue];\r\n                    }\r\n                }\r\n                else if (configKey == \"parent\" && $type.isString(configValue)) {\r\n                    // ... a parent referred via its it\r\n                    // ------------------------------------------------------------------\r\n                    var parent_1 = _this.map.getKey(configValue);\r\n                    if (parent_1) {\r\n                        target[configKey] = parent_1;\r\n                    }\r\n                    else {\r\n                        _this.addDelayedMap(\"parent\", configValue);\r\n                    }\r\n                }\r\n                else if (_this.asIs(configKey)) {\r\n                    // ... a special field, just set it to new value\r\n                    // ------------------------------------------------------------------\r\n                    // (no need to add each indvidual item)\r\n                    target[configKey] = configValue;\r\n                }\r\n                else if (_this.asFunction(configKey) && $type.isString(configValue)) {\r\n                    // ... a field indicating function name to look for in registry\r\n                    // ------------------------------------------------------------------\r\n                    if ($type.hasValue(registry.registeredClasses[configValue])) {\r\n                        target[configKey] = registry.registeredClasses[configValue];\r\n                    }\r\n                    else {\r\n                        throw Error(\"Invalid easing function: \" + configValue);\r\n                    }\r\n                }\r\n                else if (configValue instanceof BaseObject) {\r\n                    // ... a BaseObject object, we just going to use it as it is\r\n                    // ------------------------------------------------------------------\r\n                    target[configKey] = configValue;\r\n                }\r\n                else if (item_1 instanceof BaseObject) {\r\n                    // ... another child BaseObject\r\n                    // ------------------------------------------------------------------\r\n                    // Let's just pass in config part in and let itself deal with it\r\n                    item_1.config = configValue;\r\n                }\r\n                else if (item_1 instanceof ListTemplate || item_1 instanceof OrderedListTemplate || item_1 instanceof SortedListTemplate) {\r\n                    // ... a list with template\r\n                    // ------------------------------------------------------------------\r\n                    // Let's see what we can do with it\r\n                    if ($type.isArray(configValue)) {\r\n                        // It's an array.\r\n                        // Create a list item for entry, or try to apply properties to an\r\n                        // existing entry if possible and it is present.\r\n                        if (item_1 instanceof ListTemplate) {\r\n                            _this.processListTemplate(configValue, item_1);\r\n                        }\r\n                        else {\r\n                            _this.processOrderedTemplate(configValue, item_1);\r\n                        }\r\n                    }\r\n                    else if ($type.isObject(configValue)) {\r\n                        // It's a single oject.\r\n                        // Treat it as a template.\r\n                        if (configValue instanceof BaseObject) {\r\n                            // Item is already a BaseObject, no need to process it further\r\n                            item_1.template = configValue;\r\n                        }\r\n                        else {\r\n                            // Now let's find out if the whole object if a template, or we\r\n                            // need to get it from `template` key\r\n                            var templateValue = void 0;\r\n                            if ($type.hasValue(configValue.template)) {\r\n                                templateValue = configValue.template;\r\n                            }\r\n                            else {\r\n                                templateValue = configValue;\r\n                            }\r\n                            if (item_1.template instanceof BaseObject) {\r\n                                // Template is a BaseObject so we will just let its config\r\n                                // deal with the configuration\r\n                                item_1.template.config = templateValue;\r\n                            }\r\n                            else {\r\n                                $object.each(templateValue, function (entryKey, entryValue) {\r\n                                    var listItem = item_1.template[entryKey];\r\n                                    if (listItem instanceof Adapter) {\r\n                                        _this.processAdapters(listItem, entryValue);\r\n                                    }\r\n                                    else if (listItem instanceof EventDispatcher) {\r\n                                        _this.processEvents(listItem, entryValue);\r\n                                    }\r\n                                    else if (listItem instanceof DictionaryTemplate) {\r\n                                        _this.processDictionaryTemplate(listItem, entryValue);\r\n                                    }\r\n                                    else if (item_1.template[entryKey] instanceof BaseObject) {\r\n                                        // Template is a BaseObject. Let it deal with its own config.\r\n                                        item_1.template[entryKey].config = entryValue;\r\n                                    }\r\n                                    else if ($type.isObject(entryValue) && $type.hasValue(entryValue[\"type\"])) {\r\n                                        listItem = _this.createClassInstance(entryValue[\"type\"]);\r\n                                        if (listItem) {\r\n                                            if (listItem instanceof BaseObject) {\r\n                                                listItem.config = entryValue;\r\n                                            }\r\n                                            item_1.template[entryKey] = listItem;\r\n                                        }\r\n                                        else {\r\n                                            item_1.template[entryKey] = entryValue;\r\n                                        }\r\n                                    }\r\n                                    else if (listItem instanceof List) {\r\n                                        // It's List, process it\r\n                                        _this.processList(entryValue, listItem);\r\n                                    }\r\n                                    else {\r\n                                        // Aything else. Just assing and be done with it.\r\n                                        item_1.template[entryKey] = _this.maybeColorOrPercent(entryValue);\r\n                                    }\r\n                                });\r\n                            }\r\n                            // Check maybe there are `values` to insert\r\n                            if ($type.hasValue(configValue.values)) {\r\n                                if (item_1 instanceof ListTemplate) {\r\n                                    _this.processListTemplate(configValue.values, item_1);\r\n                                }\r\n                                else {\r\n                                    _this.processOrderedTemplate(configValue.values, item_1);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        // Something else?\r\n                        // Not sure what to do with it on a list - ignore\r\n                    }\r\n                }\r\n                else if (item_1 instanceof List) {\r\n                    // ... a list\r\n                    // ------------------------------------------------------------------\r\n                    if (configKey == \"children\") {\r\n                        _this.processList(configValue, item_1, _this);\r\n                    }\r\n                    else {\r\n                        _this.processList(configValue, item_1);\r\n                    }\r\n                }\r\n                else if (item_1 instanceof DictionaryTemplate) {\r\n                    // ... a dictionary with template\r\n                    // ------------------------------------------------------------------\r\n                    _this.processDictionaryTemplate(item_1, configValue);\r\n                }\r\n                else if (item_1 instanceof Dictionary) {\r\n                    // ... a dictionary\r\n                    // ------------------------------------------------------------------\r\n                    _this.processDictionary(item_1, configValue);\r\n                }\r\n                else if (item_1 instanceof Color || item_1 instanceof Percent) {\r\n                    // ... it's a Color or Percent\r\n                    // ------------------------------------------------------------------\r\n                    target[configKey] = _this.maybeColorOrPercent(configValue);\r\n                }\r\n                else if ($type.isObject(item_1) && $type.isObject(configValue)) {\r\n                    // ... a regular object\r\n                    // ------------------------------------------------------------------\r\n                    $object.copyAllProperties(configValue, item_1);\r\n                }\r\n                else {\r\n                    // ... something else - probably a simple property or object\r\n                    // ------------------------------------------------------------------\r\n                    // Maybe convert to `Percent` or `Color`?\r\n                    configValue = _this.maybeColorOrPercent(configValue);\r\n                    // Assign\r\n                    target[configKey] = configValue;\r\n                }\r\n            }\r\n            else if (!_this.isReserved(configKey)) {\r\n                // Doesn't have property set. But we're going to assume JSON config\r\n                // creator knows what he/she is doing and set it anyway.\r\n                target[configKey] = configValue;\r\n            }\r\n        }, this.configOrder);\r\n        // Any errors?\r\n        if (this.processingErrors.length) {\r\n            var errors = this.processingErrors.join(\"\\n\");\r\n            this._processingErrors = [];\r\n            throw Error(errors);\r\n        }\r\n    };\r\n    /**\r\n     * Tries to detect if value is color or percent and converts to proper object\r\n     * if necessary.\r\n     *\r\n     * Returns the same source value if no color/percent detected\r\n     *\r\n     * @param value  Source value\r\n     * @return Converted value\r\n     */\r\n    BaseObject.prototype.maybeColorOrPercent = function (value) {\r\n        if ($type.isString(value)) {\r\n            if (value.match(/^[\\-]?[0-9.]+\\%$/)) {\r\n                return percent($type.toNumber(value));\r\n            }\r\n            else if (value.match(/^\\#[0-9abcdef]{3,}$/i)) {\r\n                return color(value);\r\n            }\r\n        }\r\n        return value;\r\n    };\r\n    BaseObject.prototype.processAdapters = function (item, config) {\r\n        var _this = this;\r\n        if ($type.isArray(config)) {\r\n            $array.each(config, function (entry, index) {\r\n                item.add(entry.key, entry.callback, entry.priority || 0, _this);\r\n            });\r\n        }\r\n        else if ($type.isObject(config)) {\r\n            $object.each(config, function (key, entry) {\r\n                if (!item.has(key, entry)) {\r\n                    item.add(key, entry);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    BaseObject.prototype.processEvents = function (item, config) {\r\n        var _this = this;\r\n        if ($type.isObject(config)) {\r\n            $object.each(config, function (key, entry) {\r\n                if (!item.has(key, entry)) {\r\n                    item.on(key, entry);\r\n                }\r\n            });\r\n        }\r\n        else if ($type.isArray(config)) {\r\n            $array.each(config, function (entry, index) {\r\n                item.on(entry.type, entry.callback, _this);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Processes JSON config for a [[DictionaryTemplate]] item.\r\n     *\r\n     * @todo Description\r\n     * @param item    Item\r\n     * @param config  Config\r\n     */\r\n    BaseObject.prototype.processDictionaryTemplate = function (item, config) {\r\n        // We can only process object\r\n        // Not sure what to do with other types - ignore\r\n        if ($type.isObject(config)) {\r\n            // Create an entry for each item, or override properties for\r\n            // existing one.\r\n            $object.each(config, function (entryKey, entryValue) {\r\n                var listItem;\r\n                // Get existing one, or create a new one\r\n                if (entryKey == \"template\") {\r\n                    listItem = item.template;\r\n                }\r\n                else if (item.hasKey(entryKey)) {\r\n                    listItem = item.getKey(entryKey);\r\n                }\r\n                else {\r\n                    listItem = item.create(entryKey);\r\n                }\r\n                // Set data\r\n                if (listItem instanceof BaseObject) {\r\n                    listItem.config = entryValue;\r\n                }\r\n                else if ($type.isObject(listItem) && $type.isObject(entryValue)) {\r\n                    $object.copyAllProperties(entryValue, listItem);\r\n                }\r\n                else {\r\n                    listItem.setKey(entryKey, entryValue);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Processes JSON config for a [[Dictionary]] item.\r\n     *\r\n     * @todo Description\r\n     * @param item    Item\r\n     * @param config  Config\r\n     */\r\n    BaseObject.prototype.processDictionary = function (item, config) {\r\n        // We can only process object\r\n        // Not sure what to do with other types - ignore\r\n        if ($type.isObject(config)) {\r\n            // Create an entry for each item, or override properties for\r\n            // existing one.\r\n            // @todo support for non-basic types\r\n            $object.each(config, function (entryKey, entryValue) {\r\n                item.setKey(entryKey, entryValue);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Processes [[ListTemplate]].\r\n     *\r\n     * @param configValue  Config value\r\n     * @param item         Item\r\n     */\r\n    BaseObject.prototype.processListTemplate = function (configValue, item) {\r\n        var _this = this;\r\n        $array.each(configValue, function (entry, index) {\r\n            var type = _this.getConfigEntryType(entry);\r\n            var listItem;\r\n            if (item.hasIndex(index) && !entry[\"forceCreate\"]) {\r\n                listItem = item.getIndex(index);\r\n            }\r\n            else if (entry instanceof BaseObject) {\r\n                // Item is already a BaseObject, no need to process it further\r\n                item.push(entry);\r\n                return;\r\n            }\r\n            else if (type) {\r\n                listItem = item.create(type);\r\n            }\r\n            else {\r\n                listItem = item.create();\r\n            }\r\n            if (entry === listItem) {\r\n                // It's already the same item, do nothing\r\n            }\r\n            else {\r\n                if ($type.isObject(entry)) {\r\n                    // If the list item is BaseObject, we just need to let it\r\n                    // deal if its own config\r\n                    if (listItem instanceof BaseObject) {\r\n                        listItem.config = entry;\r\n                    }\r\n                    else if ($type.isObject(listItem) && $type.isObject(entry)) {\r\n                        $object.copyAllProperties(entry, listItem);\r\n                    }\r\n                    else {\r\n                        item.setIndex(item.indexOf(listItem), entry);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        // Truncate the list if it contains less items than the config\r\n        // array\r\n        while (configValue.length > item.length) {\r\n            item.pop();\r\n        }\r\n    };\r\n    /**\r\n     * Processes [[OrdererListTemplate]] or [[SortedListTemplate]].\r\n     *\r\n     * @param configValue  Config value\r\n     * @param item         Item\r\n     */\r\n    BaseObject.prototype.processOrderedTemplate = function (configValue, item) {\r\n        var _this = this;\r\n        $array.each(configValue, function (entry, index) {\r\n            var type = _this.getConfigEntryType(entry);\r\n            var listItem;\r\n            if (type) {\r\n                listItem = item.create(type);\r\n            }\r\n            else {\r\n                listItem = item.create();\r\n            }\r\n            if ($type.isObject(entry)) {\r\n                // If the list item is BaseObject, we just need to let it\r\n                // deal if its own config\r\n                if (listItem instanceof BaseObject) {\r\n                    listItem.config = entry;\r\n                }\r\n                else if ($type.isObject(listItem) && $type.isObject(entry)) {\r\n                    $object.copyAllProperties(entry, listItem);\r\n                }\r\n                else {\r\n                    item.insert(entry);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Processes [[List]].\r\n     *\r\n     * @param configValue  Config value\r\n     * @param item         Item\r\n     */\r\n    BaseObject.prototype.processList = function (configValue, item, parent) {\r\n        var _this = this;\r\n        // Convert to array if necessary\r\n        if (!$type.isArray(configValue)) {\r\n            configValue = [configValue];\r\n        }\r\n        // It's an array\r\n        // Create a list item for entry\r\n        var itemCount = item.length;\r\n        $array.each(configValue, function (entry, index) {\r\n            if ($type.isObject(entry)) {\r\n                // An object.\r\n                //\r\n                // Let's see if we can instantiate a class out of it, or we need\r\n                // to push it into list as it is.\r\n                //\r\n                // If there are items already at the specified index in the list,\r\n                // apply properties rather than create a new one.\r\n                var listItem = void 0;\r\n                if ((index < itemCount) && !entry[\"forceCreate\"]) {\r\n                    listItem = item.getIndex(index);\r\n                }\r\n                else if (entry instanceof BaseObject) {\r\n                    // Item is already a BaseObject, no need to process it further\r\n                    item.push(entry);\r\n                    return;\r\n                }\r\n                else {\r\n                    listItem = _this.createEntryInstance(entry);\r\n                    if (parent) {\r\n                        listItem.parent = parent;\r\n                    }\r\n                    else {\r\n                        item.push(listItem);\r\n                    }\r\n                }\r\n                // If the list item is BaseObject, we just need to let it\r\n                // deal if its own config\r\n                if (listItem instanceof BaseObject) {\r\n                    listItem.config = entry;\r\n                }\r\n                else if ($type.isObject(listItem) && $type.isObject(entry)) {\r\n                    $object.copyAllProperties(entry, listItem);\r\n                }\r\n            }\r\n            else {\r\n                // Basic value.\r\n                // Just push it into list, or override existing value\r\n                if (item.hasIndex(index)) {\r\n                    item.setIndex(index, entry);\r\n                }\r\n                else {\r\n                    item.push(entry);\r\n                }\r\n            }\r\n        });\r\n        // Truncate the list if it contains less items than the config\r\n        // array\r\n        while (configValue.length > item.length) {\r\n            item.pop();\r\n        }\r\n    };\r\n    /**\r\n     * This function is used to sort element's JSON config properties, so that\r\n     * some properties that absolutely need to be processed last, can be put at\r\n     * the end.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param a  Element 1\r\n     * @param b  Element 2\r\n     * @return Sorting number\r\n     */\r\n    BaseObject.prototype.configOrder = function (a, b) {\r\n        if (a == b) {\r\n            return 0;\r\n        }\r\n        // Language must come first, so it's all set up when the rest of the\r\n        // elements are being instantiated\r\n        else if (a == \"language\") {\r\n            return -1;\r\n        }\r\n        else if (b == \"language\") {\r\n            return 1;\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    };\r\n    /**\r\n     * Checks if field should be just assigned as is, without any checking when\r\n     * processing JSON config.\r\n     *\r\n     * Extending functions can override this function to do their own checks.\r\n     *\r\n     * @param field  Field name\r\n     * @return Assign as is?\r\n     */\r\n    BaseObject.prototype.asIs = function (field) {\r\n        return $array.indexOf([\"locale\"], field) != -1;\r\n    };\r\n    /**\r\n     * Checks if field needs to be converted to function, if it is specified\r\n     * as string.\r\n     *\r\n     * @param field  Field name\r\n     * @return Assign as function?\r\n     */\r\n    BaseObject.prototype.asFunction = function (field) {\r\n        return false;\r\n    };\r\n    /**\r\n     * Creates a relevant class instance if such class definition exists.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param className  Class name\r\n     * @return Instance\r\n     */\r\n    BaseObject.prototype.createClassInstance = function (className) {\r\n        if ($type.hasValue(registry.registeredClasses[className])) {\r\n            return new registry.registeredClasses[className]();\r\n        }\r\n        else {\r\n            throw Error(\"Invalid type: \\\"\" + className + \"\\\".\");\r\n        }\r\n    };\r\n    /**\r\n     * Creates a class instance for a config entry using it's type. (as set in\r\n     * `type` property)\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param config  Config part\r\n     * @return Instance\r\n     */\r\n    BaseObject.prototype.createEntryInstance = function (config) {\r\n        var res;\r\n        if ($type.hasValue(config[\"type\"])) {\r\n            res = this.createClassInstance(config[\"type\"]);\r\n        }\r\n        if (!res) {\r\n            return config;\r\n        }\r\n        return res;\r\n    };\r\n    /**\r\n     * Determines config object type.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param config  Config part\r\n     * @return Type\r\n     */\r\n    BaseObject.prototype.getConfigEntryType = function (config) {\r\n        if ($type.hasValue(config[\"type\"])) {\r\n            if ($type.hasValue(registry.registeredClasses[config[\"type\"]])) {\r\n                return registry.registeredClasses[config[\"type\"]];\r\n            }\r\n            else {\r\n                throw Error(\"Invalid type: \\\"\" + config[\"type\"] + \"\\\".\");\r\n            }\r\n        }\r\n        return;\r\n    };\r\n    /**\r\n     * Checks if this element has a property.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param prop  Property name\r\n     * @return Has property?\r\n     */\r\n    BaseObject.prototype.hasProperty = function (prop) {\r\n        return prop in this ? true : false;\r\n    };\r\n    /**\r\n     * Checkes whether JSON key is a reserved keyword.\r\n     *\r\n     * @param key  Key\r\n     * @return Reserved\r\n     */\r\n    BaseObject.prototype.isReserved = function (key) {\r\n        return [\"type\", \"forceCreate\"].indexOf(key) !== -1;\r\n    };\r\n    Object.defineProperty(BaseObject.prototype, \"processingErrors\", {\r\n        /**\r\n         * A list of errors that happened during JSON processing.\r\n         *\r\n         * @return Errors\r\n         */\r\n        get: function () {\r\n            if (!this._processingErrors) {\r\n                this._processingErrors = [];\r\n            }\r\n            return this._processingErrors;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return BaseObject;\r\n}());\r\nexport { BaseObject };\r\n;\r\n/**\r\n * A version of [[BaseObject]] with events properties and methods.\r\n * Classes that use [[EventDispatcher]] should extend this instead of\r\n * [[BaseObject]] directly.\r\n */\r\nvar BaseObjectEvents = /** @class */ (function (_super) {\r\n    __extends(BaseObjectEvents, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function BaseObjectEvents() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"BaseObjectEvents\";\r\n        return _this;\r\n    }\r\n    Object.defineProperty(BaseObjectEvents.prototype, \"events\", {\r\n        /**\r\n         * An [[EventDispatcher]] instance\r\n         */\r\n        get: function () {\r\n            if (!this._eventDispatcher) {\r\n                this._eventDispatcher = new EventDispatcher();\r\n                this._disposers.push(this._eventDispatcher);\r\n            }\r\n            return this._eventDispatcher;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    //public set events(value:EventDispatcher<AMEvent<this, this[\"_events\"]>>){\r\n    //\tthis._eventDispatcher = value;\r\n    //}\r\n    /**\r\n     * Dispatches an event using own event dispatcher. Will automatically\r\n     * populate event data object with event type and target (this element).\r\n     * It also checks if there are any handlers registered for this sepecific\r\n     * event.\r\n     *\r\n     * @param eventType Event type (name)\r\n     * @param data      Data to pass into event handler(s)\r\n     */\r\n    BaseObjectEvents.prototype.dispatch = function (eventType, data) {\r\n        // @todo Implement proper type check\r\n        if (this._eventDispatcher) {\r\n            if (this.events.isEnabled(eventType)) {\r\n                if (data) {\r\n                    data.type = eventType;\r\n                    data.target = data.target || this;\r\n                    this.events.dispatch(eventType, {\r\n                        type: eventType,\r\n                        target: this\r\n                    });\r\n                }\r\n                else {\r\n                    this.events.dispatch(eventType, {\r\n                        type: eventType,\r\n                        target: this\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Works like `dispatch`, except event is triggered immediately, without\r\n     * waiting for the next frame cycle.\r\n     *\r\n     * @param eventType Event type (name)\r\n     * @param data      Data to pass into event handler(s)\r\n     */\r\n    BaseObjectEvents.prototype.dispatchImmediately = function (eventType, data) {\r\n        // @todo Implement proper type check\r\n        if (this._eventDispatcher) {\r\n            if (this.events.isEnabled(eventType)) {\r\n                if (data) {\r\n                    data.type = eventType;\r\n                    data.target = data.target || this;\r\n                    this.events.dispatchImmediately(eventType, data);\r\n                }\r\n                else {\r\n                    this.events.dispatchImmediately(eventType, {\r\n                        type: eventType,\r\n                        target: this\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Copies all parameters from another [[Sprite]].\r\n     *\r\n     * @param source Source object\r\n     */\r\n    BaseObjectEvents.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        if (source._eventDispatcher) {\r\n            this.events.copyFrom(source._eventDispatcher);\r\n        }\r\n    };\r\n    return BaseObjectEvents;\r\n}(BaseObject));\r\nexport { BaseObjectEvents };\r\n//# sourceMappingURL=Base.js.map","/**\r\n * This is the main class that encapsulates every object on the chart.\r\n *\r\n * If it's an element that is to be displayed on the screen at some point, its\r\n * class must extend [[Sprite]] class.\r\n */\r\nimport { __extends, __values } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { SpriteState } from \"./SpriteState\";\r\nimport { SpriteEventDispatcher } from \"./SpriteEvents\";\r\nexport { SpriteEventDispatcher };\r\nimport { BaseObjectEvents } from \"./Base\";\r\nimport { Adapter } from \"./utils/Adapter\";\r\nimport { Dictionary, DictionaryTemplate, DictionaryDisposer } from \"./utils/Dictionary\";\r\nimport { ListDisposer, List } from \"./utils/List\";\r\nimport { MultiDisposer, Disposer, MutableValueDisposer } from \"./utils/Disposer\";\r\nimport { Animation, AnimationDisposer } from \"./utils/Animation\";\r\nimport { getGhostPaper } from \"./rendering/Paper\";\r\nimport { Container } from \"./Container\";\r\nimport { Pattern } from \"./rendering/fills/Pattern\";\r\nimport { LinearGradient } from \"./rendering/fills/LinearGradient\";\r\nimport { RadialGradient } from \"./rendering/fills/RadialGradient\";\r\nimport { Color, color, toColor } from \"./utils/Color\";\r\nimport { getInteraction } from \"./interaction/Interaction\";\r\nimport { MouseCursorStyle } from \"./interaction/Mouse\";\r\nimport { options } from \"./Options\";\r\nimport { registry } from \"./Registry\";\r\nimport { NumberFormatter } from \"./formatters/NumberFormatter\";\r\nimport { DateFormatter } from \"./formatters/DateFormatter\";\r\nimport { DurationFormatter } from \"./formatters/DurationFormatter\";\r\nimport { getTextFormatter } from \"./formatters/TextFormatter\";\r\nimport { Language } from \"./utils/Language\";\r\nimport { Export } from \"./export/Export\";\r\nimport * as $utils from \"./utils/Utils\";\r\nimport * as $math from \"./utils/Math\";\r\nimport * as $strings from \"./utils/Strings\";\r\nimport * as $array from \"./utils/Array\";\r\nimport * as $object from \"./utils/Object\";\r\nimport * as $type from \"./utils/Type\";\r\nimport * as $iter from \"./utils/Iterator\";\r\nimport { system } from \"./System\";\r\nimport { Percent, percent } from \"./utils/Percent\";\r\n/**\r\n * Defines list ofvisual properties\r\n */\r\nexport var visualProperties = [\"fill\", \"fillOpacity\", \"stroke\", \"strokeOpacity\", \"strokeWidth\", \"strokeDasharray\", \"strokeDashoffset\", \"strokeLinecap\", \"strokeLinejoin\"]; // do not add opacity here, as it is used for showing/hiding\r\n;\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Sprite represents any displayable element.\r\n *\r\n * This is the main class that encapsulates every object on the chart.\r\n *\r\n * If it's an element that is to be displayed on the screen at some point, its\r\n * class must extend [[Sprite]] class.\r\n *\r\n * [[Sprite]] class represents the a hierarchical structure. Every object that\r\n * extends [[Sprite]] can have children, that would inherit their properties,\r\n * such as language, formatters, etc.\r\n *\r\n * @see {@link SpriteState}\r\n * @see {@link ISpriteEvents} for a list of available events\r\n * @see {@link ISpriteAdapters} for a list of available Adapters\r\n *\r\n * @todo Review child elements that need to go into `_disposers`\r\n * @important\r\n */\r\nvar Sprite = /** @class */ (function (_super) {\r\n    __extends(Sprite, _super);\r\n    /**\r\n     * Constructor:\r\n     * * Creates initial node\r\n     * * Sets default properties\r\n     * * Creates required default states\r\n     * * Inits accessibility\r\n     */\r\n    function Sprite() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        /**\r\n         * Holds values for Sprite's properties.\r\n         */\r\n        _this.properties = {};\r\n        /**\r\n         * @ignore\r\n         */\r\n        _this._eventDispatcher = new SpriteEventDispatcher(_this);\r\n        /**\r\n         * @ignore Exclude from docs\r\n         * @todo Description\r\n         */\r\n        _this._bindings = {};\r\n        /**\r\n         * Holds indicator if this Sprite is a \"template\" to be used for creating\r\n         * other Sprites from and should not be treated as full-fledged element.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        _this._isTemplate = false;\r\n        _this._isPath = false;\r\n        /**\r\n         * Holds indicator whether this sprite was already initialized.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        _this._inited = false;\r\n        /**\r\n         * Holds indicator whether this sprite was already initialized and ready.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        _this._ready = false;\r\n        /**\r\n         * If `sprite.hide()` is called and we have \"hidden\" state and\r\n         * `transitionDuration > 0`, we set `isHiding` flag to `true` in order to\r\n         * avoid restarting animations in case `hide()` method is called multiple\r\n         * times.\r\n         */\r\n        _this.isHiding = false;\r\n        /**\r\n         * If `sprite.hide()` is called, we set isHidden to true when sprite is hidden.\r\n         * This was added becaus hidden state might have visibility set to true and so\r\n         * there would not be possible to find out if a sprite is technically hidden or not.\r\n         */\r\n        _this._isHidden = false;\r\n        /**\r\n         * This property indicates if Sprite is currently being revealed from hidden\r\n         * state. This is used to prevent multiple calls to `sprite.show()` to\r\n         * restart reveal animation. (if enabled)\r\n         */\r\n        _this.isShowing = false;\r\n        /**\r\n         * Indicates if this element is a standalone instance. A \"standalone\r\n         * instance\" means this is a autonomous object which maintains its own\r\n         * set of controls like Preloader, Export, etc.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        _this.isStandaloneInstance = false;\r\n        /**\r\n         * Indicates if togglable Sprite is currently active (toggled on).\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        _this._isActive = false;\r\n        /**\r\n         * A Sprite element to use as a mask for this Sprite.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        _this._mask = new MutableValueDisposer();\r\n        /**\r\n         * @ignore Exclude from docs\r\n         * @todo Description\r\n         */\r\n        _this._positionPrecision = 3;\r\n        /**\r\n         * An instance of [[Language]].\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        _this._language = new MutableValueDisposer();\r\n        /**\r\n         * Holds [[Export]] object.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        _this._exporting = new MutableValueDisposer();\r\n        /**\r\n         * Should this Sprite be included when exporting?\r\n         */\r\n        _this._exportable = true;\r\n        /**\r\n         * Defines bounding box (square) for this element.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        _this._bbox = { x: 0, y: 0, width: 0, height: 0 };\r\n        /**\r\n         * Indicates if this element is invalid and should be re-validated (redrawn).\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        _this.invalid = false;\r\n        /**\r\n         * Indicates if this elements position is invalid and should be repositioned\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        _this.positionInvalid = false;\r\n        /**\r\n         * A collection of key/value pairs that can be used to bind specific Sprite\r\n         * properties to [[DataItem]].\r\n         *\r\n         * For example: `fill` property can be bound to `myCustomColor` field in\r\n         * DataItem. The Sprite will automatically get the value for `fill` from its\r\n         * DataItem.\r\n         *\r\n         * Can be set for each [[SpriteState]] individually to override default\r\n         * bindings.\r\n         *\r\n         * @see {@link SpriteState}\r\n         */\r\n        _this.propertyFields = {};\r\n        /**\r\n         * Specifies if property changes on this object should be propagated to the\r\n         * objects cloned from this object.\r\n         *\r\n         * This setting affects property changes *after* cloning, since at the moment\r\n         * of cloning all of properties from source object are copied to the clone\r\n         * anyway.\r\n         *\r\n         * @default false\r\n         */\r\n        _this.applyOnClones = false;\r\n        // unrotated unscaled\r\n        _this._measuredWidthSelf = 0;\r\n        _this._measuredHeightSelf = 0;\r\n        // read only, sprite extreme coordinates\r\n        /**\r\n         * @ignore\r\n         */\r\n        _this.maxLeft = 0;\r\n        /**\r\n         * @ignore\r\n         */\r\n        _this.maxRight = 0;\r\n        /**\r\n         * @ignore\r\n         */\r\n        _this.maxTop = 0;\r\n        /**\r\n         * @ignore\r\n         */\r\n        _this.maxBottom = 0;\r\n        // not rotated and not scaled\r\n        /**\r\n         * @ignore\r\n         */\r\n        _this.maxLeftSelf = 0;\r\n        /**\r\n         * @ignore\r\n         */\r\n        _this.maxRightSelf = 0;\r\n        /**\r\n         * @ignore\r\n         */\r\n        _this.maxTopSelf = 0;\r\n        /**\r\n         * @ignore\r\n         */\r\n        _this.maxBottomSelf = 0;\r\n        _this._isDragged = false;\r\n        _this._isResized = false;\r\n        /**\r\n         * @deprecated Moved to [[SpriteProperties]]\r\n         */\r\n        _this._disabled = false;\r\n        _this._internalDisabled = false;\r\n        _this._updateDisabled = false;\r\n        _this._internalDefaultsApplied = false;\r\n        /**\r\n         * Time in milliseconds after which rollout event happens when user rolls-out of the sprite. This helps to avoid flickering in some cases.\r\n         */\r\n        _this.rollOutDelay = 0;\r\n        /**\r\n         * This flag is set to `true` for the initial sprite you create and place\r\n         * to the div so that we could clear all additional\r\n         * sprites/containers when this sprite is disposed.\r\n         *\r\n         * @ignore\r\n         */\r\n        _this.isBaseSprite = false;\r\n        /**\r\n         * Indicates whether this sprite should be cloned when cloning its parent\r\n         * container. We set this to `false` in those cases when a sprite is created\r\n         * by the class, so that when cloning a duplicate sprite would not appear.\r\n         */\r\n        _this.shouldClone = true;\r\n        /**\r\n         * A read-only flag which indicates if a sprite has completed its initial\r\n         * animation (if `showOnInit = true`).\r\n         *\r\n         * In case `showOnInit = false`, `appeared` is set to `true` on init.\r\n         *\r\n         * @readonly\r\n         */\r\n        _this.appeared = false;\r\n        /**\r\n         * [ex description]\r\n         *\r\n         * @todo Description\r\n         * @ignore\r\n         */\r\n        _this.ex = 0;\r\n        /**\r\n         * [ey description]\r\n         *\r\n         * @todo Description\r\n         * @ignore\r\n         */\r\n        _this.ey = 0;\r\n        /**\r\n         * Indicates if the sprite can be moved around when resizing it with two fingers (will only work if draggable = false)\r\n         * @ignore\r\n         */\r\n        _this.dragWhileResize = false;\r\n        /**\r\n         *  @ignore\r\n         */\r\n        _this.measureFailed = false;\r\n        /**\r\n         * If this flag is set to true, calling show() will not reveal the sprite.\r\n         *\r\n         * @ignore\r\n         */\r\n        _this.preventShow = false;\r\n        /**\r\n         * When cloning a sprite, if the template has it's own tooltip assigned, this tooltip is also cloned by default.\r\n         * This is not good for cpu and sometimes you might only need one single tooltip for all clones. Set this to false in order not to clone tooltip.\r\n         */\r\n        _this.cloneTooltip = true;\r\n        _this.className = \"Sprite\";\r\n        _this._disposers.push(_this._eventDispatcher);\r\n        // Generate a unique ID\r\n        $utils.used(_this.uid);\r\n        // Create SVG group to hold everything in\r\n        _this.group = _this.paper.addGroup(\"g\");\r\n        // Set defaults\r\n        // it is better to set defauls like this in order to save invaliation calls and events\r\n        _this.setPropertyValue(\"scale\", 1);\r\n        _this.setPropertyValue(\"rotation\", 0);\r\n        _this.setPropertyValue(\"align\", \"none\");\r\n        _this.setPropertyValue(\"valign\", \"none\");\r\n        _this.setPropertyValue(\"pixelPerfect\", false);\r\n        _this.setPropertyValue(\"visible\", true);\r\n        _this.setPropertyValue(\"tooltipPosition\", \"fixed\");\r\n        _this.setPropertyValue(\"verticalCenter\", \"none\");\r\n        _this.setPropertyValue(\"horizontalCenter\", \"none\");\r\n        _this.setPropertyValue(\"tooltipX\", percent(50));\r\n        _this.setPropertyValue(\"tooltipX\", percent(50));\r\n        _this.setPropertyValue(\"marginTop\", 0);\r\n        _this.setPropertyValue(\"marginBottom\", 0);\r\n        _this.setPropertyValue(\"marginLeft\", 0);\r\n        _this.setPropertyValue(\"marginRight\", 0);\r\n        _this.setPropertyValue(\"dx\", 0);\r\n        _this.setPropertyValue(\"dy\", 0);\r\n        _this.setPropertyValue(\"paddingTop\", 0);\r\n        _this.setPropertyValue(\"paddingBottom\", 0);\r\n        _this.setPropertyValue(\"paddingRight\", 0);\r\n        _this.setPropertyValue(\"paddingLeft\", 0);\r\n        _this.setPropertyValue(\"togglable\", false);\r\n        _this.setPropertyValue(\"hidden\", false);\r\n        _this.setPropertyValue(\"urlTarget\", \"_self\");\r\n        _this.setPropertyValue(\"alwaysShowTooltip\", false);\r\n        _this.setPropertyValue(\"showTooltipOn\", \"hover\");\r\n        _this._prevMeasuredWidth = 0;\r\n        _this._prevMeasuredHeight = 0;\r\n        _this._measuredWidth = 0;\r\n        _this._measuredHeight = 0;\r\n        _this._isMeasured = true;\r\n        // Invalidate the Sprite so that renderer knows it needs to be drawn\r\n        _this.invalidate();\r\n        //this.states.create(\"default\").properties.opacity = 1;\r\n        // Apply the theme\r\n        _this.applyTheme();\r\n        //this._disposers.push(this._clickable);\r\n        // Decorate adapter with events so that we can apply its settings whenever\r\n        // it is modified\r\n        // @todo Think what to do here. We can't just apply the adapter value to\r\n        // property since not all of those are for properties. Commented out for\r\n        // now.\r\n        /*this.adapter.events.on(\"inserted\", (ev: any) => {\r\n            (<any>this)[ev.newValue.key] = (<any>this)[ev.newValue.key];\r\n        });\r\n        this.adapter.events.on(\"removed\", (ev: any) => {\r\n            (<any>this)[ev.newValue.key] = (<any>this)[ev.newValue.key];\r\n        });*/\r\n        // Add disposable dependencies to `_disposers` so they are automatically\r\n        // disposed of when this object is disposed\r\n        _this._disposers.push(_this.events);\r\n        _this._disposers.push(_this.group);\r\n        _this._disposers.push(_this._mask);\r\n        _this._disposers.push(_this._language);\r\n        _this._disposers.push(_this._exporting);\r\n        //this._disposers.push(this._parent);\r\n        //this._disposers.push(this._modal);\r\n        _this._disposers.push(new Disposer(function () {\r\n            $object.each(_this._bindings, function (key, value) {\r\n                value.dispose();\r\n            });\r\n        }));\r\n        _this.setPropertyValue(\"interactionsEnabled\", true);\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Sprite.prototype, \"events\", {\r\n        /**\r\n         * Event dispatcher.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/event-listeners/} for more info about Events\r\n         */\r\n        get: function () {\r\n            return this._eventDispatcher;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"adapter\", {\r\n        /**\r\n         * Holds Adapter.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/adapters/} for more info about Adapters\r\n         */\r\n        get: function () {\r\n            if (!this._adapterO) {\r\n                this._adapterO = new Adapter(this);\r\n            }\r\n            return this._adapterO;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * ==========================================================================\r\n     * ELEMENT VALIDATION, INIT, AND DRAWING STUFF\r\n     * ==========================================================================\r\n     * @hidden\r\n     */\r\n    /**\r\n     * Applies properties from all assigned themes.\r\n     *\r\n     * We do this here so that we can apply class names as well.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Sprite.prototype.applyTheme = function () {\r\n        _super.prototype.applyTheme.call(this);\r\n        if (options.autoSetClassName) {\r\n            this.setClassName();\r\n        }\r\n    };\r\n    /**\r\n     * Returns theme(s) used by this object either set explicitly on this\r\n     * element, inherited from parent, or inherited from [[System]].\r\n     *\r\n     * @return An array of theme references\r\n     */\r\n    Sprite.prototype.getCurrentThemes = function () {\r\n        var themes = this._themes;\r\n        if (themes) {\r\n            return themes;\r\n        }\r\n        else {\r\n            var parent_1 = this.parent;\r\n            if (parent_1) {\r\n                return parent_1.getCurrentThemes();\r\n            }\r\n            else {\r\n                return registry.themes;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Called just before element's validation, this function allows setting\r\n     * defaults.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Sprite.prototype.applyInternalDefaults = function () {\r\n        // Nothing here, but extending classes might override this function\r\n        // so that they can set their defaults\r\n        this._internalDefaultsApplied = true;\r\n    };\r\n    /**\r\n     * Invalidates element.\r\n     *\r\n     * Object will be redrawn during the next update cycle.\r\n     *\r\n     * Please note that in most cases elements will auto-invalidate when needed. If\r\n     * everything works, DO NOT use this method. Use it only if some changes do\r\n     * not take otherwise.\r\n     */\r\n    Sprite.prototype.invalidate = function () {\r\n        if (this.disabled || this._isTemplate) {\r\n            return;\r\n        }\r\n        // We no longer reset this on each invalidate, so that they are applied\r\n        // only once, and do not overwrite user-defined settings\r\n        //this._internalDefaultsApplied = false;\r\n        if (!this.invalid) {\r\n            this.invalid = true;\r\n            registry.addToInvalidSprites(this);\r\n            system.requestFrame();\r\n        }\r\n    };\r\n    /**\r\n     * Validates element:\r\n     * * Triggers events\r\n     * * Redraws the element\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Sprite.prototype.validate = function () {\r\n        this.dispatchImmediately(\"beforevalidated\");\r\n        // prevents from drawing if topparent is 0x0\r\n        /*\r\n        let topParent = this.topParent;\r\n\r\n        if (topParent) {\r\n            if (!topParent.maxWidth || !topParent.maxHeight) {\r\n                this._disposers.push(topParent.events.once(\"maxsizechanged\", this.invalidate, this));\r\n            }\r\n        }*/\r\n        // Set internal defaults\r\n        if (!this._internalDefaultsApplied) {\r\n            this.applyInternalDefaults();\r\n        }\r\n        this.beforeDraw();\r\n        this.draw();\r\n        this.invalid = false;\r\n        registry.removeFromInvalidSprites(this);\r\n        this.afterDraw();\r\n    };\r\n    /**\r\n     * Invalidates element's position.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Sprite.prototype.invalidatePosition = function () {\r\n        if (this.disabled || this._isTemplate) {\r\n            return;\r\n        }\r\n        if (!this.positionInvalid) {\r\n            this.positionInvalid = true;\r\n            registry.addToInvalidPositions(this);\r\n            system.requestFrame();\r\n        }\r\n    };\r\n    /**\r\n     * Transforms the element.\r\n     *\r\n     * @todo Description (review)\r\n     * @ignore Exclude from docs\r\n     */\r\n    Sprite.prototype.validatePosition = function () {\r\n        var pixelX = this.pixelX;\r\n        var pixelY = this.pixelY;\r\n        var dx = this.dx;\r\n        var dy = this.dy;\r\n        var x = pixelX + dx;\r\n        var y = pixelY + dy;\r\n        if (this._updateDisabled) {\r\n            if (this._internalDisabled) {\r\n                this.group.attr({ \"display\": \"none\" });\r\n            }\r\n            else {\r\n                if (!this.disabled) {\r\n                    this.removeSVGAttribute(\"display\");\r\n                }\r\n            }\r\n            this._updateDisabled = false;\r\n        }\r\n        var sizeChanged = this.measure();\r\n        //if (!this.invalid) {\r\n        var prevGroupTransform = this.group.transformString;\r\n        this.group.moveTo({ x: x, y: y });\r\n        this.group.rotation = this.rotation;\r\n        if (this.nonScaling) {\r\n            this.group.scale = this.scale / this.globalScale;\r\n        }\r\n        else {\r\n            this.group.scale = this.scale;\r\n        }\r\n        if (prevGroupTransform != this.group.transformString || sizeChanged) {\r\n            // not yet sure, this is to avoid many transforms=>container layout invalidation on initial buid\r\n            if (prevGroupTransform == null) {\r\n                this.dispatch(\"transformed\");\r\n            }\r\n            else {\r\n                this.dispatchImmediately(\"transformed\");\r\n            }\r\n            // TODO clear existing positionchanged dispatches ?\r\n            this.dispatch(\"positionchanged\");\r\n            if (this.showTooltipOn == \"hit\" || this.showTooltipOn == \"always\") {\r\n                this.updateTooltipPosition();\r\n            }\r\n        }\r\n        //}\r\n        // it might happen that x and y changed again, so we only remove if they didn't\r\n        if (pixelX + dx == x && pixelY + dy == y) {\r\n            registry.removeFromInvalidPositions(this);\r\n            this.positionInvalid = false;\r\n        }\r\n        var maskRectangle = this._maskRectangle;\r\n        // todo: verify this\r\n        if (maskRectangle) {\r\n            this._clipElement.moveTo({ x: maskRectangle.x - pixelX, y: maskRectangle.y - pixelY });\r\n        }\r\n    };\r\n    /**\r\n     * A placeholder method that is called **before** element begins to be drawn.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Sprite.prototype.beforeDraw = function () {\r\n    };\r\n    /**\r\n     * A placeholder method that draws the element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Sprite.prototype.draw = function () {\r\n    };\r\n    /**\r\n     * A placeholder method that is called **after** element finishes drawing\r\n     * itself.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Sprite.prototype.afterDraw = function () {\r\n        var e_1, _a;\r\n        if (this.isMeasured || this.horizontalCenter !== \"none\" || this.verticalCenter !== \"none\") {\r\n            this.measureElement();\r\n        }\r\n        //this.applyMask();\r\n        if (!this._inited) {\r\n            if (this._adapterO) {\r\n                try {\r\n                    // used to be applySVGAttrbutes here, this is more efficient\r\n                    for (var _b = __values(this._adapterO.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                        var key = _c.value;\r\n                        switch (key) {\r\n                            case \"mask\":\r\n                            case \"fill\":\r\n                            case \"opacity\":\r\n                            case \"fillOpacity\":\r\n                            case \"stroke\":\r\n                            case \"strokeOpacity\":\r\n                            case \"strokeWidth\":\r\n                            case \"shapeRendering\":\r\n                            case \"strokeDasharray\":\r\n                            case \"strokeDashoffset\":\r\n                            case \"strokeLinecap\":\r\n                            case \"strokeLinejoin\":\r\n                            case \"textDecoration\":\r\n                            case \"fontSize\":\r\n                            case \"fontFamily\":\r\n                            case \"fontWeight\":\r\n                                //case \"focusable\":\r\n                                //case \"tabindex\":\r\n                                //case \"role\":\r\n                                this[key] = this[key];\r\n                                break;\r\n                        }\r\n                    }\r\n                }\r\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                    }\r\n                    finally { if (e_1) throw e_1.error; }\r\n                }\r\n            }\r\n            this.applyFilters();\r\n            this.visible = this.visible;\r\n            this.interactionsEnabled = this.getPropertyValue(\"interactionsEnabled\"); // can't use .interactionsEnabled as it get's parent's\r\n            this._inited = true;\r\n            if (!this.showOnInit) {\r\n                this.appeared = true;\r\n            }\r\n            if (this.hidden) {\r\n                this.hide(0);\r\n            }\r\n            this.applyMask();\r\n            this.dispatch(\"validated\");\r\n            this.dispatch(\"inited\");\r\n            this.dispatchReady();\r\n        }\r\n        else {\r\n            this.dispatch(\"validated\");\r\n        }\r\n        if (this.showTooltipOn == \"always\") {\r\n            if (this.visible && !this.disabled && !this.__disabled) {\r\n                this.showTooltip();\r\n            }\r\n            else {\r\n                this.hideTooltip(0);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Dispatches `\"ready\"` event. Sprite dispatches it right after `\"inited\"` event.\r\n     *\r\n     * @ignore\r\n     */\r\n    Sprite.prototype.dispatchReady = function () {\r\n        if (!this.isReady()) {\r\n            this._ready = true;\r\n            this.dispatch(\"ready\");\r\n        }\r\n    };\r\n    /**\r\n     * Triggers a re-initialization of this element.\r\n     *\r\n     * Will result in complete redrawing of the element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Sprite.prototype.reinit = function () {\r\n        this._inited = false;\r\n        this.setState(this.defaultState);\r\n        this.invalidate();\r\n    };\r\n    /**\r\n     * Handles the situation where parent element is resized.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Sprite.prototype.handleGlobalScale = function () {\r\n        this.dispatch(\"globalscalechanged\");\r\n        if (this.nonScalingStroke) {\r\n            this.strokeWidth = this.strokeWidth;\r\n        }\r\n        if (this.nonScaling) {\r\n            this.validatePosition();\r\n        }\r\n        this.updateFilterScale();\r\n    };\r\n    /**\r\n     * Updates filter properties which might depend on scale\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Sprite.prototype.updateFilterScale = function () {\r\n        var _this = this;\r\n        $iter.each(this.filters.iterator(), function (filter) {\r\n            filter.scale = _this.globalScale;\r\n        });\r\n    };\r\n    /**\r\n     * Removes itself from system's invalid lists.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Sprite.prototype.removeFromInvalids = function () {\r\n        registry.removeFromInvalidSprites(this);\r\n        registry.removeFromInvalidPositions(this);\r\n    };\r\n    /**\r\n     * Copies all parameters from another [[Sprite]].\r\n     *\r\n     * @param source Source Sprite\r\n     */\r\n    Sprite.prototype.copyFrom = function (source) {\r\n        var _this = this;\r\n        _super.prototype.copyFrom.call(this, source);\r\n        this.isMeasured = source.isMeasured;\r\n        this.states.copyFrom(source.states);\r\n        if (source.filters.length > 0) {\r\n            source.filters.each(function (filter) {\r\n                _this.filters.push(filter.clone());\r\n            });\r\n        }\r\n        if (source._adapterO) {\r\n            this.adapter.copyFrom(source._adapterO);\r\n        }\r\n        //helps to avoid calling getter which creates instance\r\n        if (source[\"_interaction\"]) {\r\n            this.interactions.copyFrom(source.interactions);\r\n        }\r\n        if (source[\"_plugins\"]) {\r\n            this.plugins.copyFrom(source.plugins);\r\n        }\r\n        this.configField = source.configField;\r\n        this.applyOnClones = source.applyOnClones;\r\n        // this.numberFormatter = source.numberFormatter; // todo: this creates loose number formatter and copies it to all clones. somehow we need to know if source had numberFormatter explicitly created and not just because a getter was called.\r\n        //this.mask = source.mask; need to think about this, generally this causes a lot of problems\r\n        this.disabled = source.disabled;\r\n        this.virtualParent = source.virtualParent;\r\n        this.exportable = source.exportable;\r\n        //@todo: create tooltip if it's on source but not on this?\r\n        //const tooltip = this._tooltip;\r\n        //if (tooltip) {\r\n        //\ttooltip.copyFrom(source.tooltip);\r\n        //}\r\n        if (source._tooltip) {\r\n            if (this._tooltip) {\r\n                this._tooltip.copyFrom(source.tooltip);\r\n            }\r\n            else {\r\n                if (source.cloneTooltip) {\r\n                    this.tooltip = source.tooltip.clone();\r\n                }\r\n                else {\r\n                    this._tooltip = source.tooltip;\r\n                }\r\n            }\r\n        }\r\n        //if ((<any>source)[\"_tooltip\"] && !this._tooltip) {\r\n        //\tthis._tooltip = (<any>source)[\"_tooltip\"];\r\n        //}\r\n        this._showSystemTooltip = source.showSystemTooltip;\r\n        $utils.copyProperties(source.propertyFields, this.propertyFields);\r\n        $utils.copyProperties(source.properties, this);\r\n        if (source.fillModifier) {\r\n            this.fillModifier = source.fillModifier.clone();\r\n        }\r\n        if (source.strokeModifier) {\r\n            this.strokeModifier = source.strokeModifier.clone();\r\n        }\r\n    };\r\n    /**\r\n     * Destroys this object and all related data.\r\n     */\r\n    Sprite.prototype.dispose = function () {\r\n        if (!this.isDisposed()) {\r\n            if (this.showTooltipOn == \"always\" && this.tooltip) {\r\n                this.tooltip.hide();\r\n            }\r\n            this.dispatchImmediately(\"beforedisposed\");\r\n            if (this.isBaseSprite) {\r\n                if (this.htmlContainer) {\r\n                    while (this.htmlContainer.childNodes.length > 0) {\r\n                        this.htmlContainer.removeChild(this.htmlContainer.firstChild);\r\n                    }\r\n                }\r\n                this.isBaseSprite = false;\r\n            }\r\n            _super.prototype.dispose.call(this);\r\n            // Clear adapters\r\n            if (this._adapterO) {\r\n                this._adapterO.clear();\r\n            }\r\n            if (this.applyOnClones) {\r\n                if (this._clones) {\r\n                    for (var i = this._clones.length - 1; i >= 0; i--) {\r\n                        var clone = this._clones.getIndex(i);\r\n                        clone.dispose();\r\n                    }\r\n                }\r\n            }\r\n            if (this._svgContainer) {\r\n                this._svgContainer.dispose();\r\n            }\r\n            if (this._interactionDisposer) {\r\n                this._interactionDisposer.dispose();\r\n                this._interactionDisposer = undefined;\r\n            }\r\n            if (this._urlDisposer) {\r\n                this._urlDisposer.dispose();\r\n            }\r\n            this.removeFromInvalids();\r\n            if (this.element) {\r\n                this.element.dispose();\r\n            }\r\n            if (this.group) {\r\n                this.group.dispose();\r\n            }\r\n            if (this._numberFormatter) {\r\n                this._numberFormatter.dispose();\r\n            }\r\n            if (this._focusFilter) {\r\n                this._focusFilter.dispose();\r\n            }\r\n            var stroke = this.stroke;\r\n            if (stroke && !(stroke instanceof Color) && stroke.dispose) {\r\n                if (this.clonedFrom && this.clonedFrom.stroke == stroke) {\r\n                    // do nothing\r\n                }\r\n                else {\r\n                    stroke.dispose();\r\n                }\r\n            }\r\n            // TODO a bit hacky\r\n            var fill = this.fill;\r\n            if (fill && !(fill instanceof Color) && fill.dispose) {\r\n                if (this.clonedFrom && this.clonedFrom.fill == fill) {\r\n                    // do nothing\r\n                }\r\n                else {\r\n                    fill.dispose();\r\n                }\r\n            }\r\n            // remove from map\r\n            if ($type.hasValue(this.id)) {\r\n                this.map.removeKey(this.id);\r\n            }\r\n            this.parent = undefined;\r\n            if (this._filters) {\r\n                while (this._filters.length > 0) {\r\n                    var filter = this._filters.getIndex(0);\r\n                    filter.dispose();\r\n                    this._filters.removeValue(filter);\r\n                }\r\n            }\r\n            this._alwaysShowDisposers = undefined;\r\n        }\r\n    };\r\n    Object.defineProperty(Sprite.prototype, \"isTemplate\", {\r\n        /**\r\n         * @ignore Exclude from docs\r\n         * @return Is template?\r\n         */\r\n        get: function () {\r\n            return this._isTemplate;\r\n        },\r\n        /**\r\n         * Indicates if this element is a \"template\".\r\n         *\r\n         * Template Sprites act only as a holders for config for other \"real\"\r\n         * elements to be cloned from.\r\n         *\r\n         * Templates are treated differently, as they are not validated, redrawn, or\r\n         * otherwise are processed.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @param value Is template?\r\n         */\r\n        set: function (value) {\r\n            value = $type.toBoolean(value);\r\n            if (this._isTemplate != value) {\r\n                this._isTemplate = value;\r\n                if (this instanceof Container) {\r\n                    $iter.each(this.children.iterator(), function (child) {\r\n                        child.isTemplate = value;\r\n                    });\r\n                }\r\n                if (value) {\r\n                    this.parent = this.parent;\r\n                    this.removeFromInvalids();\r\n                }\r\n                else {\r\n                    this.invalidate();\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"showSystemTooltip\", {\r\n        /**\r\n         * @return Show system tooltip?\r\n         */\r\n        get: function () {\r\n            if (!$type.hasValue(this._showSystemTooltip)) {\r\n                if (this.virtualParent) {\r\n                    return this.virtualParent.showSystemTooltip;\r\n                }\r\n                else if (this.parent) {\r\n                    return this.parent.showSystemTooltip;\r\n                }\r\n                else {\r\n                    return false;\r\n                }\r\n            }\r\n            return this._showSystemTooltip;\r\n        },\r\n        /**\r\n         * Indicates whether the element should attempt to construct itself in a way\r\n         * so that system tooltip is shown if its `readerTitle` is set.\r\n         *\r\n         * @param value Show system tooltip?\r\n         */\r\n        set: function (value) {\r\n            value = $type.toBoolean(value);\r\n            if (this._showSystemTooltip != value) {\r\n                this._showSystemTooltip = value;\r\n                this.applyAccessibility();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"topParent\", {\r\n        /**\r\n         * ==========================================================================\r\n         * HIERARCHY AND STRUCTURE RELATED STUFF\r\n         * ==========================================================================\r\n         * @hidden\r\n         */\r\n        /**\r\n         * Sprites's top-level [[Container]].\r\n         *\r\n         * Please note that in most cases it won't be the chart element.\r\n         *\r\n         * To access base chart element, use `baseSprite` instead.\r\n         *\r\n         * @return Top-level ascendant\r\n         */\r\n        get: function () {\r\n            if (this._topParent) {\r\n                return this._topParent;\r\n            }\r\n            else {\r\n                if (this.parent) {\r\n                    return this.parent.topParent;\r\n                }\r\n            }\r\n        },\r\n        /**\r\n         * @ignore\r\n         * @param value {Container} top parent of a sprite\r\n         */\r\n        set: function (value) {\r\n            this._topParent = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"parent\", {\r\n        /**\r\n         * @return Parent container\r\n         */\r\n        get: function () {\r\n            return this._parent;\r\n        },\r\n        /**\r\n         * Elements' parent [[Container]].\r\n         *\r\n         * @param parent  Parent container\r\n         */\r\n        set: function (parent) {\r\n            if (this._isTemplate) {\r\n                return;\r\n            }\r\n            // TODO is this needed ?\r\n            $utils.used(this.paper);\r\n            var oldParent = this._parent;\r\n            if (oldParent != parent) {\r\n                if (oldParent) {\r\n                    oldParent.children.removeValue(this);\r\n                }\r\n                this._parent = parent;\r\n                if (parent) {\r\n                    this.topParent = parent.topParent;\r\n                    if (parent.isTemplate) {\r\n                        this.isTemplate = true;\r\n                    }\r\n                    this.baseId = parent.baseId;\r\n                    parent.children.push(this);\r\n                    // insert handler at Container invalidates +  invalidatesLayout + adds to group\r\n                    if (this._tooltip && !this._tooltipContainer) {\r\n                        this._tooltip.parent = parent.tooltipContainer;\r\n                    }\r\n                    if (!this._dataItem) {\r\n                        this.dataItem = parent.dataItem;\r\n                    }\r\n                    this.handleAlwaysShowTooltip();\r\n                    this.dispatchImmediately(\"parentset\");\r\n                }\r\n                else {\r\n                    this.topParent = undefined;\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Sprite.prototype.handleAlwaysShow = function () {\r\n        this.showTooltip();\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    Sprite.prototype.handleAlwaysShowTooltip = function () {\r\n        var sprite = this;\r\n        var oldDisposers = this._alwaysShowDisposers;\r\n        if (oldDisposers) {\r\n            $array.each(oldDisposers, function (oldDisposer) {\r\n                oldDisposer.dispose();\r\n            });\r\n        }\r\n        this._alwaysShowDisposers = [];\r\n        if (this.showTooltipOn == \"always\") {\r\n            while (sprite != undefined) {\r\n                var disposer = sprite.events.on(\"visibilitychanged\", this.handleAlwaysShow, this, false);\r\n                this.addDisposer(disposer);\r\n                this._alwaysShowDisposers.push(disposer);\r\n                sprite = sprite.parent;\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(Sprite.prototype, \"virtualParent\", {\r\n        /**\r\n         * @return Virtual parent\r\n         */\r\n        get: function () {\r\n            return this._virtualParent;\r\n        },\r\n        /**\r\n         * Element's \"virtual\" parent.\r\n         *\r\n         * This is required in ordere to maintain proper inheritance (like\r\n         * formatters).\r\n         *\r\n         * Sometimes an element is a \"logical\" parent, even though it's not a direct\r\n         * ascendant.\r\n         *\r\n         * Example: a bullet is not a child of the axis, but it would make sense\r\n         * for it to inherit series' formatters.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @param value  Virtual parent\r\n         */\r\n        set: function (value) {\r\n            this._virtualParent = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Moves `<defs>` to correct place in DOM.\r\n     *\r\n     * Some elements are initially created in \"ghost\" container. When moving\r\n     * those into proper place in DOM, their respective `<defs>` need to be moved\r\n     * as well.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Sprite.prototype.appendDefs = function () {\r\n        if (this.filterElement) {\r\n            this.paper.appendDef(this.filterElement);\r\n        }\r\n        var fill = this.fill;\r\n        if (fill && fill.element) {\r\n            this.paper.appendDef(fill.element);\r\n        }\r\n        var stroke = this.stroke;\r\n        if (stroke && stroke.element) {\r\n            this.paper.appendDef(stroke.element);\r\n        }\r\n        if (this.fillModifier && this.fill instanceof Color) {\r\n            var fill_1 = this.fillModifier.modify(this.fill);\r\n            if (fill_1 && fill_1.element) {\r\n                this.paper.appendDef(fill_1.element);\r\n            }\r\n        }\r\n        if (this.strokeModifier && this.stroke instanceof Color) {\r\n            var stroke_1 = this.strokeModifier.modify(this.stroke);\r\n            if (stroke_1 && stroke_1.element) {\r\n                this.paper.appendDef(stroke_1.element);\r\n            }\r\n        }\r\n        if (this._clipPath) {\r\n            this.paper.appendDef(this._clipPath);\r\n        }\r\n        if (this._exportable === false) {\r\n            this.exportable = false;\r\n        }\r\n    };\r\n    Object.defineProperty(Sprite.prototype, \"map\", {\r\n        /**\r\n         * Returns a [[Dictionary]] which maps object ids with their respective\r\n         * objects.\r\n         *\r\n         * Can be used to retrieve any object by id, e.g.:\r\n         *\r\n         * ```TypeScript\r\n         * console.log(mySprite.map.getKey(\"myid\"));\r\n         * ```\r\n         * ```JavaScript\r\n         * console.log(mySprite.map.getKey(\"myid\"));\r\n         * ```\r\n         *\r\n         * @return Map collection\r\n         */\r\n        get: function () {\r\n            var top = this.topParent;\r\n            if (top) {\r\n                return top.map;\r\n            }\r\n            else if (!this._map) {\r\n                this._map = new Dictionary();\r\n            }\r\n            return this._map;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"delayedMap\", {\r\n        /**\r\n         * @ignore\r\n         * @return Map collection\r\n         */\r\n        get: function () {\r\n            var top = this.topParent;\r\n            if (top) {\r\n                return top.delayedMap;\r\n            }\r\n            else if (!this._delayedMap) {\r\n                this._delayedMap = new Dictionary();\r\n            }\r\n            return this._delayedMap;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"id\", {\r\n        /**\r\n         * @return ID\r\n         */\r\n        get: function () {\r\n            return this._id;\r\n        },\r\n        /**\r\n         * Element's user-defined ID.\r\n         *\r\n         * Will throw an Error if there already is an object with the same ID.\r\n         *\r\n         * Please note that above check will be performed withing the scope of the\r\n         * current chart instance. It will not do checks across other chart instances\r\n         * or in globally in DOM.\r\n         *\r\n         * Make sure the IDs are unique.\r\n         *\r\n         * @param value ID\r\n         */\r\n        set: function (value) {\r\n            if (this._id != value) {\r\n                this._id = value;\r\n                if (this.map.hasKey(value)) {\r\n                    throw Error(\"Duplicate id (\" + value + \") used on multiple objects.\");\r\n                }\r\n                else {\r\n                    this.map.setKey(value, this);\r\n                }\r\n                if (options.autoSetClassName) {\r\n                    this.setClassName();\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"dom\", {\r\n        /**\r\n         * ==========================================================================\r\n         * ELEMENT AND DOM TREE MANIPULATION AND MEASURING\r\n         * ==========================================================================\r\n         * @hidden\r\n         */\r\n        /**\r\n         * Returns DOM element reference associated with this element.\r\n         *\r\n         * @readonly\r\n         * @return DOM element\r\n         */\r\n        get: function () {\r\n            return this.group.node;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"paper\", {\r\n        /**\r\n         * @ignore Exclude from docs\r\n         * @return Paper\r\n         */\r\n        get: function () {\r\n            if (this._paper) {\r\n                return this._paper;\r\n            }\r\n            else {\r\n                if (this.parent) {\r\n                    return this.parent.paper;\r\n                }\r\n            }\r\n            return getGhostPaper();\r\n        },\r\n        /**\r\n         * A [[Paper]] instance to place elements on.\r\n         *\r\n         * If there's no Paper set for this element, it goes up the ascendant tree\r\n         * until it finds one.\r\n         *\r\n         * This method is used by important `addChild()` method, so it's essential\r\n         * to have a [[Paper]] instance.\r\n         *\r\n         * If this element has a separate `htmlContainer` set, it will have a\r\n         * [[Paper]] instance itself.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @param paper  Paper\r\n         */\r\n        set: function (paper) {\r\n            this.setPaper(paper);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Sets [[Paper]] instance to use to draw elements.\r\n     * @ignore\r\n     * @param paper Paper\r\n     * @return true if paper was changed, false, if it's the same\r\n     */\r\n    Sprite.prototype.setPaper = function (paper) {\r\n        var oldPaper = this._paper;\r\n        if (oldPaper != paper) {\r\n            this._paper = paper;\r\n            this.appendDefs();\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    Object.defineProperty(Sprite.prototype, \"htmlContainer\", {\r\n        /**\r\n         * @return HTML element\r\n         */\r\n        get: function () {\r\n            if (this._htmlContainer) {\r\n                return this._htmlContainer;\r\n            }\r\n            else {\r\n                if (this.parent) {\r\n                    return this.parent.htmlContainer;\r\n                }\r\n            }\r\n        },\r\n        /**\r\n         * An HTML element to be used when placing wrapper element (`<div>`)\r\n         * for the whole chart.\r\n         *\r\n         * This is the same for **all** elements within the same chart.\r\n         *\r\n         * @param htmlContainer HTML element\r\n         */\r\n        set: function (htmlContainer) {\r\n            this._htmlContainer = htmlContainer;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"titleElement\", {\r\n        /**\r\n         * Creates (if not yet created) and returns element's `<title>` element.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return Title element\r\n         */\r\n        get: function () {\r\n            if (!this._titleElement) {\r\n                this._titleElement = this.paper.add(\"title\");\r\n                this.group.add(this._titleElement);\r\n            }\r\n            return this._titleElement;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"descriptionElement\", {\r\n        /**\r\n         * Creates (if not yet created) and returns element's `<desc>` element.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return Desc element\r\n         */\r\n        get: function () {\r\n            if (!this._descriptionElement) {\r\n                this._descriptionElement = this.paper.add(\"desc\");\r\n                this.group.add(this._descriptionElement);\r\n            }\r\n            return this._descriptionElement;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"filters\", {\r\n        /**\r\n         * Returns list of SVG filters (effects) applied to element. If the filter\r\n         * list is not yet initilized, creates and returns an empty one.\r\n         * Note, not all filters combine well with one another. We recommend using one filter per sprite.\r\n         *\r\n         * @return List of filters\r\n         */\r\n        get: function () {\r\n            if (!this._filters) {\r\n                this._filters = new List();\r\n                // TODO only add certain events ?\r\n                this._disposers.push(this._filters.events.onAll(this.applyFilters, this));\r\n                this._disposers.push(new ListDisposer(this._filters));\r\n            }\r\n            return this._filters;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Sets required SVG attributes. Must be called every time an element is\r\n     * redrawn so that attributes are (re)applied.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Sprite.prototype.setSVGAttributes = function () {\r\n        this.fill = this.fill;\r\n        this.opacity = this.opacity;\r\n        this.fillOpacity = this.fillOpacity;\r\n        this.stroke = this.stroke;\r\n        this.strokeOpacity = this.strokeOpacity;\r\n        this.shapeRendering = this.shapeRendering;\r\n        this.strokeDasharray = this.strokeDasharray;\r\n        this.strokeDashoffset = this.strokeDashoffset;\r\n        this.strokeLinecap = this.strokeLinecap;\r\n        this.strokeLinejoin = this.strokeLinejoin;\r\n        this.focusable = this.focusable;\r\n        this.tabindex = this.tabindex;\r\n        this.role = this.role;\r\n    };\r\n    /**\r\n     * Sets an attribute directly on an SVG element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param attribute Attribute object\r\n     */\r\n    Sprite.prototype.setSVGAttribute = function (attribute) {\r\n        this.group.attr(attribute);\r\n    };\r\n    /**\r\n     * Removes an attribute directly from SVG element.\r\n     *\r\n     * @param attribute Attribute key to remove\r\n     */\r\n    Sprite.prototype.removeSVGAttribute = function (attribute) {\r\n        this.group.removeAttr(attribute);\r\n    };\r\n    /**\r\n     * Sets `class` attribute of the elements SVG node.\r\n     *\r\n     * Uses `am4core.options.classNamePrefix`.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Sprite.prototype.setClassName = function () {\r\n        var className = this.className;\r\n        var classNamePrefix = options.classNamePrefix;\r\n        if (this.element) {\r\n            this.element.addClass(classNamePrefix + className);\r\n        }\r\n        this.group.addClass(classNamePrefix + className + \"-group\");\r\n        if ($type.hasValue(this.id)) {\r\n            this.group.addClass(classNamePrefix + this.id);\r\n        }\r\n    };\r\n    /**\r\n     * Adds an `id` attribute the the element and returns the id.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Element's ID\r\n     */\r\n    Sprite.prototype.uidAttr = function () {\r\n        this.setSVGAttribute({ \"id\": this.uid });\r\n        return this.uid;\r\n    };\r\n    /**\r\n     * [updateClipPath description]\r\n     *\r\n     * @todo Description\r\n     */\r\n    Sprite.prototype.updateClipPath = function () {\r\n        var element = this._clipElement;\r\n        if (element) {\r\n            element.moveTo({ x: this.mask.pixelX, y: this.mask.pixelY });\r\n        }\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    Sprite.prototype.createClipPath = function () {\r\n        if (!this._clipPath) {\r\n            this._clipPath = this.paper.addGroup(\"clipPath\");\r\n            this.paper.appendDef(this._clipPath);\r\n            this._disposers.push(this._clipPath);\r\n            var id = registry.getUniqueId();\r\n            this._clipPath.attr({ \"id\": id });\r\n            this.group.attr({ \"clip-path\": \"url(\\\"\" + $utils.getBaseURI() + id + \"\\\")\" });\r\n        }\r\n    };\r\n    /**\r\n     * Applies the mask Sprite.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Sprite.prototype.applyMask = function () {\r\n        var mask = this.mask;\r\n        if (this._clipPath && mask) {\r\n            // Container\r\n            if (mask instanceof Container) {\r\n                this._clipElement.attr({ \"width\": $math.max(0, mask.pixelWidth), \"height\": $math.max(0, mask.pixelHeight) });\r\n                var point = $utils.spritePointToSprite({ x: mask.pixelX, y: mask.pixelY }, mask.parent, this);\r\n                this._clipPath.x = point.x;\r\n                this._clipPath.y = point.y;\r\n            }\r\n            // Sprite\r\n            else {\r\n                if (mask.element && mask.element != this._clipElement) {\r\n                    this._clipElement = mask.element;\r\n                    this._clipPath.add(this._clipElement);\r\n                }\r\n                this._clipPath.scale = mask.scale;\r\n                this._clipPath.x = mask.pixelX;\r\n                this._clipPath.y = mask.pixelY;\r\n                this._clipPath.rotation = mask.rotation;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Applies filters to the element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Sprite.prototype.applyFilters = function () {\r\n        var _this = this;\r\n        // we create a separate filter for each sprite as otherwise it would be impossible to animate filter.\r\n        // svg doesn't support multiple filters applied to one element, so we put all the primitives to one filterElement of a sprite.\r\n        if (this._filters && this._filters.length > 0) {\r\n            var width_1 = 100;\r\n            var height_1 = 100;\r\n            if (!this.filterElement) {\r\n                this.filterElement = this.paper.addGroup(\"filter\");\r\n                this._disposers.push(this.filterElement);\r\n            }\r\n            else {\r\n                this.filterElement.removeChildNodes();\r\n            }\r\n            this.paper.appendDef(this.filterElement);\r\n            var id = \"filter-\" + this.uid;\r\n            this.filterElement.attr({ \"id\": id });\r\n            $iter.each(this.filters.iterator(), function (filter) {\r\n                filter.sprite = _this;\r\n                filter.paper = _this.paper;\r\n                filter.appendPrimitives(_this.filterElement);\r\n                if (filter.width > width_1) {\r\n                    width_1 = filter.width;\r\n                }\r\n                if (filter.height > height_1) {\r\n                    height_1 = filter.height;\r\n                }\r\n                filter.scale = _this.globalScale;\r\n            });\r\n            var w = width_1 + \"%\";\r\n            var h = height_1 + \"%\";\r\n            /* temporarily removed as it is breaking tooltips on Safari @todo come back to this\r\n            if (this._measuredHeight <= 1) {\r\n                h = height + \"\";\r\n            }\r\n\r\n            if (this._measuredWidth <= 1) {\r\n                h = width + \"\";\r\n            }*/\r\n            this.filterElement.attr({ \"width\": w, \"height\": h, \"x\": -(width_1 - 100) / 2 + \"%\", \"y\": -(height_1 - 100) / 2 + \"%\" });\r\n            this.group.attr({ \"filter\": \"url(\\\"\" + $utils.getBaseURI() + id + \"\\\")\" });\r\n        }\r\n        else if (this.filterElement) {\r\n            this.group.removeAttr(\"filter\");\r\n            this.filterElement.removeChildNodes();\r\n        }\r\n    };\r\n    /**\r\n     * [removeClipPath description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     */\r\n    Sprite.prototype.removeClipPath = function () {\r\n        if (this._clipPath) {\r\n            //this._clipPath.dispose();\r\n            this.removeDispose(this._clipPath);\r\n            this._clipPath = undefined;\r\n        }\r\n    };\r\n    /**\r\n     * [setElement description]\r\n     *\r\n     * @ignore\r\n     * @todo Description\r\n     * @param element [description]\r\n     */\r\n    Sprite.prototype.setElement = function (element) {\r\n        this.element = element;\r\n        this.setSVGAttributes();\r\n        this.applyAccessibility();\r\n    };\r\n    Object.defineProperty(Sprite.prototype, \"element\", {\r\n        /**\r\n         * @return Element\r\n         */\r\n        get: function () {\r\n            return this._element;\r\n        },\r\n        /**\r\n         * The main element for this Sprite, usually an SVG `<g>`.\r\n         *\r\n         * All other sub-elements are created in it.\r\n         *\r\n         * @param element  Element\r\n         */\r\n        set: function (element) {\r\n            // Destroy previous element if there was one before\r\n            this.removeElement();\r\n            // Set new element\r\n            this._element = element;\r\n            // Add element to group\r\n            // Since we are adding Element to group, which is already in the\r\n            // `.disposers` it will be removed automatically when Sprite is disposed\r\n            // of\r\n            this.group.add(element);\r\n            if (element.node instanceof SVGPathElement) {\r\n                this._isPath = true;\r\n            }\r\n            // This is needed if someone is setting element not in draw method but\r\n            // from outside\r\n            if (!this.invalid) {\r\n                this.validate();\r\n            }\r\n            if (options.autoSetClassName) {\r\n                this.setClassName();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"svgContainer\", {\r\n        /**\r\n         * HTML container (`<div>`) which is used to place chart's `<svg>` element\r\n         * in.\r\n         *\r\n         * @return Container for chart elements\r\n         */\r\n        get: function () {\r\n            if (this._svgContainer) {\r\n                return this._svgContainer;\r\n            }\r\n            else if (this.parent) {\r\n                return this.parent.svgContainer;\r\n            }\r\n        },\r\n        /**\r\n         * Sets HTML container to add SVG and other chart elements to.\r\n         *\r\n         * @param svgContainer Container for chart elements\r\n         */\r\n        set: function (svgContainer) {\r\n            this._svgContainer = svgContainer;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Measures main element.\r\n     *\r\n     * Saves measurements into private `_bbox` property.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Sprite.prototype.measureElement = function () {\r\n        if (this.element) {\r\n            if (this.definedBBox) {\r\n                this._bbox = this.definedBBox;\r\n            }\r\n            else {\r\n                var svgBBox = this.element.getBBox();\r\n                this._bbox = { x: svgBBox.x, y: svgBBox.y, width: svgBBox.width, height: svgBBox.height };\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Positions element according its center settings.\r\n     *\r\n     * @todo Description (review)\r\n     * @ignore Exclude from docs\r\n     */\r\n    Sprite.prototype.updateCenter = function () {\r\n        if (this.element) {\r\n            var prevElementTransform = this.element.transformString;\r\n            var bbox = this.bbox;\r\n            var ex = 0;\r\n            var ey = 0;\r\n            var elementX = bbox.x;\r\n            var elementY = bbox.y;\r\n            var elementWidth = bbox.width;\r\n            var elementHeigth = bbox.height;\r\n            var pixelPaddingLeft = this.pixelPaddingLeft;\r\n            var pixelPaddingRight = this.pixelPaddingRight;\r\n            var pixelPaddingTop = this.pixelPaddingTop;\r\n            var pixelPaddingBottom = this.pixelPaddingBottom;\r\n            // add padding to the measured size\r\n            var measuredWidth = $math.max(elementWidth + pixelPaddingLeft + pixelPaddingRight, this.pixelWidth);\r\n            var measuredHeight = $math.max(elementHeigth + pixelPaddingTop + pixelPaddingBottom, this.pixelHeight);\r\n            // extremes\r\n            var left = bbox.x;\r\n            var right = bbox.x + measuredWidth;\r\n            var top_1 = bbox.y;\r\n            var bottom = bbox.y + measuredHeight;\r\n            var horizontalCenter = this.horizontalCenter;\r\n            var verticalCenter = this.verticalCenter;\r\n            switch (horizontalCenter) {\r\n                case \"none\":\r\n                    ex = elementX + pixelPaddingLeft;\r\n                    break;\r\n                case \"left\":\r\n                    ex = pixelPaddingLeft;\r\n                    break;\r\n                case \"middle\":\r\n                    ex = pixelPaddingLeft - (elementWidth + pixelPaddingRight + pixelPaddingLeft) / 2;\r\n                    break;\r\n                case \"right\":\r\n                    ex = -pixelPaddingRight - elementWidth;\r\n                    break;\r\n            }\r\n            switch (verticalCenter) {\r\n                case \"none\":\r\n                    ey = elementY + pixelPaddingTop;\r\n                    break;\r\n                case \"top\":\r\n                    ey = pixelPaddingTop;\r\n                    break;\r\n                case \"middle\":\r\n                    ey = pixelPaddingTop - (elementHeigth + pixelPaddingBottom + pixelPaddingTop) / 2;\r\n                    break;\r\n                case \"bottom\":\r\n                    ey = -pixelPaddingBottom - elementHeigth;\r\n                    break;\r\n            }\r\n            this._measuredHeight = measuredHeight;\r\n            this._measuredWidth = measuredWidth;\r\n            var x = $math.round(ex - elementX, this._positionPrecision, true);\r\n            var y = $math.round(ey - elementY, this._positionPrecision, true);\r\n            this.ex = x - pixelPaddingLeft;\r\n            this.ey = y - pixelPaddingTop;\r\n            this.maxLeft = left + x - pixelPaddingLeft;\r\n            this.maxRight = right + x - pixelPaddingLeft;\r\n            this.maxTop = top_1 + y - pixelPaddingTop;\r\n            this.maxBottom = bottom + y - pixelPaddingTop;\r\n            if (this.pixelPerfect) {\r\n                x -= 0.5;\r\n                y -= 0.5;\r\n            }\r\n            this.element.moveTo({ x: x, y: y });\r\n            if (prevElementTransform != this.element.transformString) {\r\n                this.dispatchImmediately(\"transformed\");\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Measures the whole element.\r\n     *\r\n     * Returns `true` if the size has changed from the last measurement.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Did the size changed from the last measurement?\r\n     */\r\n    Sprite.prototype.measure = function () {\r\n        this.updateCenter();\r\n        var measuredWidth = this._measuredWidth;\r\n        var measuredHeight = this._measuredHeight;\r\n        // extremes\r\n        var left = this.maxLeft;\r\n        var right = this.maxRight;\r\n        var top = this.maxTop;\r\n        var bottom = this.maxBottom;\r\n        // non-parent wise size\r\n        this._measuredWidthSelf = measuredWidth;\r\n        this._measuredHeightSelf = measuredHeight;\r\n        var positionPrecision = this._positionPrecision;\r\n        this.maxLeftSelf = this.maxLeft;\r\n        this.maxRightSelf = this.maxRight;\r\n        this.maxTopSelf = this.maxTop;\r\n        this.maxBottomSelf = this.maxBottom;\r\n        // if a sprite is rotated or scaled, calculate measured size after transformations\r\n        if (this.rotation !== 0 || this.scale !== 1) {\r\n            // not good to handleGlobalScale here.\r\n            if (this.nonScalingStroke) {\r\n                this.strokeWidth = this.strokeWidth;\r\n            }\r\n            var svg = this.paper.svg;\r\n            var matrix = svg.createSVGMatrix();\r\n            var rotation = this.rotation;\r\n            matrix.a = $math.cos(rotation) * this.scale;\r\n            matrix.c = -$math.sin(rotation) * this.scale;\r\n            matrix.e = 0;\r\n            matrix.b = $math.sin(rotation) * this.scale;\r\n            matrix.d = $math.cos(rotation) * this.scale;\r\n            matrix.f = 0;\r\n            var p1 = svg.createSVGPoint();\r\n            p1.x = left;\r\n            p1.y = top;\r\n            var p2 = svg.createSVGPoint();\r\n            p2.x = right;\r\n            p2.y = top;\r\n            var p3 = svg.createSVGPoint();\r\n            p3.x = right;\r\n            p3.y = bottom;\r\n            var p4 = svg.createSVGPoint();\r\n            p4.x = left;\r\n            p4.y = bottom;\r\n            var pt1 = p1.matrixTransform(matrix);\r\n            var pt2 = p2.matrixTransform(matrix);\r\n            var pt3 = p3.matrixTransform(matrix);\r\n            var pt4 = p4.matrixTransform(matrix);\r\n            left = Math.min(pt1.x, pt2.x, pt3.x, pt4.x);\r\n            right = Math.max(pt1.x, pt2.x, pt3.x, pt4.x);\r\n            top = Math.min(pt1.y, pt2.y, pt3.y, pt4.y);\r\n            bottom = Math.max(pt1.y, pt2.y, pt3.y, pt4.y);\r\n            measuredWidth = right - left;\r\n            measuredHeight = bottom - top;\r\n            this.maxLeft = $math.round(left, positionPrecision, true);\r\n            this.maxRight = $math.round(right, positionPrecision, true);\r\n            this.maxTop = $math.round(top, positionPrecision, true);\r\n            this.maxBottom = $math.round(bottom, positionPrecision, true);\r\n        }\r\n        this._measuredWidth = $math.round(measuredWidth, positionPrecision, true);\r\n        this._measuredHeight = $math.round(measuredHeight, positionPrecision, true);\r\n        // dispatch event\r\n        if (this._measuredWidth != this._prevMeasuredWidth || this._measuredHeight != this._prevMeasuredHeight) {\r\n            this._prevMeasuredHeight = this._measuredHeight;\r\n            this._prevMeasuredWidth = this._measuredWidth;\r\n            // TODO clear existing sizechanged dispatches ?\r\n            this.dispatch(\"sizechanged\");\r\n            if ((this.isHover || this.showTooltipOn == \"hit\" || this.showTooltipOn == \"always\") && this.tooltip && this.tooltip.visible && ($type.hasValue(this.tooltipText) || $type.hasValue(this.tooltipHTML))) {\r\n                this.updateTooltipPosition();\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Insert this element before sibling element.\r\n     *\r\n     * @param sprite  Target element\r\n     * @return This element\r\n     */\r\n    Sprite.prototype.insertBefore = function (sprite) {\r\n        var parent = this.parent;\r\n        if (parent) {\r\n            var index = parent.children.indexOf(sprite);\r\n            if (index !== -1) {\r\n                parent.children.moveValue(this, index);\r\n                parent.sortChildren();\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Insert this element after sibling element.\r\n     *\r\n     * @param sprite  Target element\r\n     * @return This element\r\n     */\r\n    Sprite.prototype.insertAfter = function (sprite) {\r\n        var parent = this.parent;\r\n        if (parent) {\r\n            var index = parent.children.indexOf(sprite);\r\n            if (index !== -1) {\r\n                parent.children.moveValue(this, index + 1);\r\n                parent.sortChildren();\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Removes the main SVG element.\r\n     *\r\n     * This does not destroy the whole Sprite element. To do that use\r\n     * `dispose()` instead.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Sprite.prototype.removeElement = function () {\r\n        // remove visual element\r\n        if (this._element) {\r\n            this.removeDispose(this._element);\r\n            this._element = undefined;\r\n        }\r\n    };\r\n    /**\r\n     * Returns relative (percent) value of the X coordindate within this element.\r\n     *\r\n     * A relative value is a hundredth of a percent. So 100% would result in a 1\r\n     * as relative value.\r\n     *\r\n     * @param value  Absolute or relative X coordinate\r\n     * @return Relative value\r\n     */\r\n    Sprite.prototype.getRelativeX = function (value) {\r\n        if (value instanceof Percent) {\r\n            return value.value;\r\n        }\r\n        else if (this.parent) {\r\n            return value / this.parent.innerWidth;\r\n        }\r\n        return 0;\r\n    };\r\n    /**\r\n     * Returns relative (percent) value of the Y coordindate within this element.\r\n     *\r\n     * A relative value is a hundredth of a percent. So 100% would result in a 1\r\n     * as relative value.\r\n     *\r\n     * @param value  Absolute or relative Y coordinate\r\n     * @return Relative value\r\n     */\r\n    Sprite.prototype.getRelativeY = function (value) {\r\n        if (value instanceof Percent) {\r\n            return value.value;\r\n        }\r\n        else if (this.parent) {\r\n            return value / this.parent.innerHeight;\r\n        }\r\n        return 0;\r\n    };\r\n    /**\r\n     * Returns an X coordinate in pixel within the element.\r\n     *\r\n     * If number is passed in as parameter, the same number will be returned\r\n     * back.\r\n     *\r\n     * If [[Percent]] is passed in, it will be recalculated to pixels.\r\n     *\r\n     * @param value  Absolute or relative X coordinate\r\n     * @return X coordinate in pixels\r\n     */\r\n    Sprite.prototype.getPixelX = function (value) {\r\n        // we don't use $utils.valueToRelative as this would mean that we should access parent.innerWidth\r\n        // all the time and this would result chain of the same actions and will slow down the system a lot\r\n        var pixel = 0;\r\n        if ($type.isNumber(value)) {\r\n            pixel = value;\r\n        }\r\n        else if (value instanceof Percent) {\r\n            var relative = value.value;\r\n            if (this.parent) {\r\n                pixel = $math.round(this.parent.innerWidth * relative, this._positionPrecision, true);\r\n            }\r\n        }\r\n        return pixel;\r\n    };\r\n    /**\r\n     * Returns an Y coordinate in pixel within the element.\r\n     *\r\n     * If number is passed in as parameter, the same number will be returned\r\n     * back.\r\n     *\r\n     * If [[Percent]] is passed in, it will be recalculated to pixels.\r\n     *\r\n     * @param value  Absolute or relative Y coordinate\r\n     * @return Y coordinate in pixels\r\n     */\r\n    Sprite.prototype.getPixelY = function (value) {\r\n        // we don't use $utils.valueToRelative as this would mean that we should access parent.innerWidth\r\n        // all the time and this would result chain of the same actions and will slow down the system a lot\r\n        var pixel = 0;\r\n        if ($type.isNumber(value)) {\r\n            pixel = value;\r\n        }\r\n        else if (value instanceof Percent) {\r\n            var relative = value.value;\r\n            if (this.parent) {\r\n                pixel = $math.round(this.parent.innerHeight * relative, this._positionPrecision, true);\r\n            }\r\n        }\r\n        return pixel;\r\n    };\r\n    /**\r\n     * Moves the element to a specified coordinates.\r\n     *\r\n     * Using this method is preferred method of moving element, as it saves some\r\n     * CPU processing power over setting `x` and `y` properties separately.\r\n     *\r\n     * The method respects element's center settings. The element will be\r\n     * positioned so that `point` coordinates come in whatever \"center\" of the\r\n     * element is, as set in `horizontalCenter` and `verticalCenter`.\r\n     *\r\n     * Besides moving the element, you can also at the same time scale and\r\n     * rotate the element.\r\n     *\r\n     * @param point     New coordinates\r\n     * @param rotation  New rotation\r\n     * @param scale     New Scale\r\n     */\r\n    Sprite.prototype.moveTo = function (point, rotation, scale, isDragged) {\r\n        if (this.isDragged && !isDragged) {\r\n            return;\r\n        }\r\n        if (point) {\r\n            if ($type.isNumber(point.x)) {\r\n                this.setPropertyValue(\"x\", $math.round(point.x, this._positionPrecision, true));\r\n            }\r\n            if ($type.isNumber(point.y)) {\r\n                this.setPropertyValue(\"y\", $math.round(point.y, this._positionPrecision, true));\r\n            }\r\n        }\r\n        if ($type.isNumber(rotation)) {\r\n            this.rotation = rotation;\r\n        }\r\n        if ($type.isNumber(scale)) {\r\n            this.scale = scale;\r\n        }\r\n        // must leave this\r\n        this.invalidatePosition();\r\n    };\r\n    Object.defineProperty(Sprite.prototype, \"mask\", {\r\n        /**\r\n         * Returns [[Sprite]] element currently used as mask for this element.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return A [[Sprite]] to use as mask\r\n         */\r\n        get: function () {\r\n            if (!this._adapterO) {\r\n                return this._mask.get();\r\n            }\r\n            else {\r\n                return this._adapterO.apply(\"mask\", this._mask.get());\r\n            }\r\n        },\r\n        /**\r\n         * Sets another [[Sprite]] element as this elements mask.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @param mask A [[Sprite]] to use as mask\r\n         */\r\n        set: function (mask) {\r\n            var _this = this;\r\n            if (this._mask.get() !== mask) {\r\n                // this is good\r\n                if (mask) {\r\n                    this.createClipPath();\r\n                    if (!(mask instanceof Container)) {\r\n                        mask.isMeasured = false;\r\n                        if (mask.element) {\r\n                            this._clipElement = mask.element;\r\n                        }\r\n                    }\r\n                    else {\r\n                        this._clipElement = this.paper.add(\"rect\");\r\n                    }\r\n                    if (this._clipElement) {\r\n                        this._clipPath.add(this._clipElement);\r\n                    }\r\n                    this._mask.set(mask, new MultiDisposer([\r\n                        //mask.addEventListener(SpriteEvent.TRANSFORMED, this.applyMask, false, this);\r\n                        mask.events.on(\"maxsizechanged\", function () { if (_this.inited) {\r\n                            _this.applyMask();\r\n                        } }, undefined, false),\r\n                        mask.events.on(\"validated\", this.applyMask, this, false),\r\n                        mask.events.on(\"positionchanged\", this.applyMask, this, false)\r\n                    ]));\r\n                    this.applyMask();\r\n                }\r\n                else {\r\n                    this._mask.reset();\r\n                    this.group.removeAttr(\"clip-path\");\r\n                    this.removeClipPath();\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"maskRectangle\", {\r\n        /**\r\n         * @ignore Exclude from docs\r\n         * @return Mask Rectangle\r\n         */\r\n        get: function () {\r\n            return this._maskRectangle;\r\n        },\r\n        // you can set IRectangle as a mask instead o a sprite. Note, the changes of the object won't be monitored\r\n        /**\r\n         * Instead of creating a [[Sprite]] for mask, you can just use a\r\n         * [[Rectangle]] by setting this accessor.\r\n         *\r\n         * Please note that the element will not monitor any changes to the mask\r\n         * rectangle.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @param rect Mask Rectangle\r\n         */\r\n        set: function (rect) {\r\n            if (rect) {\r\n                this.createClipPath();\r\n                if (!this._clipElement) {\r\n                    this._clipElement = this.paper.add(\"rect\");\r\n                    this._clipPath.add(this._clipElement);\r\n                }\r\n                this._clipElement.attr({ \"width\": rect.width, \"height\": rect.height });\r\n            }\r\n            else {\r\n                this.removeClipPath();\r\n                this._clipElement = undefined;\r\n            }\r\n            this._maskRectangle = rect;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"isMeasured\", {\r\n        /**\r\n         * @ignore Exclude from docs\r\n         * @return Was element already measured?\r\n         */\r\n        get: function () {\r\n            return this._isMeasured;\r\n        },\r\n        /**\r\n         * Indicates if this element was already measured.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @param value Was element already measured?\r\n         */\r\n        set: function (value) {\r\n            value = $type.toBoolean(value);\r\n            if (!value) {\r\n                this._measuredWidth = 0;\r\n                this._measuredHeight = 0;\r\n                //this._pixelHeight = 0;\r\n                //this._pixelWidth = 0;\r\n            }\r\n            if (this._isMeasured != value) {\r\n                this._isMeasured = value;\r\n                this.invalidatePosition();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Checks if the this element has any of its parts overlapping with another\r\n     * element.\r\n     *\r\n     * @todo Description (review)\r\n     * @param sprite  Second element to test again\r\n     * @return Overlapping?\r\n     */\r\n    Sprite.prototype.hitTest = function (sprite) {\r\n        // validate, otherwise we will not know measuredWidth and measuredHeight\r\n        if (this.invalid) {\r\n            this.validate();\r\n        }\r\n        if (sprite.invalid) {\r\n            sprite.validate();\r\n        }\r\n        var ax1 = this.pixelX;\r\n        var ay1 = this.pixelY;\r\n        var ax2 = ax1 + this.measuredWidth;\r\n        var ay2 = ay1 + this.measuredHeight;\r\n        var bx1 = sprite.pixelX;\r\n        var by1 = sprite.pixelY;\r\n        var bx2 = bx1 + sprite.measuredWidth;\r\n        var by2 = by1 + sprite.measuredHeight;\r\n        return !(bx1 > ax2 || bx2 < ax1 || by1 > ay2 || by2 < ay1);\r\n    };\r\n    Object.defineProperty(Sprite.prototype, \"inited\", {\r\n        /**\r\n         * ==========================================================================\r\n         * STATE-RELATED\r\n         * ==========================================================================\r\n         * @hidden\r\n         */\r\n        /**\r\n         * Returns `true` if Sprite has already finished initializing.\r\n         *\r\n         * @return Initialized?\r\n         */\r\n        get: function () {\r\n            return this._inited;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns `true` if Sprite has already finished initializing and is ready.\r\n     *\r\n     * If this object is a [[Container]] it will wait for all of its children\r\n     * are ready before becoming ready itself and firing a `\"ready\"` event.\r\n     *\r\n     * @return is ready?\r\n     */\r\n    Sprite.prototype.isReady = function () {\r\n        return this._ready;\r\n    };\r\n    Object.defineProperty(Sprite.prototype, \"states\", {\r\n        /**\r\n         * Returns a collection of element's available [[SpriteState]] entries.\r\n         *\r\n         * @see {@link SpriteState}\r\n         * @return States\r\n         */\r\n        get: function () {\r\n            if (!this._states) {\r\n                var state = new SpriteState();\r\n                // works\r\n                this._states = new DictionaryTemplate(state);\r\n                // TODO what about removeKey ?\r\n                this._disposers.push(this._states.events.on(\"insertKey\", this.processState, this, false));\r\n                this._disposers.push(this._states.events.on(\"setKey\", this.processState, this, false));\r\n                this._disposers.push(new DictionaryDisposer(this._states));\r\n                this._disposers.push(state);\r\n            }\r\n            return this._states;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"hiddenState\", {\r\n        /**\r\n         * Returns a [[SpriteState]] object for \"hidden\" state.\r\n         *\r\n         * This is a shortcut to `this.states.getKey(\"hidden\")`.\r\n         *\r\n         * @return Hidden state\r\n         */\r\n        get: function () {\r\n            if (!this.states.getKey(\"hidden\")) {\r\n                var hiddenState = this.states.create(\"hidden\");\r\n                hiddenState.properties.opacity = 0;\r\n                hiddenState.properties.visible = false;\r\n            }\r\n            return this.states.getKey(\"hidden\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"defaultState\", {\r\n        /**\r\n         * Returns a [[SpriteState]] object for \"default\" state.\r\n         *\r\n         * This is a shortcut to `this.states.getKey(\"default\")`.\r\n         *\r\n         * @return Hidden state\r\n         */\r\n        get: function () {\r\n            if (!this.states.getKey(\"default\")) {\r\n                var defaultState = this.states.create(\"default\");\r\n                defaultState.properties.opacity = 1;\r\n            }\r\n            return this.states.getKey(\"default\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Checks if some key states are defined and updates Sprite properties\r\n     * accordingly.\r\n     *\r\n     * For example if there's a state \"down\" defined for Sprite, we automatically\r\n     * make it \"clickable\".\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param event An event which caused state list update\r\n     */\r\n    Sprite.prototype.processState = function (event) {\r\n        var state = event.newValue;\r\n        state.sprite = this;\r\n        state.name = event.key;\r\n        if (this.states.hasKey(\"hover\") || (this.showTooltipOn == \"hover\" && ($type.hasValue(this.tooltipHTML) || $type.hasValue(this.tooltipText)))) {\r\n            this.hoverable = true;\r\n        }\r\n        if (this.states.hasKey(\"down\") || (this.showTooltipOn == \"hover\" && ($type.hasValue(this.tooltipHTML) || $type.hasValue(this.tooltipText)))) {\r\n            this.clickable = true;\r\n        }\r\n        if (this.states.hasKey(\"focus\")) {\r\n            this.focusable = true;\r\n        }\r\n        // Propagate the new state to clones\r\n        if (this.applyOnClones) {\r\n            var clones = this.clones.values;\r\n            var length_1 = clones.length;\r\n            for (var i = 0; i < length_1; ++i) {\r\n                var clone = clones[i];\r\n                if (!clone.isDisposed()) {\r\n                    clone.states.setKey(state.name, state);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(Sprite.prototype, \"animations\", {\r\n        /**\r\n         * Returns a list elements's animations currently being played.\r\n         *\r\n         * If the list has not been initialized it is created.\r\n         *\r\n         * @return List of animations\r\n         */\r\n        get: function () {\r\n            if (!this._animations) {\r\n                this._animations = [];\r\n                this._disposers.push(new AnimationDisposer(this._animations));\r\n            }\r\n            return this._animations;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Converts element's local coordinates to the coordinates within the main\r\n     * chart container.\r\n     *\r\n     * @param point  Local point\r\n     * @return Global point\r\n     */\r\n    Sprite.prototype.getSvgPoint = function (point) {\r\n        try {\r\n            // Calculate SVG point\r\n            var bbox = this.htmlContainer.getBoundingClientRect();\r\n            return {\r\n                \"x\": point.x - bbox.left,\r\n                \"y\": point.y - bbox.top\r\n            };\r\n        }\r\n        catch (e) {\r\n            return point;\r\n        }\r\n    };\r\n    /**\r\n     * Creates and starts an [[Animation]] with given `animationOptions`.\r\n     *\r\n     * @see {@link Animation} for additional information about available options\r\n     * @param animationOptions  Animation options\r\n     * @param duration          Duration in milliseconds\r\n     * @param easing            Easing function\r\n     * @return Animation instance\r\n     */\r\n    Sprite.prototype.animate = function (animationOptions, duration, easing) {\r\n        return new Animation(this, animationOptions, duration, easing).start();\r\n    };\r\n    /**\r\n     * Applies a [[SpriteState]] on this element.\r\n     *\r\n     * The first parameter can either be a name state or a [[SpriteState]]\r\n     * instance.\r\n     *\r\n     * When run, this method will apply SVG properties defined in a\r\n     * [[SpriteState]], but only those that are relevant to this particular\r\n     * element, i.e. are in the `properties` array.\r\n     *\r\n     * @see {@link SpriteState}\r\n     * @param value               A state - name key or instance\r\n     * @param transitionDuration  Duration of the transition between current and new state\r\n     * @param easing              An easing function\r\n     */\r\n    Sprite.prototype.setState = function (value, transitionDuration, easing) {\r\n        var state;\r\n        if (value instanceof SpriteState) {\r\n            this.states.setKey(value.name, value);\r\n            state = value;\r\n        }\r\n        else {\r\n            state = this.states.getKey(value);\r\n            if (!state) {\r\n                return;\r\n            }\r\n        }\r\n        // stop previous transition\r\n        // not good - foe expample, we are animating to some \"active\" state and in them middle \"hover\" state happens. then \"active\" stat won't be applied\r\n        //if (this._transition) {\r\n        //this._transition.stop();\r\n        //}\r\n        if (state.name == \"hover\") {\r\n            if (this.isHidden) {\r\n                return;\r\n            }\r\n            this.isHover = true;\r\n        }\r\n        if (state.name == \"hidden\") {\r\n            this.isHiding = true;\r\n        }\r\n        else {\r\n            if (!this.visible) {\r\n                this.setVisibility(state.properties.visible || this.defaultState.properties.visible);\r\n            }\r\n        }\r\n        if (state.name == \"active\") {\r\n            this.isActive = true;\r\n        }\r\n        // we do not set isActive = false here if it's not active, but container does that if setStateOnChildren = true\r\n        if (!$type.isNumber(transitionDuration)) {\r\n            transitionDuration = state.transitionDuration;\r\n        }\r\n        if (!$type.hasValue(easing)) {\r\n            easing = state.transitionEasing;\r\n        }\r\n        return this.transitTo(state, transitionDuration, easing);\r\n    };\r\n    /**\r\n     * Applies proper state based on the condition of the element. A condition is\r\n     * deducted in this order:\r\n     * * \"hover\" if Sprite has currently any pointers over it\r\n     * * \"down\" if Sprite has any pointers (touch or mouse) currently pressed over it\r\n     * * \"focus\" if Sprite has currently got focus (accessibility)\r\n     * * \"hidden\" if Sprite is currently hidden\r\n     *\r\n     * Returns an [[Animation]] object, which is handling gradual transition from\r\n     * current values of properties, to the new target state(s).\r\n     *\r\n     * @param duration  Duration for the animation (ms)\r\n     * @return [[Animation]] object which is handling the transition\r\n     */\r\n    Sprite.prototype.applyCurrentState = function (duration) {\r\n        //if (!this.isHidden) { // this was done for hover state not to take effect if \"hidden\" is actually visible, need to think about it.\r\n        var animation = this.setState(this.defaultState, duration);\r\n        if (this.isHover) {\r\n            animation = this.setState(\"hover\", duration);\r\n        }\r\n        if (this.isDown && this.interactions.downPointers.length) {\r\n            animation = this.setState(\"down\", duration);\r\n        }\r\n        this.isFocused = this.isFocused;\r\n        if (this.isActive) {\r\n            animation = this.setState(\"active\", duration);\r\n            if (this.isHover && this.states.hasKey(\"hoverActive\")) {\r\n                animation = this.setState(\"hoverActive\", duration);\r\n            }\r\n        }\r\n        return animation;\r\n        //}\r\n    };\r\n    /**\r\n     * Starts an [[Animation]] of the properties to specific values as they are\r\n     * set in `state`.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param state     Target State\r\n     * @param duration  Duration in milliseconds\r\n     * @param easing    Easing function\r\n     * @return Transition Animation\r\n     */\r\n    Sprite.prototype.transitTo = function (state, duration, easing) {\r\n        var _this = this;\r\n        // Init\r\n        var options = [], propValues = state.allValues, transition;\r\n        // todo: do this for numeric/color properties only?\r\n        // @todo use state.getPropertyValue instead\r\n        $object.each(propValues, function (propertyName, finalValue) {\r\n            var currentValue = _this[propertyName];\r\n            // save current value to default state. this solves a big problem where values must be set both on sprite and default state\r\n            if (finalValue != currentValue && _this.defaultState.properties[propertyName] == undefined) {\r\n                _this.defaultState.properties[propertyName] = currentValue;\r\n            }\r\n            //if (finalValue != currentValue && $type.hasValue(finalValue)) {\r\n            if (finalValue != \"__unset\") {\r\n                var option = { from: currentValue, to: finalValue, property: propertyName };\r\n                options.push(option);\r\n            }\r\n        });\r\n        if (options.length > 0) {\r\n            transition = this.animate(options, duration, easing);\r\n            if (transition && !transition.isFinished()) {\r\n                // TODO should this use events.once ?\r\n                // TODO push onto _disposers array ?\r\n                this._disposers.push(transition.events.on(\"animationended\", function () {\r\n                    _this.dispatchImmediately(\"transitionended\");\r\n                }));\r\n            }\r\n            else {\r\n                this.dispatchImmediately(\"transitionended\");\r\n            }\r\n        }\r\n        // apply filters if set\r\n        if (state.filters.length > 0) {\r\n            var newFilters_1 = [];\r\n            // check for the same filters\r\n            $iter.each(state.filters.iterator(), function (stateFilter) {\r\n                var newFilter = stateFilter.clone();\r\n                newFilters_1.push(newFilter);\r\n                var animationOptions = [];\r\n                $iter.each(_this.filters.iterator(), function (currentFilter) {\r\n                    // if we have the same filters\r\n                    if (currentFilter.className == newFilter.className) {\r\n                        if (!$iter.contains(_this.defaultState.filters.iterator(), function (x) { return x.className === newFilter.className; })) {\r\n                            _this.defaultState.filters.push(currentFilter);\r\n                        }\r\n                        $object.each(newFilter.properties, function (propertyName, newValue) {\r\n                            var currentValue = currentFilter.properties[propertyName];\r\n                            // if values are not the same, push to animation options array\r\n                            if (currentValue != newValue) {\r\n                                animationOptions.push({ property: propertyName, from: currentValue, to: newValue });\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n                // animate to new value\r\n                newFilter.animate(animationOptions, duration, easing);\r\n            });\r\n            this.filters.clear();\r\n            this.filters.pushAll(newFilters_1);\r\n        }\r\n        return transition;\r\n    };\r\n    /**\r\n     * Returns `true` if Sprite is currently transiting from one state/value to\r\n     * another.\r\n     *\r\n     * @return Is in transition?\r\n     */\r\n    Sprite.prototype.isInTransition = function () {\r\n        return this.animations.length > 0;\r\n    };\r\n    Object.defineProperty(Sprite.prototype, \"isHover\", {\r\n        /**\r\n         * Returns indicator if this element has a mouse pointer currently hovering\r\n         * over it, or if it has any touch pointers pressed on it.\r\n         *\r\n         * @return Is hovered?\r\n         */\r\n        get: function () {\r\n            if (this.isInteractive()) {\r\n                return this.interactions.isHover;\r\n            }\r\n            return false;\r\n        },\r\n        /**\r\n         * Indicates if this element has a mouse pointer currently hovering\r\n         * over it, or if it has any touch pointers pressed on it.\r\n         *\r\n         * @param value Is hovered?\r\n         */\r\n        set: function (value) {\r\n            value = $type.toBoolean(value);\r\n            if (value !== this.isHover) {\r\n                if (this.isInteractive()) {\r\n                    this.interactions.isHover = value;\r\n                    if (value) {\r\n                        this.handleOver();\r\n                    }\r\n                    else {\r\n                        this.interactions.isRealHover = false;\r\n                        this.handleOut();\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"isDragged\", {\r\n        /**\r\n         * Returns indicator if this element is being dragged at the moment.\r\n         *\r\n         * @return Is dragged?\r\n         */\r\n        get: function () {\r\n            return this._isDragged;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"isResized\", {\r\n        /**\r\n         * Returns indicator if this element is being resized at the moment.\r\n         *\r\n         * @return Is resized?\r\n         */\r\n        get: function () {\r\n            return this._isResized;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"isDown\", {\r\n        /**\r\n         * @return Is down?\r\n         */\r\n        get: function () {\r\n            if (this.isInteractive()) {\r\n                return this.interactions.isDown;\r\n            }\r\n            return false;\r\n        },\r\n        /**\r\n         * Indicates if this element has any pointers (mouse or touch) pressing down\r\n         * on it.\r\n         *\r\n         * @param value Is down?\r\n         */\r\n        set: function (value) {\r\n            value = $type.toBoolean(value);\r\n            if (this.isInteractive() && this.isDown != value) {\r\n                this.interactions.isDown = value;\r\n                if (value) {\r\n                    this.handleDown();\r\n                }\r\n                else {\r\n                    this.handleUp();\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"isFocused\", {\r\n        /**\r\n         * @return Is focused?\r\n         */\r\n        get: function () {\r\n            if (this.isInteractive()) {\r\n                return this.interactions.isFocused;\r\n            }\r\n            return false;\r\n        },\r\n        /**\r\n         * Indicates if this element is focused (possibly by tab navigation).\r\n         *\r\n         * @param value Is focused?\r\n         */\r\n        set: function (value) {\r\n            value = $type.toBoolean(value);\r\n            if (this.focusable && this.isFocused != value) {\r\n                if (this.isInteractive()) {\r\n                    this.interactions.isFocused = value;\r\n                    if (value === true) {\r\n                        this.handleFocus();\r\n                    }\r\n                    else {\r\n                        this.handleBlur();\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"isActive\", {\r\n        /**\r\n         * @return Is active?\r\n         */\r\n        get: function () {\r\n            return this._isActive;\r\n        },\r\n        /**\r\n         * Indicates if this element is currently active (toggled on) or not\r\n         * (toggled off).\r\n         *\r\n         * @param value Is active?\r\n         */\r\n        set: function (value) {\r\n            this.setActive(value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Sprite.prototype.setActive = function (value) {\r\n        value = $type.toBoolean(value);\r\n        if (this._isActive !== value) {\r\n            this._isActive = value;\r\n            if (value && this.states.hasKey(\"active\")) {\r\n                this.setState(\"active\");\r\n                if (this.isHover && this.states.hasKey(\"hoverActive\")) {\r\n                    this.setState(\"hoverActive\");\r\n                }\r\n            }\r\n            else {\r\n                this.applyCurrentState();\r\n            }\r\n            this.dispatchImmediately(\"toggled\");\r\n        }\r\n    };\r\n    Object.defineProperty(Sprite.prototype, \"disabled\", {\r\n        /**\r\n         * @return Disabled?\r\n         */\r\n        get: function () {\r\n            //if(this._internalDisabled){\r\n            //\treturn true;\r\n            //}\r\n            var current = this.getPropertyValue(\"disabled\");\r\n            if ($type.hasValue(current)) {\r\n                return current;\r\n            }\r\n            else {\r\n                if (this.virtualParent) {\r\n                    return this.virtualParent.disabled;\r\n                }\r\n                if (this.parent) {\r\n                    return this.parent.disabled;\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n        /**\r\n         * Controls if element is disabled.\r\n         *\r\n         * A disabled element is hidden, and is removed from any processing, layout\r\n         * calculations, and generally treated as if it does not exist.\r\n         *\r\n         * The element itself is not destroyed, though. Setting this back to `false`,\r\n         * will \"resurrect\" the element.\r\n         *\r\n         * @param value  Disabled?\r\n         */\r\n        set: function (value) {\r\n            this.setDisabled(value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Sprite.prototype.setDisabled = function (value) {\r\n        value = $type.toBoolean(value);\r\n        var current = this.getPropertyValue(\"disabled\");\r\n        if (current != value) {\r\n            this.setPropertyValue(\"disabled\", value, true);\r\n            if (value) {\r\n                this.parent = this.parent;\r\n                this.removeFromInvalids();\r\n                this.group.attr({ \"display\": \"none\" });\r\n                this.dispatch(\"disabled\");\r\n            }\r\n            else {\r\n                if (this.parent) {\r\n                    var group = this.parent.element;\r\n                    if (!group.hasChild(this.group)) {\r\n                        group.add(this.group);\r\n                    }\r\n                }\r\n                if (this instanceof Container) {\r\n                    this.deepInvalidate();\r\n                    if (this._background) {\r\n                        this._background.invalidate();\r\n                    }\r\n                }\r\n                else {\r\n                    this.invalidate();\r\n                }\r\n                if (!this.__disabled) {\r\n                    this.removeSVGAttribute(\"display\");\r\n                }\r\n                this.dispatch(\"enabled\");\r\n            }\r\n            this.dispatch(\"transformed\");\r\n            system.requestFrame();\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    Object.defineProperty(Sprite.prototype, \"__disabled\", {\r\n        /**\r\n         * @ignore\r\n         * @return Disabled?\r\n         */\r\n        get: function () {\r\n            return this._internalDisabled;\r\n        },\r\n        /**\r\n         * Internal disable method.\r\n         *\r\n         * Do not use it for disabling elements. Use `disabled` accessor instead.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @param value Disabled?\r\n         */\r\n        set: function (value) {\r\n            if (this._internalDisabled != value) {\r\n                this._internalDisabled = value;\r\n                this._updateDisabled = true;\r\n                this.invalidatePosition(); // better use this instead of invalidate()\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"numberFormatter\", {\r\n        /**\r\n         * @return A [[NumberFormatter]] instance to be used\r\n         */\r\n        get: function () {\r\n            if (this._numberFormatter) {\r\n                return this._numberFormatter;\r\n            }\r\n            else if (this.virtualParent) {\r\n                return this.virtualParent.numberFormatter;\r\n            }\r\n            else if (this.parent) {\r\n                return this.parent.numberFormatter;\r\n            }\r\n            this._numberFormatter = new NumberFormatter();\r\n            this._numberFormatter.language = this.language;\r\n            return this.numberFormatter;\r\n        },\r\n        /**\r\n         * ==========================================================================\r\n         * FORMATTERS AND OTHER EXTERNAL HELPERS\r\n         * ==========================================================================\r\n         * @hidden\r\n         */\r\n        /**\r\n         * A [[NumberFormatter]] instance.\r\n         *\r\n         * This is used to format numbers.\r\n         *\r\n         * ```TypeScript\r\n         * chart.numberFormatter.numberFormat = \"#,###.#####\";\r\n         * ```\r\n         * ```JavaScript\r\n         * chart.numberFormatter.numberFormat = \"#,###.#####\";\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // ...\r\n         *   \"numberFormatter\": {\r\n         *     \"numberFormat\": \"#,###.#####\"\r\n         *   }\r\n         * }\r\n         * ```\r\n         *\r\n         * You can set a separate instance of formatter for each\r\n         * individual element. However that would be unnecessary overhead as\r\n         * all elements would automatically inherit formatter from their parents,\r\n         * all the way up to the chart itself.\r\n         *\r\n         *\r\n         * @see {@link NumberFormatter} for more info on formatting numbers\r\n         * @param value  An instance of NumberFormatter\r\n         */\r\n        set: function (value) {\r\n            this._numberFormatter = value;\r\n            this._numberFormatter.language = this.language;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"dateFormatter\", {\r\n        /**\r\n         * @return An instance of DateFormatter\r\n         */\r\n        get: function () {\r\n            if (this._dateFormatter) {\r\n                return this._dateFormatter;\r\n            }\r\n            else if (this.virtualParent) {\r\n                return this.virtualParent.dateFormatter;\r\n            }\r\n            else if (this.parent) {\r\n                return this.parent.dateFormatter;\r\n            }\r\n            this._dateFormatter = new DateFormatter();\r\n            this._dateFormatter.language = this.language;\r\n            return this.dateFormatter;\r\n        },\r\n        /**\r\n         * A [[DateFormatter]] instance.\r\n         *\r\n         * This is used to format dates, e.g. on a date axes, balloons, etc.\r\n         *\r\n         * ```TypeScript\r\n         * chart.dateFormatter.dateFormat = \"yyyy-MM-dd\";\r\n         * ```\r\n         * ```JavaScript\r\n         * chart.dateFormatter.dateFormat = \"yyyy-MM-dd\";\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // ...\r\n         *   \"dateFormatter\": {\r\n         *     \"dateFormat\": \"yyyy-MM-dd\"\r\n         *   }\r\n         * }\r\n         * ```\r\n         *\r\n         * You can set a separate instance of formatter for each\r\n         * individual element. However that would be unnecessary overhead as\r\n         * all elements would automatically inherit formatter from their parents,\r\n         * all the way up to the chart itself.\r\n         *\r\n         * @see {@link DateFormatter} for more info on dates formatting\r\n         * @param value  An instance of DateFormatter\r\n         */\r\n        set: function (value) {\r\n            this._dateFormatter = value;\r\n            this._dateFormatter.language = this.language;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"durationFormatter\", {\r\n        /**\r\n         * @return An instance of DurationFormatter\r\n         */\r\n        get: function () {\r\n            if (this._durationFormatter) {\r\n                return this._durationFormatter;\r\n            }\r\n            else if (this.virtualParent) {\r\n                return this.virtualParent.durationFormatter;\r\n            }\r\n            else if (this.parent) {\r\n                return this.parent.durationFormatter;\r\n            }\r\n            this._durationFormatter = new DurationFormatter();\r\n            this._durationFormatter.language = this.language;\r\n            return this.durationFormatter;\r\n        },\r\n        /**\r\n         * A [[DurationFormatter]] instance.\r\n         *\r\n         * This is used to format numbers as durations, e.g. on a value axes.\r\n         *\r\n         * You can set a separate instance of formatter for each\r\n         * individual element. However that would be unnecessary overhead as\r\n         * all elements would automatically inherit formatter from their parents,\r\n         * all the way up to the chart itself.\r\n         *\r\n         * @see {@link DurationFormatter} for more info on durations\r\n         * @param value  An instance of DurationFormatter\r\n         */\r\n        set: function (value) {\r\n            this._durationFormatter = value;\r\n            this._durationFormatter.language = this.language;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"language\", {\r\n        /**\r\n         * @return An instance of Language\r\n         */\r\n        get: function () {\r\n            var language = this._language.get();\r\n            if (language) {\r\n                return language;\r\n            }\r\n            else if (this.virtualParent) {\r\n                return this.virtualParent.language;\r\n            }\r\n            else if (this.parent) {\r\n                return this.parent.language;\r\n            }\r\n            language = new Language();\r\n            this.language = language;\r\n            return language;\r\n        },\r\n        /**\r\n         * A [[Language]] instance to use for translations.\r\n         *\r\n         * Normally it is enough to set language for the top-most element - chart.\r\n         *\r\n         * All other element child elements will automatically re-use that language\r\n         * object.\r\n         *\r\n         * @param value  An instance of Language\r\n         */\r\n        set: function (value) {\r\n            var _this = this;\r\n            if (this._language.get() !== value) {\r\n                this._language.set(value, value.events.on(\"localechanged\", function (ev) {\r\n                    if (_this._numberFormatter) {\r\n                        _this._numberFormatter.language = _this.language;\r\n                    }\r\n                    if (_this._dateFormatter) {\r\n                        _this._dateFormatter.language = _this.language;\r\n                    }\r\n                    if (_this._durationFormatter) {\r\n                        _this._durationFormatter.language = _this.language;\r\n                    }\r\n                    if (_this._exporting.get()) {\r\n                        var exporting = _this._exporting.get();\r\n                        exporting.numberFormatter.language = _this.language;\r\n                        exporting.dateFormatter.language = _this.language;\r\n                        exporting.durationFormatter.language = _this.language;\r\n                        exporting.language = _this.language;\r\n                    }\r\n                    if (_this instanceof Container) {\r\n                        _this.deepInvalidate();\r\n                    }\r\n                }));\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * ==========================================================================\r\n     * DATA-RELATED STUFF\r\n     * ==========================================================================\r\n     * @hidden\r\n     */\r\n    /**\r\n     * Parses the string for meta tags `{tag}` and replaces them with a real\r\n     * value. Supports straight up tags referring to the field in data, i.e.\r\n     * `{value}` or tags with additional formatting info. E.g.:\r\n     *\r\n     * ```Text\r\n     * {myfield.formatDate(\"yyyy-MM-dd\")}\r\n     * {myfield.formatDate()}\r\n     * {myfield.formatNumber(\"#,####.00\")}\r\n     * {myfield.formatNumber()}\r\n     * {myField.formatDuration(\"mm:ss\")}\r\n     * ```\r\n     *\r\n     * Etc.\r\n     *\r\n     * This method Will automatically detect and use proper formatter for the\r\n     * value.\r\n     *\r\n     * The source value will be looked up in various places: (in order)\r\n     * * Sprite's own `dataItem`\r\n     * * Sprite's properties\r\n     * * Parent's `dataItem`\r\n     * * Parent's properties\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param string            A string to format\r\n     * @param dataItem          DataItem\r\n     * @return Formatted string\r\n     */\r\n    Sprite.prototype.populateString = function (string, dataItem) {\r\n        if ($type.hasValue(string)) {\r\n            string = $type.castString(string);\r\n            string = getTextFormatter().escape(string);\r\n            var tags = string.match(/\\{([^}]+)\\}/g);\r\n            var i = void 0;\r\n            if (tags) {\r\n                for (i = 0; i < tags.length; i++) {\r\n                    var tag = tags[i].replace(/\\{([^}]+)\\}/, \"$1\");\r\n                    var value = this.getTagValue(tag, \"\", dataItem);\r\n                    if (!$type.hasValue(value)) {\r\n                        value = \"\";\r\n                    }\r\n                    string = string.split(tags[i]).join(value);\r\n                }\r\n            }\r\n            string = getTextFormatter().unescape(string);\r\n        }\r\n        else {\r\n            string = \"\";\r\n        }\r\n        if (!this._adapterO) {\r\n            return string;\r\n        }\r\n        else {\r\n            return this._adapterO.apply(\"populateString\", string);\r\n        }\r\n    };\r\n    /**\r\n     * Gets the value from data item and formats it according to specified format.\r\n     *\r\n     * If `format` is specified, it will use its contents to choose formatter for\r\n     * the value. Otherwise it will select formatter accordingly to actual value\r\n     * type.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Ability to force certain formatter on known numeric and date values\r\n     * @see {@link NumberFormatter}\r\n     * @see {@link DateFormatter}\r\n     * @see {@link DurationFormatter}\r\n     * @param tagName           Tag name to replace\r\n     * @param format            Format to use\r\n     * @param dataItem          DataItem\r\n     * @return Formatted value\r\n     */\r\n    Sprite.prototype.getTagValue = function (tagName, format, dataItem) {\r\n        var value;\r\n        if (!$type.hasValue(dataItem)) {\r\n            dataItem = this.dataItem;\r\n        }\r\n        // Parse parts\r\n        var parts = [];\r\n        var reg = /([^.]+)\\(([^)]*)\\)|([^.]+)/g;\r\n        ;\r\n        var matches;\r\n        while (true) {\r\n            matches = reg.exec(tagName);\r\n            if (matches === null) {\r\n                break;\r\n            }\r\n            if (matches[3]) {\r\n                // Simple property\r\n                parts.push({\r\n                    prop: matches[3]\r\n                });\r\n            }\r\n            else {\r\n                // Method\r\n                // Parse parameters\r\n                var params = [];\r\n                if ($utils.trim(matches[2]) != \"\") {\r\n                    var reg2 = /'([^']*)'|\"([^\"]*)\"|([0-9\\-]+)/g;\r\n                    var matches2 = void 0;\r\n                    while (true) {\r\n                        matches2 = reg2.exec(matches[2]);\r\n                        if (matches2 === null) {\r\n                            break;\r\n                        }\r\n                        params.push(matches2[1] || matches2[2] || matches2[3]);\r\n                    }\r\n                }\r\n                parts.push({\r\n                    method: matches[1],\r\n                    params: params\r\n                });\r\n            }\r\n        }\r\n        // Check if we can retrieve the value from data item\r\n        if (dataItem) {\r\n            // Check values\r\n            value = this.getTagValueFromObject(parts, dataItem.values);\r\n            // Check properties\r\n            if (!$type.hasValue(value) || $type.isObject(value)) { // isObject helps to solve problem with date axis, as for example dateX will get dateX from values object and wont't get to the dateX date.\r\n                value = this.getTagValueFromObject(parts, dataItem);\r\n            }\r\n            // Check data context\r\n            var dataContext = dataItem.dataContext;\r\n            if (!$type.hasValue(value) && dataContext) {\r\n                value = this.getTagValueFromObject(parts, dataItem.dataContext);\r\n                // scond data context level sometimes exist (tree map)\r\n                if (!$type.hasValue(value) && dataContext.dataContext) {\r\n                    value = this.getTagValueFromObject(parts, dataContext.dataContext);\r\n                }\r\n            }\r\n            // Check component's data item\r\n            if (!$type.hasValue(value) && dataItem.component && dataItem.component.dataItem !== dataItem) {\r\n                value = dataItem.component.getTagValue(tagName, format);\r\n            }\r\n        }\r\n        // Check sprite's properties\r\n        if (!$type.hasValue(value)) {\r\n            value = this.getTagValueFromObject(parts, this.populateStringFrom || this);\r\n        }\r\n        // Finally, check the parent\r\n        if (!$type.hasValue(value) && this.parent) {\r\n            value = this.parent.getTagValue(tagName, format);\r\n        }\r\n        return value;\r\n    };\r\n    /**\r\n     * Tries to retrieve values from properties of any object, then applies\r\n     * proper formatting to it.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description (improve)\r\n     * @param parts   Properties ant methods to access\r\n     * @param object  Source object\r\n     * @param format  A specific format to apply\r\n     * @return Formatted value\r\n     */\r\n    Sprite.prototype.getTagValueFromObject = function (parts, object, format) {\r\n        var current = object;\r\n        var formatApplied = false;\r\n        for (var i = 0, len = parts.length; i < len; i++) {\r\n            var part = parts[i];\r\n            if (part.prop) {\r\n                // Regular property\r\n                current = current[part.prop];\r\n                if (!$type.hasValue(current)) {\r\n                    // Not set, return undefined\r\n                    return;\r\n                }\r\n            }\r\n            else {\r\n                // Method\r\n                switch (part.method) {\r\n                    case \"formatNumber\":\r\n                        var numberValue = $utils.anyToNumber(current);\r\n                        if ($type.hasValue(numberValue)) {\r\n                            current = this.numberFormatter.format(numberValue, format || part.params[0] || undefined);\r\n                            formatApplied = true;\r\n                        }\r\n                        break;\r\n                    case \"formatDate\":\r\n                        var dateValue = void 0;\r\n                        if ($type.isString(current)) {\r\n                            dateValue = this.dateFormatter.parse(current);\r\n                        }\r\n                        else {\r\n                            dateValue = $utils.anyToDate(current);\r\n                        }\r\n                        if (!$type.isDate(dateValue) || $type.isNaN(dateValue.getTime())) {\r\n                            // Was not able to get date out of value, quitting and letting\r\n                            // calling method try another value\r\n                            return;\r\n                        }\r\n                        if ($type.hasValue(dateValue)) {\r\n                            current = this.dateFormatter.format(dateValue, format || part.params[0] || undefined);\r\n                            formatApplied = true;\r\n                        }\r\n                        break;\r\n                    case \"formatDuration\":\r\n                        var durationValue = $utils.anyToNumber(current);\r\n                        if ($type.hasValue(durationValue)) {\r\n                            current = this.durationFormatter.format(durationValue, format || part.params[0] || undefined, part.params[1] || undefined);\r\n                            formatApplied = true;\r\n                        }\r\n                        break;\r\n                    case \"urlEncode\":\r\n                    case \"encodeURIComponent\":\r\n                        current = encodeURIComponent(current);\r\n                        break;\r\n                    default:\r\n                        if (current[part.method]) {\r\n                            current[part.method].apply(this, part.params);\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        // Apply default format if it wasn't applied explicitly\r\n        if (!formatApplied) {\r\n            var formatParts = [{\r\n                    method: \"\",\r\n                    params: format\r\n                }];\r\n            if (!$type.hasValue(format)) {\r\n                // Format is not set\r\n                // Determine from the type of the value\r\n                if ($type.isNumber(current)) {\r\n                    formatParts[0].method = \"formatNumber\";\r\n                    formatParts[0].params = \"\";\r\n                }\r\n                else if ($type.isDate(current)) {\r\n                    formatParts[0].method = \"formatDate\";\r\n                    formatParts[0].params = \"\";\r\n                }\r\n            }\r\n            else {\r\n                // Format set\r\n                // Try to determine formatter based on the format\r\n                var formatterType = $utils.getFormat(format);\r\n                // format\r\n                if (formatterType === $strings.NUMBER) {\r\n                    formatParts[0].method = \"formatNumber\";\r\n                }\r\n                else if (formatterType === $strings.DATE) {\r\n                    formatParts[0].method = \"formatDate\";\r\n                }\r\n                else if (formatterType === $strings.DURATION) {\r\n                    formatParts[0].method = \"formatDuration\";\r\n                }\r\n            }\r\n            // Apply format\r\n            if (formatParts[0].method) {\r\n                current = this.getTagValueFromObject(formatParts, current);\r\n            }\r\n        }\r\n        return current;\r\n    };\r\n    Object.defineProperty(Sprite.prototype, \"dataItem\", {\r\n        /**\r\n         * @return [[DataItem]]\r\n         */\r\n        get: function () {\r\n            if (!this._dataItem) {\r\n                if (this.virtualParent) {\r\n                    return this.virtualParent.dataItem;\r\n                }\r\n                if (this.parent) {\r\n                    return this.parent.dataItem;\r\n                }\r\n            }\r\n            return this._dataItem;\r\n        },\r\n        /**\r\n         * A [[DataItem]] to use as element's data source.\r\n         *\r\n         * @todo Review type\r\n         * @param dataItem  DataItem\r\n         */\r\n        set: function (dataItem) {\r\n            //an not use this[\"_dataItem\"] here, as we return parent data item if this sprite doesn't have one.\r\n            // @todo:think about it\r\n            this.setDataItem(dataItem);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Sets currently used [[DataItem]].\r\n     *\r\n     * If the element has also `configField` set, it will also look for any\r\n     * config in DataItem's data context to apply to this element.\r\n     *\r\n     * @param dataItem DataItem\r\n     */\r\n    Sprite.prototype.setDataItem = function (dataItem) {\r\n        var _this = this;\r\n        if (this._dataItem != dataItem) {\r\n            this._dataItem = dataItem;\r\n            if (dataItem) {\r\n                if (this.configField) {\r\n                    var dataContext_1 = dataItem.dataContext;\r\n                    if (dataContext_1) {\r\n                        this.config = dataContext_1[this.configField];\r\n                        if (!this.config && dataContext_1.dataContext) {\r\n                            this.config = dataContext_1.dataContext[this.configField];\r\n                        }\r\n                    }\r\n                }\r\n                var dataContext_2 = dataItem.dataContext;\r\n                if (dataContext_2) {\r\n                    var dataContext2_1 = dataContext_2.dataContext;\r\n                    $object.each(this.propertyFields, function (propertyName, fieldValue) {\r\n                        if ($type.hasValue(dataContext_2[fieldValue])) {\r\n                            var anyThis = _this;\r\n                            anyThis[propertyName] = dataContext_2[fieldValue];\r\n                        }\r\n                        else {\r\n                            if (dataContext2_1) {\r\n                                var value = dataContext2_1[fieldValue];\r\n                                if ($type.hasValue(value)) {\r\n                                    var anyThis = _this;\r\n                                    anyThis[propertyName] = value;\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            this.invalidate();\r\n        }\r\n    };\r\n    /**\r\n     * ==========================================================================\r\n     * PROPERTY UTILITIES\r\n     * ==========================================================================\r\n     * @hidden\r\n     */\r\n    /**\r\n     * Returns element's property value.\r\n     *\r\n     * Will check if there are any bindings with [[DataItem]].\r\n     *\r\n     * Will also apply any adapters bound to `propertyName`.\r\n     *\r\n     * @param propertyName  Property name\r\n     * @return Property value\r\n     */\r\n    Sprite.prototype.getPropertyValue = function (propertyName) {\r\n        var propValue = this.properties[propertyName];\r\n        // Apply adapter\r\n        if (!this._isTemplate) {\r\n            if (this._adapterO) {\r\n                propValue = this._adapterO.apply(propertyName, propValue);\r\n            }\r\n        }\r\n        return propValue;\r\n    };\r\n    Sprite.prototype.setColorProperty = function (property, value, invalidate) {\r\n        var currentValue = this.properties[property];\r\n        if (value instanceof Color && currentValue instanceof Color && value.toString() == currentValue.toString()) {\r\n            return false;\r\n        }\r\n        else {\r\n            return this.setPropertyValue(property, value, invalidate);\r\n        }\r\n    };\r\n    Sprite.prototype.setPercentProperty = function (property, value, invalidate, transform, precision, floor) {\r\n        value = $type.toNumberOrPercent(value);\r\n        if ($type.isNumber(value)) {\r\n            value = $math.round(value, precision, floor);\r\n            return this.setPropertyValue(property, value, invalidate, transform);\r\n        }\r\n        else {\r\n            var currentValue = this.properties[property];\r\n            if (value instanceof Percent && currentValue instanceof Percent && value.value == currentValue.value) {\r\n                return false;\r\n            }\r\n            else {\r\n                return this.setPropertyValue(property, value, invalidate, transform);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets elements's property value. Will also propagate the same property value\r\n     * on all element's clones.\r\n     *\r\n     * @param property    Property\r\n     * @param value       Value\r\n     * @param invalidate  Should the sprite be invalidated, cause it's re-rendering\r\n     * @param transform   Re-apply positioning of the element\r\n     * @return Did the value change? It will return `true` if the new value and the old value of the property are not the same\r\n     * @todo Review propagation to clones. Right now we simply check if clone is disposed before setting the same property on it. It's better to remove from clone list altogether.\r\n     */\r\n    Sprite.prototype.setPropertyValue = function (property, value, invalidate, transform) {\r\n        if (this.properties[property] !== value && !this.isDisposed()) {\r\n            this.properties[property] = value;\r\n            if (this.events.isEnabled(\"propertychanged\")) {\r\n                var event_1 = {\r\n                    type: \"propertychanged\",\r\n                    target: this,\r\n                    property: property\r\n                };\r\n                this.events.dispatchImmediately(\"propertychanged\", event_1);\r\n            }\r\n            if (invalidate) {\r\n                this.invalidate();\r\n            }\r\n            if (transform) {\r\n                this.invalidatePosition();\r\n            }\r\n            if (this.applyOnClones) {\r\n                var clones = this.clones.values;\r\n                var length_2 = clones.length;\r\n                for (var i = 0; i < length_2; ++i) {\r\n                    var clone = clones[i];\r\n                    if (!clone.isDisposed()) {\r\n                        //(<Sprite>clone).setPropertyValue(<any>property, value, invalidate, transform);\r\n                        clone[property] = value;\r\n                    }\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    Sprite.prototype.bind = function (property, source, bindToProperty, modifier) {\r\n        var _this = this;\r\n        if (bindToProperty === void 0) { bindToProperty = property; }\r\n        if ($type.hasValue(this._bindings[property])) {\r\n            this._bindings[property].dispose();\r\n        }\r\n        // set current value\r\n        this[property] = source[bindToProperty];\r\n        //source.addEventListener(AMEvent.PROPERTY_CHANGED, this.handleBindings, false, this);\r\n        this._bindings[property] = source.events.on(\"propertychanged\", function (event) {\r\n            if (event.property === bindToProperty) {\r\n                var value = source[bindToProperty];\r\n                if (modifier) {\r\n                    value = modifier(value);\r\n                }\r\n                // TODO clonesById\r\n                _this[property] = value;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Sets up and obeserver function to monitor changes in particular property\r\n     * or properties.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param property  Element's property name\r\n     * @param listener  Handler function\r\n     * @param context   Context for handler function\r\n     * @returns Event Disposer\r\n     */\r\n    Sprite.prototype.observe = function (property, listener, context, shouldClone) {\r\n        var _this = this;\r\n        return new MultiDisposer($array.map($array.toArray(property), function (prop) {\r\n            return _this.events.on(\"propertychanged\", function (e) {\r\n                if (e.property === prop) {\r\n                    listener.call(context, e);\r\n                }\r\n            }, context, shouldClone);\r\n        }));\r\n    };\r\n    /**\r\n     * ==========================================================================\r\n     * ACCESSIBILITY-RELATED PROPERTIES\r\n     * ==========================================================================\r\n     * @hidden\r\n     */\r\n    /**\r\n     * Applies accessibility to the SVG element.\r\n     *\r\n     * Adds `<title>` and `<description>` elements as well as `aria-labelledby`\r\n     * and `role` properties.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Sprite.prototype.applyAccessibility = function () {\r\n        // Check if we need to add label and description\r\n        var title = this.readerTitle, description = this.readerDescription, role = this.role, hidden = this.readerHidden, checked = this.readerChecked, controls = this.readerControls, live = this.readerLive, orientation = this.readerOrientation, valueNow = this.readerValueNow, valueText = this.readerValueText;\r\n        // Init label/describe ids\r\n        var labelledByIds = [], describedByIds = [];\r\n        var labelledBy = this.readerLabelledBy;\r\n        if (labelledBy) {\r\n            labelledByIds.push(labelledBy);\r\n        }\r\n        var describedBy = this.readerDescribedBy;\r\n        if (describedBy) {\r\n            describedByIds.push(describedBy);\r\n        }\r\n        // Consolidate title and description if system tooltip is disabled\r\n        if (!this.showSystemTooltip && title) {\r\n            if (description) {\r\n                description = title + \" -- \" + description;\r\n            }\r\n            else {\r\n                description = title;\r\n            }\r\n            title = undefined;\r\n        }\r\n        // If we have only label, we use `aria-label` attribute.\r\n        // If there are both label and description, we'll go with separate tags and\r\n        // use `aria-labelledby`\r\n        if (title && !description && !this.showSystemTooltip) {\r\n            // Only label is set, use attribute\r\n            this.setSVGAttribute({\r\n                \"aria-label\": title\r\n            });\r\n            // Remove previous elements\r\n            this.removeSVGAttribute(\"aria-description\");\r\n            if (this._titleElement) {\r\n                this.group.removeElement(this._titleElement);\r\n                this._titleElement = undefined;\r\n            }\r\n            if (this._descriptionElement) {\r\n                this.group.removeElement(this._descriptionElement);\r\n                this._descriptionElement = undefined;\r\n            }\r\n        }\r\n        else {\r\n            if (title) {\r\n                var titleElement = this.titleElement;\r\n                var titleId = this.uid + \"-title\";\r\n                if (titleElement.node.textContent != title) {\r\n                    titleElement.node.textContent = title;\r\n                    titleElement.attr({ id: titleId });\r\n                }\r\n                labelledByIds.push(titleId);\r\n            }\r\n            else if (this._titleElement) {\r\n                this.group.removeElement(this._titleElement);\r\n                this._titleElement = undefined;\r\n            }\r\n            var descriptionId = this.uid + \"-description\";\r\n            if (description) {\r\n                var descriptionElement = this.descriptionElement;\r\n                if (descriptionElement.node.textContent != description) {\r\n                    descriptionElement.node.textContent = description;\r\n                    descriptionElement.attr({ id: descriptionId });\r\n                }\r\n                describedByIds.push(descriptionId);\r\n            }\r\n            else if (this._descriptionElement) {\r\n                this.group.removeElement(this._descriptionElement);\r\n                this._descriptionElement = undefined;\r\n                $array.remove(describedByIds, descriptionId);\r\n            }\r\n        }\r\n        // Add label and described properties\r\n        if (labelledByIds.length) {\r\n            this.setSVGAttribute({ \"aria-labelledby\": labelledByIds.join(\" \") });\r\n        }\r\n        else {\r\n            this.removeSVGAttribute(\"aria-labelledby\");\r\n        }\r\n        if (describedByIds.length) {\r\n            this.setSVGAttribute({ \"aria-describedby\": describedByIds.join(\" \") });\r\n        }\r\n        else {\r\n            this.removeSVGAttribute(\"aria-describedby\");\r\n        }\r\n        // Apply role\r\n        if (role) {\r\n            this.setSVGAttribute({ \"role\": role });\r\n        }\r\n        else {\r\n            this.removeSVGAttribute(\"role\");\r\n        }\r\n        // Apply aria-hidden\r\n        if (hidden) {\r\n            this.setSVGAttribute({ \"aria-hidden\": \"true\" });\r\n        }\r\n        else {\r\n            this.removeSVGAttribute(\"aria-hidden\");\r\n        }\r\n        // Apply aria-checked\r\n        if (checked) {\r\n            this.setSVGAttribute({ \"aria-checked\": \"true\" });\r\n        }\r\n        else if (checked === false) {\r\n            this.setSVGAttribute({ \"aria-checked\": \"false\" });\r\n        }\r\n        else {\r\n            this.removeSVGAttribute(\"aria-checked\");\r\n        }\r\n        // Apply aria-controls\r\n        if (controls) {\r\n            this.setSVGAttribute({ \"aria-controls\": controls });\r\n        }\r\n        else {\r\n            this.removeSVGAttribute(\"aria-controls\");\r\n        }\r\n        // Apply aria-live\r\n        if (live) {\r\n            this.setSVGAttribute({ \"aria-live\": live });\r\n        }\r\n        else {\r\n            this.removeSVGAttribute(\"aria-live\");\r\n        }\r\n        // Apply aria-orientation\r\n        if (orientation) {\r\n            this.setSVGAttribute({ \"aria-orientation\": orientation });\r\n        }\r\n        else {\r\n            this.removeSVGAttribute(\"aria-orientation\");\r\n        }\r\n        // Apply aria-valuenow\r\n        if (valueNow) {\r\n            this.setSVGAttribute({ \"aria-valuenow\": valueNow });\r\n        }\r\n        else {\r\n            this.removeSVGAttribute(\"aria-valuenow\");\r\n        }\r\n        // Apply aria-valuetext\r\n        if (valueText) {\r\n            this.setSVGAttribute({ \"aria-valuetext\": valueText });\r\n        }\r\n        else {\r\n            this.removeSVGAttribute(\"aria-valuetext\");\r\n        }\r\n    };\r\n    Object.defineProperty(Sprite.prototype, \"readerTitle\", {\r\n        /**\r\n         * @return Title\r\n         */\r\n        get: function () {\r\n            var title = this.getPropertyValue(\"readerTitle\");\r\n            if ($type.hasValue(title) && this.dataItem) {\r\n                return this.populateString(title);\r\n            }\r\n            return title;\r\n        },\r\n        /**\r\n         * Screen reader title of the element.\r\n         *\r\n         * @param value Title\r\n         */\r\n        set: function (value) {\r\n            value = $type.toText(value);\r\n            if (this.setPropertyValue(\"readerTitle\", value)) {\r\n                this.applyAccessibility();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"readerDescription\", {\r\n        /**\r\n         * @return Description\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"readerDescription\");\r\n        },\r\n        /**\r\n         * Screen reader description of the element.\r\n         *\r\n         * @param value Description\r\n         */\r\n        set: function (value) {\r\n            value = $type.toText(value);\r\n            if (this.setPropertyValue(\"readerDescription\", value)) {\r\n                this.applyAccessibility();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"role\", {\r\n        /**\r\n         * @return Role\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"role\");\r\n        },\r\n        /**\r\n         * A WAI-ARIA role for the element.\r\n         *\r\n         * @see {@link https://www.w3.org/TR/wai-aria-1.1/#role_definitions} for more information on WAI-ARIA roles\r\n         * @param value  Role\r\n         */\r\n        set: function (value) {\r\n            value = $type.toText(value);\r\n            if (this.setPropertyValue(\"role\", value)) {\r\n                this.applyAccessibility();\r\n                if (value == \"slider\") {\r\n                    this.setSVGAttribute({ \"aria-valuemin\": \"0\" });\r\n                    this.setSVGAttribute({ \"aria-valuemax\": \"100\" });\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"readerHidden\", {\r\n        /**\r\n         * @return Hidden?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"readerHidden\");\r\n        },\r\n        /**\r\n         * Controls if element should be hidden from screen readers.\r\n         *\r\n         * @see {@link https://www.w3.org/TR/wai-aria-1.1/#aria-hidden} for more information\r\n         * @param value  Hidden?\r\n         */\r\n        set: function (value) {\r\n            value = $type.toBoolean(value);\r\n            if (this.setPropertyValue(\"readerHidden\", value)) {\r\n                this.applyAccessibility();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"readerChecked\", {\r\n        /**\r\n         * @ignore Exclude from docs\r\n         * @return Checked?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"readerChecked\");\r\n        },\r\n        /**\r\n         * Controls if element is currently marked as \"checked\".\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @see {@link https://www.w3.org/TR/wai-aria-1.1/#aria-checked} for more information\r\n         * @param value Checked?\r\n         */\r\n        set: function (value) {\r\n            value = $type.toBoolean(value);\r\n            if (this.setPropertyValue(\"readerChecked\", value)) {\r\n                this.applyAccessibility();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"readerControls\", {\r\n        /**\r\n         * @ignore Exclude from docs\r\n         * @return Setting value\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"readerControls\");\r\n        },\r\n        /**\r\n         * A `uid` of an element this element controls.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @see {@link https://www.w3.org/TR/wai-aria-1.1/#aria-controls} for more information\r\n         * @param value Setting value\r\n         */\r\n        set: function (value) {\r\n            value = $type.toText(value);\r\n            if (this.setPropertyValue(\"readerControls\", value)) {\r\n                this.applyAccessibility();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"readerLive\", {\r\n        /**\r\n         * @ignore Exclude from docs\r\n         * @return Setting value\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"readerLive\");\r\n        },\r\n        /**\r\n         * Controls accessibility setting \"aria-live\" for the element.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @see {@link https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Live_Regions} for more information\r\n         * @param value Setting value\r\n         */\r\n        set: function (value) {\r\n            value = $type.toText(value);\r\n            if (this.setPropertyValue(\"readerLive\", value)) {\r\n                this.applyAccessibility();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"readerLabelledBy\", {\r\n        /**\r\n         * @ignore Exclude from docs\r\n         * @return Target element\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"readerLabelledBy\");\r\n        },\r\n        /**\r\n         * A `uid` of an element that describes this element.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @see {@link https://www.w3.org/TR/wai-aria-1.1/#aria-labelledby} for more information\r\n         * @param value Target element\r\n         */\r\n        set: function (value) {\r\n            value = $type.toText(value);\r\n            if (this.setPropertyValue(\"readerLabelledBy\", value)) {\r\n                this.applyAccessibility();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"readerDescribedBy\", {\r\n        /**\r\n         * @ignore Exclude from docs\r\n         * @return Target element\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"readerDescribedBy\");\r\n        },\r\n        /**\r\n         * A `uid` of an element that describes this element.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @see {@link https://www.w3.org/TR/wai-aria-1.1/#aria-describedby} for more information\r\n         * @param value Target element\r\n         */\r\n        set: function (value) {\r\n            value = $type.toText(value);\r\n            if (this.setPropertyValue(\"readerDescribedBy\", value)) {\r\n                this.applyAccessibility();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"readerOrientation\", {\r\n        /**\r\n         * @return Orientation\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"readerOrientation\");\r\n        },\r\n        /**\r\n         * Orientation of the element.\r\n         *\r\n         * @since 4.7.16\r\n         * @param value Orientation\r\n         */\r\n        set: function (value) {\r\n            value = $type.toText(value);\r\n            if (this.setPropertyValue(\"readerOrientation\", value)) {\r\n                this.applyAccessibility();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"readerValueNow\", {\r\n        /**\r\n         * @return Current value\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"readerValueNow\");\r\n        },\r\n        /**\r\n         * Current value of the element.\r\n         *\r\n         * @since 4.7.16\r\n         * @param value Current value\r\n         */\r\n        set: function (value) {\r\n            value = $type.toText(value);\r\n            if (this.setPropertyValue(\"readerValueNow\", value)) {\r\n                this.applyAccessibility();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"readerValueText\", {\r\n        /**\r\n         * @return Current value (text)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"readerValueText\");\r\n        },\r\n        /**\r\n         * Text representation of the current value of the element.\r\n         *\r\n         * @since 4.7.16\r\n         * @param value Current value (text)\r\n         */\r\n        set: function (value) {\r\n            value = $type.toText(value);\r\n            if (this.setPropertyValue(\"readerValueText\", value)) {\r\n                this.applyAccessibility();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"keyboardOptions\", {\r\n        /**\r\n         * ==========================================================================\r\n         * USER INTERACTIONS\r\n         * ==========================================================================\r\n         * @hidden\r\n         */\r\n        /**\r\n         * Returns elements keyboard options.\r\n         *\r\n         * @return Keyboard options\r\n         */\r\n        get: function () {\r\n            if (!this.interactions.keyboardOptions) {\r\n                if (this.virtualParent) {\r\n                    return this.virtualParent.keyboardOptions;\r\n                }\r\n                if (this.parent) {\r\n                    return this.parent.keyboardOptions;\r\n                }\r\n            }\r\n            return this.interactions.keyboardOptions;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"mouseOptions\", {\r\n        /**\r\n         * Mouse options.\r\n         *\r\n         * Enables controlling options related to the mouse, for example sensitivity\r\n         * of its mouse wheel.\r\n         *\r\n         * E.g. the below will reduce chart's wheel-zoom speed to half its default\r\n         * speed:\r\n         *\r\n         * ```TypeScript\r\n         * chart.plotContainer.mouseOptions.sensitivity = 0.5;\r\n         * ```\r\n         * ```JavaScript\r\n         * chart.plotContainer.mouseOptions.sensitivity = 0.5;\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // ...\r\n         *   \"plotContainer\": {\r\n         *     \"mouseOptions\": {\r\n         *       \"sensitivity\": 0.5\r\n         *     }\r\n         *   }\r\n         * }\r\n         * ```\r\n         *\r\n         * @return Mouse options\r\n         */\r\n        get: function () {\r\n            if (!this.interactions.mouseOptions) {\r\n                if (this.virtualParent) {\r\n                    return this.virtualParent.mouseOptions;\r\n                }\r\n                if (this.parent) {\r\n                    return this.parent.mouseOptions;\r\n                }\r\n            }\r\n            return this.interactions.mouseOptions;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"interactions\", {\r\n        /**\r\n         * Returns (creates if necessary) an [[InteractionObject]] associated with\r\n         * this element.\r\n         *\r\n         * [[InteractionObject]] is used to attach all kinds of user-interactions to\r\n         * the element, e.g. click/touch, dragging, hovering, and similar events.\r\n         *\r\n         * @return Interaction object\r\n         */\r\n        get: function () {\r\n            if (!this._interaction) {\r\n                var interaction = getInteraction().getInteraction(this.dom);\r\n                this._interaction = interaction;\r\n                this._interaction.clickable = this.clickable;\r\n                this._interaction.hoverable = this.hoverable;\r\n                this._interaction.trackable = this.trackable;\r\n                this._interaction.draggable = this.draggable;\r\n                this._interaction.swipeable = this.swipeable;\r\n                this._interaction.resizable = this.resizable;\r\n                this._interaction.wheelable = this.wheelable;\r\n                this._interaction.contextMenuDisabled = this.contextMenuDisabled;\r\n                this._interaction.inert = this.inert;\r\n                this._interaction.sprite = this;\r\n                this._disposers.push(this._interaction);\r\n            }\r\n            return this._interaction;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns true if interactions object was created. Mostly used just to avoid creating interactions object if not needed.\r\n     * @return Is Sprite interactive?\r\n     */\r\n    Sprite.prototype.isInteractive = function () {\r\n        if (this._interaction) {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    Object.defineProperty(Sprite.prototype, \"focusable\", {\r\n        /**\r\n         * @return Can element be focused?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"focusable\");\r\n        },\r\n        /**\r\n         * ==========================================================================\r\n         * ELEMENT FOCUS-RELATED STUFF\r\n         * ==========================================================================\r\n         * @hidden\r\n         */\r\n        /**\r\n         * Controls if the element can gain focus.\r\n         *\r\n         * Focusable element will be selectable via TAB key.\r\n         *\r\n         * Please note, clicking it with a mouse or touching will not add focus to\r\n         * it.\r\n         *\r\n         * Focused element will show a system-specific highlight, which might ruin\r\n         * the overal look. This is why we don't focus element on click/touch.\r\n         *\r\n         * A default setting varies for different elements. By default all elements\r\n         * are not focusable, except certain items like buttons, legend items, etc.\r\n         *\r\n         * @default undefined (auto)\r\n         * @param value  Can element be focused?\r\n         */\r\n        set: function (value) {\r\n            var _this = this;\r\n            value = $type.toBoolean(value);\r\n            if (this.setPropertyValue(\"focusable\", value)) {\r\n                if (!value && !this.isInteractive()) {\r\n                }\r\n                else {\r\n                    this.interactions.focusable = value;\r\n                    if (value) {\r\n                        this.setSVGAttribute({ \"focusable\": value });\r\n                        if (!this._tabindex) {\r\n                            this.tabindex = 0;\r\n                        }\r\n                    }\r\n                    else {\r\n                        this.removeSVGAttribute(\"focusable\");\r\n                        this.tabindex = undefined;\r\n                    }\r\n                    // Set focus events that would apply \"focus\" state\r\n                    // setEventDisposer will also remove listeners if value == false\r\n                    this.interactions.setEventDisposer(\"sprite-focusable\", value, function () { return new MultiDisposer([\r\n                        _this.events.on(\"blur\", _this.handleBlur, _this, false),\r\n                        _this.events.on(\"focus\", _this.handleFocus, _this, false)\r\n                    ]); });\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Applies filters (if set) when element gains focus.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param ev Original event\r\n     */\r\n    Sprite.prototype.handleFocus = function (ev) {\r\n        if (this.focusable) {\r\n            if (this.topParent) {\r\n                this.topParent.hasFocused = true;\r\n            }\r\n            if (this.focusFilter) {\r\n                // Any `filters` manipulation will trigger `applyFilters()` so we don't\r\n                // need to call it here\r\n                this.filters.push(this.focusFilter);\r\n            }\r\n            if (this.hoverOnFocus) {\r\n                // Trigger a hover event as well\r\n                this.isHover = true;\r\n                this.handleOver();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Removes focus filter (if set) when elementloses focus.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param ev Original event\r\n     */\r\n    Sprite.prototype.handleBlur = function (ev) {\r\n        if (this.focusable) {\r\n            if (this.topParent) {\r\n                this.topParent.hasFocused = false;\r\n            }\r\n            if (this.focusFilter) {\r\n                // Any `filters` manipulation will trigger `applyFilters()` so we don't\r\n                // need to call it here\r\n                this.filters.removeValue(this.focusFilter);\r\n            }\r\n            if (this.hoverOnFocus) {\r\n                // Trigger a out event as well\r\n                this.isHover = false;\r\n                this.handleOut();\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(Sprite.prototype, \"focusFilter\", {\r\n        /**\r\n         * A reference to a [[Filter]] to apply to element when it gains focus.\r\n         *\r\n         * Normally, browsers will draw a default ugly square around focused element,\r\n         * which totally makes sense because its purpose is to help identify active\r\n         * element for visually impaired people.\r\n         *\r\n         * However, if you would rather apply a filter, so you can modify how focused\r\n         * element looks like, use `focusFilter`.\r\n         *\r\n         * Simply set it to an anstance of [[FocusFilter]], or any other filter\r\n         * object.\r\n         *\r\n         * ```TypeScript\r\n         * chart.focusFilter = new am4core.FocusFilter();\r\n         * ```\r\n         * ```JavaScript\r\n         * chart.focusFilter = new am4core.FocusFilter();\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // ...\r\n         *   \"focusFilter\": {\r\n         *     \"type\": \"FocusFilter\"\r\n         *   },\r\n         *   // ...\r\n         * }\r\n         * ```\r\n         *\r\n         * @see {@link Filter}\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/accessibility/} more about accessibility\r\n         * @see {@link https://www.amcharts.com/docs/v4/tutorials/changing-appearance-of-focused-items/} cusomizing focus appearance\r\n         * @ignore Exclude from docs\r\n         * @return Focused element filter\r\n         */\r\n        get: function () {\r\n            /*if (!this._focusFilter) {\r\n                this._focusFilter = new FocusFilter();\r\n                this._disposers.push(this._focusFilter);\r\n            }*/\r\n            //return this._focusFilter;\r\n            var focusFilter = this._focusFilter;\r\n            if (focusFilter) {\r\n                return focusFilter;\r\n            }\r\n            if (this.virtualParent) {\r\n                return this.virtualParent.focusFilter;\r\n            }\r\n            else if (this.parent) {\r\n                return this.parent.focusFilter;\r\n            }\r\n            //this._focusFilter = new FocusFilter();\r\n            //this._disposers.push(this._focusFilter);\r\n        },\r\n        /**\r\n         * @see {@link Filter}\r\n         * @ignore Exclude from docs\r\n         * @todo This is still experimental, don't use it\r\n         */\r\n        set: function (value) {\r\n            this._focusFilter = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"hoverOnFocus\", {\r\n        /**\r\n         * @return Trigger hover on focus?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"hoverOnFocus\");\r\n        },\r\n        /**\r\n         * If set to `true`, this element will also trigger `\"over\"` event with all\r\n         * the related consequences, like \"hover\" state being applied and tooltip\r\n         * being shown.\r\n         *\r\n         * Useful as an accessibility feature to display rollover tooltips on items\r\n         * selected via keyboard.\r\n         *\r\n         * @param value  Trigger hover on focus?\r\n         * @default false\r\n         */\r\n        set: function (value) {\r\n            if (value !== this.hoverOnFocus) {\r\n                this.setPropertyValue(\"hoverOnFocus\", value);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"tabindex\", {\r\n        /**\r\n         * Returns current TAB index for focusable item.\r\n         *\r\n         * @return TAB index\r\n         */\r\n        get: function () {\r\n            var index = this._tabindex;\r\n            if (index != null) {\r\n                return index;\r\n            }\r\n            else if (this.virtualParent) {\r\n                return this.virtualParent.tabindex;\r\n            }\r\n            else if (this.parent) {\r\n                return this.parent.tabindex;\r\n            }\r\n        },\r\n        /**\r\n         * Sets TAB index.\r\n         *\r\n         * Tab index maintains the order in which focusable elements gain focus when\r\n         * TAB key is pressed.\r\n         *\r\n         * Please note, tab index is not local to the chart. It affects the whole\r\n         * of the page, including non-SVG elements. Maintain extreme causion when\r\n         * setting tab indexes, as it affects the user experience for the whole\r\n         * web page.\r\n         *\r\n         * @param value TAB index\r\n         */\r\n        set: function (value) {\r\n            value = $type.toNumber(value);\r\n            if (this.setPropertyValue(\"tabindex\", value) && $type.isNumber(value)) {\r\n                this.interactions.tabindex = value;\r\n                this.setSVGAttribute({ \"tabindex\": value });\r\n                if (value > -1) {\r\n                    this.focusable = true;\r\n                }\r\n                else {\r\n                    this.focusable = undefined;\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"inertiaOptions\", {\r\n        /**\r\n         * ==========================================================================\r\n         * DRAGGING AND RELATED STUFF\r\n         * ==========================================================================\r\n         * @hidden\r\n         */\r\n        /**\r\n         * Returns element's options to be used for inertia. This setting is\r\n         * inheritable, meaning that if not set directly, it will search in all its\r\n         * ascendants until very top.\r\n         *\r\n         * Inertia is used only if element's `inert` is set to `true`.\r\n         *\r\n         * \"Inert\" element, when dragged and released, will carry the momentum of the\r\n         * movement, and will continue moving in the same drag direction, gradually\r\n         * reducing in speed until finally stops.\r\n         *\r\n         * Check [[IInertiaOptions]] for how you tweak inertia animations.\r\n         *\r\n         * @return Inertia options\r\n         */\r\n        get: function () {\r\n            if (!this.interactions.inertiaOptions) {\r\n                if (this.parent) {\r\n                    return this.parent.inertiaOptions;\r\n                }\r\n            }\r\n            return this.interactions.inertiaOptions;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"draggable\", {\r\n        /**\r\n         * @return `true` if element can be dragged\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"draggable\");\r\n        },\r\n        /**\r\n         * Controls if the element is draggable.\r\n         *\r\n         * @param value  `true` if element can be dragged\r\n         */\r\n        set: function (value) {\r\n            var _this = this;\r\n            value = $type.toBoolean(value);\r\n            if (this.setPropertyValue(\"draggable\", value)) {\r\n                if (!value && !this.isInteractive()) {\r\n                }\r\n                else {\r\n                    this.applyCursorStyle();\r\n                    this.interactions.draggable = value;\r\n                    //interaction.processDraggable(this);\r\n                    // Add events\r\n                    // @todo Maybe attach to InteractionObject's multidisposer so that\r\n                    // sprites events get disposed together with them?\r\n                    // this.interactions.disposers.getItem(\"movable\")\r\n                    // setEventDisposer will also remove listeners if value == false\r\n                    this.interactions.setEventDisposer(\"sprite-draggable\", value, function () { return new MultiDisposer([\r\n                        _this.events.on(\"down\", _this.handleDown, _this, false),\r\n                        _this.events.on(\"dragstart\", _this.handleDragStart, _this, false),\r\n                        _this.events.on(\"drag\", _this.handleDragMove, _this, false),\r\n                        _this.events.on(\"dragstop\", _this.handleDragStop, _this, false)\r\n                    ]); });\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Executes when dragged element is being started to drag.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Sprite.prototype.handleDragStart = function (ev) {\r\n        if (!this.interactions.isTouchProtected || !ev.touch) {\r\n            this.interactions.originalPosition = {\r\n                x: this.pixelX,\r\n                y: this.pixelY\r\n            };\r\n            this._isDragged = true;\r\n            this.hideTooltip(0);\r\n        }\r\n    };\r\n    /**\r\n     * Tell this element to start being dragged. This is useful if you want to\r\n     * drag items by interactions performed not directly on the target element.\r\n     *\r\n     * Parameter `pointer` is highly recommended. By passing in the Pointer you\r\n     * will ensure that movement is tracked for the pointer that you want. If not\r\n     * supplied, the system will try to determine the most logical pointer.\r\n     *\r\n     * However this may fail if you have more than one pointer active, which\r\n     * might happen if you have several objects being dragged on a touch device.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param pointer Pointer to use for movement\r\n     */\r\n    Sprite.prototype.dragStart = function (pointer) {\r\n        //this.dragStop(pointer);\r\n        //this.draggable = true;\r\n        this._isDragged = true;\r\n        getInteraction().dragStart(this.interactions, pointer);\r\n    };\r\n    /**\r\n     * Executes when dragged element is being dropped.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Sprite.prototype.handleDragStop = function (ev) {\r\n        if (!this.interactions.isTouchProtected || !ev.touch) {\r\n            this._isDragged = false;\r\n            this.showTooltip();\r\n            this.interactions.originalPosition = undefined;\r\n        }\r\n    };\r\n    /**\r\n     * Stops manually initiated dragging of the element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param pointer Pointer to use as a reference\r\n     */\r\n    Sprite.prototype.dragStop = function (pointer) {\r\n        //this.draggable = false;\r\n        this._isDragged = false;\r\n        getInteraction().dragStop(this.interactions, pointer);\r\n        //this.handleDragStop();\r\n    };\r\n    /**\r\n     * Executes when {Sprite} is being dragged.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param ev Event object\r\n     * @todo Implement parent position offset calculation\r\n     */\r\n    Sprite.prototype.handleDragMove = function (ev) {\r\n        if (!this.interactions.isTouchProtected || !ev.touch) {\r\n            var point = this.interactions.originalPosition;\r\n            if (point && this._isDragged) {\r\n                var globalScale = this.parent.globalScale * this.svgContainer.cssScale;\r\n                this.moveTo({ x: point.x + ev.shift.x / globalScale, y: point.y + ev.shift.y / globalScale }, undefined, undefined, true);\r\n            }\r\n            this.dispatchImmediately(\"dragged\", ev);\r\n        }\r\n    };\r\n    Object.defineProperty(Sprite.prototype, \"inert\", {\r\n        /**\r\n         * @return `true` if element should use inertia when animated\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"inert\");\r\n        },\r\n        /**\r\n         * Controls if the element should use inertia when interacted with.\r\n         *\r\n         * \"Inert\" element, when dragged and released, will carry the momentum of the\r\n         * movement, and will continue moving in the same drag direction, gradually\r\n         * reducing in speed until finally stops.\r\n         *\r\n         * @default false\r\n         * @param value `true` if element should use inertia when animated\r\n         */\r\n        set: function (value) {\r\n            value = $type.toBoolean(value);\r\n            if (this.setPropertyValue(\"inert\", value)) {\r\n                if (!value && !this.isInteractive()) {\r\n                    // void\r\n                }\r\n                else {\r\n                    this.interactions.inert = value;\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"hoverOptions\", {\r\n        /**\r\n         * ==========================================================================\r\n         * HOVERING\r\n         * ==========================================================================\r\n         * @hidden\r\n         */\r\n        /**\r\n         * Returns Sprite's hover options.\r\n         *\r\n         * @see {@link IHoverOptions} for available options.\r\n         * @return Options\r\n         */\r\n        get: function () {\r\n            if (!this.interactions.hoverOptions) {\r\n                if (this.virtualParent) {\r\n                    return this.virtualParent.hoverOptions;\r\n                }\r\n                if (this.parent) {\r\n                    return this.parent.hoverOptions;\r\n                }\r\n            }\r\n            return this.interactions.hoverOptions;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"hoverable\", {\r\n        /**\r\n         * @return `true` if element is hoverable\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"hoverable\");\r\n        },\r\n        /**\r\n         * Controls if the element is hoverable (hover events are registered).\r\n         *\r\n         * Use `over` and `out` events, to watch for those respective actions.\r\n         *\r\n         * @default false\r\n         * @param value `true` if element can be hovered\r\n         */\r\n        set: function (value) {\r\n            var _this = this;\r\n            value = $type.toBoolean(value);\r\n            if (this.setPropertyValue(\"hoverable\", value)) {\r\n                if (!value && !this.isInteractive()) {\r\n                    // void\r\n                }\r\n                else {\r\n                    this.applyCursorStyle();\r\n                    this.interactions.hoverable = value;\r\n                    // setEventDisposer will also remove listeners if value == false\r\n                    this.interactions.setEventDisposer(\"sprite-hoverable\", value, function () { return new MultiDisposer([\r\n                        _this.events.on(\"over\", _this.handleOver, _this, false),\r\n                        _this.events.on(\"out\", _this.handleOut, _this, false),\r\n                    ]); });\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Handles tasks when element becomes hovered:\r\n     * * Shows [[Tooltip]] if applicable\r\n     * * Applies \"hover\" state\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param ev Event object\r\n     */\r\n    Sprite.prototype.handleOver = function (ev) {\r\n        if (this._outTimeout) {\r\n            this._outTimeout.dispose();\r\n        }\r\n        if (this.isHover) {\r\n            if (this.states.hasKey(\"hover\")) {\r\n                //this.setState(\"hover\");\r\n                // This will check `isHover` and will set \"hover\" state\r\n                if (!this.isHidden) {\r\n                    this.applyCurrentState();\r\n                }\r\n            }\r\n            var point = void 0;\r\n            if (ev && ev.pointer) {\r\n                point = $utils.documentPointToSvg(ev.pointer.point, this.svgContainer.SVGContainer, this.svgContainer.cssScale);\r\n            }\r\n            if (this.showTooltipOn == \"hover\") {\r\n                this.showTooltip(point);\r\n            }\r\n        }\r\n        else {\r\n            if (this.showTooltipOn == \"hover\") {\r\n                this.hideTooltip();\r\n            }\r\n            if (!this.isHidden && this.states.hasKey(\"hover\")) {\r\n                this.applyCurrentState();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Handles tasks when element loses hover:\r\n     *\r\n     * * Hides [[Tooltip]]\r\n     * * Applies default state\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param ev [description]\r\n     */\r\n    Sprite.prototype.handleOut = function (ev) {\r\n        var _this = this;\r\n        if (this.tooltip && this.tooltip.targetSprite == this && this.tooltip.keepTargetHover) {\r\n            this._outTimeout = this.setTimeout(function () {\r\n                if (!_this.tooltip.isHover) {\r\n                    if (_this.tooltip.targetSprite == _this) {\r\n                        _this.hideTooltip();\r\n                    }\r\n                    _this._outTimeout = _this.setTimeout(_this.handleOutReal.bind(_this), _this.rollOutDelay);\r\n                }\r\n            }, 10);\r\n            return;\r\n        }\r\n        if (this.showTooltipOn == \"hover\") {\r\n            this.hideTooltip();\r\n        }\r\n        this._outTimeout = this.setTimeout(this.handleOutReal.bind(this), this.rollOutDelay);\r\n    };\r\n    /**\r\n     * [handleOutReal description]\r\n     *\r\n     * @ignore\r\n     * @todo description\r\n     */\r\n    Sprite.prototype.handleOutReal = function () {\r\n        if (!this.isHidden && !this.isHiding && this.states.hasKey(\"hover\")) {\r\n            this.applyCurrentState();\r\n        }\r\n    };\r\n    Object.defineProperty(Sprite.prototype, \"hitOptions\", {\r\n        /**\r\n         * ==========================================================================\r\n         * CLICKING/TAPPING AND TOGGLING STUFF\r\n         * ==========================================================================\r\n         * @hidden\r\n         */\r\n        /**\r\n         * Returns Sprite's click (hit) options.\r\n         *\r\n         * Click (hit) options control things like double-click, timeouts, etc.\r\n         *\r\n         * @see {@link IHitOptions} for available options.\r\n         * @return Options\r\n         */\r\n        get: function () {\r\n            if (!this.interactions.hitOptions) {\r\n                if (this.virtualParent) {\r\n                    return this.virtualParent.hitOptions;\r\n                }\r\n                if (this.parent) {\r\n                    return this.parent.hitOptions;\r\n                }\r\n            }\r\n            return this.interactions.hitOptions;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Prepares element's after `down` event.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param ev Event\r\n     */\r\n    Sprite.prototype.handleDown = function (ev) {\r\n        if (this.interactions.downPointers.length === 1) {\r\n            this.interactions.originalPosition = {\r\n                x: this.pixelX,\r\n                y: this.pixelY\r\n            };\r\n            this.interactions.originalAngle = this.rotation;\r\n            this.interactions.originalScale = this.scale;\r\n            if (this.states.hasKey(\"down\")) {\r\n                this.setState(\"down\");\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Prepares element's after `up` event.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param ev Event\r\n     */\r\n    Sprite.prototype.handleUp = function (ev) {\r\n        var _this = this;\r\n        /*if (!this.isDown) {\r\n            this.interactions.originalPosition = null;\r\n            this.interactions.originalAngle = null;\r\n            this.interactions.originalScale = null;\r\n        }*/\r\n        this._isResized = false;\r\n        if (this.states.hasKey(\"down\")) {\r\n            this.applyCurrentState();\r\n        }\r\n        if (this.showTooltipOn == \"hit\") {\r\n            this.showTooltip();\r\n            this._disposers.push(getInteraction().body.events.once(\"down\", function (ev) {\r\n                _this.hideTooltip();\r\n            }));\r\n        }\r\n    };\r\n    Object.defineProperty(Sprite.prototype, \"clickable\", {\r\n        /**\r\n         * @return {boolean}\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"clickable\");\r\n        },\r\n        /**\r\n         * Indicates if the element is clickable.\r\n         *\r\n         * Some type of the elements, like buttons are clickable by default.\r\n         *\r\n         * Most of the elements are not clickable by default.\r\n         *\r\n         * Use `hit`, `doublehit`, `up`, `down`, `toggled` events to watch for\r\n         * respective click/touch actions.\r\n         *\r\n         * @param value `true` if element can be clicked\r\n         */\r\n        set: function (value) {\r\n            var _this = this;\r\n            value = $type.toBoolean(value);\r\n            if (this.setPropertyValue(\"clickable\", value)) {\r\n                if (!value && !this.isInteractive()) {\r\n                    // void\r\n                }\r\n                else {\r\n                    this.applyCursorStyle();\r\n                    this.interactions.clickable = value;\r\n                    // setEventDisposer will also remove listeners if value == false\r\n                    this.interactions.setEventDisposer(\"sprite-clickable\", value, function () { return new MultiDisposer([\r\n                        _this.events.on(\"down\", _this.handleDown, _this, false),\r\n                        _this.events.on(\"up\", _this.handleUp, _this, false)\r\n                    ]); });\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"togglable\", {\r\n        /**\r\n         * @return Is togglable?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"togglable\");\r\n        },\r\n        /**\r\n         * Indicates if element can be toggled on and off by subsequent clicks/taps.\r\n         *\r\n         * Togglable element will alternate its `isActive` property between `true`\r\n         * and `false` with each click.\r\n         *\r\n         * @param value Is togglable?\r\n         */\r\n        set: function (value) {\r\n            var _this = this;\r\n            value = $type.toBoolean(value);\r\n            if (this.setPropertyValue(\"togglable\", value)) {\r\n                if (!value && !this.isInteractive()) {\r\n                    // void\r\n                }\r\n                else {\r\n                    // setEventDisposer will also remove listeners if value == false\r\n                    this.interactions.setEventDisposer(\"sprite-togglable\", value, function () { return _this.events.on(\"hit\", _this.handleToggle, _this, false); });\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Handles toggling of the element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param ev Event\r\n     */\r\n    Sprite.prototype.handleToggle = function (ev) {\r\n        this.isActive = !this.isActive;\r\n    };\r\n    Object.defineProperty(Sprite.prototype, \"contextMenuDisabled\", {\r\n        /**\r\n         * @return Context menu disabled?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"contextMenuDisabled\");\r\n        },\r\n        /**\r\n         * Should element prevent context menu to be displayed, e.g. when\r\n         * right-clicked?\r\n         *\r\n         * @default false\r\n         * @param value Context menu disabled?\r\n         */\r\n        set: function (value) {\r\n            value = $type.toBoolean(value);\r\n            if (this.setPropertyValue(\"contextMenuDisabled\", value)) {\r\n                this.interactions.contextMenuDisabled = value;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"url\", {\r\n        /**\r\n         * @return URL\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"url\");\r\n        },\r\n        /**\r\n         * Click-through URL for this element.\r\n         *\r\n         * If set, clicking/tapping this element will open the new URL in a target\r\n         * window/tab as set by `urlTarget`.\r\n         *\r\n         * Please note that URL will be parsed by data placeholders in curly\r\n         * brackets, to be populated from data. E.g.:\r\n         *\r\n         * ```TypeScript\r\n         * series.columns.template.url = \"https://www.google.com/search?q={category.urlEncode()}\";\r\n         * ```\r\n         * ```JavaScript\r\n         * series.columns.template.url = \"https://www.google.com/search?q={category.urlEncode()}\";\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // ...\r\n         *   \"series\": [{\r\n         *     // ...\r\n         *     \"columns\": {\r\n         *       \"url\": \"https://www.google.com/search?q={category.urlEncode()}\"\r\n         *     }\r\n         *   }]\r\n         * }\r\n         * ```\r\n         *\r\n         * @param value URL\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"url\", value)) {\r\n                if (this._urlDisposer) {\r\n                    this._urlDisposer.dispose();\r\n                }\r\n                // If URL is not empty, set up events\r\n                if ($utils.isNotEmpty(value)) {\r\n                    this._urlDisposer = this.events.on(\"hit\", this.urlHandler, this, false);\r\n                    // Set other required parameters\r\n                    this.clickable = true;\r\n                    this.cursorOverStyle = MouseCursorStyle.pointer;\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"baseId\", {\r\n        /**\r\n         * [baseId description]\r\n         *\r\n         * @ignore\r\n         * @return [description]\r\n         */\r\n        get: function () {\r\n            if (!this._baseId && this.parent) {\r\n                this.baseId = this.parent.baseId;\r\n            }\r\n            return this._baseId;\r\n        },\r\n        /**\r\n         * [baseId description]\r\n         *\r\n         * @ignore\r\n         * @param  value  [description]\r\n         */\r\n        set: function (value) {\r\n            this.setBaseId(value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Sprite.prototype.setBaseId = function (value) {\r\n        if (value != this._baseId) {\r\n            if (this.invalid) {\r\n                this.invalid = false;\r\n                registry.removeFromInvalidSprites(this);\r\n                this.invalidate();\r\n            }\r\n            this._baseId = value;\r\n        }\r\n    };\r\n    Object.defineProperty(Sprite.prototype, \"baseSprite\", {\r\n        /**\r\n         * Returns the mail chart object that this element belongs to.\r\n         *\r\n         * In most cases it will mean the chart object.\r\n         *\r\n         * Can be used to retrieve chart object in various events and adapters.\r\n         *\r\n         * ```TypeScript\r\n         * chart.seriesContainer.events.on(\"hit\", function(ev) {\r\n         *   console.log(ev.target.baseSprite);\r\n         * });\r\n         * ```\r\n         * ```JavaScript\r\n         * chart.seriesContainer.events.on(\"hit\", function(ev) {\r\n         *   console.log(ev.target.baseSprite);\r\n         * });\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // ...\r\n         *   \"seriesContainer\": {\r\n         *     \"events\": {\r\n         *       \"hit\": function(ev) {\r\n         *         console.log(ev.target.baseSprite);\r\n         *       }\r\n         *     }\r\n         *   }\r\n         * }\r\n         * ```\r\n         *\r\n         * @readonly\r\n         * @return  Base chart object\r\n         */\r\n        get: function () {\r\n            if (this.isBaseSprite) {\r\n                return this;\r\n            }\r\n            else if (this.parent) {\r\n                return this.parent.baseSprite;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"urlTarget\", {\r\n        /**\r\n         * @return URL target\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"urlTarget\");\r\n        },\r\n        /**\r\n         * Target to use for URL clicks:\r\n         *\r\n         * * _blank\r\n         * * _self (default)\r\n         * * _parent\r\n         * * _top\r\n         * * Name of the window/frame\r\n         *\r\n         * Ignored if `url` is not set.\r\n         *\r\n         * @param value URL target\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"urlTarget\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Handles URL transition on element click.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param ev An event object\r\n     */\r\n    Sprite.prototype.urlHandler = function (ev) {\r\n        // Is URL set?\r\n        if ($utils.isNotEmpty(this.url)) {\r\n            // Proceed to the URL\r\n            var url = this.populateString(this.url);\r\n            if (this.urlTarget === \"_self\") {\r\n                window.location.href = url;\r\n            }\r\n            else {\r\n                window.open(url, this.urlTarget);\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(Sprite.prototype, \"swipeOptions\", {\r\n        /**\r\n         * ==========================================================================\r\n         * SWIPING GESTURE TRACKING\r\n         * ==========================================================================\r\n         * @hidden\r\n         */\r\n        /**\r\n         * Returns element's swipe gesture options.\r\n         *\r\n         * @return Swipe gesture options\r\n         */\r\n        get: function () {\r\n            if (!this.interactions.swipeOptions) {\r\n                if (this.virtualParent) {\r\n                    return this.virtualParent.swipeOptions;\r\n                }\r\n                if (this.parent) {\r\n                    return this.parent.swipeOptions;\r\n                }\r\n            }\r\n            return this.interactions.swipeOptions;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"swipeable\", {\r\n        /**\r\n         * @return Element swipable?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"swipeable\");\r\n        },\r\n        /**\r\n         * Controls if element is swipeable.\r\n         *\r\n         * Swipable element will invoke `swipe`, `swipeleft` and `swiperight` events,\r\n         * when quick horizontal drag action is performed with either mouse or touch.\r\n         *\r\n         * Please note that combining swipe and drag is possible, however will incur\r\n         * a slight but noticeable delay in drag start.\r\n         *\r\n         * @param value  Element swipable?\r\n         */\r\n        set: function (value) {\r\n            value = $type.toBoolean(value);\r\n            if (this.setPropertyValue(\"swipeable\", value)) {\r\n                this.applyCursorStyle();\r\n                if (!value && !this.isInteractive()) {\r\n                    // void\r\n                }\r\n                else {\r\n                    this.interactions.swipeable = value;\r\n                }\r\n                //interaction.processSwipeable(this);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"trackable\", {\r\n        /**\r\n         * @return Track cursor movement over element?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"trackable\");\r\n        },\r\n        /**\r\n         * ==========================================================================\r\n         * POINTER TRACKING\r\n         * ==========================================================================\r\n         * @hidden\r\n         */\r\n        /**\r\n         * Indicates if the element is trackable (mouse position over it is reported to\r\n         * event listeners).\r\n         *\r\n         * Will invoke `track` events whenever pointer (cursor) changes position\r\n         * while over element.\r\n         *\r\n         * Please note, touch devices will also invoke `track` events when touch\r\n         * point is moved while holding down on a trackable element.\r\n         *\r\n         * @param value Track cursor movement over element?\r\n         */\r\n        set: function (value) {\r\n            value = $type.toBoolean(value);\r\n            if (this.setPropertyValue(\"trackable\", value)) {\r\n                if (!value && !this.isInteractive()) {\r\n                    // void\r\n                }\r\n                else {\r\n                    this.applyCursorStyle();\r\n                    this.interactions.trackable = value;\r\n                }\r\n                //interaction.processTrackable(this);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"wheelable\", {\r\n        /**\r\n         * @return Mouse wheel events enabled?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"wheelable\");\r\n        },\r\n        /**\r\n         * ==========================================================================\r\n         * MOUSE-WHEEL RELATED\r\n         * ==========================================================================\r\n         * @hidden\r\n         */\r\n        /**\r\n         * Indicates if the element can be interacted with mouse wheel.\r\n         *\r\n         * Will invoke `wheel`, `wheelup`, `wheeldown`, `wheelleft`, and `wheelright`\r\n         * events when using mouse wheel over the element.\r\n         *\r\n         * @param value Mouse wheel events enabled?\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"wheelable\", value)) {\r\n                if (!value && !this.isInteractive()) {\r\n                    // void\r\n                }\r\n                else {\r\n                    this.applyCursorStyle();\r\n                    this.interactions.wheelable = value;\r\n                }\r\n                //interaction.processWheelable(this);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"resizable\", {\r\n        /**\r\n         * @return Element resizable?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"resizable\");\r\n        },\r\n        /**\r\n         * ==========================================================================\r\n         * RESIZE\r\n         * ==========================================================================\r\n         * @hidden\r\n         */\r\n        /**\r\n         * Indicates if this element is resizable.\r\n         *\r\n         * Enabling resize will turn on various interactions on the element. Their\r\n         * actual functionality will depend on other properties.\r\n         *\r\n         * If the element also `draggable`, resize will only happen with two points\r\n         * of contact on a touch device.\r\n         *\r\n         * If the element is not draggable, resize can be performed with just one\r\n         * point of contact, touch or mouse.\r\n         *\r\n         * Will invoke `resize` event every time the size of the element changes.\r\n         *\r\n         * @param value  Element resizable?\r\n         */\r\n        set: function (value) {\r\n            var _this = this;\r\n            value = $type.toBoolean(value);\r\n            if (this.setPropertyValue(\"resizable\", value)) {\r\n                if (!value && !this.isInteractive()) {\r\n                    // void\r\n                }\r\n                else {\r\n                    this.applyCursorStyle();\r\n                    this.interactions.resizable = value;\r\n                    // setEventDisposer will also remove listeners if value == false\r\n                    this.interactions.setEventDisposer(\"sprite-resizable\", value, function () { return new MultiDisposer([\r\n                        _this.events.on(\"down\", _this.handleDown, _this, false),\r\n                        _this.events.on(\"resize\", _this.handleResize, _this, false)\r\n                    ]); });\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Handles resize intermediate step.\r\n     *\r\n     * By default this method resizes actual element. Each element, can override\r\n     * this method to implement their own resize logic.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param ev Event object\r\n     */\r\n    Sprite.prototype.handleResize = function (ev) {\r\n        if (!this.interactions.isTouchProtected || !ev.touch) {\r\n            this._isResized = true;\r\n            this.scale = this.interactions.originalScale * ev.scale;\r\n            this.validatePosition();\r\n            /*center: (io.draggable\r\n            ? $math.getMidPoint(point1, point2)\r\n            : {\r\n                \"x\": io.originalPosition.x,\r\n                \"y\": io.originalPosition.y\r\n            })*/\r\n            //this.moveTo(this.originalPosition.x + ev.shift.x, this.originalPosition.y + ev.shift.y);\r\n            if (this.draggable || this.dragWhileResize) {\r\n                this._isDragged = false;\r\n                var svgPoint1 = $utils.documentPointToSvg(ev.point1, this.htmlContainer, this.svgContainer.cssScale);\r\n                var svgPoint2 = $utils.documentPointToSvg(ev.point2, this.htmlContainer, this.svgContainer.cssScale);\r\n                var svgMidPoint = $math.getMidPoint(svgPoint1, svgPoint2);\r\n                var parentPoint1 = $utils.documentPointToSprite(ev.startPoint1, this.parent);\r\n                var parentPoint2 = $utils.documentPointToSprite(ev.startPoint2, this.parent);\r\n                var originalPosition = this.interactions.originalPosition;\r\n                var originalScale = this.interactions.originalScale;\r\n                if (originalPosition) {\r\n                    var spritePoint1 = { x: (parentPoint1.x - originalPosition.x) / originalScale, y: (parentPoint1.y - originalPosition.y) / originalScale };\r\n                    var spritePoint2 = { x: (parentPoint2.x - originalPosition.x) / originalScale, y: (parentPoint2.y - originalPosition.y) / originalScale };\r\n                    var spriteMidPoint = $math.getMidPoint(spritePoint1, spritePoint2);\r\n                    var parentPoint = $utils.svgPointToSprite(svgMidPoint, this.parent);\r\n                    this.moveTo({ x: parentPoint.x - spriteMidPoint.x * this.scale, y: parentPoint.y - spriteMidPoint.y * this.scale }, undefined, undefined, true);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(Sprite.prototype, \"cursorOptions\", {\r\n        /**\r\n         * ==========================================================================\r\n         * MOUSE-RELATED\r\n         * ==========================================================================\r\n         * @hidden\r\n         */\r\n        /**\r\n         * Returns element's cursor options.\r\n         *\r\n         * Cursor options usually define cursor style for various states of the\r\n         * hovered element.\r\n         *\r\n         * Elements inherit `cursorOptions` from their parents if they don't have\r\n         * them set explicitly.\r\n         *\r\n         * @see {@link ICursorOptions} for a list of available options\r\n         * @return Cursor options\r\n         */\r\n        get: function () {\r\n            if (!this.interactions.cursorOptions) {\r\n                if (this.virtualParent) {\r\n                    return this.virtualParent.cursorOptions;\r\n                }\r\n                if (this.parent) {\r\n                    return this.parent.cursorOptions;\r\n                }\r\n            }\r\n            return this.interactions.cursorOptions;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"cursorOverStyle\", {\r\n        /**\r\n         * A shortcut to setting mouse cursor on hover.\r\n         *\r\n         * Example:\r\n         *\r\n         * ```TypeScript\r\n         * series.slices.template.cursorOverStyle = am4core.MouseCursorStyle.pointer;\r\n         * ```\r\n         * ```JavaScript\r\n         * series.slices.template.cursorOverStyle = am4core.MouseCursorStyle.pointer;\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // ...\r\n         *   \"series\": {\r\n         *     // ...\r\n         *     \"slices\": {\r\n         *       \"cursorOverStyle\": \"pointer\"\r\n         *     }\r\n         *   }\r\n         * }\r\n         * ```\r\n         *\r\n         * @param style An array of styles to apply onhover\r\n         */\r\n        set: function (style) {\r\n            if (!this.cursorOptions.overStyle) {\r\n                this.interactions.cursorOptions = {\r\n                    defaultStyle: this.cursorOptions.defaultStyle\r\n                };\r\n            }\r\n            this.cursorOptions.overStyle = style;\r\n            getInteraction().applyCursorOverStyle(this.interactions);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"cursorDownStyle\", {\r\n        /**\r\n         * A shortcut to setting mouse cursor when button is pressed down.\r\n         *\r\n         * Example:\r\n         *\r\n         * ```TypeScript\r\n         * series.slices.template.cursorDownStyle = am4core.MouseCursorStyle.grabbing;\r\n         * ```\r\n         * ```JavaScript\r\n         * series.slices.template.cursorDownStyle = am4core.MouseCursorStyle.grabbing;\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // ...\r\n         *   \"series\": {\r\n         *     // ...\r\n         *     \"slices\": {\r\n         *       \"cursorDownStyle\": \"grabbing\"\r\n         *     }\r\n         *   }\r\n         * }\r\n         * ```\r\n         *\r\n         * @param style An array of styles to apply onhover\r\n         */\r\n        set: function (style) {\r\n            this.cursorOptions.downStyle = style;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Applies default cursor styles for interactable elements.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Determine if this is necessary. Maybe let's not apply any cursor styles by default\r\n     */\r\n    Sprite.prototype.applyCursorStyle = function () {\r\n        // Draggable styles\r\n        /*if (this.draggable) {\r\n\r\n            if (!$type.hasValue(this.cursorOptions.overStyle)) {\r\n                this.cursorOptions.overStyle = MouseCursorStyle.grab;\r\n            }\r\n\r\n            if (!$type.hasValue(this.cursorOptions.downStyle)) {\r\n                this.cursorOptions.downStyle = MouseCursorStyle.grabbing;\r\n            }\r\n        }*/\r\n    };\r\n    Object.defineProperty(Sprite.prototype, \"interactionsEnabled\", {\r\n        /**\r\n         * @return Is interaction enabled for this element?\r\n         */\r\n        get: function () {\r\n            var value = this.getPropertyValue(\"interactionsEnabled\");\r\n            if (value === false) {\r\n                return false;\r\n            }\r\n            if (this.virtualParent) {\r\n                return this.virtualParent.interactionsEnabled;\r\n            }\r\n            if (this.parent) {\r\n                return this.parent.interactionsEnabled;\r\n            }\r\n            return true;\r\n        },\r\n        /**\r\n         * Setting this to `false` will effectively disable all interactivity on the\r\n         * element.\r\n         *\r\n         * @param value  Is interaction enabled for this element?\r\n         */\r\n        set: function (value) {\r\n            value = $type.toBoolean(value);\r\n            if (this.setPropertyValue(\"interactionsEnabled\", value)) {\r\n                var pointerEvents = null; // must be null, not \"null\"!\r\n                if (!value) {\r\n                    pointerEvents = \"none\";\r\n                }\r\n                else {\r\n                    // this is for IE\r\n                    this.group.node.style.pointerEvents = \"\";\r\n                }\r\n                this.group.node.style.pointerEvents = pointerEvents;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"exporting\", {\r\n        /**\r\n         * @return Export instance\r\n         */\r\n        get: function () {\r\n            return this.getExporting();\r\n        },\r\n        /**\r\n         * ==========================================================================\r\n         * EXPORT-RELATED STUFF\r\n         * ==========================================================================\r\n         * @hidden\r\n         */\r\n        /**\r\n         * An [[Export]] instance.\r\n         *\r\n         * Used to access API of the chart export functionality.\r\n         *\r\n         * If `exporting` is not set, the element inherits [[Export]] instance from\r\n         * its parents.\r\n         *\r\n         * Upon request, if no parent has such instance, a new one is created, using\r\n         * default settings, what in most cases is just enough.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/exporting/} for more info about exporting\r\n         * @param exp  Export\r\n         */\r\n        set: function (exp) {\r\n            this._exporting.set(exp, exp);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * This is here as a method so that inheriting classes could override it.\r\n     *\r\n     * @return Export instance\r\n     */\r\n    Sprite.prototype.getExporting = function () {\r\n        var _export = this._exporting.get();\r\n        if (_export) {\r\n            return _export;\r\n        }\r\n        else {\r\n            if (this.isStandaloneInstance || !this.parent) {\r\n                _export = new Export(this.svgContainer.SVGContainer);\r\n                _export.sprite = this;\r\n                _export.language = this.language;\r\n                _export.numberFormatter = this.numberFormatter;\r\n                _export.dateFormatter = this.dateFormatter;\r\n                _export.durationFormatter = this.durationFormatter;\r\n                this._exporting.set(_export, _export);\r\n            }\r\n            else {\r\n                return this.parent.exporting;\r\n            }\r\n        }\r\n        return _export;\r\n    };\r\n    Object.defineProperty(Sprite.prototype, \"exportable\", {\r\n        /**\r\n         * @return Export?\r\n         */\r\n        get: function () {\r\n            return this._exportable;\r\n            /*const svgContainer = this.svgContainer;\r\n            return !svgContainer || $array.indexOf(svgContainer.nonExportableSprites, this) == -1;*/\r\n        },\r\n        /**\r\n         * If set to `false` this element will be omitted when exporting the chart\r\n         * to an image.\r\n         *\r\n         * @default true\r\n         * @param value  Export?\r\n         */\r\n        set: function (value) {\r\n            var svgContainer = this.svgContainer;\r\n            this._exportable = value;\r\n            if (svgContainer) {\r\n                if (value) {\r\n                    $array.remove(svgContainer.nonExportableSprites, this);\r\n                }\r\n                else if ($array.indexOf(svgContainer.nonExportableSprites, this) == -1) {\r\n                    svgContainer.nonExportableSprites.push(this);\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * ==========================================================================\r\n     * MODAL/POPUP RELATED STUFF\r\n     * ==========================================================================\r\n     * @hidden\r\n     */\r\n    /**\r\n     * Private method to be used for \"classPrefix\" adapter for modals/popups.\r\n     *\r\n     * @param value  Prefix\r\n     */\r\n    Sprite.prototype.modalPrefix = function (value) {\r\n        value = options.classNamePrefix + value;\r\n        return value;\r\n    };\r\n    Object.defineProperty(Sprite.prototype, \"modal\", {\r\n        /**\r\n         * Returns a [[Modal]] instance, associated with this chart.\r\n         * (elements top parent)\r\n         *\r\n         * Accessing modal does not make it appear. To make a modal appear, use\r\n         * `showModal()` method.\r\n         *\r\n         * @see {@link Modal} for more information about using Modal windows\r\n         * @return Modal instance\r\n         */\r\n        get: function () {\r\n            var svgContainer = this.svgContainer;\r\n            if (svgContainer) {\r\n                var modal = svgContainer.modal;\r\n                if (!modal.adapter.has(\"classPrefix\", this.modalPrefix)) {\r\n                    modal.adapter.add(\"classPrefix\", this.modalPrefix);\r\n                }\r\n                return modal;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Opens a modal window with specific content (`text` parameter) and,\r\n     * optionally, `title`.\r\n     *\r\n     * The `text` parameter can contain HTML content.\r\n     *\r\n     * @see {@link Modal} for more information about using Modal windows\r\n     * @param text   Modal contents\r\n     * @param title  Title for the modal window\r\n     */\r\n    Sprite.prototype.openModal = function (text, title) {\r\n        var svgContainer = this.svgContainer;\r\n        if (svgContainer) {\r\n            return svgContainer.openModal(text, title);\r\n        }\r\n    };\r\n    /**\r\n     * Hides modal window if there is one currently open.\r\n     */\r\n    Sprite.prototype.closeModal = function () {\r\n        var svgContainer = this.svgContainer;\r\n        if (svgContainer) {\r\n            svgContainer.closeModal();\r\n        }\r\n    };\r\n    Object.defineProperty(Sprite.prototype, \"popups\", {\r\n        /**\r\n         * A list of popups for this chart.\r\n         *\r\n         * @return Popups\r\n         */\r\n        get: function () {\r\n            var svgContainer = this.svgContainer;\r\n            if (svgContainer) {\r\n                var popups = svgContainer.popups;\r\n                popups.template.sprite = this;\r\n                if (!popups.template.adapter.has(\"classPrefix\", this.modalPrefix)) {\r\n                    popups.template.adapter.add(\"classPrefix\", this.modalPrefix);\r\n                }\r\n                return popups;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates, opens, and returns a new [[Popup]] window.\r\n     *\r\n     * `text` can be any valid HTML.\r\n     *\r\n     * `title` is currently not supported.\r\n     *\r\n     * @param text   Popup contents\r\n     * @param title  Popup title\r\n     * @return Popup instance\r\n     */\r\n    Sprite.prototype.openPopup = function (text, title) {\r\n        var svgContainer = this.svgContainer;\r\n        if (svgContainer) {\r\n            return svgContainer.openPopup(text, title);\r\n        }\r\n    };\r\n    /**\r\n     * Closes all currently open popup windows\r\n     */\r\n    Sprite.prototype.closeAllPopups = function () {\r\n        var svgContainer = this.svgContainer;\r\n        if (svgContainer) {\r\n            svgContainer.closeAllPopups();\r\n        }\r\n    };\r\n    Object.defineProperty(Sprite.prototype, \"x\", {\r\n        /**\r\n         * @return X coordinate\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"x\");\r\n        },\r\n        /**\r\n         * ==========================================================================\r\n         * POSITIONAL PROPERTIES AND RELATED STUFF\r\n         * ==========================================================================\r\n         * @hidden\r\n         */\r\n        /**\r\n         * Element's absolute or relative X coordinate.\r\n         *\r\n         * If setting both X and Y, please consider using `moveTo()` method instead,\r\n         * as it will be faster to set both coordinates at once.\r\n         *\r\n         * @param value X coordinate\r\n         */\r\n        set: function (value) {\r\n            if (!this.isDragged) {\r\n                this.setPercentProperty(\"x\", value, false, true, this._positionPrecision, true);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"pixelX\", {\r\n        /**\r\n         * Returns element's current absolute X coordinate in pixels.\r\n         *\r\n         * @readonly\r\n         * @return X coordinate (px)\r\n         */\r\n        get: function () {\r\n            var value = $math.fitToRange(this.getPixelX(this.x), this.minX, this.maxX);\r\n            if (!this._adapterO) {\r\n                return value;\r\n            }\r\n            else {\r\n                return this._adapterO.apply(\"pixelX\", value);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"relativeX\", {\r\n        /**\r\n         * Returns element's current relative X coordinate in [[Percent]].\r\n         *\r\n         * @return X coordinate ([[Percent]])\r\n         */\r\n        get: function () {\r\n            if (!this._adapterO) {\r\n                return this.getRelativeX(this.x);\r\n            }\r\n            else {\r\n                return this._adapterO.apply(\"relativeX\", this.getRelativeX(this.x));\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"minX\", {\r\n        /**\r\n         * @ignore Exclude from docs\r\n         * @return Min X (px)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"minX\");\r\n        },\r\n        /**\r\n         * The smallest allowable absolute X coordinate for this element.\r\n         *\r\n         * This is used to contain element movement within certain boundaries.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @param value Min X (px)\r\n         */\r\n        set: function (value) {\r\n            if ($type.isNumber(value)) {\r\n                value = $math.round(value, this._positionPrecision, true);\r\n                this.setPropertyValue(\"minX\", value, false, true);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"maxX\", {\r\n        /**\r\n         * @ignore Exclude from docs\r\n         * @return Max X (px)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"maxX\");\r\n        },\r\n        /**\r\n         * The biggest allowable absolute X coordinate for this element.\r\n         *\r\n         * This is used to contain element movement within certain boundaries.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @param value Max X (px)\r\n         */\r\n        set: function (value) {\r\n            if ($type.isNumber(value)) {\r\n                value = $math.round(value, this._positionPrecision, true);\r\n                this.setPropertyValue(\"maxX\", value, false, true);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"y\", {\r\n        /**\r\n         * @return Y coordinate\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"y\");\r\n        },\r\n        /**\r\n         * Element's absolute or relative Y coordinate.\r\n         *\r\n         * If setting both X and Y, please consider using `moveTo()` method instead,\r\n         * as it will be faster to set both coordinates at once.\r\n         *\r\n         * @param value  Y coordinate\r\n         */\r\n        set: function (value) {\r\n            if (!this.isDragged) {\r\n                this.setPercentProperty(\"y\", value, false, true, this._positionPrecision, true);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"pixelY\", {\r\n        /**\r\n         * Returns element's current absolute Y coordinate in pixels.\r\n         *\r\n         * @readonly\r\n         * @return Y coordinate (px)\r\n         */\r\n        get: function () {\r\n            var value = $math.fitToRange(this.getPixelY(this.y), this.minY, this.maxY);\r\n            if (!this._adapterO) {\r\n                return value;\r\n            }\r\n            else {\r\n                return this._adapterO.apply(\"pixelY\", value);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"relativeY\", {\r\n        /**\r\n         * Returns element's current relative Y coordinate in [[Percent]].\r\n         *\r\n         * @readonly\r\n         * @return Y coordinate ([[Percent]])\r\n         */\r\n        get: function () {\r\n            if (!this._adapterO) {\r\n                return this.getRelativeX(this.y);\r\n            }\r\n            else {\r\n                return this._adapterO.apply(\"relativeY\", this.getRelativeX(this.y));\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"minY\", {\r\n        /**\r\n         * @ignore Exclude from docs\r\n         * @return Min Y (px)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"minY\");\r\n        },\r\n        /**\r\n         * The smallest allowable absolute Y coordinate for this element.\r\n         *\r\n         * This is used to contain element movement within certain boundaries.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @param value Min Y (px)\r\n         */\r\n        set: function (value) {\r\n            if ($type.isNumber(value)) {\r\n                value = $math.round(value, this._positionPrecision, true);\r\n                this.setPropertyValue(\"minY\", value, false, true);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"maxY\", {\r\n        /**\r\n         * @ignore Exclude from docs\r\n         * @return Max Y (px)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"maxY\");\r\n        },\r\n        /**\r\n         * The biggest allowable absolute Y coordinate for this element.\r\n         *\r\n         * This is used to contain element movement within certain boundaries.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @param value  Max Y (px)\r\n         */\r\n        set: function (value) {\r\n            if ($type.isNumber(value)) {\r\n                value = $math.round(value, this._positionPrecision, true);\r\n                this.setPropertyValue(\"maxY\", value, false, true);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"dx\", {\r\n        /**\r\n         * @return Horizontal offset (px)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"dx\");\r\n        },\r\n        /**\r\n         * A horizontal offset for the element in pixels.\r\n         *\r\n         * Can be negative value for offset to the left.\r\n         *\r\n         * @param value  Horizontal offset (px)\r\n         */\r\n        set: function (value) {\r\n            if ($type.isNumber(value)) {\r\n                value = $math.round(value, this._positionPrecision, true);\r\n                this.setPropertyValue(\"dx\", value, false, true);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"dy\", {\r\n        /**\r\n         * @return Vertical offset (px)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"dy\");\r\n        },\r\n        /**\r\n         * A vertical offset for the element in pixels.\r\n         *\r\n         * Can be negative value for offset upwards.\r\n         *\r\n         * @param value  Vertical offset (px)\r\n         */\r\n        set: function (value) {\r\n            if ($type.isNumber(value)) {\r\n                value = $math.round(value, this._positionPrecision, true);\r\n                this.setPropertyValue(\"dy\", value, false, true);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"rotation\", {\r\n        /**\r\n         * @return Rotation (0-360)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"rotation\");\r\n        },\r\n        /**\r\n         * Rotation of the element in degrees. (0-360)\r\n         *\r\n         * @param value  Rotation (0-360)\r\n         */\r\n        set: function (value) {\r\n            value = $type.toNumber(value);\r\n            if (!$type.isNumber(value)) {\r\n                value = 0;\r\n            }\r\n            this.setPropertyValue(\"rotation\", value, false, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"align\", {\r\n        /**\r\n         * @return Horizontal align\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"align\");\r\n        },\r\n        /**\r\n         * Controls horizontal alignment of the element.\r\n         *\r\n         * This is used by parent [[Container]] when layouting its children.\r\n         *\r\n         * @param value  Horizontal align\r\n         */\r\n        set: function (value) {\r\n            value = $type.toText(value);\r\n            if (this.setPropertyValue(\"align\", value)) {\r\n                if (this.parent) {\r\n                    this.parent.invalidateLayout();\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"valign\", {\r\n        /**\r\n         * @return Vertical align\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"valign\");\r\n        },\r\n        /**\r\n         * Controls vertical alignment of the element.\r\n         *\r\n         * This is used by parent [[Container]] when layouting its children.\r\n         *\r\n         * @param value  Vertical align\r\n         */\r\n        set: function (value) {\r\n            value = $type.toText(value);\r\n            if (this.setPropertyValue(\"valign\", value)) {\r\n                if (this.parent) {\r\n                    this.parent.invalidateLayout();\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"horizontalCenter\", {\r\n        /**\r\n         * @return Horizontal center\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"horizontalCenter\");\r\n        },\r\n        /**\r\n         * Controls which part of the element to treat as a horizontal center.\r\n         *\r\n         * The setting will be used when positioning, resizing and rotating the\r\n         * element.\r\n         *\r\n         * @param value  Horizontal center\r\n         */\r\n        set: function (value) {\r\n            value = $type.toText(value);\r\n            if (this.setPropertyValue(\"horizontalCenter\", value)) {\r\n                this.updateCenter();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"verticalCenter\", {\r\n        /**\r\n         * @return Vertical center\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"verticalCenter\");\r\n        },\r\n        /**\r\n         * Controls which part of the element to treat as a vertical center.\r\n         *\r\n         * The setting will be used when positioning, resizing and rotating the\r\n         * element.\r\n         *\r\n         * @param value  Vertical center\r\n         */\r\n        set: function (value) {\r\n            value = $type.toText(value);\r\n            if (this.setPropertyValue(\"verticalCenter\", value)) {\r\n                this.updateCenter();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"maxWidth\", {\r\n        /**\r\n         * @return Maximum width (px)\r\n         */\r\n        get: function () {\r\n            var maxWidth = this.getPropertyValue(\"maxWidth\");\r\n            if (!$type.isNumber(maxWidth)) {\r\n                if (this.parent) {\r\n                    var parentWidth = this.parent.maxWidth;\r\n                    if (this.parent.layout != \"absolute\" && this.align != \"none\" && this.align != undefined) {\r\n                        parentWidth = parentWidth - this.pixelMarginLeft - this.pixelMarginRight;\r\n                    }\r\n                    return parentWidth;\r\n                }\r\n            }\r\n            return maxWidth;\r\n        },\r\n        /**\r\n         * ==========================================================================\r\n         * DIMENSIONAL PROPERTIES AND RELATED STUFF\r\n         * ==========================================================================\r\n         * @hidden\r\n         */\r\n        /**\r\n         * Maximum allowed width for the element in pixels.\r\n         *\r\n         * @param value  Maximum width (px)\r\n         */\r\n        set: function (value) {\r\n            this.setMaxWidth(value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Sprite.prototype.setMaxWidth = function (value) {\r\n        var prevWidth = this.maxWidth;\r\n        var prevHeight = this.maxHeight;\r\n        if (this.setPropertyValue(\"maxWidth\", value)) {\r\n            if ($type.isNumber(this.relativeWidth)) {\r\n                this.invalidate();\r\n            }\r\n            var event_2 = {\r\n                type: \"maxsizechanged\",\r\n                target: this,\r\n                previousWidth: prevWidth,\r\n                previousHeight: prevHeight\r\n            };\r\n            this.dispatchImmediately(\"maxsizechanged\", event_2);\r\n        }\r\n    };\r\n    Object.defineProperty(Sprite.prototype, \"maxHeight\", {\r\n        /**\r\n         * @return Maximum height (px)\r\n         */\r\n        get: function () {\r\n            var maxHeight = this.getPropertyValue(\"maxHeight\");\r\n            if (!$type.isNumber(maxHeight)) {\r\n                if (this.parent) {\r\n                    var parentHeight = this.parent.maxHeight;\r\n                    if (this.parent.layout != \"absolute\" && this.valign != \"none\" && this.valign != undefined) {\r\n                        parentHeight = parentHeight - this.pixelMarginTop - this.pixelMarginBottom;\r\n                    }\r\n                    return parentHeight;\r\n                }\r\n            }\r\n            return maxHeight;\r\n        },\r\n        /**\r\n         * Maximum allowed height for the element in pixels.\r\n         *\r\n         * @param value  Maximum height (px)\r\n         */\r\n        set: function (value) {\r\n            this.setMaxHeight(value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Sprite.prototype.setMaxHeight = function (value) {\r\n        var prevWidth = this.maxWidth;\r\n        var prevHeight = this.maxHeight;\r\n        if (this.setPropertyValue(\"maxHeight\", value)) {\r\n            if ($type.isNumber(this.relativeHeight)) {\r\n                this.invalidate();\r\n            }\r\n            var event_3 = {\r\n                type: \"maxsizechanged\",\r\n                target: this,\r\n                previousWidth: prevWidth,\r\n                previousHeight: prevHeight\r\n            };\r\n            this.dispatchImmediately(\"maxsizechanged\", event_3);\r\n        }\r\n    };\r\n    Object.defineProperty(Sprite.prototype, \"minWidth\", {\r\n        /**\r\n         * @return Minimum width (px)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"minWidth\");\r\n        },\r\n        /**\r\n         * Minimum width of the element in pixels.\r\n         *\r\n         * Set to `undefined` to remove the limit.\r\n         *\r\n         * @param value  Minimum width (px)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"minWidth\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"minHeight\", {\r\n        /**\r\n         * @return Minimum height (px)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"minHeight\");\r\n        },\r\n        /**\r\n         * Minimum height for the element in pixels.\r\n         *\r\n         * Set to `undefined` to remove the limit.\r\n         *\r\n         * @param value  Minimum height (px)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"minHeight\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"width\", {\r\n        /**\r\n         * @return Width (absolute or relative)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"width\");\r\n        },\r\n        /**\r\n         * Element's absolute or relative width.\r\n         *\r\n         * The width can either be absolute, set in numeric pixels, or relative, set\r\n         * in [[Percent]].\r\n         *\r\n         * Relative width will be calculated using closest measured ancestor\r\n         * [[Container]].\r\n         *\r\n         * @param value  Width (numeric in pixels or relative)\r\n         */\r\n        set: function (value) {\r\n            var changed = this.setPercentProperty(\"width\", value, true, false, this._positionPrecision, true);\r\n            if (changed) {\r\n                this.percentWidth = undefined;\r\n                this.relativeWidth = undefined;\r\n                if (value instanceof Percent) {\r\n                    this.percentWidth = value.percent;\r\n                    if ($type.isNumber(this._pixelWidth)) {\r\n                        this.maxWidth = undefined;\r\n                    }\r\n                    this._pixelWidth = undefined;\r\n                }\r\n                else {\r\n                    this._pixelWidth = Number(value);\r\n                    //this._measuredWidth = this._pixelWidth;\r\n                    this.maxWidth = this._pixelWidth;\r\n                }\r\n                this.invalidatePosition();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"height\", {\r\n        /**\r\n         * @return height (absolute or relative)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"height\");\r\n        },\r\n        /**\r\n         * Element's absolute or relative height.\r\n         *\r\n         * The height can either be absolute, set in numeric pixels, or relative, set\r\n         * in [[Percent]].\r\n         *\r\n         * Relative height will be calculated using closest measured ancestor\r\n         * [[Container]].\r\n         *\r\n         * @param value  Height (numeric in pixels or relative)\r\n         */\r\n        set: function (value) {\r\n            var changed = this.setPercentProperty(\"height\", value, true, false, this._positionPrecision, true);\r\n            if (changed) {\r\n                this.percentHeight = undefined;\r\n                this._relativeHeight = undefined;\r\n                if (value instanceof Percent) {\r\n                    this.percentHeight = value.percent;\r\n                    if ($type.isNumber(this._pixelHeight)) {\r\n                        this.maxHeight = undefined;\r\n                    }\r\n                    this._pixelHeight = undefined;\r\n                }\r\n                else {\r\n                    this._pixelHeight = Number(value);\r\n                    //this._measuredHeight = this._pixelHeight;\r\n                    this.maxHeight = this._pixelHeight; // yes, we reset maxWidth\r\n                }\r\n                this.invalidatePosition();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"pixelWidth\", {\r\n        /**\r\n         * Returns element's width in pixels, if width was set. For actual width use measuredWidth property.\r\n         *\r\n         * @readonly\r\n         * @return Width (px)\r\n         */\r\n        get: function () {\r\n            var width;\r\n            if ($type.isNumber(this.percentWidth)) {\r\n                width = this.maxWidth;\r\n            }\r\n            else if ($type.isNumber(this._pixelWidth)) {\r\n                width = this._pixelWidth;\r\n            }\r\n            else {\r\n                width = 0;\r\n            }\r\n            var minWidth = this.minWidth;\r\n            if (minWidth != null && width < minWidth) {\r\n                width = minWidth;\r\n            }\r\n            var value = $math.round(width, this._positionPrecision, true);\r\n            if (!this._adapterO) {\r\n                return value;\r\n            }\r\n            else {\r\n                return this._adapterO.apply(\"pixelWidth\", value);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"pixelHeight\", {\r\n        /**\r\n         * Returns element's height in pixels. For actual height use measuredHeight property.\r\n         *\r\n         * @readonly\r\n         * @return Height (px)\r\n         */\r\n        get: function () {\r\n            var height;\r\n            if ($type.isNumber(this.percentHeight)) {\r\n                height = this.maxHeight;\r\n            }\r\n            else if ($type.isNumber(this._pixelHeight)) {\r\n                height = this._pixelHeight;\r\n            }\r\n            else {\r\n                height = 0; //this._measuredHeightSelf;\r\n            }\r\n            var minHeight = this.minHeight;\r\n            if (minHeight != null && height < minHeight) {\r\n                height = minHeight;\r\n            }\r\n            var value = $math.round(height, this._positionPrecision, true);\r\n            if (!this._adapterO) {\r\n                return value;\r\n            }\r\n            else {\r\n                return this._adapterO.apply(\"pixelHeight\", value);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"relativeWidth\", {\r\n        /**\r\n         * @return Relative width\r\n         * @ignore\r\n         */\r\n        get: function () {\r\n            var relativeWidth = this._relativeWidth;\r\n            if ($type.isNumber(relativeWidth)) {\r\n                if (!this._adapterO) {\r\n                    return relativeWidth;\r\n                }\r\n                else {\r\n                    return this._adapterO.apply(\"relativeWidth\", relativeWidth);\r\n                }\r\n            }\r\n        },\r\n        /**\r\n         * Element's relative width in [[Percent]].\r\n         * @ignore\r\n         *\r\n         * @param value  Relative width\r\n         */\r\n        set: function (value) {\r\n            if (this._relativeWidth != value) {\r\n                this._relativeWidth = value;\r\n                //\t\t\tthis.invalidate();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"relativeHeight\", {\r\n        /**\r\n         * @return Relative height\r\n         * @ignore\r\n         */\r\n        get: function () {\r\n            var relativeHeight = this._relativeHeight;\r\n            if ($type.isNumber(relativeHeight)) {\r\n                if (!this._adapterO) {\r\n                    return relativeHeight;\r\n                }\r\n                else {\r\n                    return this._adapterO.apply(\"relativeHeight\", relativeHeight);\r\n                }\r\n            }\r\n        },\r\n        /**\r\n         * Element's relative height in [[Percent]].\r\n         *\r\n         * @param value  Relative height\r\n         * @ignore\r\n         */\r\n        set: function (value) {\r\n            if (this._relativeHeight != value) {\r\n                this._relativeHeight = value;\r\n                //\t\t\tthis.invalidate();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"measuredWidth\", {\r\n        /**\r\n         * Returns element's measured width in pixels.\r\n         *\r\n         * A measured width is actual width of contents plus `paddingRight` and* `paddingLeft`, relative to sprite parent, meaning that\r\n         * rotation and scale is taken into account.\r\n         *\r\n         * @readonly\r\n         * @return Width (px)\r\n         */\r\n        get: function () {\r\n            if (this.disabled || this.__disabled) {\r\n                return 0;\r\n            }\r\n            if (!this._adapterO) {\r\n                return this._measuredWidth;\r\n            }\r\n            else {\r\n                return this._adapterO.apply(\"measuredWidth\", this._measuredWidth);\r\n            }\r\n            // it's not good to fit to min/max range as then rotations and scale won't be taken into account\r\n            //return this.adapter.apply(\"measuredWidth\", $math.fitToRange(this._measuredWidth, this.minWidth, this.maxWidth));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"measuredHeight\", {\r\n        /**\r\n         * Returns elements's measured height in pixels.\r\n         *\r\n         * A measured height is actual height of contents plus `paddingTop` and `paddingBottom`, relative to sprite parent, meaning that\r\n         * rotation and scale taken into account.\r\n         *\r\n         * @readonly\r\n         * @return Height (px)\r\n         */\r\n        get: function () {\r\n            if (this.disabled || this.__disabled) {\r\n                return 0;\r\n            }\r\n            // it's not good to fit to min/max range as then rotations and scale won't be taken into account\r\n            //return this.adapter.apply(\"measuredHeight\", $math.fitToRange(this._measuredHeight, this.minHeight, this.maxHeight));\r\n            if (!this._adapterO) {\r\n                return this._measuredHeight;\r\n            }\r\n            else {\r\n                return this._adapterO.apply(\"measuredHeight\", this._measuredHeight);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"outerWidth\", {\r\n        /**\r\n         * Returns element's measured width plus its left and right margins in\r\n         * pixels.\r\n         *\r\n         * @readonly\r\n         * @return Outer width (px)\r\n         */\r\n        get: function () {\r\n            var value = this.pixelWidth + this.pixelMarginRight + this.pixelMarginLeft;\r\n            if (!this._adapterO) {\r\n                return value;\r\n            }\r\n            else {\r\n                return this._adapterO.apply(\"outerWidth\", value);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"outerHeight\", {\r\n        /**\r\n         * Returns element's measured height plus its top and bottom margins in\r\n         * pixels.\r\n         *\r\n         * @readonly\r\n         * @return Outer height (px)\r\n         */\r\n        get: function () {\r\n            var value = this.pixelHeight + this.pixelMarginTop + this.pixelMarginBottom;\r\n            if (!this._adapterO) {\r\n                return value;\r\n            }\r\n            else {\r\n                return this._adapterO.apply(\"outerHeight\", value);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"innerWidth\", {\r\n        /**\r\n         * Returns element's measured inner width in pixels.\r\n         *\r\n         * Inner width is actual available space for content, e.g. element's width\r\n         * minus horizontal padding.\r\n         *\r\n         * @readonly\r\n         * @return Inner width (px)\r\n         */\r\n        get: function () {\r\n            var value = Math.max(0, this.pixelWidth - this.pixelPaddingRight - this.pixelPaddingLeft);\r\n            if (!this._adapterO) {\r\n                return value;\r\n            }\r\n            else {\r\n                return this._adapterO.apply(\"innerWidth\", value);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"innerHeight\", {\r\n        /**\r\n         * Returns element's measured inner height in pixels.\r\n         *\r\n         * Inner height is actual available space for content, e.g. element's height\r\n         * minus vertical padding.\r\n         *\r\n         * @readonly\r\n         * @return Inner height (px)\r\n         */\r\n        get: function () {\r\n            var value = Math.max(0, this.pixelHeight - this.pixelPaddingTop - this.pixelPaddingBottom);\r\n            if (!this._adapterO) {\r\n                return value;\r\n            }\r\n            else {\r\n                return this._adapterO.apply(\"innerHeight\", value);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"globalScale\", {\r\n        /**\r\n         * Returns element's current \"global\" scale.\r\n         *\r\n         * Scale values accumulate over hierarchy of elements.\r\n         *\r\n         * E.g. if a [[Container]] has `scale = 2` and it's child has a `scale = 2`,\r\n         * the child's `globalScale` will be 4. (a multitude of `2 x 2`)\r\n         *\r\n         * @readonly\r\n         * @return Global scale\r\n         */\r\n        get: function () {\r\n            var scale = this.scale;\r\n            if (this.parent) {\r\n                scale = scale * this.parent.globalScale;\r\n            }\r\n            if (!this._adapterO) {\r\n                return scale;\r\n            }\r\n            else {\r\n                return this._adapterO.apply(\"globalScale\", scale);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"scale\", {\r\n        /**\r\n         * @return Scale (0-1)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"scale\");\r\n        },\r\n        /**\r\n         * Scale of the element.\r\n         *\r\n         * The scale is set from 0 (element reduced to nothing) to 1 (default size).\r\n         * * 2 will mean element is increased twice.\r\n         * * 0.5 - reduced by 50%.\r\n         *\r\n         * Etc.\r\n         *\r\n         * @param value  Scale (0-1)\r\n         */\r\n        set: function (value) {\r\n            value = $type.toNumber(value);\r\n            if (value < 0) {\r\n                value = 0;\r\n            }\r\n            if (value != this.getPropertyValue(\"scale\")) {\r\n                this.setPropertyValue(\"scale\", value, false, true);\r\n                this.handleGlobalScale();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Sets all four margins for the element at once.\r\n     *\r\n     * Margins are set in pixels.\r\n     *\r\n     * @param top     Top margin\r\n     * @param right   Right margin\r\n     * @param bottom  Bottom margin\r\n     * @param left    Left margin\r\n     * @return Current element\r\n     */\r\n    Sprite.prototype.margin = function (top, right, bottom, left) {\r\n        this.marginTop = top;\r\n        this.marginRight = right;\r\n        this.marginBottom = bottom;\r\n        this.marginLeft = left;\r\n        return this;\r\n    };\r\n    Object.defineProperty(Sprite.prototype, \"marginLeft\", {\r\n        /**\r\n         * @return Margin value\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"marginLeft\");\r\n        },\r\n        /**\r\n         * Left margin - absolute (px) or relative ([[Percent]]).\r\n         *\r\n         * @param value  Margin value\r\n         */\r\n        set: function (value) {\r\n            this.setPercentProperty(\"marginLeft\", value, true, true, this._positionPrecision, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"marginRight\", {\r\n        /**\r\n         * @return Margin value\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"marginRight\");\r\n        },\r\n        /**\r\n         * Right margin - absolute (px) or relative ([[Percent]]).\r\n         *\r\n         * @param value  Margin value\r\n         */\r\n        set: function (value) {\r\n            this.setPercentProperty(\"marginRight\", value, true, true, this._positionPrecision, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"marginTop\", {\r\n        /**\r\n         * @return Margin value\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"marginTop\");\r\n        },\r\n        /**\r\n         * Top margin - absolute (px) or relative ([[Percent]]).\r\n         *\r\n         * @param value  Margin value\r\n         */\r\n        set: function (value) {\r\n            this.setPercentProperty(\"marginTop\", value, true, true, this._positionPrecision, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"marginBottom\", {\r\n        /**\r\n         * @return Margin value\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"marginBottom\");\r\n        },\r\n        /**\r\n         * Bottom margin - absolute (px) or relative ([[Percent]]).\r\n         *\r\n         * @param value  Margin value\r\n         */\r\n        set: function (value) {\r\n            this.setPercentProperty(\"marginBottom\", value, true, true, this._positionPrecision, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"pixelMarginRight\", {\r\n        /**\r\n         * Returns current right margin in pixels.\r\n         *\r\n         * @readonly\r\n         * @return Right margin (px)\r\n         */\r\n        get: function () {\r\n            var value = this.getPixelX(this.marginRight);\r\n            if (!this._adapterO) {\r\n                return value;\r\n            }\r\n            else {\r\n                return this._adapterO.apply(\"pixelMarginRight\", value);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"relativeMarginRight\", {\r\n        /**\r\n         * Returns current relative right margin.\r\n         *\r\n         * @readonly\r\n         * @return Relative right margin\r\n         */\r\n        get: function () {\r\n            // @todo Maybe use [[Percent]]?\r\n            var value = this.getRelativeX(this.marginRight);\r\n            if (!this._adapterO) {\r\n                return value;\r\n            }\r\n            else {\r\n                return this._adapterO.apply(\"relativeMarginRight\", value);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"pixelMarginLeft\", {\r\n        /**\r\n         * Returns current left margin in pixels.\r\n         *\r\n         * @readonly\r\n         * @return Left margin (px)\r\n         */\r\n        get: function () {\r\n            var value = this.getPixelX(this.marginLeft);\r\n            if (!this._adapterO) {\r\n                return value;\r\n            }\r\n            else {\r\n                return this._adapterO.apply(\"pixelMarginLeft\", value);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"relativeMarginLeft\", {\r\n        /**\r\n         * Returns current relative left margin.\r\n         *\r\n         * @readonly\r\n         * @return Relative left margin\r\n         */\r\n        get: function () {\r\n            //@todo Maybe use [[Percent]]?\r\n            var value = this.getRelativeX(this.marginLeft);\r\n            if (!this._adapterO) {\r\n                return value;\r\n            }\r\n            else {\r\n                return this._adapterO.apply(\"relativeMarginLeft\", value);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"pixelMarginTop\", {\r\n        /**\r\n         * Returns current top margin in pixels.\r\n         *\r\n         * @readonly\r\n         * @return Top margin (px)\r\n         */\r\n        get: function () {\r\n            var value = this.getPixelY(this.marginTop);\r\n            if (!this._adapterO) {\r\n                return value;\r\n            }\r\n            else {\r\n                return this._adapterO.apply(\"pixelMarginTop\", value);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"relativeMarginTop\", {\r\n        /**\r\n         * Returns current relative top margin.\r\n         *\r\n         * @readonly\r\n         * @return Relative top margin\r\n         */\r\n        get: function () {\r\n            // @todo Maybe use [[Percent]]?\r\n            var value = this.getRelativeY(this.marginTop);\r\n            if (!this._adapterO) {\r\n                return value;\r\n            }\r\n            else {\r\n                return this._adapterO.apply(\"relativeMarginTop\", value);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"pixelMarginBottom\", {\r\n        /**\r\n         * Returns current bottom margin in pixels.\r\n         *\r\n         * @readonly\r\n         * @return Bottom margin (px)\r\n         */\r\n        get: function () {\r\n            var value = this.getPixelY(this.marginBottom);\r\n            if (!this._adapterO) {\r\n                return value;\r\n            }\r\n            else {\r\n                return this._adapterO.apply(\"pixelMarginBottom\", value);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"relativeMarginBottom\", {\r\n        /**\r\n         * Returns current relative bottom margin.\r\n         *\r\n         * @readonly\r\n         * @return Relative bottom margin\r\n         */\r\n        get: function () {\r\n            // @todo Maybe use [[Percent]]?\r\n            var value = this.getRelativeY(this.marginBottom);\r\n            if (!this._adapterO) {\r\n                return value;\r\n            }\r\n            else {\r\n                return this._adapterO.apply(\"relativeMarginBottom\", value);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Sets padding for the element in pixels.\r\n     *\r\n     * @param top     Top padding (px)\r\n     * @param right   Right padding (px)\r\n     * @param bottom  Bottom padding (px)\r\n     * @param left    Left padding (px)\r\n     * @return Element\r\n     */\r\n    Sprite.prototype.padding = function (top, right, bottom, left) {\r\n        this.paddingTop = top;\r\n        this.paddingRight = right;\r\n        this.paddingBottom = bottom;\r\n        this.paddingLeft = left;\r\n        return this;\r\n    };\r\n    Object.defineProperty(Sprite.prototype, \"paddingLeft\", {\r\n        /**\r\n         * @return Padding value\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"paddingLeft\");\r\n        },\r\n        /**\r\n         * Left padding - absolute (px) or relative ([[Percent]]).\r\n         *\r\n         * @param value  Padding value\r\n         */\r\n        set: function (value) {\r\n            this.setPercentProperty(\"paddingLeft\", value, true, true, this._positionPrecision, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"paddingRight\", {\r\n        /**\r\n         * @return Padding value\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"paddingRight\");\r\n        },\r\n        /**\r\n         * Right padding - absolute (px) or relative ([[Percent]]).\r\n         *\r\n         * @param value  Padding value\r\n         */\r\n        set: function (value) {\r\n            this.setPercentProperty(\"paddingRight\", value, true, true, this._positionPrecision, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"paddingTop\", {\r\n        /**\r\n         * @return Padding value\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"paddingTop\");\r\n        },\r\n        /**\r\n         * Top padding - absolute (px) or relative ([[Percent]]).\r\n         *\r\n         * @param value  Padding value\r\n         */\r\n        set: function (value) {\r\n            this.setPercentProperty(\"paddingTop\", value, true, true, this._positionPrecision, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"paddingBottom\", {\r\n        /**\r\n         * @return Padding value\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"paddingBottom\");\r\n        },\r\n        /**\r\n         * Bottom padding - absolute (px) or relative ([[Percent]]).\r\n         *\r\n         * @param value  Padding value\r\n         */\r\n        set: function (value) {\r\n            this.setPercentProperty(\"paddingBottom\", value, true, true, this._positionPrecision, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"pixelPaddingRight\", {\r\n        /**\r\n         * Returns current right padding in pixels.\r\n         *\r\n         * @readonly\r\n         * @return Right padding (px)\r\n         */\r\n        get: function () {\r\n            return this.getPixelX(this.paddingRight);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"relativePaddingRight\", {\r\n        /**\r\n         * Returns current relative right padding.\r\n         *\r\n         * @readonly\r\n         * @return Relative right padding\r\n         */\r\n        get: function () {\r\n            // @todo Maybe use [[Percent]]?\r\n            return this.getRelativeX(this.paddingRight);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"pixelPaddingLeft\", {\r\n        /**\r\n         * Returns current left padding in pixels.\r\n         *\r\n         * @readonly\r\n         * @return Left padding (px)\r\n         */\r\n        get: function () {\r\n            return this.getPixelX(this.paddingLeft);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"relativePaddingLeft\", {\r\n        /**\r\n         * Returns current relative left padding.\r\n         *\r\n         * @readonly\r\n         * @return Relative left padding\r\n         */\r\n        get: function () {\r\n            // @todo Maybe use [[Percent]]?\r\n            return this.getRelativeX(this.paddingLeft);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"pixelPaddingTop\", {\r\n        /**\r\n         * Returns current top padding in pixels.\r\n         *\r\n         * @readonly\r\n         * @return Top padding (px)\r\n         */\r\n        get: function () {\r\n            return this.getPixelY(this.paddingTop);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"relativePaddingTop\", {\r\n        /**\r\n         * Returns current relative top padding.\r\n         *\r\n         * @readonly\r\n         * @return Relative top padding\r\n         */\r\n        get: function () {\r\n            // @todo Maybe use [[Percent]]?\r\n            return this.getRelativeY(this.paddingTop);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"pixelPaddingBottom\", {\r\n        /**\r\n         * Returns current bottom padding in pixels.\r\n         *\r\n         * @readonly\r\n         * @return Bottom padding (px)\r\n         */\r\n        get: function () {\r\n            return this.getPixelY(this.paddingBottom);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"relativePaddingBottom\", {\r\n        /**\r\n         * Returns current relative bottom padding.\r\n         *\r\n         * @readonly\r\n         * @return Relative bottom padding\r\n         */\r\n        get: function () {\r\n            // @todo Maybe use [[Percent]]?\r\n            return this.getRelativeY(this.paddingBottom);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"path\", {\r\n        /**\r\n         * @return Path of a Sprite element\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"path\");\r\n        },\r\n        /**\r\n         * ==========================================================================\r\n         * APPEARANCE-RELATED PROPERTIES AND RELATED STUFF\r\n         * ==========================================================================\r\n         * @hidden\r\n         */\r\n        /**\r\n         * Path of Sprite element\r\n         */\r\n        set: function (value) {\r\n            this.setPath(value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Sprite.prototype.setPath = function (value) {\r\n        if (this.setPropertyValue(\"path\", value)) {\r\n            if (this._adapterO) {\r\n                value = this._adapterO.apply(\"path\", value);\r\n            }\r\n            if (!this._isPath) {\r\n                if (!this.element || (this.element.node && !(this.element.node instanceof SVGPathElement))) {\r\n                    this.element = this.paper.add(\"path\");\r\n                }\r\n                this._isPath = true;\r\n            }\r\n            if ($type.hasValue(value)) {\r\n                this.element.attr({ \"d\": value });\r\n            }\r\n            else {\r\n                this.element.removeAttr(\"d\");\r\n            }\r\n            this.invalidatePosition();\r\n            // otherwise is 0x0\r\n            if (!this.inited) {\r\n                this.events.once(\"inited\", this.validatePosition, this, false);\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    Object.defineProperty(Sprite.prototype, \"fillModifier\", {\r\n        /**\r\n         * @return Fill color modifier\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"fillModifier\");\r\n        },\r\n        /**\r\n         * [[ColorModifier]] that can be used to modify color and pattern of the\r\n         * element's fill, e.g. create gradients.\r\n         *\r\n         * @param value  Fill color modifiier\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"fillModifier\", value)) {\r\n                this.setFill(this.fill);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"strokeModifier\", {\r\n        /**\r\n         * @return Stroke color modifier\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"strokeModifier\");\r\n        },\r\n        /**\r\n         * [[ColorModifier]] that can be used to modify color and pattern of the\r\n         * element's stroke (outline), e.g. create gradients.\r\n         *\r\n         * @param value  Stroke color modifier\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"strokeModifier\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"fillOpacity\", {\r\n        /**\r\n         * @return Opacity (0-9)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"fillOpacity\");\r\n        },\r\n        /**\r\n         * Element's fill opacity.\r\n         *\r\n         * Opacity ranges from 0 (fully transparent) to 1 (fully opaque).\r\n         *\r\n         * @param value  Opacity (0-1)\r\n         */\r\n        set: function (value) {\r\n            value = $math.toNumberRange(value, 0, 1);\r\n            if (this.setPropertyValue(\"fillOpacity\", value)) {\r\n                this.setSVGAttribute({ \"fill-opacity\": value });\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"fill\", {\r\n        /**\r\n         * @return Fill\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"fill\");\r\n        },\r\n        /**\r\n         * Element's fill color or pattern.\r\n         *\r\n         * @param value  Fill\r\n         */\r\n        set: function (value) {\r\n            this.setFill(value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Sets actual `fill` property on the SVG element, including applicable color\r\n     * modifiers.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param value  Fill\r\n     */\r\n    Sprite.prototype.setFill = function (value) {\r\n        if (!$type.isObject(value)) {\r\n            value = toColor(value);\r\n        }\r\n        if (this.setColorProperty(\"fill\", value) || this.fillModifier) {\r\n            // this can not go into next if, as value is turned to Gradient\r\n            if (value instanceof Color) {\r\n                if (this.fillModifier) {\r\n                    value = this.fillModifier.modify(value);\r\n                }\r\n            }\r\n            this.realFill = value;\r\n            // todo: review this place when some Color type will be added\r\n            if (value instanceof Color) {\r\n                this.setSVGAttribute({ \"fill\": value.toString() });\r\n            }\r\n            else if (!$type.hasValue(value)) {\r\n                this.removeSVGAttribute(\"fill\");\r\n            }\r\n            else if (value instanceof Pattern || value instanceof LinearGradient || value instanceof RadialGradient) {\r\n                var fill = value;\r\n                fill.paper = this.paper;\r\n                this.setSVGAttribute({ \"fill\": \"url(\\\"\" + $utils.getBaseURI() + fill.id + \"\\\")\" });\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(Sprite.prototype, \"opacity\", {\r\n        /**\r\n         * @return Opacity (0-1)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"opacity\");\r\n        },\r\n        /**\r\n         * Element's opacity.\r\n         *\r\n         * Opacity setting can range from 0 (fully transparent) to 1 (fully opaque).\r\n         *\r\n         * ATTENTION: It is highly not recommended to use `opacity` directly on the\r\n         * element. The charts use `opacity` to hide/show elements, so your setting\r\n         * might be lost if element is hidden and then later shown.\r\n         *\r\n         * Instead use methods `hide()` and `show()` to completely toggle off and on\r\n         * the element.\r\n         *\r\n         * Or, use properties `fillOpacity` and `strokeOpacity`, if you need to make\r\n         * the element semi-transparent.\r\n         *\r\n         * @param value Opacity (0-1)\r\n         */\r\n        set: function (value) {\r\n            value = $math.toNumberRange(value, 0, 1);\r\n            if (this.setPropertyValue(\"opacity\", value)) {\r\n                this.setSVGAttribute({ \"opacity\": value });\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"stroke\", {\r\n        /**\r\n         * @return Stroke setting\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"stroke\");\r\n        },\r\n        /**\r\n         * Element's stroke (outline) color or pattern.\r\n         *\r\n         * @param value  Stroke setting\r\n         */\r\n        set: function (value) {\r\n            this.setStroke(value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Sets actual `stroke` property on the SVG element, including applicable\r\n     * color modifiers.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param value Stroke setting\r\n     */\r\n    Sprite.prototype.setStroke = function (value) {\r\n        if (!$type.isObject(value)) {\r\n            value = toColor(value);\r\n        }\r\n        if (this.setColorProperty(\"stroke\", value) || this.strokeModifier) {\r\n            // this can not go into next if, as value is turned to Gradient\r\n            if (value instanceof Color) {\r\n                if (this.strokeModifier) {\r\n                    value = this.strokeModifier.modify(value);\r\n                }\r\n            }\r\n            this.realStroke = value;\r\n            if (value instanceof Color) {\r\n                if (value.hex == \"none\") {\r\n                    this.removeSVGAttribute(\"stroke\");\r\n                }\r\n                else {\r\n                    this.setSVGAttribute({ \"stroke\": value.toString() });\r\n                }\r\n            }\r\n            else if (!$type.hasValue(value)) {\r\n                this.removeSVGAttribute(\"stroke\");\r\n            }\r\n            else if (value instanceof Pattern || value instanceof LinearGradient || value instanceof RadialGradient) {\r\n                var stroke = value;\r\n                stroke.paper = this.paper;\r\n                this.setSVGAttribute({ \"stroke\": \"url(\\\"\" + $utils.getBaseURI() + stroke.id + \"\\\")\" });\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(Sprite.prototype, \"strokeOpacity\", {\r\n        /**\r\n         * @return Opacity (0-1)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"strokeOpacity\");\r\n        },\r\n        /**\r\n         * Stroke (outline) opacity.\r\n         *\r\n         * The values may range from 0 (fully transparent) to 1 (fully opaque).\r\n         *\r\n         * @param value  Opacity (0-1)\r\n         */\r\n        set: function (value) {\r\n            value = $math.toNumberRange(value, 0, 1);\r\n            if (this.setPropertyValue(\"strokeOpacity\", value)) {\r\n                this.setSVGAttribute({ \"stroke-opacity\": value });\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"nonScalingStroke\", {\r\n        /**\r\n         * @return Do not scale stroke (outline)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"nonScalingStroke\");\r\n        },\r\n        /**\r\n         * Controls if the element's stroke (outline) should remain keep constant\r\n         * thicnkess and do not scale when the whole element is resized.\r\n         *\r\n         * @param value  Do not scale stroke (outline)\r\n         */\r\n        set: function (value) {\r\n            value = $type.toBoolean(value);\r\n            if (this.setPropertyValue(\"nonScalingStroke\", value)) {\r\n                this.strokeWidth = this.strokeWidth;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"nonScaling\", {\r\n        /**\r\n         * @return Is element scaleable?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"nonScaling\");\r\n        },\r\n        /**\r\n         * Controls if element should keep constant size and not scale even if there is\r\n         * space available, or it does not fit.\r\n         *\r\n         * @param value  Is element scaleable?\r\n         */\r\n        set: function (value) {\r\n            // @todo Description (review)\r\n            value = $type.toBoolean(value);\r\n            this.setPropertyValue(\"nonScaling\", value, false, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"strokeWidth\", {\r\n        /**\r\n         * @return Thickness (px)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"strokeWidth\");\r\n        },\r\n        /**\r\n         * Stroke (outline) thickness in pixels.\r\n         *\r\n         * @param value  Thickness (px)\r\n         */\r\n        set: function (value) {\r\n            value = $type.toNumber(value);\r\n            this.setPropertyValue(\"strokeWidth\", value, true);\r\n            if (this.nonScalingStroke) {\r\n                if (!$type.isNumber(value)) {\r\n                    value = 1;\r\n                }\r\n                value = value / this.globalScale;\r\n            }\r\n            this.setSVGAttribute({ \"stroke-width\": value });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"strokeDasharray\", {\r\n        /**\r\n         * @return `stroke-dasharray`\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"strokeDasharray\");\r\n        },\r\n        /**\r\n         * A `stroke-dasharray` for the stroke (outline).\r\n         *\r\n         * \"Dasharray\" allows setting rules to make lines dashed, dotted, etc.\r\n         *\r\n         * @see {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray} for more info on `stroke-dasharray`\r\n         * @param value  `stroke-dasharray`\r\n         */\r\n        set: function (value) {\r\n            value = $type.toText(value);\r\n            if (this.setPropertyValue(\"strokeDasharray\", value)) {\r\n                this.setSVGAttribute({ \"stroke-dasharray\": value });\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"strokeDashoffset\", {\r\n        /**\r\n         * @return `stroke-dashoffset`\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"strokeDashoffset\");\r\n        },\r\n        /**\r\n         * A `stroke-dashoffset` for the stroke (outline).\r\n         *\r\n         * \"Dashoffset\" allows setting the start position of the dashes if\r\n         * `strokeDasharray` is used.\r\n         *\r\n         * @see {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dashoffset} for more info on `stroke-dashoffset`\r\n         * @param value  `stroke-dashoffset`\r\n         */\r\n        set: function (value) {\r\n            value = $type.toNumber(value);\r\n            if (this.setPropertyValue(\"strokeDashoffset\", value)) {\r\n                this.setSVGAttribute({ \"stroke-dashoffset\": value });\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"strokeLinecap\", {\r\n        /**\r\n         * @return `stroke-linecap`\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"strokeLinecap\");\r\n        },\r\n        /**\r\n         * A `stroke-linecap` to indicate how line ends are drawn.\r\n         *\r\n         * @see {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Fills_and_Strokes#Stroke} for more info on `stroke-linecap`\r\n         * @param value  `stroke-linecap`\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"strokeLinecap\", value)) {\r\n                this.setSVGAttribute({ \"stroke-linecap\": value });\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"strokeLinejoin\", {\r\n        /**\r\n         * @return `stroke-linejoin`\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"strokeLinejoin\");\r\n        },\r\n        /**\r\n         * A `stroke-linejoin` to indicate how line ends are drawn.\r\n         *\r\n         * @see {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Fills_and_Strokes#Stroke} for more info on `stroke-linejoin`\r\n         * @param value  `stroke-linejoin`\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"strokeLinejoin\", value)) {\r\n                this.setSVGAttribute({ \"stroke-linejoin\": value });\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"shapeRendering\", {\r\n        /**\r\n         * @return 'shape-rendering' value\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"shapeRendering\");\r\n        },\r\n        /**\r\n         * An SVG-specific `shape-rendering` value.\r\n         *\r\n         * `shape-rendering` controls how vector graphics are drawn and rendered.\r\n         *\r\n         * @see {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering} for more information about `shape-rendering`\r\n         * @default \"auto\"\r\n         * @param value  'shape-rendering' value\r\n         */\r\n        set: function (value) {\r\n            value = $type.toText(value);\r\n            if (this.setPropertyValue(\"shapeRendering\", value)) {\r\n                this.setSVGAttribute({ \"shape-rendering\": value });\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"pixelPerfect\", {\r\n        /**\r\n         * @return Use pixel perfect?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"pixelPerfect\");\r\n        },\r\n        /**\r\n         * Controls if SVG vectors should be drawn with \"pixel\" precision, producing\r\n         * perfectly crisp lines on retina displays.\r\n         *\r\n         * Setting this to `true` might improve visual quality, but may have a\r\n         * negative effect on performance.\r\n         *\r\n         * Different elements use different default setting for `pixelPerfect`.\r\n         *\r\n         * We recommend leaving this at their default settings, unless there's a\r\n         * specific need.\r\n         *\r\n         * @param value  Use pixel perfect?\r\n         */\r\n        set: function (value) {\r\n            value = $type.toBoolean(value);\r\n            if (value) {\r\n                this._positionPrecision = 0;\r\n            }\r\n            else {\r\n                this._positionPrecision = 3;\r\n            }\r\n            this.setPropertyValue(\"pixelPerfect\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"rtl\", {\r\n        /**\r\n         * @return RTL?\r\n         */\r\n        get: function () {\r\n            if ($type.hasValue(this._rtl)) {\r\n                return this._rtl;\r\n            }\r\n            else if (this.virtualParent) {\r\n                return this.virtualParent.rtl;\r\n            }\r\n            else if (this.parent) {\r\n                return this.parent.rtl;\r\n            }\r\n            //this.rtl = false;\r\n            return false;\r\n        },\r\n        /**\r\n         * An RTL (right-to-left) setting.\r\n         *\r\n         * RTL may affect alignment, text, and other visual properties.\r\n         *\r\n         * @param value  `true` for to use RTL\r\n         */\r\n        set: function (value) {\r\n            value = $type.toBoolean(value);\r\n            this._rtl = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * ==========================================================================\r\n     * VISIBILITY AND ORDER PROPERTIES AND RELATED STUFF\r\n     * ==========================================================================\r\n     * @hidden\r\n     */\r\n    /**\r\n     * Reveals hidden element.\r\n     *\r\n     * Has no effect if element is already visible.\r\n     *\r\n     * If `duration` is not specified, it will use default.\r\n     *\r\n     * @param duration  Fade in duration (ms)\r\n     * @return Animation object if such object was created\r\n     */\r\n    Sprite.prototype.show = function (duration) {\r\n        return this.showReal(duration);\r\n    };\r\n    /**\r\n     * Performs actual operations to reveal this element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param duration Fade in duration (ms)\r\n     * @return Fade in duration (ms)\r\n     */\r\n    Sprite.prototype.showReal = function (duration) {\r\n        var _this = this;\r\n        if (this.preventShow) {\r\n            return;\r\n        }\r\n        var transition;\r\n        var properties = this.defaultState.properties;\r\n        if (!this.disabled && (this.isHidden || !this.visible || this.isHiding || (properties.opacity != null && this.opacity < properties.opacity && !this.isShowing)) && !this.isDisposed()) {\r\n            // helps to avoid flicker, as show might change opacity or visibility but item might be at invalid state/position\r\n            if (this.invalid) {\r\n                this.validate();\r\n            }\r\n            if (this.positionInvalid) {\r\n                this.validatePosition();\r\n            }\r\n            if (!$type.isNumber(duration)) {\r\n                duration = this.defaultState.transitionDuration;\r\n            }\r\n            if (this._hideAnimation) {\r\n                this._hideAnimation.kill();\r\n                this._hideAnimation = undefined;\r\n            }\r\n            // Cancel hide handler just in case it was there\r\n            if (this._showHideDisposer) {\r\n                this.removeDispose(this._showHideDisposer);\r\n            }\r\n            this._isHidden = false;\r\n            this.isHiding = false;\r\n            this.isShowing = true;\r\n            // Apply current state\r\n            transition = this.applyCurrentState(duration);\r\n            if (transition && !transition.isFinished()) {\r\n                this._showHideDisposer = transition.events.on(\"animationended\", function () {\r\n                    _this.isShowing = false;\r\n                });\r\n                this._disposers.push(this._showHideDisposer);\r\n            }\r\n            else {\r\n                this.isShowing = false;\r\n            }\r\n            // Make it visible\r\n            var visible = this.defaultState.properties.visible;\r\n            if (!$type.hasValue(visible)) {\r\n                visible = true;\r\n            }\r\n            this.visible = visible;\r\n            // Unhide from screen readers\r\n            this.readerHidden = false;\r\n            // Dispatch \"show\" event\r\n            this.dispatchImmediately(\"shown\");\r\n        }\r\n        return transition;\r\n    };\r\n    /**\r\n     * Initiates hiding of Sprite.\r\n     * When called it will fade out the the Sprite to transparency, then make it\r\n     * invisible.\r\n     * @param duration Duration in millisecons\r\n     */\r\n    /**\r\n     * Hides the element, by applying `hidden` state.\r\n     *\r\n     * Has no effect if element is already hidden.\r\n     *\r\n     * If `duration` is not specified, it will use default.\r\n     *\r\n     * While element is fading out, its `isHiding` property will resolve to\r\n     * `true`.\r\n     *\r\n     * When element is hidden, its `visible` property will resolve to `false`.\r\n     *\r\n     * @param duration  Fade out duration (ms)\r\n     * @return hide Animation object if such object was created\r\n     */\r\n    Sprite.prototype.hide = function (duration) {\r\n        return this.hideReal(duration);\r\n    };\r\n    /**\r\n     * Hides actual SVG elements and handles hiding animations.\r\n     *\r\n     * @param duration  Fade out duration (ms)\r\n     * @return Fade out duration (ms)\r\n     * @ignore\r\n     */\r\n    Sprite.prototype.hideReal = function (duration) {\r\n        var _this = this;\r\n        var transition;\r\n        if (!this.isHiding && this.visible && !this.isDisposed()) {\r\n            // added to solve 51375\r\n            if (this.tooltip && this.tooltip.currentSprite == this) {\r\n                this.hideTooltip(0);\r\n            }\r\n            if (this._hideAnimation) {\r\n                this._hideAnimation.kill();\r\n                this._hideAnimation = undefined;\r\n            }\r\n            this.isShowing = false;\r\n            // Cancel hide handler just in case it was there\r\n            if (this._showHideDisposer) {\r\n                this.removeDispose(this._showHideDisposer);\r\n            }\r\n            // Get state\r\n            var hiddenState = this.hiddenState;\r\n            // Transition to \"hidden\" state, provided Sprite has one set\r\n            if (hiddenState) {\r\n                // Yes, we have a \"hidden\" state\r\n                // `setState` will return an `Animation` object which we can set\r\n                // events on\r\n                transition = this.setState(hiddenState, duration, undefined);\r\n                if (transition && !transition.isFinished()) {\r\n                    this._hideAnimation = transition;\r\n                    this._showHideDisposer = transition.events.on(\"animationended\", function () {\r\n                        _this.isHiding = false;\r\n                        _this._isHidden = true;\r\n                    }, this);\r\n                    this._disposers.push(this._showHideDisposer);\r\n                    // Thrown everything into `_disposers` just in case Sprite gets\r\n                    // destroyed in the meantime\r\n                    this._disposers.push(transition);\r\n                }\r\n                else {\r\n                    this.isHiding = false;\r\n                    this._isHidden = true;\r\n                }\r\n            }\r\n            else {\r\n                // No hidden state, let's just set `visible` and call it a day\r\n                this.visible = false;\r\n                this.isHiding = false;\r\n                this._isHidden = true;\r\n            }\r\n            // Hide from screen readers\r\n            this.readerHidden = true;\r\n            // Dispach \"hidden\" event\r\n            this.dispatchImmediately(\"hidden\");\r\n            this.invalidate(); // hide it at once to avoid flickers // validate() causes SO\r\n        }\r\n        if (!$type.isNumber(duration)) {\r\n            duration = this.hiddenState.transitionDuration;\r\n        }\r\n        return transition;\r\n    };\r\n    Object.defineProperty(Sprite.prototype, \"visible\", {\r\n        /**\r\n         * Returns current visibility of the element.\r\n         *\r\n         * @return Visible?\r\n         */\r\n        get: function () {\r\n            return this.getVisibility();\r\n        },\r\n        /**\r\n         * Sets visibility of the element.\r\n         *\r\n         * @param value Visible?\r\n         */\r\n        set: function (value) {\r\n            value = $type.toBoolean(value);\r\n            this.setVisibility(value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns visibility value\r\n     * @ignore\r\n     */\r\n    Sprite.prototype.getVisibility = function () {\r\n        var value = this.getPropertyValue(\"visible\");\r\n        if (!$type.hasValue(value)) {\r\n            value = true;\r\n        }\r\n        return value;\r\n    };\r\n    /**\r\n     * Sets `visibility` property:\r\n     *\r\n     * * `true` - visible\r\n     * * `false` - hidden\r\n     *\r\n     * @param value  true - visible, false - hidden\r\n     * @return Current visibility\r\n     */\r\n    Sprite.prototype.setVisibility = function (value) {\r\n        if (this.setPropertyValue(\"visible\", value)) {\r\n            if (value) {\r\n                this.group.removeAttr(\"visibility\");\r\n            }\r\n            else {\r\n                this.group.attr({ \"visibility\": \"hidden\" });\r\n            }\r\n            //this.invalidatePosition();\r\n            if (this.events.isEnabled(\"visibilitychanged\")) {\r\n                var event_4 = {\r\n                    type: \"visibilitychanged\",\r\n                    target: this,\r\n                    visible: value\r\n                };\r\n                this.events.dispatchImmediately(\"visibilitychanged\", event_4);\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(Sprite.prototype, \"zIndex\", {\r\n        /**\r\n         * @return zIndex\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"zIndex\");\r\n        },\r\n        /**\r\n         * A \"zIndex\" of the element.\r\n         *\r\n         * \"zIndex\" determines the order of how elements are placed over each other.\r\n         *\r\n         * Higher \"zIndex\" will mean the element will be draw on top of elements\r\n         * with lower \"zIndexes\".\r\n         *\r\n         * @param value  zIndex\r\n         */\r\n        set: function (value) {\r\n            value = $type.toNumber(value);\r\n            if (this.setPropertyValue(\"zIndex\", value)) {\r\n                this.dispatch(\"zIndexChanged\");\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Moves the element to the very top in element order, so that it appears\r\n     * in front of other elements.\r\n     */\r\n    Sprite.prototype.toFront = function () {\r\n        var parent = this.parent;\r\n        if (parent && parent.children.indexOf(this) != parent.children.length - 1) {\r\n            parent.children.moveValue(this, parent.children.length - 1);\r\n            this.dispatch(\"zIndexChanged\");\r\n        }\r\n    };\r\n    /**\r\n     * Moves the element to the very bottom in the element order, so that it\r\n     * appears behind other elements.\r\n     */\r\n    Sprite.prototype.toBack = function () {\r\n        var parent = this.parent;\r\n        if (parent && parent.children.indexOf(this) != 0) {\r\n            parent.children.moveValue(this, 0);\r\n            this.dispatch(\"zIndexChanged\");\r\n        }\r\n    };\r\n    Object.defineProperty(Sprite.prototype, \"tooltip\", {\r\n        /**\r\n         * @return Tooltip\r\n         */\r\n        get: function () {\r\n            if (this._tooltip) {\r\n                return this._tooltip;\r\n            }\r\n            else if (this.virtualParent) {\r\n                return this.virtualParent.tooltip;\r\n            }\r\n            else if (this.parent) {\r\n                return this.parent.tooltip;\r\n            }\r\n        },\r\n        /**\r\n         * ==========================================================================\r\n         * TOOLTIP-RELATED PROPERTIES STUFF\r\n         * ==========================================================================\r\n         * @hidden\r\n         */\r\n        /**\r\n         * A [[Tooltip]] object to be used when displayed rollover information for\r\n         * the element.\r\n         *\r\n         * @param tooltip  Tooltip\r\n         */\r\n        set: function (tooltip) {\r\n            if (this._tooltip) {\r\n                //this._tooltip.dispose();\r\n                this.removeDispose(this._tooltip);\r\n            }\r\n            this._tooltip = tooltip;\r\n            if (tooltip) {\r\n                tooltip.parent = this.tooltipContainer;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"tooltipDataItem\", {\r\n        /**\r\n         * @return Tooltip data item\r\n         */\r\n        get: function () {\r\n            var tooltipDataItem = this._tooltipDataItem;\r\n            if (tooltipDataItem) {\r\n                return tooltipDataItem;\r\n            }\r\n            else {\r\n                return this.dataItem;\r\n            }\r\n        },\r\n        /**\r\n         * A [[DataItem]] to use when populating content for the element's\r\n         * [[Tooltip]].\r\n         *\r\n         * @see {@link Tooltip}\r\n         * @see {@link DataItem}\r\n         * @param value  Tooltip data item\r\n         */\r\n        set: function (value) {\r\n            // important: do not dispose tooltip dataItem, as it is some actual data item from data!\r\n            this._tooltipDataItem = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"tooltipColorSource\", {\r\n        /**\r\n         * @return Tooltip color source\r\n         */\r\n        get: function () {\r\n            return this._tooltipColorSource;\r\n        },\r\n        /**\r\n         * A [[Sprite]] or sprite template to use when getting colors for tooltip. If a template is set,\r\n         * tooltip will look for a clone in tooltipDataItem.sprites. If no clone is found, then template colors will be used.\r\n         *\r\n         * @see {@link Tooltip}\r\n         * @see {@link Sprite}\r\n         * @param sprite Sprite\r\n         */\r\n        set: function (sprite) {\r\n            this._tooltipColorSource = sprite;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Shows the element's [[Tooltip]].\r\n     *\r\n     * A tooltip will be populated using text templates in either `tooltipHTML` or\r\n     * `tooltipText` as well as data in `tooltipDataItem`.\r\n     *\r\n     * @see {@link Tooltip}\r\n     * @param optional point (sprite-related) to which tooltip must point.\r\n     * @return returns true if the tooltip was shown and false if it wasn't (no text was found)\r\n     */\r\n    Sprite.prototype.showTooltip = function (point) {\r\n        if (this.showTooltipOn == \"always\" && !this._tooltip && this.tooltip) {\r\n            this._tooltip = this.tooltip.clone();\r\n        }\r\n        // do not show if hidden\r\n        var sprite = this;\r\n        while (sprite != undefined) {\r\n            if (!sprite.visible || sprite.disabled || sprite.__disabled) {\r\n                if (this._tooltip && this._tooltip.visible) {\r\n                    this._tooltip.hide(0);\r\n                }\r\n                return;\r\n            }\r\n            sprite = sprite.parent;\r\n        }\r\n        if ($type.hasValue(this.tooltipText) || $type.hasValue(this.tooltipHTML)) {\r\n            var tooltip = this.tooltip;\r\n            var tooltipDataItem = this.tooltipDataItem;\r\n            if (tooltip) {\r\n                tooltip.targetSprite = this;\r\n                var colorSource_1 = this;\r\n                var tooltipColorSource_1 = this.tooltipColorSource;\r\n                if ((tooltip.getStrokeFromObject || tooltip.getFillFromObject) && tooltipColorSource_1) {\r\n                    if (tooltipColorSource_1.isTemplate) {\r\n                        if (tooltipDataItem) {\r\n                            $array.eachContinue(tooltipDataItem.sprites, function (sprite) {\r\n                                if (sprite.clonedFrom == tooltipColorSource_1) {\r\n                                    colorSource_1 = sprite;\r\n                                    return false;\r\n                                }\r\n                                return true;\r\n                            });\r\n                        }\r\n                    }\r\n                    else {\r\n                        colorSource_1 = tooltipColorSource_1;\r\n                    }\r\n                }\r\n                if (tooltip.getStrokeFromObject) {\r\n                    var stroke = this.stroke;\r\n                    var source = colorSource_1;\r\n                    while (source.parent != undefined) {\r\n                        stroke = source.stroke;\r\n                        if (stroke == undefined) {\r\n                            source = source.parent;\r\n                        }\r\n                        if (stroke != undefined) {\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (stroke instanceof Color) {\r\n                        tooltip.background.animate({ property: \"stroke\", to: stroke }, tooltip.animationDuration);\r\n                    }\r\n                    else {\r\n                        tooltip.background.stroke = stroke;\r\n                    }\r\n                }\r\n                // Set data item\r\n                tooltip.dataItem = tooltipDataItem;\r\n                tooltip.label.populateStringFrom = this;\r\n                if (tooltip.getFillFromObject) {\r\n                    var fill = this.fill;\r\n                    var source = colorSource_1;\r\n                    while (source.parent != undefined) {\r\n                        fill = source.fill;\r\n                        if (fill == undefined || (fill instanceof Color && fill.rgb == undefined)) {\r\n                            source = source.parent;\r\n                        }\r\n                        else if (fill != undefined) {\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (fill == undefined) {\r\n                        fill = color(\"#000000\");\r\n                    }\r\n                    if (fill instanceof Color) {\r\n                        if (!tooltip.visible) {\r\n                            tooltip.background.fill = fill;\r\n                        }\r\n                        else {\r\n                            tooltip.background.animate({ property: \"fill\", to: fill }, tooltip.animationDuration);\r\n                        }\r\n                    }\r\n                    else {\r\n                        tooltip.background.fill = fill;\r\n                    }\r\n                    if (tooltip.autoTextColor && fill instanceof Color) {\r\n                        tooltip.label.fill = fill.alternative;\r\n                    }\r\n                }\r\n                // Apply tooltip text\r\n                var text = \"\";\r\n                if (this.tooltipHTML) {\r\n                    tooltip.html = this.tooltipHTML;\r\n                    text = this.tooltipHTML;\r\n                }\r\n                if (this.tooltipText) {\r\n                    tooltip.text = this.tooltipText;\r\n                    text = this.tooltipText;\r\n                }\r\n                if (this.updateTooltipPosition(point)) {\r\n                    // Set accessibility option\r\n                    tooltip.readerDescribedBy = this.uidAttr();\r\n                    // make label to render to be able to check currentText\r\n                    if (tooltip.label.invalid) {\r\n                        tooltip.label.validate();\r\n                    }\r\n                    if (text != undefined && text != \"\" && tooltip.label.currentText != \"\") {\r\n                        //@todo: think of how to solve this better\r\n                        if (tooltip && !tooltip.parent) {\r\n                            tooltip.parent = this.tooltipContainer;\r\n                        }\r\n                        // Reveal tooltip\r\n                        // showing it in 1 ms helps to avoid strange flickering in IE\r\n                        var duration = tooltip.defaultState.transitionDuration;\r\n                        if (duration <= 0) {\r\n                            duration = 1;\r\n                        }\r\n                        tooltip.show(duration);\r\n                        tooltip.currentSprite = this;\r\n                        return true;\r\n                    }\r\n                    else {\r\n                        this.hideTooltip(0);\r\n                    }\r\n                }\r\n                else {\r\n                    this.hideTooltip(0);\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    Sprite.prototype.updateTooltipPosition = function (point) {\r\n        var _this = this;\r\n        if (this.tooltipPosition == \"pointer\") {\r\n            if (this._interactionDisposer) {\r\n                this._interactionDisposer.dispose();\r\n            }\r\n            this._interactionDisposer = getInteraction().body.events.on(\"track\", function (ev) {\r\n                return _this.pointTooltipTo($utils.documentPointToSvg(ev.point, _this.svgContainer.SVGContainer, _this.svgContainer.cssScale), true);\r\n            });\r\n            if (point) {\r\n                return this.pointTooltipTo(point, true);\r\n            }\r\n        }\r\n        else {\r\n            // Point to the X/Y of this Sprite\r\n            var globalPoint = $utils.spritePointToSvg({\r\n                \"x\": this.getTooltipX(),\r\n                \"y\": this.getTooltipY()\r\n            }, this);\r\n            return this.pointTooltipTo(globalPoint);\r\n        }\r\n    };\r\n    /**\r\n     * Sets the point the [[Tooltip]] should point to.\r\n     *\r\n     * @param point      Coordinates to point to\r\n     * @param instantly  Move instantly without animation\r\n     */\r\n    Sprite.prototype.pointTooltipTo = function (point, instantly) {\r\n        var tooltip = this.tooltip;\r\n        if (tooltip && this.topParent) {\r\n            if (tooltip.showInViewport) {\r\n                tooltip.pointTo(point, instantly);\r\n                return true;\r\n            }\r\n            if ($math.isInRectangle(point, { x: 0, y: 0, width: this.topParent.maxWidth, height: this.topParent.maxHeight })) {\r\n                tooltip.pointTo(point, instantly);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Hides element's [[Tooltip]].\r\n     *\r\n     * @see {@link Tooltip}\r\n     */\r\n    Sprite.prototype.hideTooltip = function (duration) {\r\n        if (this.showTooltipOn == \"always\") {\r\n            return;\r\n        }\r\n        var tooltip = this.tooltip;\r\n        if (tooltip) {\r\n            if (tooltip.targetSprite == this) {\r\n                tooltip.targetSprite = undefined;\r\n            }\r\n            tooltip.hide(duration);\r\n            if (this._interactionDisposer) {\r\n                this._interactionDisposer.dispose();\r\n                this._interactionDisposer = undefined;\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(Sprite.prototype, \"tooltipHTML\", {\r\n        /**\r\n         * @return Tooltip HTML content template\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"tooltipHTML\");\r\n        },\r\n        /**\r\n         * An HTML template to be used to populate [[Tooltip]] contents.\r\n         *\r\n         * If element has `tooltipDataItem` or `dataItem` set, this will be parsed\r\n         * for any data values to be replaced with the values from respective data\r\n         * items.\r\n         *\r\n         * @param value Tooltip HTML content template\r\n         */\r\n        set: function (value) {\r\n            value = $type.toText(value);\r\n            this.hoverable = true;\r\n            if (this.setPropertyValue(\"tooltipHTML\", value)) {\r\n                if (this.tooltip) {\r\n                    if (this.tooltip.visible) {\r\n                        this.showTooltip();\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"tooltipText\", {\r\n        /**\r\n         * @return Tooltip content template\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"tooltipText\");\r\n        },\r\n        /**\r\n         * A text template to be used to populate Tooltip's contents.\r\n         *\r\n         * If element has `tooltipDataItem` or `dataItem` set, this will be parsed\r\n         * for any data values to be replaced with the values from respective data\r\n         * items.\r\n         *\r\n         * This template will also be parsed for any special formatting tags.\r\n         *\r\n         * @param value Tooltip content template\r\n         * @see {@link TextFormatter}\r\n         */\r\n        set: function (value) {\r\n            value = $type.toText(value);\r\n            if (value) {\r\n                this.hoverable = true;\r\n            }\r\n            if (this.setPropertyValue(\"tooltipText\", value)) {\r\n                if (this.tooltip) {\r\n                    if (this.tooltip.visible) {\r\n                        this.showTooltip();\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"tooltipContainer\", {\r\n        /**\r\n         * @ignore Exclude from docs\r\n         * @return Container\r\n         */\r\n        get: function () {\r\n            if (this._tooltipContainer) {\r\n                return this._tooltipContainer;\r\n            }\r\n            else if (this.parent) {\r\n                return this.parent.tooltipContainer;\r\n            }\r\n        },\r\n        /**\r\n         * A container reference that should be used to place element's\r\n         * [[Tooltip]] in.\r\n         *\r\n         * Will use parent's container if does not have one set.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @param value Container\r\n         * @todo Dispose of the old _tooltipContainer ?\r\n         */\r\n        set: function (value) {\r\n            this._tooltipContainer = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"tooltipX\", {\r\n        /**\r\n         * @return Tooltip X (px)\r\n         */\r\n        get: function () {\r\n            return this.getTooltipX();\r\n        },\r\n        /**\r\n         * X coordinate the [[Tooltip]] should be shown at.\r\n         *\r\n         * @param value  Tooltip X (px)\r\n         */\r\n        set: function (value) {\r\n            if (this.setPercentProperty(\"tooltipX\", value) && this.tooltip) {\r\n                this.tooltip.invalidate();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"alwaysShowTooltip\", {\r\n        /**\r\n         * @return Always show tooltip?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"showTooltipOn\") == \"always\";\r\n        },\r\n        /**\r\n         * DEPRECATION NOTICE: This setting is deprecated in favor of a more flexible\r\n         * setting: `showTooltipOn`. Please use `showTooltipOn = \"always\"` instead.\r\n         *\r\n         * Indicates if this element should display a tooltip permanently.\r\n         *\r\n         * Useful, if you want to show permanent tooltips on some items.\r\n         *\r\n         * @default false\r\n         * @since 4.5.4\r\n         * @deprecated Use `showTooltipOn = \"always\"` instead\r\n         * @param  value  Always show tooltip?\r\n         */\r\n        set: function (value) {\r\n            value = $type.toBoolean(value);\r\n            if (value) {\r\n                this.showTooltipOn = \"always\";\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"showTooltipOn\", {\r\n        /**\r\n         * @return When to show tooltip\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"showTooltipOn\");\r\n        },\r\n        /**\r\n         * Indicates when tooltip needs to be shown on this element:\r\n         *\r\n         * * `\"hover\"` (default) - Tooltip will be shown when element is hovered on.\r\n         * * `\"hit\"` - Tooltip will be shown when element is clicked/tapped. Tooltip will be hidden when clicked/tapped anywhere else.\r\n         * * `\"always\"` - Tooltip will be shown on the element permanently.\r\n         *\r\n         * For example, if you would like to show tooltips on all of the columns of\r\n         * a [[ColumnSeries]]:\r\n         *\r\n         * ```TypeScript\r\n         * series.columns.template.showTooltipOn = \"always\";\r\n         * ```\r\n         * ```JavaScript\r\n         * series.columns.template.showTooltipOn = \"always\";\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // ...\r\n         *   \"series\": [{\r\n         *     // ...\r\n         *     \"columns\": {\r\n         *       \"showTooltipOn\": \"always\"\r\n         *     }\r\n         *   }]\r\n         * }\r\n         * ```\r\n         *\r\n         * It can even be set to display on a selected columns via `propertyFields`:\r\n         *\r\n         * ```TypeScript\r\n         * series.columns.template.propertyFields.showTooltipOn = \"tooltip\";\r\n         * ```\r\n         * ```JavaScript\r\n         * series.columns.template.propertyFields.showTooltipOn = \"tooltip\";\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // ...\r\n         *   \"series\": [{\r\n         *     // ...\r\n         *     \"columns\": {\r\n         *       \"propertyFields\": {\r\n         *         \"showTooltipOn\": \"tooltip\"\r\n         *       }\r\n         *     }\r\n         *   }]\r\n         * }\r\n         * ```\r\n         *\r\n         * @default \"hover\"\r\n         * @since 4.7.9\r\n         * @param  value  When to show tooltip\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"showTooltipOn\", value)) {\r\n                if (value == \"hit\") {\r\n                    this.clickable = true;\r\n                }\r\n                if (this.tooltip) {\r\n                    if (value == \"always\") {\r\n                        this.showTooltip();\r\n                    }\r\n                    else {\r\n                        this.handleAlwaysShowTooltip();\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"tooltipPosition\", {\r\n        /**\r\n         * Position\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"tooltipPosition\");\r\n        },\r\n        /**\r\n         * Specifies if [[Tooltip]] should follow the mouse or touch pointer or stay\r\n         * at the fixed position.\r\n         *\r\n         * @param value  Position\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"tooltipPosition\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"tooltipY\", {\r\n        /**\r\n         * @return Tooltip Y (px)\r\n         */\r\n        get: function () {\r\n            return this.getTooltipY();\r\n        },\r\n        /**\r\n         * Y coordinate the [[Tooltip]] should be shown at.\r\n         *\r\n         * @param value  Tooltip Y (px)\r\n         */\r\n        set: function (value) {\r\n            if (this.setPercentProperty(\"tooltipY\", value) && this.tooltip) {\r\n                this.tooltip.invalidate();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns Tooltip X coordinate if it's set, or middle of the element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return X (px)\r\n     */\r\n    Sprite.prototype.getTooltipX = function () {\r\n        var x = this.getPropertyValue(\"tooltipX\");\r\n        if (!$type.hasValue(x)) {\r\n            x = percent(50);\r\n        }\r\n        var value;\r\n        if ($type.isNumber(x)) {\r\n            value = x;\r\n        }\r\n        if (x instanceof Percent) {\r\n            value = this.maxLeftSelf + this._measuredWidthSelf * x.value - this.pixelPaddingLeft - this.ex; // overflow is know only for measured items, so this is not always good\r\n        }\r\n        if (!$type.isNumber(value)) {\r\n            value = 0;\r\n        }\r\n        return value;\r\n    };\r\n    /**\r\n     * Returns Tooltip Y coordinate if it's set, or middle of the element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Y (px)\r\n     */\r\n    Sprite.prototype.getTooltipY = function () {\r\n        var y = this.getPropertyValue(\"tooltipY\");\r\n        if (!$type.hasValue(y)) {\r\n            y = percent(50);\r\n        }\r\n        var value;\r\n        if ($type.isNumber(y)) {\r\n            value = y;\r\n        }\r\n        if (y instanceof Percent) {\r\n            value = this.maxTopSelf + this._measuredHeightSelf * y.value - this.pixelPaddingTop - this.ey; // overflow is know only for measured items, so this is not always good\r\n        }\r\n        if (!$type.isNumber(value)) {\r\n            value = 0;\r\n        }\r\n        return value;\r\n    };\r\n    /**\r\n     * Displays a modal or console message with error, and halts any further\r\n     * processing of this item.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param e Error\r\n     * @todo Implement from applying further actions to this item\r\n     */\r\n    Sprite.prototype.raiseCriticalError = function (e) {\r\n        if (this.svgContainer) {\r\n            if (!this._adapterO) {\r\n                this.modal.content = e.message;\r\n            }\r\n            else {\r\n                this.modal.content = this._adapterO.apply(\"criticalError\", e).message;\r\n            }\r\n            this.modal.closable = false;\r\n            this.modal.open();\r\n            this.disabled = true;\r\n        }\r\n        if (options.verbose) {\r\n            console.log(e);\r\n        }\r\n    };\r\n    /**\r\n * Processes JSON-based config before it is applied to the object.\r\n *\r\n * @ignore Exclude from docs\r\n * @param config  Config\r\n */\r\n    Sprite.prototype.processConfig = function (config) {\r\n        if (config) {\r\n            // Tooltip color source\r\n            if ($type.hasValue(config.tooltipColorSource) && $type.isString(config.tooltipColorSource) && this.map.hasKey(config.tooltipColorSource)) {\r\n                config.tooltipColorSource = this.map.getKey(config.tooltipColorSource);\r\n            }\r\n            // Cursor styles\r\n            if ($type.hasValue(config.cursorOverStyle) && $type.isString(config.cursorOverStyle)) {\r\n                config.cursorOverStyle = this.getCursorStyle(config.cursorOverStyle);\r\n            }\r\n            if ($type.hasValue(config.cursorDowntyle) && $type.isString(config.cursorDowntyle)) {\r\n                config.cursorDowntyle = this.getCursorStyle(config.cursorDowntyle);\r\n            }\r\n            if ($type.hasValue(config.cursorOptions)) {\r\n                if ($type.hasValue(config.cursorOptions.overStyle) && $type.isString(config.cursorOptions.overStyle)) {\r\n                    config.cursorOptions.overStyle = this.getCursorStyle(config.cursorOptions.overStyle);\r\n                }\r\n                if ($type.hasValue(config.cursorOptions.downStyle) && $type.isString(config.cursorOptions.downStyle)) {\r\n                    config.cursorOptions.downStyle = this.getCursorStyle(config.cursorOptions.downStyle);\r\n                }\r\n            }\r\n        }\r\n        _super.prototype.processConfig.call(this, config);\r\n        this.processDelayedMap();\r\n    };\r\n    /**\r\n     * Converts string name of the cursor into actual [[MouseCursorStyle]].\r\n     *\r\n     * @param style  Cursor type\r\n     * @return Cursor definition\r\n     */\r\n    Sprite.prototype.getCursorStyle = function (style) {\r\n        switch (style) {\r\n            case \"grab\":\r\n                return MouseCursorStyle.grab;\r\n            case \"grabbing\":\r\n                return MouseCursorStyle.grabbing;\r\n            case \"pointer\":\r\n                return MouseCursorStyle.pointer;\r\n            case \"horizontalResize\":\r\n                return MouseCursorStyle.horizontalResize;\r\n            case \"verticalResize\":\r\n                return MouseCursorStyle.verticalResize;\r\n            default:\r\n                return MouseCursorStyle.default;\r\n        }\r\n    };\r\n    /**\r\n     * This function is used to sort element's JSON config properties, so that\r\n     * some properties that absolutely need to be processed last, can be put at\r\n     * the end.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param a  Element 1\r\n     * @param b  Element 2\r\n     * @return Sorting number\r\n     */\r\n    Sprite.prototype.configOrder = function (a, b) {\r\n        if (a == b) {\r\n            return 0;\r\n        }\r\n        // Must come last\r\n        else if (a == \"tooltipColorSource\") {\r\n            return 1;\r\n        }\r\n        else if (b == \"tooltipColorSource\") {\r\n            return -1;\r\n        }\r\n        else {\r\n            return _super.prototype.configOrder.call(this, a, b);\r\n        }\r\n    };\r\n    Object.defineProperty(Sprite.prototype, \"isHidden\", {\r\n        /**\r\n         * If `sprite.hide()` is called, we set isHidden to true when sprite is hidden.\r\n         * This was added becaus hidden state might have visibility set to true and so\r\n         * there would not be possible to find out if a sprite is technically hidden or not.\r\n         */\r\n        get: function () {\r\n            if (this._isHidden) {\r\n                return this._isHidden;\r\n            }\r\n            else if (this._parent) {\r\n                return this._parent.isHidden;\r\n            }\r\n            return false;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"showOnInit\", {\r\n        /**\r\n         * @return Show on init?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"showOnInit\");\r\n        },\r\n        /**\r\n         * If this is set to `true`, Sprite, when inited will be instantly hidden\r\n         * (\"hidden\" state applied) and then shown (\"default\" state applied).\r\n         *\r\n         * If your \"default\" state's `transitionDuration > 0` this will result in\r\n         * initial animation from \"hidden\" state to \"default\" state.\r\n         *\r\n         * If you need a Sprite which has `showOnInit = true` not to be shown\r\n         * initially, set `sprite.hidden = true`. Setting `sprite.visible = false`\r\n         * will not prevent the animation and the sprite will be shown.\r\n         *\r\n         * @param value show on init?\r\n         */\r\n        set: function (value) {\r\n            value = $type.toBoolean(value);\r\n            this.setShowOnInit(value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Sprite.prototype.setShowOnInit = function (value) {\r\n        if (this.setPropertyValue(\"showOnInit\", value)) {\r\n            if (!this.isTemplate) {\r\n                if (value && !this.inited && !this.hidden) {\r\n                    this._showOnInitDisposer = new MultiDisposer([\r\n                        registry.events.once(\"enterframe\", this.hideInitially, this),\r\n                        this.events.once(\"beforevalidated\", this.hideInitially, this, false),\r\n                        this.events.on(\"inited\", this.appear, this, false)\r\n                    ]);\r\n                    this._disposers.push(this._showOnInitDisposer);\r\n                }\r\n                else {\r\n                    if (this._showOnInitDisposer) {\r\n                        this._showOnInitDisposer.dispose();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    Sprite.prototype.hideInitially = function () {\r\n        if (!this.isDisposed()) {\r\n            this.appeared = false;\r\n            //if (!this.hidden && !this._isHidden) { // not good for series, as on enterframe it doesn't have data items yet.\r\n            if (!this.inited) {\r\n                this.hide(0);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Hides the chart instantly and then shows it. If defaultState.transitionDuration > 0, this will result an animation in which properties of hidden state will animate to properties of visible state.\r\n     */\r\n    Sprite.prototype.appear = function () {\r\n        var _this = this;\r\n        this.appeared = false;\r\n        if (!this.hidden && !this.isHidden) {\r\n            this.hide(0);\r\n        }\r\n        if (!this.hidden) {\r\n            var animation = this.show();\r\n            if (animation && !animation.isFinished()) {\r\n                animation.events.on(\"animationended\", function () {\r\n                    _this.appeared = true;\r\n                    _this.dispatch(\"appeared\");\r\n                });\r\n            }\r\n            else {\r\n                this.appeared = true;\r\n                this.dispatch(\"appeared\");\r\n            }\r\n        }\r\n        else {\r\n            this.appeared = true;\r\n            this.dispatch(\"appeared\");\r\n        }\r\n    };\r\n    Object.defineProperty(Sprite.prototype, \"hidden\", {\r\n        /**\r\n         * @return Is initially hidden?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"hidden\");\r\n        },\r\n        /**\r\n         * If a sprite has `showOnInit = true`, it will animate from \"hidden\" to\r\n         * \"default\" state when initialized. To prevent this but keep\r\n         * `showOnInit = true`, you can set `sprite.hidden = true`.\r\n         *\r\n         * @param value initially hidden?\r\n         */\r\n        set: function (value) {\r\n            value = $type.toBoolean(value);\r\n            this.setPropertyValue(\"hidden\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"bbox\", {\r\n        /**\r\n         * Returns bounding box (square) for this element.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        get: function () {\r\n            if (this.definedBBox) {\r\n                return this.definedBBox;\r\n            }\r\n            return this._bbox;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Sprite.prototype, \"plugins\", {\r\n        /**\r\n         * A list of plugins (objects that implement [[IPlugin]] interface) attached\r\n         * to this object.\r\n         *\r\n         * @since 4.2.2\r\n         * @return List of plugins\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            if (!this._plugins) {\r\n                this._plugins = new List();\r\n                this._disposers.push(this._plugins.events.on(\"inserted\", function (ev) {\r\n                    ev.newValue.target = _this;\r\n                    ev.newValue.init();\r\n                }));\r\n                this._disposers.push(new ListDisposer(this._plugins));\r\n            }\r\n            return this._plugins;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Called during the System.update method\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Sprite.prototype._systemUpdate = function (skippedSprites) {\r\n        this.validate();\r\n    };\r\n    /**\r\n     * Called during the System.update method\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Sprite.prototype._systemCheckIfValidate = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * Called during the System.validatePositions method\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Sprite.prototype._systemValidatePositions = function () {\r\n        this.validatePosition();\r\n    };\r\n    /**\r\n     * Called during the System.validateLayouts method\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Sprite.prototype._systemValidateLayouts = function () {\r\n    };\r\n    return Sprite;\r\n}(BaseObjectEvents));\r\nexport { Sprite };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Sprite\"] = Sprite;\r\n//# sourceMappingURL=Sprite.js.map","/**\r\n * Container module\r\n * @todo Needs description\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite } from \"./Sprite\";\r\nimport { SpriteState } from \"./SpriteState\";\r\nimport { List } from \"./utils/List\";\r\nimport { MultiDisposer } from \"./utils/Disposer\";\r\nimport { Dictionary, DictionaryDisposer } from \"./utils/Dictionary\";\r\nimport { getInteraction } from \"./interaction/Interaction\";\r\nimport { Rectangle } from \"./elements/Rectangle\";\r\nimport { Percent } from \"./utils/Percent\";\r\nimport { registry } from \"./Registry\";\r\nimport { InterfaceColorSet } from \"../core/utils/InterfaceColorSet\";\r\nimport * as $iter from \"./utils/Iterator\";\r\nimport * as $array from \"./utils/Array\";\r\nimport * as $math from \"./utils/Math\";\r\nimport * as $type from \"./utils/Type\";\r\nimport { system } from \"./System\";\r\nimport { options } from \"./Options\";\r\n;\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Container can contain multiple sprites and arrange them in various layouts.\r\n *\r\n * @see {@link IContainerEvents} for a list of available events\r\n * @see {@link IContainerAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nvar Container = /** @class */ (function (_super) {\r\n    __extends(Container, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Container() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        /**\r\n         * Container children. (sorted by layout)\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        _this._childrenByLayout = [];\r\n        /**\r\n         * Container's disposers for its child elements.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        _this._childrenDisposers = new Dictionary();\r\n        /**\r\n         * Indicates if this container contains any focused elements, including\r\n         * itself.\r\n         */\r\n        _this.hasFocused = false;\r\n        /**\r\n         * An array of references to elements the state should be set, when it is set\r\n         * on this element.\r\n         */\r\n        _this.setStateOnSprites = [];\r\n        /*\r\n         * @ignore\r\n         */\r\n        _this.layoutInvalid = false;\r\n        _this._absoluteWidth = 0;\r\n        _this._absoluteHeight = 0;\r\n        /**\r\n         * An array of child Sprites that should be ready before this object can\r\n         * fire a \"ready\" event.\r\n         */\r\n        _this._shouldBeReady = [];\r\n        /**\r\n         * Enables touch tap protection.\r\n         */\r\n        _this._tapToActivate = false;\r\n        /**\r\n         * If `tapToActivate` is used, this setting will determine how long the chart\r\n         * will stay in \"active\" mode.\r\n         *\r\n         * @default 3000\r\n         * @since 4.4.0\r\n         */\r\n        _this.tapTimeout = 3000;\r\n        _this.className = \"Container\";\r\n        _this._element = _this.paper.addGroup(\"g\");\r\n        _this.group.add(_this.element);\r\n        _this.setPropertyValue(\"pixelPerfect\", false);\r\n        _this.setPropertyValue(\"layout\", \"absolute\");\r\n        _this.setPropertyValue(\"fixedWidthGrid\", false);\r\n        _this.setPropertyValue(\"verticalCenter\", \"none\");\r\n        _this.setPropertyValue(\"horizontalCenter\", \"none\");\r\n        _this._positionPrecision = 4;\r\n        _this._disposers.push(new DictionaryDisposer(_this._childrenDisposers));\r\n        _this.children.events.on(\"inserted\", _this.handleChildAdded, _this);\r\n        _this.children.events.on(\"removed\", _this.handleChildRemoved, _this);\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Handles adding of a new child into `children`. Adding new children might\r\n     * affect the whole layout so it needs to be revalidated.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param event Event object\r\n     * @todo Throw an exception on adding a disposed object. Of course it's better NOT TO add disposed objects, so that what we should focus on.\r\n     */\r\n    Container.prototype.handleChildAdded = function (event) {\r\n        this.processChild(event.newValue);\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    Container.prototype.processChild = function (child) {\r\n        // try solves the problem when somedy adds child directly to children\r\n        try {\r\n            this._childrenDisposers.insertKey(child.uid, new MultiDisposer([\r\n                // it's not enough to listen to POSITION_CHANGED only, as some extra redrawals will happen.\r\n                child.events.on(\"transformed\", this.handleChildTransform, this),\r\n                child.events.on(\"zIndexChanged\", this.sortAndAdd, this)\r\n            ]));\r\n        }\r\n        catch (err) {\r\n            // void\r\n        }\r\n        if (this.element) {\r\n            var group = this.element;\r\n            group.add(child.group);\r\n        }\r\n        child.parent = this;\r\n        child.paper = this.paper;\r\n        this.dispatchImmediately(\"childadded\", { type: \"childadded\", newValue: child });\r\n        this.invalidate();\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    Container.prototype.sortAndAdd = function () {\r\n        this.sortChildren();\r\n        this.addChildren();\r\n    };\r\n    /**\r\n     * Handles child removal. Changing size of the child may change the\r\n     * whole layout of the Container, hence layout needs to be invalidated.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param event Event object\r\n     */\r\n    Container.prototype.handleChildRemoved = function (event) {\r\n        var child = event.oldValue;\r\n        // TODO figure out why the key sometimes doesn't exist\r\n        this._childrenDisposers.removeKey(child.uid);\r\n        if (this.element) {\r\n            var group = this.element;\r\n            group.removeElement(child.group);\r\n        }\r\n        if (child.isMeasured) {\r\n            this.invalidateLayout();\r\n        }\r\n        this.dispatchImmediately(\"childremoved\", { type: \"childremoved\", oldValue: child });\r\n    };\r\n    /**\r\n     * Handles child transformation. Changing size of the child may change the\r\n     * whole layout of the Container, hence layout needs to be invalidated.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param event Event object\r\n     */\r\n    Container.prototype.handleChildTransform = function (event) {\r\n        var child = event.target;\r\n        if (child.isMeasured) { // && this.layout != \"none\" && this.layout != \"absolute\") {\r\n            this.invalidateLayout();\r\n        }\r\n    };\r\n    /**\r\n     * Invalidates Container's layout, causing it to be re-evaluated again.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Container.prototype.invalidateLayout = function () {\r\n        if (this.layoutInvalid || this.disabled || this.isTemplate || this.layout == \"none\" || this.__disabled) {\r\n            return;\r\n        }\r\n        this.layoutInvalid = true;\r\n        registry.addToInvalidLayouts(this);\r\n        system.requestFrame();\r\n    };\r\n    /**\r\n     * Invalidates element.\r\n     *\r\n     * Object will be redrawn during the next update cycle.\r\n     *\r\n     * Please note that in most cases elements will auto-invalidate when needed. If\r\n     * everything works, DO NOT use this method. Use it only if some changes do\r\n     * not take otherwise.\r\n     */\r\n    Container.prototype.invalidate = function () {\r\n        _super.prototype.invalidate.call(this);\r\n        this.invalidateLayout();\r\n    };\r\n    /**\r\n     * Invalidates the whole element, including layout AND all its child\r\n     * elements.\r\n     *\r\n     * As this will essentially force all elements to redraw, use only if\r\n     * absolutely necessary.\r\n     */\r\n    Container.prototype.deepInvalidate = function () {\r\n        _super.prototype.invalidate.call(this);\r\n        //this.sortChildren();\r\n        $array.each(this._childrenByLayout, function (child) {\r\n            if (child instanceof Container) {\r\n                child.deepInvalidate();\r\n            }\r\n            else {\r\n                child.invalidate();\r\n            }\r\n        });\r\n        this.invalidateLayout();\r\n    };\r\n    Object.defineProperty(Container.prototype, \"children\", {\r\n        /**\r\n         * Returns a list of the child [[Sprite]] elements contained in this\r\n         * Container.\r\n         *\r\n         * @return List of child elements (Sprites)\r\n         */\r\n        get: function () {\r\n            // @todo Review if we can add all children to disposers\r\n            if (!this._children) {\r\n                this._children = new List();\r\n                //this._disposers.push(new ListDisposer(this._children));\r\n            }\r\n            return this._children;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Container.prototype, \"minWidth\", {\r\n        /**\r\n         * @return Width (px)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"minWidth\");\r\n        },\r\n        /**\r\n         * Minimum width (px) for the Container. A container will not\r\n         * auto-shrink beyond this value, even if child elements are smaller.\r\n         *\r\n         * @param value  Width (px)\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"minWidth\", value)) {\r\n                this.invalidateLayout();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Container.prototype, \"minHeight\", {\r\n        /**\r\n         * @return Height (px)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"minHeight\");\r\n        },\r\n        /**\r\n         * Minimum height (px) for the Container. A container will not\r\n         * auto-shrink beyond this value, even if child elements are smaller.\r\n         *\r\n         * @param value  Height (px)\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"minHeight\", value)) {\r\n                this.invalidateLayout();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Overrides the original `removeElement` so that Container's actual element\r\n     * is not removed. We do not need to remove element of a Container.\r\n     *\r\n     * We do this because remove element each time will fail the `getBBox`.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Container.prototype.removeElement = function () {\r\n    };\r\n    /**\r\n     * Sorts Container's children: the ones with variable width and height are\r\n     * put at the end of the list (depending on layout type), so that fixed-width\r\n     * ones can be drawn first.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Container.prototype.sortChildren = function () {\r\n        var _this = this;\r\n        this._childrenByLayout = [];\r\n        if (this.layout == \"none\" || this.layout == \"absolute\" || !this.layout) {\r\n            //$iter.each(this.children.iterator(), (child) => {\r\n            //\tthis._childrenByLayout.push(child);\r\n            //});\r\n            this._childrenByLayout = this.children.values;\r\n        }\r\n        else {\r\n            // Assemble fixed-size and relative lists\r\n            var fixed_1 = [];\r\n            var relative_1 = [];\r\n            $iter.each(this.children.iterator(), function (child) {\r\n                if (_this.layout == \"horizontal\" || _this.layout == \"grid\") {\r\n                    if (!$type.isNumber(child.percentWidth)) {\r\n                        fixed_1.push(child);\r\n                    }\r\n                    else {\r\n                        relative_1.push(child);\r\n                    }\r\n                }\r\n                else if (_this.layout == \"vertical\") {\r\n                    if (!$type.isNumber(child.percentHeight)) {\r\n                        fixed_1.push(child);\r\n                    }\r\n                    else {\r\n                        relative_1.push(child);\r\n                    }\r\n                }\r\n                else {\r\n                    fixed_1.push(child);\r\n                }\r\n            });\r\n            // Concat everything into list\r\n            this._childrenByLayout = fixed_1.concat(relative_1);\r\n        }\r\n        this.calculateRelativeSize();\r\n    };\r\n    /**\r\n     * Calculates relative sizes for all Container's children.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Make it protected?\r\n     */\r\n    Container.prototype.calculateRelativeSize = function () {\r\n        var _this = this;\r\n        var totalRelativeWidth = 0;\r\n        var totalRelativeHeight = 0;\r\n        $array.each(this._childrenByLayout, function (child) {\r\n            // if child is not measured, we do not care about it at all.\r\n            if (child.isMeasured) {\r\n                if ($type.isNumber(child.percentWidth)) {\r\n                    totalRelativeWidth += child.percentWidth;\r\n                }\r\n                if ($type.isNumber(child.percentHeight)) {\r\n                    totalRelativeHeight += child.percentHeight;\r\n                }\r\n            }\r\n        });\r\n        $array.each(this._childrenByLayout, function (child) {\r\n            if (child.isMeasured) {\r\n                if (_this.layout == \"horizontal\") {\r\n                    if ($type.isNumber(child.percentWidth)) {\r\n                        child.relativeWidth = child.percentWidth / totalRelativeWidth;\r\n                    }\r\n                    if ($type.isNumber(child.percentHeight)) {\r\n                        child.relativeHeight = child.percentHeight / 100;\r\n                    }\r\n                }\r\n                if (_this.layout == \"vertical\") {\r\n                    if ($type.isNumber(child.percentHeight)) {\r\n                        child.relativeHeight = child.percentHeight / totalRelativeHeight;\r\n                    }\r\n                    if ($type.isNumber(child.percentWidth)) {\r\n                        child.relativeWidth = child.percentWidth / 100;\r\n                    }\r\n                }\r\n                if (_this.layout == \"grid\") {\r\n                    if ($type.isNumber(child.percentHeight)) {\r\n                        child.relativeHeight = child.percentHeight / 100;\r\n                    }\r\n                    if ($type.isNumber(child.percentWidth)) {\r\n                        child.relativeWidth = child.percentWidth / 100;\r\n                    }\r\n                }\r\n            }\r\n            if (_this.layout == \"absolute\" || !child.isMeasured) {\r\n                if ($type.isNumber(child.percentWidth)) {\r\n                    child.relativeWidth = child.percentWidth / 100;\r\n                }\r\n                if ($type.isNumber(child.percentHeight)) {\r\n                    child.relativeHeight = child.percentHeight / 100;\r\n                }\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Adds all children to Container's SVG element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Container.prototype.addChildren = function () {\r\n        /*\r\n          Need this check because a child might be assigned to parent even before element is created, for example a theme\r\n          access scrollbar.thumb\r\n        */\r\n        if (this.element) {\r\n            var zindexed = $array.copy(this.children.values); // not children by layout!\r\n            var sortArray = zindexed.map(function (data, idx) {\r\n                return { idx: idx, data: data };\r\n            });\r\n            sortArray.sort(function (a, b) {\r\n                var ai = (a.data.zIndex || 0);\r\n                var bi = (b.data.zIndex || 0);\r\n                if (ai < bi) {\r\n                    return -1;\r\n                }\r\n                if (ai > bi) {\r\n                    return 1;\r\n                }\r\n                return a.idx - b.idx;\r\n            });\r\n            zindexed = sortArray.map(function (val) {\r\n                return val.data;\r\n            });\r\n            var group_1 = this.element;\r\n            // check, maybe the order is good already\r\n            var isCorrect = true;\r\n            if (group_1.node && group_1.node.childNodes) {\r\n                for (var i = 0, len = group_1.node.childNodes.length; i < len; i++) {\r\n                    if (group_1.node.childNodes[i] != zindexed[i].group.node) {\r\n                        isCorrect = false;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (!isCorrect) {\r\n                $array.each(zindexed, function (child) {\r\n                    if (child.group) {\r\n                        group_1.add(child.group);\r\n                    }\r\n                });\r\n                if (this._background) {\r\n                    this.group.addToBack(this._background.group);\r\n                }\r\n                this.invalidateLayout();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Creates a new element of specific type and assigns as a child to the\r\n     * Container.\r\n     *\r\n     * @param Class type for the new element\r\n     * @return New element\r\n     */\r\n    Container.prototype.createChild = function (classType) {\r\n        var sprite = new classType();\r\n        sprite.parent = this;\r\n        return sprite;\r\n    };\r\n    /**\r\n     * Removes all Container's children without actually destroying them.\r\n     *\r\n     * To destroy children use `disposeChildren()` instead.\r\n     */\r\n    Container.prototype.removeChildren = function () {\r\n        // remove all children\r\n        // TODO use iteration instead\r\n        while (this.children.length > 0) {\r\n            var child = this.children.getIndex(0);\r\n            child.parent = undefined;\r\n            this.children.removeValue(child);\r\n        }\r\n    };\r\n    /**\r\n     * Removes and destroys all Container's children.\r\n     *\r\n     * To remove children from Container without destroying them, use\r\n     * `removeChildren()`.\r\n     */\r\n    Container.prototype.disposeChildren = function () {\r\n        // TODO use iteration instead\r\n        while (this.children.length > 0) {\r\n            var child = this.children.getIndex(0);\r\n            child.dispose();\r\n            this.children.removeValue(child);\r\n        }\r\n    };\r\n    Object.defineProperty(Container.prototype, \"background\", {\r\n        /**\r\n         * @return Background element\r\n         */\r\n        get: function () {\r\n            if (!this._background) {\r\n                this._background = this.createBackground();\r\n                this.processBackground();\r\n            }\r\n            return this._background;\r\n        },\r\n        /**\r\n         * An element to use as container background.\r\n         *\r\n         * @param background  Background element\r\n         */\r\n        set: function (background) {\r\n            if (this._background && this.background != background) {\r\n                this.removeDispose(this._background);\r\n            }\r\n            if (background) {\r\n                this._background = background;\r\n                this._disposers.push(background);\r\n                this.processBackground();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Handles the situation where parent element is resized.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Container.prototype.handleGlobalScale = function () {\r\n        _super.prototype.handleGlobalScale.call(this);\r\n        this.children.each(function (child) {\r\n            child.handleGlobalScale();\r\n        });\r\n    };\r\n    /**\r\n     * Creates and returns a [[Rectangle]] to use as a background for Container.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Background Rectangle element\r\n     */\r\n    Container.prototype.createBackground = function () {\r\n        return new Rectangle();\r\n    };\r\n    /**\r\n     * Decorates background element with required properties.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Container.prototype.processBackground = function () {\r\n        var background = this._background;\r\n        if (background) {\r\n            background.isMeasured = false;\r\n            this._background.fill = new InterfaceColorSet().getFor(\"background\");\r\n            background.parent = this;\r\n            background.isMeasured = false;\r\n            this.children.removeValue(background);\r\n            this._disposers.push(background);\r\n            this.group.addToBack(this._background.group);\r\n        }\r\n    };\r\n    /**\r\n     * Measures the size of container and informs its children of how much size\r\n     * they can occupy, by setting their relative `maxWidth` and `maxHeight`\r\n     * properties.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Container.prototype.validateLayout = function () {\r\n        var _this = this;\r\n        registry.removeFromInvalidLayouts(this);\r\n        this.layoutInvalid = false;\r\n        // prevents from drawing if topparent is 0x0\r\n        /*\r\n        let topParent = this.topParent;\r\n        if (topParent) {\r\n            if (!topParent.maxWidth || !topParent.maxHeight) {\r\n                this._disposers.push(topParent.events.once(\"maxsizechanged\", this.invalidateLayout, this));\r\n            }\r\n        }*/\r\n        this._availableWidth = this.innerWidth;\r\n        this._availableHeight = this.innerHeight;\r\n        var measuredWidth = 0;\r\n        var measuredHeight = 0;\r\n        var allValid = true;\r\n        if (this.children) {\r\n            this.sortChildren();\r\n            // we itterate through list of children, sorted by layout priority. sprites which width non-relative width/height will go first, so we will reduce available width before proceeding to sprites with relative width/height\r\n            $array.each(this._childrenByLayout, function (child) {\r\n                var maxWidth;\r\n                var maxHeight;\r\n                if ($type.isNumber(child.relativeWidth)) {\r\n                    maxWidth = $math.round(_this._availableWidth * child.relativeWidth, 2);\r\n                    if (_this.layout == \"horizontal\") { // || this.layout == \"absolute\") {\r\n                        maxWidth -= child.pixelMarginRight + child.pixelMarginLeft;\r\n                    }\r\n                }\r\n                else {\r\n                    if (_this.layout == \"horizontal\") {\r\n                        if (child.invalid) {\r\n                            child.validate();\r\n                        }\r\n                    }\r\n                }\r\n                if ($type.isNumber(child.relativeHeight)) {\r\n                    maxHeight = $math.round(_this._availableHeight * child.relativeHeight, 2);\r\n                    if (_this.layout == \"vertical\") { //  || this.layout == \"absolute\") {\r\n                        maxHeight -= child.pixelMarginTop + child.pixelMarginBottom;\r\n                    }\r\n                }\r\n                else {\r\n                    if (_this.layout == \"vertical\") {\r\n                        if (child.invalid) {\r\n                            child.validate();\r\n                        }\r\n                    }\r\n                }\r\n                // if child is valid\r\n                if (child.invalid == false) {\r\n                    if ($type.isNumber(child.relativeWidth)) {\r\n                        child.maxWidth = maxWidth;\r\n                    }\r\n                    if ($type.isNumber(child.relativeHeight)) {\r\n                        child.maxHeight = maxHeight;\r\n                    }\r\n                    if (child.isMeasured) {\r\n                        // reduce available width if this is horizontal layout\r\n                        if (_this.layout == \"horizontal\") {\r\n                            if (!$type.isNumber(child.percentWidth)) {\r\n                                if (child.measuredWidth > 0) {\r\n                                    _this._availableWidth -= child.measuredWidth + child.pixelMarginLeft + child.pixelMarginRight;\r\n                                }\r\n                            }\r\n                        }\r\n                        // reduce available height if this is vertical layout\r\n                        if (_this.layout == \"vertical\") {\r\n                            if (!$type.isNumber(child.percentHeight)) {\r\n                                if (child.measuredHeight > 0) {\r\n                                    _this._availableHeight -= child.measuredHeight + child.pixelMarginTop + child.pixelMarginBottom;\r\n                                }\r\n                            }\r\n                        }\r\n                        var childMeasuredWidth = child.measuredWidth;\r\n                        var childMeasuredHeight = child.measuredHeight;\r\n                        if (child.align != \"none\") {\r\n                            childMeasuredWidth += child.pixelMarginLeft + child.pixelMarginRight;\r\n                        }\r\n                        if (child.valign != \"none\") {\r\n                            childMeasuredHeight += child.pixelMarginTop + child.pixelMarginBottom;\r\n                        }\r\n                        measuredWidth = Math.max(measuredWidth, childMeasuredWidth);\r\n                        measuredHeight = Math.max(measuredHeight, childMeasuredHeight);\r\n                    }\r\n                }\r\n                // if child is not valid\r\n                else {\r\n                    // tell child what maximum width/ height it can occupy\r\n                    if (child.isMeasured) {\r\n                        if ($type.isNumber(child.relativeWidth)) {\r\n                            if (child.maxWidth != maxWidth) { // need to check this because of allValid\r\n                                child.maxWidth = maxWidth;\r\n                                allValid = false;\r\n                            }\r\n                        }\r\n                        if ($type.isNumber(child.relativeHeight)) {\r\n                            if (child.maxHeight != maxHeight) { // need to check this because of allValid\r\n                                child.maxHeight = maxHeight;\r\n                                allValid = false;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        this._absoluteWidth = measuredWidth;\r\n        this._absoluteHeight = measuredHeight;\r\n        // arrange after measuring, only if all children are valid already\r\n        if (allValid) {\r\n            this.arrange();\r\n        }\r\n    };\r\n    /**\r\n     * Arranges children according to layout specs and available space / child\r\n     * sizes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Container.prototype.arrange = function () {\r\n        var _this = this;\r\n        var children = this.children;\r\n        /*\r\n           in this method we not only arrange children but also find out the size of the container\r\n           it might seem it would be easier to get container size using sprite's measure method,\r\n           however it would return only actual size of the bbox. However as each child meight have\r\n           margins set, we need to check each child - we do it here.\r\n\r\n           This method doesn't do anything with DOM, so it's not expensive\r\n        */\r\n        var measuredWidth = 0;\r\n        var measuredHeight = 0;\r\n        //let innerWidth: number = this.innerWidth; //$math.max(this.innerWidth, this._measuredWidth - paddingLeft - paddingRight);\r\n        //let innerHeight: number = this.innerHeight; //$math.max(this.innerHeight, this._measuredHeight - paddingTop - paddingBottom);\r\n        // above is wrong, as if a w/h is not specified, it is 0 and alignment doesn't work at all.\r\n        var innerWidth = $math.max(this.innerWidth, this._absoluteWidth);\r\n        var innerHeight = $math.max(this.innerHeight, this._absoluteHeight);\r\n        var left; // = 0;\r\n        var right; // = innerWidth;\r\n        var top; // = 0;\r\n        var bottom; // = innerHeight;\r\n        var paddingLeft = this.pixelPaddingLeft;\r\n        var paddingRight = this.pixelPaddingRight;\r\n        var paddingTop = this.pixelPaddingTop;\r\n        var paddingBottom = this.pixelPaddingBottom;\r\n        var nextX = 0;\r\n        var nextY = 0;\r\n        var row = 0;\r\n        var column = 0;\r\n        var columnWidth = [];\r\n        var rowHeight = [];\r\n        var maxCellWidth;\r\n        var minCellWidth;\r\n        var columnCount;\r\n        var maxWidth = this.maxWidth;\r\n        var maxHeight = this.maxHeight;\r\n        var minWidth = this.minWidth;\r\n        var minHeight = this.minHeight;\r\n        var childrenCopy = $array.copy(children.values);\r\n        if (this.reverseOrder) {\r\n            childrenCopy.reverse();\r\n        }\r\n        // GRID PRECALCULATIONS\r\n        if (this.layout == \"grid\") {\r\n            minCellWidth = maxWidth;\r\n            maxCellWidth = 1;\r\n            for (var i = 0, len = childrenCopy.length; i < len; i++) {\r\n                var child = childrenCopy[i];\r\n                if (child.isMeasured && !child.disabled && !child.__disabled) {\r\n                    var childMeasuredWidth = child.measuredWidth;\r\n                    if (childMeasuredWidth < minCellWidth) {\r\n                        minCellWidth = childMeasuredWidth;\r\n                    }\r\n                    if (childMeasuredWidth > maxCellWidth) {\r\n                        maxCellWidth = childMeasuredWidth;\r\n                    }\r\n                }\r\n            }\r\n            minCellWidth = $math.fitToRange(minCellWidth, 1, maxWidth);\r\n            maxCellWidth = $math.fitToRange(maxCellWidth, 1, maxWidth);\r\n            if (this.fixedWidthGrid) {\r\n                columnCount = maxWidth / maxCellWidth;\r\n            }\r\n            else {\r\n                columnCount = maxWidth / minCellWidth; // predicted number of columns, yes it is usually much more than real number, but we fix that later\r\n            }\r\n            columnCount = $math.max(1, Math.floor(columnCount));\r\n            columnCount = $math.min(this.maxColumns, columnCount);\r\n            columnWidth = this.getColumnWidth(childrenCopy, columnCount, maxCellWidth);\r\n        }\r\n        var contentLeft;\r\n        var contentRight;\r\n        var contentTop;\r\n        var contentBottom;\r\n        // we itterate through array of children\r\n        // TODO use iterator instead\r\n        for (var i = 0, len = childrenCopy.length; i < len; i++) {\r\n            var child = childrenCopy[i];\r\n            if (child.isMeasured && !child.disabled && !child.__disabled) {\r\n                var x = undefined; //child.pixelX; // must reset\r\n                var y = undefined; //child.pixelY; // must reset\r\n                var childMarginLeft = child.pixelMarginLeft;\r\n                var childMarginRight = child.pixelMarginRight;\r\n                var childMarginTop = child.pixelMarginTop;\r\n                var childMarginBottom = child.pixelMarginBottom;\r\n                var childWidth = child.measuredWidth;\r\n                var childHeight = child.measuredHeight;\r\n                var childLeft = void 0;\r\n                var childRight = void 0;\r\n                var childTop = void 0;\r\n                var childBottom = void 0;\r\n                switch (this.layout) {\r\n                    case \"none\":\r\n                        break;\r\n                    // absolute layout\r\n                    case \"absolute\":\r\n                        // horizontal alignment\r\n                        switch (child.align) {\r\n                            case \"left\":\r\n                                x = childMarginLeft - child.maxLeft;\r\n                                break;\r\n                            case \"center\":\r\n                                x = (innerWidth - childWidth) / 2 - child.maxLeft;\r\n                                break;\r\n                            case \"right\":\r\n                                x = innerWidth - childMarginRight - child.maxRight;\r\n                                break;\r\n                            default:\r\n                                if (!(child.x instanceof Percent)) {\r\n                                    x = child.pixelX;\r\n                                }\r\n                                break;\r\n                        }\r\n                        // vertical alignment\r\n                        switch (child.valign) {\r\n                            case \"top\":\r\n                                y = childMarginTop - child.maxTop;\r\n                                break;\r\n                            case \"middle\":\r\n                                y = (innerHeight - childHeight) / 2 - child.maxTop;\r\n                                break;\r\n                            case \"bottom\":\r\n                                y = innerHeight - childMarginBottom - child.maxBottom;\r\n                                break;\r\n                            default:\r\n                                if (!(child.y instanceof Percent)) {\r\n                                    y = child.pixelY;\r\n                                }\r\n                                break;\r\n                        }\r\n                        break;\r\n                    // vertical layout\r\n                    case \"vertical\":\r\n                        //if ($type.isNumber(child.relativeHeight)) {\r\n                        //\tchildHeight = child.maxHeight;\r\n                        //}\r\n                        switch (child.align) {\r\n                            case \"left\":\r\n                                x = childMarginLeft - child.maxLeft;\r\n                                break;\r\n                            case \"center\":\r\n                                x = (innerWidth - childWidth) / 2 - child.maxLeft;\r\n                                break;\r\n                            case \"right\":\r\n                                x = innerWidth - childMarginRight - child.maxRight;\r\n                                break;\r\n                            default:\r\n                                x = child.pixelX;\r\n                                break;\r\n                        }\r\n                        y = nextY + childMarginTop - child.maxTop;\r\n                        nextY = y + child.maxBottom + childMarginBottom;\r\n                        break;\r\n                    // horizontal layout\r\n                    case \"horizontal\":\r\n                        //if ($type.isNumber(child.relativeHeight)) {\r\n                        //\tchildHeight = child.maxHeight;\r\n                        //}\r\n                        switch (child.valign) {\r\n                            case \"top\":\r\n                                y = childMarginTop - child.maxTop;\r\n                                break;\r\n                            case \"middle\":\r\n                                y = (innerHeight - childHeight) / 2 - child.maxTop;\r\n                                break;\r\n                            case \"bottom\":\r\n                                y = innerHeight - childMarginBottom - child.maxBottom;\r\n                                break;\r\n                            default:\r\n                                y = child.pixelY;\r\n                                break;\r\n                        }\r\n                        x = nextX + childMarginLeft - child.maxLeft;\r\n                        nextX = x + child.maxRight + childMarginRight;\r\n                        break;\r\n                    case \"grid\":\r\n                        x = nextX + childMarginLeft - child.maxLeft;\r\n                        switch (child.valign) {\r\n                            case \"top\":\r\n                                y = nextY + childMarginTop - child.maxTop;\r\n                                break;\r\n                            case \"middle\":\r\n                                y = nextY + (innerHeight - childHeight) / 2 - child.maxTop;\r\n                                break;\r\n                            case \"bottom\":\r\n                                y = nextY + innerHeight - childMarginBottom - child.maxBottom;\r\n                                break;\r\n                            default:\r\n                                y = nextY - child.maxTop;\r\n                                break;\r\n                        }\r\n                        nextX += columnWidth[column];\r\n                        rowHeight[row] = $math.max(rowHeight[row], childHeight);\r\n                        column++;\r\n                        var nextColumnWidth = columnWidth[column];\r\n                        if (!$type.isNumber(nextColumnWidth)) {\r\n                            nextColumnWidth = maxCellWidth;\r\n                        }\r\n                        if (nextX > $math.min(this.innerWidth, maxWidth) - nextColumnWidth + 1 && column < columnCount) {\r\n                            columnCount = column;\r\n                            nextX = 0;\r\n                            nextY = 0;\r\n                            row = 0;\r\n                            column = 0;\r\n                            columnWidth = this.getColumnWidth(childrenCopy, columnCount, maxCellWidth);\r\n                            rowHeight = [];\r\n                            i = -1;\r\n                            continue;\r\n                        }\r\n                        if (column >= columnCount) {\r\n                            column = 0;\r\n                            nextY += rowHeight[row];\r\n                            row++;\r\n                            nextX = 0;\r\n                        }\r\n                        break;\r\n                }\r\n                if (this.layout !== \"none\") {\r\n                    child.moveTo({ x: x, y: y }); // must use moveTo, otherwise x/y set in percent won't work\r\n                    childLeft = x + child.maxLeft - childMarginLeft;\r\n                    childRight = x + child.maxRight + childMarginRight;\r\n                    childTop = y + child.maxTop - childMarginTop;\r\n                    childBottom = y + child.maxBottom + childMarginBottom;\r\n                    if (childRight > right || !$type.isNumber(right)) {\r\n                        right = childRight;\r\n                    }\r\n                    if (childLeft < left || !$type.isNumber(left)) {\r\n                        left = childLeft;\r\n                    }\r\n                    if (childTop < top || !$type.isNumber(top)) {\r\n                        top = childTop;\r\n                    }\r\n                    if (childBottom > bottom || !$type.isNumber(bottom)) {\r\n                        bottom = childBottom;\r\n                    }\r\n                    if (childRight > contentRight || !$type.isNumber(contentRight)) {\r\n                        contentRight = childRight;\r\n                    }\r\n                    if (childLeft < contentLeft || !$type.isNumber(contentLeft)) {\r\n                        contentLeft = childLeft;\r\n                    }\r\n                    if (childTop < contentTop || !$type.isNumber(contentTop)) {\r\n                        contentTop = childTop;\r\n                    }\r\n                    if (childBottom > contentBottom || !$type.isNumber(contentBottom)) {\r\n                        contentBottom = contentBottom;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                child.validatePosition();\r\n            }\r\n        }\r\n        if (this.layout == \"none\") {\r\n            var noneBBox = this.bbox;\r\n            left = noneBBox.x;\r\n            right = noneBBox.x + noneBBox.width;\r\n            top = noneBBox.y;\r\n            bottom = noneBBox.y + noneBBox.height;\r\n        }\r\n        if (!$type.isNumber(left)) {\r\n            left = 0;\r\n            contentLeft = 0;\r\n        }\r\n        if (!$type.isNumber(right)) {\r\n            right = this._availableWidth;\r\n            contentRight = right;\r\n        }\r\n        if (!$type.isNumber(top)) {\r\n            top = 0;\r\n            contentTop = 0;\r\n        }\r\n        if (!$type.isNumber(bottom)) {\r\n            bottom = this._availableHeight;\r\n            contentBottom = bottom;\r\n        }\r\n        if (!$type.isNumber(contentTop)) {\r\n            contentTop = 0;\r\n        }\r\n        if (!$type.isNumber(contentBottom)) {\r\n            contentBottom = contentTop;\r\n        }\r\n        if (!$type.isNumber(contentLeft)) {\r\n            contentLeft = 0;\r\n        }\r\n        if (!$type.isNumber(contentRight)) {\r\n            contentRight = contentLeft;\r\n        }\r\n        measuredWidth = right - left;\r\n        measuredHeight = bottom - top;\r\n        if ($type.isNumber(this.relativeWidth)) {\r\n            measuredWidth = maxWidth - paddingLeft - paddingRight;\r\n            left = 0;\r\n            right = measuredWidth;\r\n        }\r\n        if ($type.isNumber(this.relativeHeight)) {\r\n            measuredHeight = maxHeight - paddingTop - paddingBottom;\r\n            top = 0;\r\n            bottom = measuredHeight;\r\n        }\r\n        if ($type.isNumber(this._pixelWidth)) {\r\n            left = 0;\r\n            measuredWidth = this._pixelWidth - paddingLeft - paddingRight;\r\n        }\r\n        if ($type.isNumber(minWidth) && measuredWidth < minWidth) {\r\n            left = 0;\r\n            measuredWidth = this.minWidth - paddingLeft - paddingRight;\r\n        }\r\n        if ($type.isNumber(this._pixelHeight)) {\r\n            top = 0;\r\n            measuredHeight = this._pixelHeight - paddingTop - paddingBottom;\r\n        }\r\n        if ($type.isNumber(minHeight) && measuredHeight < minHeight) {\r\n            top = 0;\r\n            measuredHeight = minHeight - paddingTop - paddingBottom;\r\n        }\r\n        var measuredContentWidth = contentRight - contentLeft;\r\n        var measuredContentHeight = contentBottom - contentTop;\r\n        /// handle content alignment\r\n        if (this.layout != \"none\" && (this.contentAlign || this.contentValign) && children.length > 0) {\r\n            var dx_1;\r\n            var dy_1;\r\n            var mwa = measuredWidth;\r\n            var mha = measuredHeight;\r\n            if (mwa < measuredContentWidth) {\r\n                mwa = measuredContentWidth;\r\n            }\r\n            if (mha < measuredContentHeight) {\r\n                mha = measuredContentHeight;\r\n            }\r\n            if (this.contentAlign == \"center\") {\r\n                dx_1 = (mwa - measuredContentWidth) / 2;\r\n            }\r\n            if (this.contentAlign == \"right\") {\r\n                dx_1 = mwa - measuredContentWidth;\r\n            }\r\n            if (this.contentValign == \"middle\") {\r\n                dy_1 = (mha - measuredContentHeight) / 2;\r\n            }\r\n            if (this.contentValign == \"bottom\") {\r\n                dy_1 = mha - measuredContentHeight;\r\n            }\r\n            if ($type.isNumber(dx_1)) {\r\n                $iter.each(children.iterator(), function (child) {\r\n                    var childLeft = child.maxLeft;\r\n                    var ddx = dx_1;\r\n                    if (_this.layout == \"horizontal\") {\r\n                        child.x = child.pixelX + ddx;\r\n                    }\r\n                    // individual grid elements can not be aligned vertically, that's why it's different from horizontal\r\n                    if (_this.layout == \"grid\") {\r\n                        child.x = child.pixelX + ddx;\r\n                    }\r\n                    if (_this.layout == \"vertical\") {\r\n                        ddx += child.pixelMarginLeft;\r\n                        if (child.align == \"none\") {\r\n                            child.x = ddx - childLeft;\r\n                        }\r\n                    }\r\n                    if (_this.layout == \"absolute\") {\r\n                        ddx += child.pixelMarginLeft;\r\n                        if (child.align == \"none\") {\r\n                            child.x = ddx - childLeft;\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            if ($type.isNumber(dy_1)) {\r\n                $iter.each(children.iterator(), function (child) {\r\n                    var childTop = child.maxTop;\r\n                    var ddy = dy_1;\r\n                    if (_this.layout == \"horizontal\") {\r\n                        ddy += child.pixelMarginTop;\r\n                        if (child.valign == \"none\") {\r\n                            child.y = ddy - childTop;\r\n                        }\r\n                    }\r\n                    // individual grid elements can not be aligned vertically, that's why it's different from horizontal\r\n                    if (_this.layout == \"grid\") {\r\n                        ddy += child.pixelMarginTop;\r\n                        child.y = ddy - childTop;\r\n                    }\r\n                    if (_this.layout == \"vertical\") {\r\n                        child.y = child.pixelY + ddy;\r\n                    }\r\n                    if (_this.layout == \"absolute\") {\r\n                        ddy += child.pixelMarginTop;\r\n                        if (child.valign == \"none\") {\r\n                            child.y = ddy - childTop;\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        var oldBBox = this.bbox;\r\n        // this will mess up maxw/maxh set by container layout, we need a separate min/maxwidth for users\r\n        // this prevents invalidating layout in such cases as scrolling category axis, when labels go outside bounds and results transformed event\r\n        // todo: need to check if this doesn't cause other problems.\r\n        //if (this.maxWidth > 0) {\r\n        //measuredWidth = $math.min(measuredWidth, this.maxWidth);\r\n        //measuredWidth = $math.max(measuredWidth, this.minWidth);\r\n        //}\r\n        //if (this.maxHeight > 0) {\r\n        //measuredHeight = $math.min(measuredHeight, this.maxHeight);\r\n        //measuredHeight = $math.max(measuredHeight, this.minHeight);\r\n        //}\r\n        measuredWidth = $math.max(measuredWidth, minWidth);\r\n        measuredHeight = $math.max(measuredHeight, minHeight);\r\n        this.contentWidth = measuredWidth;\r\n        this.contentHeight = measuredHeight;\r\n        // new\r\n        measuredWidth = $math.min(measuredWidth, maxWidth);\r\n        measuredHeight = $math.min(measuredHeight, maxHeight);\r\n        this._bbox = { x: left, y: top, width: measuredWidth, height: measuredHeight };\r\n        var prevLeft = this.maxLeft;\r\n        var prevTop = this.maxTop;\r\n        var prevBotttom = this.maxBottom;\r\n        var prevRight = this.maxRight;\r\n        this.measure();\r\n        if (prevLeft != this.maxLeft || prevRight != this.maxRight || prevTop != this.maxTop || prevBotttom != this.maxBottom) {\r\n            if (this.events.isEnabled(\"transformed\")) {\r\n                var event_1 = {\r\n                    type: \"transformed\",\r\n                    target: this\r\n                };\r\n                if (oldBBox) {\r\n                    event_1.dummyData = oldBBox.width + \" \" + measuredWidth + \"  \" + oldBBox.height + \" \" + measuredHeight;\r\n                }\r\n                this.events.dispatchImmediately(\"transformed\", event_1);\r\n            }\r\n        }\r\n        this.dispatchImmediately(\"layoutvalidated\");\r\n    };\r\n    /**\r\n     * Positions element according its center settings.\r\n     *\r\n     * @todo Description (review)\r\n     * @ignore Exclude from docs\r\n     */\r\n    Container.prototype.updateCenter = function () {\r\n        _super.prototype.updateCenter.call(this);\r\n        this.updateBackground();\r\n    };\r\n    /**\r\n     * Update the background to fit into specific dimensions.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Make it protected?\r\n     */\r\n    Container.prototype.updateBackground = function () {\r\n        var background = this._background; // accessing protected, as getter creates instance if it doesn't exist\r\n        if (background) {\r\n            background.x = this.maxLeft;\r\n            background.y = this.maxTop;\r\n            background.width = this.maxRight - this.maxLeft;\r\n            background.height = this.maxBottom - this.maxTop;\r\n        }\r\n    };\r\n    /**\r\n     * Returns widths of all columns in a horizontal Container layout.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param columnCount   Number of columns\r\n     * @param maxCellWidth  Maximum width of one grid cell\r\n     * @return An array of column widths\r\n     */\r\n    Container.prototype.getColumnWidth = function (children, columnCount, maxCellWidth) {\r\n        var _this = this;\r\n        var columnWidth = [];\r\n        var column = 0;\r\n        $array.each(children, function (child) {\r\n            if (child.isMeasured && !child.disabled && !child.__disabled) {\r\n                if (_this.fixedWidthGrid) {\r\n                    columnWidth[column] = maxCellWidth;\r\n                }\r\n                else {\r\n                    columnWidth[column] = $math.max(columnWidth[column], child.measuredWidth + child.pixelMarginRight + child.pixelMarginLeft);\r\n                }\r\n                column++;\r\n                if (column == columnCount) {\r\n                    column = 0;\r\n                }\r\n            }\r\n        });\r\n        return columnWidth;\r\n    };\r\n    Object.defineProperty(Container.prototype, \"layout\", {\r\n        /**\r\n         * @return Layout\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"layout\");\r\n        },\r\n        /**\r\n         * Container layout.\r\n         *\r\n         * Options: \"absolute\" (default), \"vertical\", \"horizontal\", \"grid\", \"none\". \"none\" is quite the same as \"absolute\" - the objects will\r\n         * be positioned at their x, y coordinates, the difference is that with \"absolute\" you can still use align/valign for children and with \"none\" you can not.\r\n         * Use \"none\" as much as you can as it's most cpu-saving layout.\r\n         *\r\n         * @default \"absolute\"\r\n         * @param value Layout\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"layout\", value)) {\r\n                this.invalidateLayout();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Container.prototype, \"contentValign\", {\r\n        /**\r\n         * @return Vertical alignment\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"contentValign\");\r\n        },\r\n        /**\r\n         * Vertical alignment of the elements for the vertical Container.\r\n         *\r\n         * This is used when Container is larger than the height of all its children.\r\n         *\r\n         * @param value vertical alignment\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"contentValign\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Container.prototype, \"contentAlign\", {\r\n        /**\r\n         * @return Horizontal alignment\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"contentAlign\");\r\n        },\r\n        /**\r\n         * Horizontal alignment of the elements for the horizontal Container.\r\n         *\r\n         * This is used when Container is larger than the height of all its children.\r\n         *\r\n         * @param value  Horizontal alignment\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"contentAlign\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Container.prototype, \"fixedWidthGrid\", {\r\n        /**\r\n         * @return Should use fixed width grid?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"fixedWidthGrid\");\r\n        },\r\n        /**\r\n         * Controls if the grid of the Container should use fixed width. Fixed width\r\n         * grid will divide available space to all its columns/rows equally, without\r\n         * adapting to actual child sizes or size requirements.\r\n         *\r\n         * @default false\r\n         * @param value  Should use fixed width grid?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"fixedWidthGrid\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Container.prototype, \"maxColumns\", {\r\n        /**\r\n         * @return Should use fixed width grid?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"maxColumns\");\r\n        },\r\n        /**\r\n         * Maximum number of columns (when using `\"grid\"` layout).\r\n         *\r\n         * @param value  Should use fixed width grid?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"maxColumns\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Container.prototype, \"reverseOrder\", {\r\n        /**\r\n         * @return Reverse children?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"reverseOrder\");\r\n        },\r\n        /**\r\n         * If set to `true`, the children of the container will be drawn in reverse\r\n         * order.\r\n         *\r\n         * @default false\r\n         * @param value  Reverse children?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"reverseOrder\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Container.prototype, \"setStateOnChildren\", {\r\n        /**\r\n         * @return Set state on children\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"setStateOnChildren\");\r\n        },\r\n        /**\r\n         * Specifies if, when state is applied on this container, the same state\r\n         * should be applied to container's children as well as `background`.\r\n         *\r\n         * @default false\r\n         * @param value  Set state on children\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"setStateOnChildren\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Checks if point is within bounds of a container.\r\n     *\r\n     * @param point  A coordinate to check\r\n     * @return `true` if it fits within container\r\n     */\r\n    Container.prototype.fitsToBounds = function (point) {\r\n        var x = point.x;\r\n        var y = point.y;\r\n        var deviation = 0.5; // sometimes coordinates are rounded to numbers like .999 so we add deviation here\r\n        if (x >= -deviation && x <= this.pixelWidth + deviation && y >= -deviation && y <= this.pixelHeight + deviation) {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Copies all properties from different Container, including background\r\n     * clone.\r\n     *\r\n     * @param source  Source Container to copy from\r\n     */\r\n    Container.prototype.copyFrom = function (source) {\r\n        var _this = this;\r\n        _super.prototype.copyFrom.call(this, source);\r\n        this.layout = source.layout;\r\n        this.setStateOnChildren = source.setStateOnChildren;\r\n        if (source._background) {\r\n            this.background = source._background.clone();\r\n            this.background.copyFrom(source._background); // won't work without this\r\n        }\r\n        $iter.each(source.children.iterator(), function (child) {\r\n            if (child.shouldClone) {\r\n                var clonedChild = child.clone();\r\n                clonedChild.parent = _this;\r\n            }\r\n        });\r\n    };\r\n    Object.defineProperty(Container.prototype, \"preloader\", {\r\n        /**\r\n         * @return Preloader instance\r\n         */\r\n        get: function () {\r\n            var preloader = this._preloader;\r\n            if (preloader) {\r\n                return preloader;\r\n            }\r\n            else if (this.parent) {\r\n                return this.parent.preloader;\r\n            }\r\n        },\r\n        /**\r\n         * A [[Preloader]] instance to be used when Container is busy.\r\n         *\r\n         * @param preloader  Preloader instance\r\n         */\r\n        set: function (preloader) {\r\n            if (this._preloader) {\r\n                this.removeDispose(this._preloader);\r\n            }\r\n            this._preloader = preloader;\r\n            if (preloader) {\r\n                preloader.parent = this.tooltipContainer;\r\n                this._disposers.push(preloader);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Sets [[Paper]] instance to use to draw elements.\r\n     * @ignore\r\n     * @param paper Paper\r\n     * @return true if paper was changed, false, if it's the same\r\n     */\r\n    Container.prototype.setPaper = function (paper) {\r\n        var _this = this;\r\n        var changed = _super.prototype.setPaper.call(this, paper);\r\n        if (changed) {\r\n            if (this._background) {\r\n                this._background.paper = paper;\r\n                this._background.topParent = this.topParent;\r\n            }\r\n            this.children.each(function (child) {\r\n                child.setPaper(paper);\r\n                child.topParent = _this.topParent;\r\n            });\r\n        }\r\n        return changed;\r\n    };\r\n    /**\r\n     * Removes Container from the system-wide list of invalid Containers.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Container.prototype.removeFromInvalids = function () {\r\n        _super.prototype.removeFromInvalids.call(this);\r\n        registry.removeFromInvalidLayouts(this);\r\n    };\r\n    /**\r\n     * Sets a [[DataItem]] to be used as data for the Container.\r\n     *\r\n     * @todo Description\r\n     * @param dataItem DataItem\r\n     */\r\n    Container.prototype.setDataItem = function (dataItem) {\r\n        // this place is potentially dangerous, as if we set datItem for some dummy container, all children dataItems will be overriden\r\n        // the main reason for doing this is that we need a setDataItem code to be called for each sprite, otherwise property fields won't be\r\n        // applied. Also, getting dataItem from parent all the time is more expensive than saving value.\r\n        if (this._dataItem != dataItem) {\r\n            $iter.each(this.children.iterator(), function (child) {\r\n                child.dataItem = dataItem;\r\n            });\r\n            if (this._background) {\r\n                this._background.dataItem = dataItem;\r\n            }\r\n        }\r\n        _super.prototype.setDataItem.call(this, dataItem);\r\n    };\r\n    /**\r\n     * Measures the element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Container.prototype.measureElement = function () {\r\n        if (this.disabled || this.isTemplate || this.layout == \"none\" || this.__disabled) {\r\n            // void\r\n        }\r\n        else {\r\n            this.validateLayout();\r\n        }\r\n    };\r\n    Object.defineProperty(Container.prototype, \"fontFamily\", {\r\n        /**\r\n         * @return Font family\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"fontFamily\");\r\n        },\r\n        /**\r\n         * Font family to be used for the text.\r\n         *\r\n         * Parts of the text may override this setting using in-line formatting.\r\n         *\r\n         * @param value Font family value\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"fontFamily\", value, true)) {\r\n                this.setSVGAttribute({ \"font-family\": value });\r\n                this.invalidateLabels();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Container.prototype, \"fontSize\", {\r\n        /**\r\n         * @return Font size\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"fontSize\");\r\n        },\r\n        /**\r\n         * Font size to be used for the text. The size can either be numeric, in\r\n         * pixels, or other measurements.\r\n         *\r\n         * Parts of the text may override this setting using in-line formatting.\r\n         *\r\n         * @param value Font size value\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"fontSize\", value, true)) {\r\n                this.setSVGAttribute({ \"font-size\": value });\r\n                this.invalidateLabels();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * When fontSize of fontFamily changes we need to hard-invalidate all Labels of this container to position them properly.\r\n     */\r\n    Container.prototype.invalidateLabels = function () {\r\n        this.children.each(function (child) {\r\n            // can't import Label because of Circular dependencies\r\n            if (child[\"hardInvalidate\"]) {\r\n                child[\"hardInvalidate\"]();\r\n            }\r\n            else if (child instanceof Container) {\r\n                child.invalidateLabels();\r\n            }\r\n        });\r\n    };\r\n    Object.defineProperty(Container.prototype, \"fontWeight\", {\r\n        /**\r\n         * @return Font weight\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"fontWeight\");\r\n        },\r\n        /**\r\n         * Font weight to use for text.\r\n         *\r\n         * Parts of the text may override this setting using in-line formatting.\r\n         *\r\n         * @param value Font weight\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"fontWeight\", value);\r\n            this.setSVGAttribute({ \"font-weight\": value });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Container.prototype, \"textDecoration\", {\r\n        /**\r\n         * @return Decoration\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"textDecoration\");\r\n        },\r\n        /**\r\n         * A text decoration to use for text.\r\n         *\r\n         * Parts of the text may override this setting using in-line formatting.\r\n         *\r\n         * @param value  Decoration\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"textDecoration\", value);\r\n            this.setSVGAttribute({ \"text-decoration\": value });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Disposes (destroys) the element and all its children.\r\n     */\r\n    Container.prototype.dispose = function () {\r\n        if (this._background) {\r\n            this._background.dispose();\r\n        }\r\n        this._shouldBeReady = [];\r\n        this.disposeChildren();\r\n        _super.prototype.dispose.call(this);\r\n    };\r\n    /**\r\n     * Applies a [[SpriteState]] on this element.\r\n     *\r\n     * The first parameter can either be a name of the state or a [[SpriteState]]\r\n     * instance.\r\n     *\r\n     * When run, this method will apply SVG properties defined in a\r\n     * [[SpriteState]], but only those that are relevant to this particular\r\n     * element, that is are listed in its respective `properties` array.\r\n     *\r\n     * @see {@link SpriteState}\r\n     * @param value               A state - name key or instance\r\n     * @param transitionDuration  Duration of the transition between current and new state\r\n     * @param easing              An easing function\r\n     */\r\n    Container.prototype.setState = function (value, transitionDuration, easing) {\r\n        var stateName = value;\r\n        if (value instanceof SpriteState) {\r\n            stateName = value.name;\r\n        }\r\n        if (this.setStateOnChildren) {\r\n            $iter.each(this.children.iterator(), function (child) {\r\n                child.setState(stateName, transitionDuration, easing);\r\n                // not good to set it in child setState\r\n                if (stateName != \"active\") {\r\n                    child.isActive = false;\r\n                }\r\n            });\r\n        }\r\n        if (this._background) {\r\n            this._background.setState(stateName);\r\n        }\r\n        if (this.setStateOnSprites.length) {\r\n            $array.each(this.setStateOnSprites, function (item) {\r\n                item.setState(stateName, transitionDuration, easing);\r\n            });\r\n        }\r\n        return _super.prototype.setState.call(this, value, transitionDuration, easing);\r\n    };\r\n    // otherwise isActive won't work properly with background\r\n    Container.prototype.setActive = function (value) {\r\n        _super.prototype.setActive.call(this, value);\r\n        if (this._background) {\r\n            this._background.isActive = value;\r\n        }\r\n    };\r\n    /**\r\n     * Dispatches ready event. Dispatches when all children are ready.\r\n     */\r\n    Container.prototype.dispatchReady = function () {\r\n        var _this = this;\r\n        if (!this.isReady() && !this.isDisposed()) {\r\n            var allReady_1 = true;\r\n            $iter.eachContinue(this.children.iterator(), function (sprite) {\r\n                if (!sprite.__disabled && !sprite.disabled && !sprite.isReady()) {\r\n                    allReady_1 = false;\r\n                    return false;\r\n                }\r\n                else {\r\n                    return true;\r\n                }\r\n            });\r\n            $array.eachContinue(this._shouldBeReady, function (sprite) {\r\n                if (!sprite.__disabled && !sprite.disabled && !sprite.isReady()) {\r\n                    allReady_1 = false;\r\n                    return false;\r\n                }\r\n                else {\r\n                    return true;\r\n                }\r\n            });\r\n            if (allReady_1) {\r\n                _super.prototype.dispatchReady.call(this);\r\n            }\r\n            else {\r\n                registry.events.once(\"exitframe\", function () {\r\n                    _this.dispatchReady();\r\n                    system.requestFrame();\r\n                }, undefined, false);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Called during the System.update method\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Container.prototype._systemUpdate = function (skippedSprites) {\r\n        this.children.each(function (child) {\r\n            if (child.invalid) {\r\n                if (!child._systemCheckIfValidate()) {\r\n                    skippedSprites.push(child);\r\n                }\r\n                else if (child.dataItem && child.dataItem.component && child.dataItem.component.dataInvalid) {\r\n                    skippedSprites.push(child);\r\n                }\r\n                else {\r\n                    child.validate();\r\n                }\r\n            }\r\n        });\r\n        _super.prototype._systemUpdate.call(this, skippedSprites);\r\n    };\r\n    /**\r\n     * Called during the System.validatePositions method\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Container.prototype._systemValidatePositions = function () {\r\n        this.children.each(function (sprite) {\r\n            if (sprite.positionInvalid) {\r\n                sprite.validatePosition();\r\n            }\r\n        });\r\n        _super.prototype._systemValidatePositions.call(this);\r\n    };\r\n    /**\r\n     * Called during the System.validateLayouts method\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Container.prototype._systemValidateLayouts = function () {\r\n        if (this.layoutInvalid && !this.isDisposed()) {\r\n            this.validateLayout();\r\n        }\r\n    };\r\n    Object.defineProperty(Container.prototype, \"tapToActivate\", {\r\n        /**\r\n         * @return Enable touch protection?\r\n         */\r\n        get: function () {\r\n            return this._tapToActivate;\r\n        },\r\n        /**\r\n         * If set to `true` the chart's regular touch functionality will be suspended\r\n         * so that the whole page it is located in remains scrollable, even when\r\n         * swiping over the chart's body.\r\n         *\r\n         * User will need to tap the chart in order to activate its regular touch\r\n         * functionality.\r\n         *\r\n         * The chart will remain \"active\" as long as user keeps interacting with the\r\n         * chart. After `tapTimeout` milliseconds the chart will return to its\r\n         * \"protected\" mode.\r\n         *\r\n         * @default false\r\n         * @since 4.4.0\r\n         * @param  value  Enable touch protection?\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/touch/} For more information.\r\n         */\r\n        set: function (value) {\r\n            if (this._tapToActivate != value) {\r\n                this.setTapToActivate(value);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Container.prototype.setTapToActivate = function (value) {\r\n        var _this = this;\r\n        this._tapToActivate = value;\r\n        this.interactions.isTouchProtected = value;\r\n        // setEventDisposer will also remove listeners if value == false\r\n        if (value) {\r\n            this.interactions.setEventDisposer(\"container-tapToActivate\", value, function () { return new MultiDisposer([\r\n                _this.events.on(\"hit\", _this.handleTapToActivate, _this, false),\r\n                _this.events.on(\"down\", _this.initTapTimeout, _this, false),\r\n                _this.events.on(\"track\", _this.initTapTimeout, _this, false),\r\n                //this.events.on(\"drag\", this.initTapTimeout, this, false),\r\n                getInteraction().body.events.on(\"down\", function (ev) {\r\n                    if (!getInteraction().isLocalElement(ev.pointer, _this.paper.svg, _this.uid)) {\r\n                        _this.handleTapToActivateDeactivation();\r\n                    }\r\n                }, _this, false)\r\n            ]); });\r\n        }\r\n        getInteraction();\r\n    };\r\n    /**\r\n     * @todo Ignore on non-touch events\r\n     */\r\n    Container.prototype.handleTapToActivate = function () {\r\n        this.interactions.isTouchProtected = false;\r\n        this.initTapTimeout();\r\n    };\r\n    Container.prototype.handleTapToActivateDeactivation = function () {\r\n        this.interactions.isTouchProtected = true;\r\n    };\r\n    Container.prototype.initTapTimeout = function () {\r\n        var _this = this;\r\n        if (this._tapToActivateTimeout) {\r\n            this._tapToActivateTimeout.dispose();\r\n        }\r\n        if (this.tapToActivate && !this.interactions.isTouchProtected && this.tapTimeout) {\r\n            this._tapToActivateTimeout = this.setTimeout(function () {\r\n                _this.handleTapToActivateDeactivation();\r\n            }, this.tapTimeout);\r\n        }\r\n    };\r\n    /**\r\n     * @ignore\r\n     * @return Has license?\r\n     */\r\n    Container.prototype.hasLicense = function () {\r\n        if (options.commercialLicense) {\r\n            return true;\r\n        }\r\n        for (var i = 0; i < options.licenses.length; i++) {\r\n            if (options.licenses[i].match(/^CH.{5,}/i)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    return Container;\r\n}(Sprite));\r\nexport { Container };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Container\"] = Container;\r\n//# sourceMappingURL=Container.js.map","/**\r\n * A collection of functions that deals with path calculations.\r\n */\r\nimport * as $math from \"../utils/Math\";\r\nimport * as $type from \"../utils/Type\";\r\nimport { getGhostPaper } from \"../rendering/Paper\";\r\nimport { options } from \"../Options\";\r\n/**\r\n * ============================================================================\r\n * PATH FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Returns an SVG path from a number of points.\r\n *\r\n * @ignore Exclude from docs\r\n * @param points  An array of line elbow points\r\n * @return SVG path\r\n */\r\nexport function polyline(points) {\r\n    var path = lineTo(points[0]);\r\n    var prevPoint = { x: 0, y: 0 };\r\n    var minStep = options.minPolylineStep;\r\n    if (!$type.isNumber(minStep)) {\r\n        minStep = 0.5;\r\n    }\r\n    for (var i = 0, len = points.length; i < len; i++) {\r\n        var point = points[i];\r\n        if ($math.getDistance(point, prevPoint) > minStep) {\r\n            path += lineTo(point);\r\n            prevPoint = point;\r\n        }\r\n    }\r\n    return path;\r\n}\r\n/**\r\n * Returns a starting point of an SVG path.\r\n *\r\n * @ignore Exclude from docs\r\n * @param point  Starting point\r\n * @return SVG path\r\n */\r\nexport function moveTo(point) {\r\n    return \" M\" + $math.round(point.x, 4) + \",\" + $math.round(point.y, 4) + \" \";\r\n}\r\n/**\r\n * Returns a line part of SVG path.\r\n *\r\n * @ignore Exclude from docs\r\n * @param point  SVG path\r\n * @return SVG path\r\n */\r\nexport function lineTo(point) {\r\n    return \" L\" + $math.round(point.x, 4) + \",\" + $math.round(point.y, 4) + \" \";\r\n}\r\n/**\r\n * Returns a quadratic curve part of an SVG path.\r\n *\r\n * @ignore Exclude from docs\r\n * @param point         End point of the curve\r\n * @param controlPoint  Control point\r\n * @return SVG path\r\n */\r\nexport function quadraticCurveTo(point, controlPoint) {\r\n    return \" Q\" + $math.round(controlPoint.x, 4)\r\n        + \",\" + $math.round(controlPoint.y, 4) + \" \" + $math.round(point.x, 4)\r\n        + \",\" + $math.round(point.y, 4);\r\n}\r\n/**\r\n * Returns a cubic curve part of an SVG path.\r\n *\r\n * @ignore Exclude from docs\r\n * @param point          End point of the curve\r\n * @param controlPointA  Control point A\r\n * @param controlPointB  Control point B\r\n * @return SVG path\r\n */\r\nexport function cubicCurveTo(point, controlPointA, controlPointB) {\r\n    return \" C\" + $math.round(controlPointA.x, 4)\r\n        + \",\" + $math.round(controlPointA.y, 4) + \" \" + $math.round(controlPointB.x, 4)\r\n        + \",\" + $math.round(controlPointB.y, 4) + \" \" + $math.round(point.x, 4)\r\n        + \",\" + $math.round(point.y, 4);\r\n}\r\n/**\r\n * Returns a terminator for an SVG path.\r\n *\r\n * @ignore Exclude from docs\r\n * @return SVG path\r\n */\r\nexport function closePath() {\r\n    return \" Z\";\r\n}\r\n/**\r\n * Returns an arc part of an SVG path.\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Better parameter descriptions\r\n * @param startAngle  Starting angle\r\n * @param arc         Arc\r\n * @param radius      Radius\r\n * @param radiusY     Vertical radius\r\n * @return SVG path\r\n */\r\nexport function arcTo(startAngle, arc, radius, radiusY) {\r\n    if (arc == 0) {\r\n        return \"\";\r\n    }\r\n    if (!$type.isNumber(radiusY)) {\r\n        radiusY = radius;\r\n    }\r\n    var path = \"\";\r\n    var c = \",\";\r\n    var segments = Math.ceil(Math.abs(arc) / 180);\r\n    var l = 1;\r\n    if (arc < 0) {\r\n        l = 0;\r\n    }\r\n    // previous, as we use a not A\r\n    var pax = 0;\r\n    var pay = 0;\r\n    // center\r\n    var cx = -$math.cos(startAngle) * radius;\r\n    var cy = -$math.sin(startAngle) * radiusY;\r\n    // foir very short angles and big radius, solves artefacts\r\n    if (arc < 0.5 && radius > 3000) {\r\n        var endAngle = startAngle + arc;\r\n        var ax = $math.round($math.cos(endAngle) * radius, 4);\r\n        var ay = $math.round($math.sin(endAngle) * radiusY, 4);\r\n        return lineTo({ x: ax, y: ay });\r\n    }\r\n    for (var i = 0; i < segments; i++) {\r\n        var endAngle = startAngle + arc / segments * (i + 1);\r\n        var ax = $math.round($math.cos(endAngle) * radius + cx - pax, 4);\r\n        var ay = $math.round($math.sin(endAngle) * radiusY + cy - pay, 4);\r\n        path += \" a\" + radius + c + radiusY + c + 0 + c + 0 + c + l + c + ax + c + ay;\r\n        pax = ax;\r\n        pay = ay;\r\n    }\r\n    return path;\r\n}\r\n/**\r\n * Creates an arc path.\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param startAngle         [description]\r\n * @param arc                [description]\r\n * @param radius             [description]\r\n * @param innerRadius        [description]\r\n * @param radiusY            [description]\r\n * @param cornerRadius       [description]\r\n * @param innerCornerRadius  [description]\r\n * @return SVG path\r\n */\r\nexport function arc(startAngle, arc, radius, innerRadius, radiusY, cornerRadius, innerCornerRadius) {\r\n    if (arc == 0) {\r\n        return \"\";\r\n    }\r\n    if (!$type.isNumber(innerRadius)) {\r\n        innerRadius = 0;\r\n    }\r\n    if (radius == 0 && innerRadius <= 0) {\r\n        return \"\";\r\n    }\r\n    if (radius < innerRadius) {\r\n        var temp = radius;\r\n        radius = innerRadius;\r\n        innerRadius = temp;\r\n        if ($type.isNumber(radiusY)) {\r\n            radiusY = radiusY / innerRadius * radius;\r\n        }\r\n    }\r\n    arc = $math.min(arc, 360);\r\n    if (arc == 360) {\r\n        cornerRadius = 0;\r\n        innerCornerRadius = 0;\r\n    }\r\n    var endAngle = startAngle + arc;\r\n    var crSin = $math.sin($math.min(arc, 45) / 2);\r\n    radiusY = $type.isNumber(radiusY) ? radiusY : radius;\r\n    cornerRadius = cornerRadius || 0;\r\n    innerCornerRadius = $type.isNumber(innerCornerRadius) ? innerCornerRadius : cornerRadius;\r\n    var innerRadiusY = (radiusY / radius) * innerRadius;\r\n    var cornerRadiusY = (radiusY / radius) * cornerRadius;\r\n    var innerCornerRadiusY = (radiusY / radius) * innerCornerRadius;\r\n    cornerRadius = $math.fitToRange(cornerRadius, 0, (radius - innerRadius) / 2);\r\n    cornerRadiusY = $math.fitToRange(cornerRadiusY, 0, (radiusY - innerRadiusY) / 2);\r\n    innerCornerRadius = $math.fitToRange(innerCornerRadius, 0, (radius - innerRadius) / 2);\r\n    innerCornerRadiusY = $math.fitToRange(innerCornerRadiusY, 0, (radiusY - innerRadiusY) / 2);\r\n    cornerRadius = $math.round($math.fitToRange(cornerRadius, 0, radius * crSin), 4);\r\n    cornerRadiusY = $math.round($math.fitToRange(cornerRadiusY, 0, radiusY * crSin), 4);\r\n    innerCornerRadius = $math.round($math.fitToRange(innerCornerRadius, 0, innerRadius * crSin), 4);\r\n    innerCornerRadiusY = $math.round($math.fitToRange(innerCornerRadiusY, 0, innerRadiusY * crSin), 4);\r\n    var crAngle = Math.asin(cornerRadius / radius / 2) * $math.DEGREES * 2;\r\n    var crAngleY = Math.asin(cornerRadiusY / radiusY / 2) * $math.DEGREES * 2;\r\n    if (innerRadius < innerCornerRadius) {\r\n        innerRadius = innerCornerRadius;\r\n    }\r\n    if (innerRadiusY < innerCornerRadiusY) {\r\n        innerRadiusY = innerCornerRadiusY;\r\n    }\r\n    var crInnerAngle = Math.asin(innerCornerRadius / innerRadius / 2) * $math.DEGREES * 2;\r\n    var crInnerAngleY = Math.asin(innerCornerRadiusY / innerRadiusY / 2) * $math.DEGREES * 2;\r\n    if (!$type.isNumber(crInnerAngle)) {\r\n        crInnerAngle = 0;\r\n    }\r\n    if (!$type.isNumber(crInnerAngleY)) {\r\n        crInnerAngleY = 0;\r\n    }\r\n    var middleAngle = startAngle + arc / 2;\r\n    var mPoint = { x: $math.round($math.cos(middleAngle) * innerRadius, 4), y: $math.sin(middleAngle) * innerRadiusY };\r\n    var a0 = { x: $math.cos(startAngle) * (innerRadius + innerCornerRadius), y: $math.sin(startAngle) * (innerRadiusY + innerCornerRadiusY) };\r\n    var b0 = { x: $math.cos(startAngle) * (radius - cornerRadius), y: $math.sin(startAngle) * (radiusY - cornerRadiusY) };\r\n    var c0 = { x: $math.cos(endAngle) * (radius - cornerRadius), y: $math.sin(endAngle) * (radiusY - cornerRadiusY) };\r\n    var d0 = { x: $math.cos(endAngle) * (innerRadius + innerCornerRadius), y: $math.sin(endAngle) * (innerRadiusY + innerCornerRadiusY) };\r\n    var b1 = { x: $math.cos(startAngle + crAngle) * radius, y: $math.sin(startAngle + crAngleY) * radiusY };\r\n    var d1 = { x: $math.cos(endAngle - crInnerAngle) * innerRadius, y: $math.sin(endAngle - crInnerAngleY) * innerRadiusY };\r\n    // some magic math\r\n    innerCornerRadius += innerCornerRadius * $math.sin(crInnerAngle / 2);\r\n    innerCornerRadiusY += innerCornerRadiusY * $math.sin(crInnerAngleY / 2);\r\n    if (crInnerAngle > (endAngle - startAngle) / 2) {\r\n        d1 = mPoint;\r\n    }\r\n    var path = \"\";\r\n    // start from b if this is full circle\r\n    if (arc == 360) {\r\n        path = moveTo(b0);\r\n    }\r\n    // otherwise start from a\r\n    else {\r\n        path = moveTo(a0);\r\n        path += lineTo(b0);\r\n        path += arcToPoint(b1, cornerRadius, cornerRadiusY, true);\r\n    }\r\n    // draw arc\r\n    path += arcTo(startAngle + crAngle, arc - 2 * crAngle, radius, radiusY);\r\n    // draw inner arc\r\n    if ($type.isNumber(innerRadius) && innerRadius != 0) {\r\n        // move to B if this is full circle\r\n        if (arc == 360 && cornerRadius == 0) {\r\n            path += moveTo(d0);\r\n        }\r\n        // draw line otherwise\r\n        else {\r\n            path += arcToPoint(c0, cornerRadius, cornerRadiusY, true);\r\n            path += lineTo(d0);\r\n            path += arcToPoint(d1, innerCornerRadius, innerCornerRadiusY, true);\r\n        }\r\n        path += arcTo(endAngle - crInnerAngle, -(arc - 2 * crInnerAngle), innerRadius, innerRadiusY);\r\n        if (arc < 360 || cornerRadius > 0) {\r\n            path += arcToPoint(a0, innerCornerRadius, innerCornerRadiusY, true);\r\n        }\r\n        path += lineTo(a0);\r\n    }\r\n    else {\r\n        path += arcToPoint(c0, cornerRadius, cornerRadiusY, true);\r\n        if (arc < 360) {\r\n            path += lineTo(a0);\r\n        }\r\n    }\r\n    return path;\r\n}\r\n/**\r\n * Creates a path for an arc to specific coordinate.\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param point         Reference point\r\n * @param radius        Radius\r\n * @param radiusY       Vertical radius (for skewed arcs)\r\n * @param sweepFlag     [description]\r\n * @param largeArcFlag  [description]\r\n * @param xAxisRotation [description]\r\n * @return Arc path\r\n */\r\nexport function arcToPoint(point, radius, radiusY, sweepFlag, largeArcFlag, xAxisRotation) {\r\n    if (radius == 0) {\r\n        return \"\";\r\n    }\r\n    xAxisRotation = xAxisRotation || 0;\r\n    largeArcFlag = Boolean(largeArcFlag);\r\n    sweepFlag = Boolean(sweepFlag);\r\n    var c = \",\";\r\n    var sweepFlagValue = +sweepFlag; // converts to 1 or 0\r\n    var largeArcFlagValue = +largeArcFlag; // converts to 1 or 0\r\n    return \" A\" + radius + c + radiusY + c + xAxisRotation + c + largeArcFlagValue + c + sweepFlagValue + c + $math.round(point.x, 4) + c + $math.round(point.y, 4);\r\n}\r\n/**\r\n * Creates a new rectangle.\r\n *\r\n * @ignore Exclude from docs\r\n * @param width   Width (px)\r\n * @param height  Height (px)\r\n * @param x       X position\r\n * @param y       Y position\r\n * @return Rectangle\r\n */\r\nexport function rectangle(width, height, x, y) {\r\n    if (!$type.isNumber(x)) {\r\n        x = 0;\r\n    }\r\n    if (!$type.isNumber(y)) {\r\n        y = 0;\r\n    }\r\n    return moveTo({ x: x, y: y }) + lineTo({ x: x + width, y: y }) + lineTo({ x: x + width, y: y + height }) + lineTo({ x: x, y: y + height }) + closePath();\r\n}\r\n/**\r\n * Converts a rectangle to an SVG path.\r\n *\r\n * @ignore Exclude from docs\r\n * @param rect  Rectangle\r\n * @param ccw   Counter-clockwise?\r\n * @return SVG path\r\n */\r\nexport function rectToPath(rect, ccw) {\r\n    var c = \",\";\r\n    var L = \" L\";\r\n    if (ccw) {\r\n        return \"M\" + rect.x\r\n            + c + rect.y + L + rect.x\r\n            + c + (rect.y + rect.height) + L + (rect.x + rect.width)\r\n            + c + (rect.y + rect.height) + L + (rect.x + rect.width)\r\n            + c + rect.y + L + rect.x\r\n            + c + rect.y;\r\n    }\r\n    else {\r\n        return \"M\" + rect.x\r\n            + c + rect.y + L + (rect.x + rect.width)\r\n            + c + rect.y + L + (rect.x + rect.width)\r\n            + c + (rect.y + rect.height) + L + rect.x\r\n            + c + (rect.y + rect.height) + L + rect.x\r\n            + c + rect.y;\r\n    }\r\n}\r\n/**\r\n * Converts SVG path to array of points.\r\n *\r\n * Note, this is experimental feature based on method which is deprecated\r\n * on some browsers and some browsers do not support it at all.\r\n *\r\n * You can save the output of this function, but not rely on it completely.\r\n */\r\nexport function pathToPoints(path, pointCount) {\r\n    var paper = getGhostPaper();\r\n    var svgPath = paper.add(\"path\").node;\r\n    svgPath.setAttribute(\"d\", path);\r\n    if (svgPath.getPointAtLength && svgPath.getTotalLength) {\r\n        var length_1 = svgPath.getTotalLength();\r\n        var toPoints = [];\r\n        for (var i = 0; i < pointCount; i++) {\r\n            var point = svgPath.getPointAtLength(i / pointCount * length_1);\r\n            toPoints.push({ x: point.x, y: point.y });\r\n        }\r\n        return toPoints;\r\n    }\r\n    svgPath.remove();\r\n}\r\nexport function spiralPoints(cx, cy, radius, radiusY, innerRadius, step, radiusStep, startAngle, endAngle) {\r\n    if (!$type.isNumber(startAngle)) {\r\n        startAngle = 0;\r\n    }\r\n    if (!$type.isNumber(startAngle)) {\r\n        endAngle = startAngle;\r\n    }\r\n    var r = innerRadius + 0.01;\r\n    var angle = startAngle * $math.RADIANS;\r\n    var points = [];\r\n    while (r < radius + radiusStep) {\r\n        var stepSize = step;\r\n        if (stepSize / 2 > r) {\r\n            stepSize = 2 * r;\r\n        }\r\n        angle += 2 * Math.asin(stepSize / 2 / r);\r\n        if (angle * $math.DEGREES > endAngle + ((radius - innerRadius) / radiusStep) * 360) {\r\n            break;\r\n        }\r\n        var degrees = angle * $math.DEGREES;\r\n        var point = { x: cx + r * Math.cos(angle), y: cy + r * radiusY / radius * Math.sin(angle) };\r\n        points.push(point);\r\n        r = innerRadius + degrees / 360 * radiusStep;\r\n    }\r\n    points.shift();\r\n    return points;\r\n}\r\nexport function pointsToPath(points) {\r\n    if (!points || points.length == 0) {\r\n        return \"\";\r\n    }\r\n    var path = moveTo(points[0]);\r\n    if (points && points.length > 0) {\r\n        for (var i = 1; i < points.length; i++) {\r\n            path += lineTo(points[i]);\r\n        }\r\n    }\r\n    return path;\r\n}\r\n//# sourceMappingURL=Path.js.map","/**\r\n * This module contains Color object definition\r\n */\r\nimport { registry } from \"../Registry\";\r\nimport * as $colors from \"./Colors\";\r\nimport * as $type from \"./Type\";\r\n/**\r\n * Represents a color.\r\n *\r\n * `Color` accepts value only in [[iRGB]] object format. To create `Color`\r\n * object by parsing it from any supported string-based formats, use helper\r\n * [[color]] function:\r\n *\r\n * ```TypeScript\r\n * am4core.color(\"#ff0000\");\r\n * am4core.color(\"#f00\");\r\n * am4core.color(\"rgb(255, 0, 0)\");\r\n * am4core.color(\"rgba(255, 0, 0, 0.5)\");\r\n * am4core.color({ r: 255, g: 0, b: 0 });\r\n * am4core.color(\"red\");\r\n * ```\r\n * ```JavaScript\r\n * am4core.color(\"#ff0000\");\r\n * am4core.color(\"#f00\");\r\n * am4core.color(\"rgb(255, 0, 0)\");\r\n * am4core.color(\"rgba(255, 0, 0, 0.5)\");\r\n * am4core.color({ r: 255, g: 0, b: 0 });\r\n * am4core.color(\"red\");\r\n * ```\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/colors/} for color-related info\r\n */\r\nvar Color = /** @class */ (function () {\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param color Source color\r\n     */\r\n    function Color(color) {\r\n        this._value = color;\r\n    }\r\n    Object.defineProperty(Color.prototype, \"rgb\", {\r\n        /**\r\n         * Returns [[iRGB]] representation of the color.\r\n         *\r\n         * @return RGB object\r\n         */\r\n        get: function () {\r\n            return this._value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Color.prototype, \"hex\", {\r\n        /**\r\n         * Returns color hex value string, e.g. \"#FF0000\".\r\n         *\r\n         * @return Hex color code\r\n         */\r\n        get: function () {\r\n            return this._value ? $colors.rgbToHex(this._value) : \"none\";\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Color.prototype, \"rgba\", {\r\n        /**\r\n         * Returns an `rgba()` representation of the color, e.g.:\r\n         * `rgba(255, 0, 0, 0.5)`.\r\n         *\r\n         * @return rgba color string\r\n         */\r\n        get: function () {\r\n            return this._value ? $colors.rgbToRGBA(this._value) : \"none\";\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Color.prototype, \"alpha\", {\r\n        /**\r\n         * Returns current transparency.\r\n         *\r\n         * @return Alpha (0-1)\r\n         */\r\n        get: function () {\r\n            if (this._value != null && this._value.a != null) {\r\n                return this._value.a;\r\n            }\r\n            else {\r\n                return 1;\r\n            }\r\n        },\r\n        /**\r\n         * Set alpha (transparency) of the color.\r\n         *\r\n         * @param value Alpha (0-1)\r\n         */\r\n        set: function (value) {\r\n            if (this._value) {\r\n                this._value.a = value;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Color.prototype, \"lightColor\", {\r\n        /**\r\n         * Returns current light color setting.\r\n         *\r\n         * @return Color\r\n         */\r\n        get: function () {\r\n            if (!this._lightColor) {\r\n                this._lightColor = new Color({ r: 255, g: 255, b: 255 });\r\n            }\r\n            return this._lightColor;\r\n        },\r\n        /**\r\n         * Sets \"light\" color. Used when determining contrasting color.\r\n         *\r\n         * @param color Color\r\n         */\r\n        set: function (color) {\r\n            this._lightColor = color;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Color.prototype, \"darkColor\", {\r\n        /**\r\n         * Returns current dark color setting.\r\n         *\r\n         * @return Color\r\n         */\r\n        get: function () {\r\n            if (!this._darkColor) {\r\n                this._darkColor = new Color({ r: 0, g: 0, b: 0 });\r\n            }\r\n            return this._darkColor;\r\n        },\r\n        /**\r\n         * Sets \"dark\" color. Used when determining contrasting color.\r\n         *\r\n         * @param color Color\r\n         */\r\n        set: function (color) {\r\n            this._darkColor = color;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Overrides `toString` method so that [[Color]] object can be used as\r\n     * string.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return String represantion of color (usable in CSS)\r\n     */\r\n    Color.prototype.toString = function () {\r\n        return this.alpha < 1 ? this.rgba : this.hex;\r\n    };\r\n    /**\r\n     * Returns a new [[Color]] which is percent lighter (positive value),\r\n     * or darker (negative value).\r\n     *\r\n     * Parameter is in the scale of -1 to 1.\r\n     *\r\n     * @param percent  Increase/decrease lightness by X\r\n     * @return New Color\r\n     */\r\n    Color.prototype.lighten = function (percent) {\r\n        return new Color($colors.lighten(this.rgb, percent));\r\n    };\r\n    /**\r\n     * Returns a new [[Color]] which is percent brighter (positive value),\r\n     * or darker (negative value).\r\n     *\r\n     * Parameter is in the scale of -1 to 1.\r\n     *\r\n     * @param percent  Increase/decrease brightness by X\r\n     * @return New Color\r\n     */\r\n    Color.prototype.brighten = function (percent) {\r\n        return new Color($colors.brighten(this.rgb, percent));\r\n    };\r\n    /**\r\n     * Returns a new [[Color]] based on current color with specific saturation\r\n     * applied.\r\n     *\r\n     * `saturation` can be in the range of 0 (fully desaturated) to 1 (fully\r\n     * saturated).\r\n     *\r\n     * @param saturation  Saturation (0-1)\r\n     * @return New (saturated) color\r\n     */\r\n    Color.prototype.saturate = function (saturation) {\r\n        return new Color($colors.saturate(this.rgb, saturation));\r\n    };\r\n    Object.defineProperty(Color.prototype, \"alternative\", {\r\n        /**\r\n         * Returns a either light or dark color that contrasts specifically with\r\n         * this color.\r\n         *\r\n         * Uses properties `darkColor` (default black) and `lightColor` (default\r\n         * white).\r\n         *\r\n         * Useful when determining which color label should be on a colored\r\n         * background, so that it stands out.\r\n         *\r\n         * @return Contrasting color\r\n         */\r\n        get: function () {\r\n            if (this.rgb != null) {\r\n                return $colors.isLight(this.rgb) ? this.darkColor : this.lightColor;\r\n            }\r\n            else {\r\n                throw new Error(\"Color does not exist\");\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Color;\r\n}());\r\nexport { Color };\r\n/**\r\n * Resolves an input variable to a normal [[iRGB]] color and creates [[Color]]\r\n * object for it.\r\n *\r\n * @param value  Input value\r\n * @param alpha  Alpha (0-1)\r\n * @return Color object\r\n */\r\nexport function color(value, alpha) {\r\n    if (!$type.hasValue(value)) {\r\n        return new Color(undefined);\r\n    }\r\n    if (typeof value == \"string\") {\r\n        var cacheId = \"_color_\" + value + \"_\" + (alpha || \"1\");\r\n        var cached = registry.getCache(cacheId);\r\n        if (cached) {\r\n            return new Color({\r\n                r: cached.r,\r\n                g: cached.g,\r\n                b: cached.b,\r\n                a: cached.a\r\n            });\r\n        }\r\n        var rgb = $colors.rgb(value, alpha);\r\n        registry.setCache(cacheId, rgb);\r\n        return new Color(rgb);\r\n    }\r\n    // Check if it's already a Color object\r\n    if (value instanceof Color) {\r\n        if ($type.hasValue(alpha)) {\r\n            value.alpha = alpha;\r\n        }\r\n        return value;\r\n    }\r\n    // Not a string or Color instance, it's the iRGB object then\r\n    return new Color(value);\r\n}\r\n/**\r\n * Checks if supplied argument is instance of [[Color]].\r\n *\r\n * @param value  Input value\r\n * @return Is Color?\r\n */\r\nexport function isColor(value) {\r\n    return value instanceof Color;\r\n}\r\n/**\r\n * Converts any value to [[Color]].\r\n *\r\n * @param value  Input value\r\n * @return Color\r\n */\r\nexport function castColor(value) {\r\n    return color(value);\r\n}\r\n/**\r\n * Converts any value into a [[Color]].\r\n *\r\n * @param value  Source value\r\n * @return Color object\r\n */\r\nexport function toColor(value) {\r\n    if ($type.hasValue(value) && !isColor(value)) {\r\n        return castColor(value);\r\n    }\r\n    return value;\r\n}\r\n//# sourceMappingURL=Color.js.map","/**\r\n * This module contains a version of ColorSet that can (and should) be used for\r\n * coloring UI elements.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObject } from \"../Base\";\r\nimport { registry } from \"../Registry\";\r\nimport { color } from \"./Color\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * This module contains a version of ColorSet that can (and should) be used for\r\n * coloring UI elements.\r\n *\r\n * The main difference from the basic [[ColorSet]] is that instead of sequenced\r\n * colors, it uses a concept of named colors.\r\n *\r\n * This way, every element in the UI can extract an exact color theme author\r\n * meant for the specific purpose, like strokes, backgrounds, etc.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/colors/} for color-related info\r\n */\r\nvar InterfaceColorSet = /** @class */ (function (_super) {\r\n    __extends(InterfaceColorSet, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function InterfaceColorSet() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * Maps the list of purposes (like \"stroke\") to an index of color of the\r\n         * color set.\r\n         */\r\n        _this._purposes = {\r\n            stroke: color(\"#e5e5e5\"),\r\n            fill: color(\"#f3f3f3\"),\r\n            primaryButton: color(\"#6794dc\"),\r\n            primaryButtonHover: color(\"#6771dc\"),\r\n            primaryButtonDown: color(\"#68dc75\"),\r\n            primaryButtonActive: color(\"#68dc75\"),\r\n            primaryButtonText: color(\"#FFFFFF\"),\r\n            primaryButtonStroke: color(\"#FFFFFF\"),\r\n            secondaryButton: color(\"#d9d9d9\"),\r\n            secondaryButtonHover: color(\"#d9d9d9\").brighten(-0.25),\r\n            secondaryButtonDown: color(\"#d9d9d9\").brighten(-0.35),\r\n            secondaryButtonActive: color(\"#d9d9d9\").brighten(0.35),\r\n            secondaryButtonText: color(\"#000000\"),\r\n            secondaryButtonStroke: color(\"#FFFFFF\"),\r\n            grid: color(\"#000000\"),\r\n            background: color(\"#ffffff\"),\r\n            alternativeBackground: color(\"#000000\"),\r\n            text: color(\"#000000\"),\r\n            alternativeText: color(\"#FFFFFF\"),\r\n            disabledBackground: color(\"#999999\"),\r\n            positive: color(\"#67dc75\"),\r\n            negative: color(\"#dc6788\")\r\n        };\r\n        _this.className = \"InterfaceColorSet\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    InterfaceColorSet.prototype.debug = function () { };\r\n    /**\r\n     * Returns a color to be used for the specific purpose.\r\n     *\r\n     * ```TypeScript\r\n     * let uicolors = new am4core.InterfaceColorSet();\r\n     * console.log(uicolors.getFor(\"stroke\"));\r\n     * ```\r\n     * ```JavaScript\r\n     * var uicolors = new am4core.InterfaceColorSet();\r\n     * console.log(uicolors.getFor(\"stroke\"));\r\n     * ```\r\n     *\r\n     * @param purpose  Color use purpuse\r\n     * @return Color\r\n     */\r\n    InterfaceColorSet.prototype.getFor = function (purpose) {\r\n        return this._purposes[purpose];\r\n    };\r\n    /**\r\n     * Sets color to be used for the specific purpose.\r\n     *\r\n     * @param purpose  Color use purpose\r\n     * @param color    Color\r\n     */\r\n    InterfaceColorSet.prototype.setFor = function (purpose, color) {\r\n        this._purposes[purpose] = color;\r\n    };\r\n    return InterfaceColorSet;\r\n}(BaseObject));\r\nexport { InterfaceColorSet };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"InterfaceColorSet\"] = InterfaceColorSet;\r\n//# sourceMappingURL=InterfaceColorSet.js.map","import { __extends, __generator, __read } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Disposer } from \"./Disposer\";\r\nimport { EventDispatcher } from \"./EventDispatcher\";\r\nimport * as $object from \"./Object\";\r\nimport * as $iter from \"./Iterator\";\r\nimport * as $string from \"./String\";\r\n/**\r\n * A disposable dictionary, which when disposed itself will call `dispose()`\r\n * method on all its items.\r\n */\r\nvar DictionaryDisposer = /** @class */ (function (_super) {\r\n    __extends(DictionaryDisposer, _super);\r\n    function DictionaryDisposer(dict) {\r\n        var _this = this;\r\n        var disposer = dict.events.on(\"removed\", function (x) {\r\n            x.oldValue.dispose();\r\n        }, undefined, false);\r\n        _this = _super.call(this, function () {\r\n            disposer.dispose();\r\n            // TODO clear the dictionary ?\r\n            $iter.each(dict.iterator(), function (a) {\r\n                var v = a[1];\r\n                v.dispose();\r\n            });\r\n        }) || this;\r\n        return _this;\r\n    }\r\n    return DictionaryDisposer;\r\n}(Disposer));\r\nexport { DictionaryDisposer };\r\n/**\r\n * A Dictionary is collection where values of some type can be mapped to\r\n * string keys.\r\n *\r\n * You might call it an \"associative list\" or \"associative array\".\r\n */\r\nvar Dictionary = /** @class */ (function () {\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Dictionary() {\r\n        /**\r\n         * Event dispatcher.\r\n         */\r\n        this.events = new EventDispatcher();\r\n        this._dictionary = {};\r\n    }\r\n    /**\r\n     * Returns `true` if key exists in Dictionary.\r\n     *\r\n     * @param key  The key to search for\r\n     * @return `true` if key exists, `false` if it doesn't\r\n     */\r\n    Dictionary.prototype.hasKey = function (key) {\r\n        return $object.hasKey(this._dictionary, key);\r\n    };\r\n    /**\r\n     * Returns the value for a specific key.\r\n     *\r\n     * @param key  The key to search for\r\n     * @return Value for the key, or `undefined` if it doesn't exist\r\n     */\r\n    Dictionary.prototype.getKey = function (key) {\r\n        return this._dictionary[key];\r\n    };\r\n    /**\r\n     * Inserts value at specific key.\r\n     *\r\n     * Will thrown an exception if the key already exists in the dictionary.\r\n     *\r\n     * @param key    Key\r\n     * @param value  Value\r\n     */\r\n    Dictionary.prototype.insertKey = function (key, value) {\r\n        if ($object.hasKey(this._dictionary, key)) {\r\n            throw new Error(\"Key \" + key + \" already exists in dictionary\");\r\n        }\r\n        else {\r\n            this._dictionary[key] = value;\r\n            if (this.events.isEnabled(\"insertKey\")) {\r\n                this.events.dispatchImmediately(\"insertKey\", {\r\n                    type: \"insertKey\",\r\n                    target: this,\r\n                    key: key,\r\n                    newValue: value\r\n                });\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Adds or updates key/value into dictionary.\r\n     *\r\n     * If the key already exists, the old value will be overwritten.\r\n     *\r\n     * If the new value is exactly the same as the old value (using ===), it won't do anything.\r\n     *\r\n     * @param key    Key\r\n     * @param value  Value\r\n     */\r\n    Dictionary.prototype.setKey = function (key, value) {\r\n        if ($object.hasKey(this._dictionary, key)) {\r\n            var oldValue = this._dictionary[key];\r\n            if (oldValue !== value) {\r\n                this._dictionary[key] = value;\r\n                if (this.events.isEnabled(\"setKey\")) {\r\n                    this.events.dispatchImmediately(\"setKey\", {\r\n                        type: \"setKey\",\r\n                        target: this,\r\n                        key: key,\r\n                        oldValue: oldValue,\r\n                        newValue: value\r\n                    });\r\n                }\r\n                if (this.events.isEnabled(\"removed\")) {\r\n                    this.events.dispatchImmediately(\"removed\", {\r\n                        type: \"removed\",\r\n                        target: this,\r\n                        oldValue: oldValue\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this._dictionary[key] = value;\r\n            if (this.events.isEnabled(\"insertKey\")) {\r\n                this.events.dispatchImmediately(\"insertKey\", {\r\n                    type: \"insertKey\",\r\n                    target: this,\r\n                    key: key,\r\n                    newValue: value\r\n                });\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Updates the value at specific `key` using custom function.\r\n     *\r\n     * Passes in current value into the function, and uses its output as a new\r\n     * value.\r\n     *\r\n     * If the new value is exactly the same as the old value (using ===), it won't do anything.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param key  Key\r\n     * @param fn   Function to transform the value\r\n     */\r\n    Dictionary.prototype.updateKey = function (key, fn) {\r\n        if ($object.hasKey(this._dictionary, key)) {\r\n            var oldValue = this._dictionary[key];\r\n            var newValue = fn(oldValue);\r\n            if (oldValue !== newValue) {\r\n                this._dictionary[key] = newValue;\r\n                if (this.events.isEnabled(\"setKey\")) {\r\n                    this.events.dispatchImmediately(\"setKey\", {\r\n                        type: \"setKey\",\r\n                        target: this,\r\n                        key: key,\r\n                        oldValue: oldValue,\r\n                        newValue: newValue\r\n                    });\r\n                }\r\n                if (this.events.isEnabled(\"removed\")) {\r\n                    this.events.dispatchImmediately(\"removed\", {\r\n                        type: \"removed\",\r\n                        target: this,\r\n                        oldValue: oldValue\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            throw new Error(\"Key \" + key + \" doesn't exist in dictionary\");\r\n        }\r\n    };\r\n    /**\r\n     * Removes value at specific `key` from dictionary.\r\n     *\r\n     * @param key  Key to remove\r\n     */\r\n    Dictionary.prototype.removeKey = function (key) {\r\n        if ($object.hasKey(this._dictionary, key)) {\r\n            var oldValue = this._dictionary[key];\r\n            delete this._dictionary[key];\r\n            if (this.events.isEnabled(\"removeKey\")) {\r\n                this.events.dispatchImmediately(\"removeKey\", {\r\n                    type: \"removeKey\",\r\n                    target: this,\r\n                    key: key,\r\n                    oldValue: oldValue\r\n                });\r\n            }\r\n            if (this.events.isEnabled(\"removed\")) {\r\n                this.events.dispatchImmediately(\"removed\", {\r\n                    type: \"removed\",\r\n                    target: this,\r\n                    oldValue: oldValue\r\n                });\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * [insertKeyIfEmpty description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo description\r\n     * @param key      [description]\r\n     * @param ifEmpty  [description]\r\n     * @return [description]\r\n     */\r\n    Dictionary.prototype.insertKeyIfEmpty = function (key, ifEmpty) {\r\n        if (!this.hasKey(key)) {\r\n            this.insertKey(key, ifEmpty());\r\n        }\r\n        return this.getKey(key);\r\n    };\r\n    /**\r\n     * Removes all items from the dictionary.\r\n     */\r\n    Dictionary.prototype.clear = function () {\r\n        var _this = this;\r\n        // TODO dispatch this after clear\r\n        if (this.events.isEnabled(\"removed\")) {\r\n            $object.each(this._dictionary, function (key, value) {\r\n                _this.events.dispatchImmediately(\"removed\", {\r\n                    type: \"removed\",\r\n                    target: _this,\r\n                    oldValue: value\r\n                });\r\n            });\r\n        }\r\n        this._dictionary = {};\r\n        if (this.events.isEnabled(\"cleared\")) {\r\n            this.events.dispatchImmediately(\"cleared\", {\r\n                type: \"cleared\",\r\n                target: this\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Copies items from another Dictionary.\r\n     *\r\n     * @param source  A Dictionary to copy items from\r\n     */\r\n    Dictionary.prototype.copyFrom = function (source) {\r\n        var _this = this;\r\n        $iter.each(source.iterator(), function (a) {\r\n            // TODO fix this type cast\r\n            _this.setKey(a[0], a[1]);\r\n        });\r\n    };\r\n    /**\r\n     * Returns an interator that can be used to iterate through all items in\r\n     * the dictionary.\r\n     *\r\n     * @return Iterator\r\n     */\r\n    Dictionary.prototype.iterator = function () {\r\n        // @todo fix this type after the Iterator bug is fixed\r\n        // https://github.com/Microsoft/TypeScript/issues/16730\r\n        return $object.entries(this._dictionary);\r\n    };\r\n    /**\r\n     * Returns an ES6 iterator for the keys/values of the dictionary.\r\n     */\r\n    Dictionary.prototype[Symbol.iterator] = function () {\r\n        var _a, _b, _i, key;\r\n        return __generator(this, function (_c) {\r\n            switch (_c.label) {\r\n                case 0:\r\n                    _a = [];\r\n                    for (_b in this._dictionary)\r\n                        _a.push(_b);\r\n                    _i = 0;\r\n                    _c.label = 1;\r\n                case 1:\r\n                    if (!(_i < _a.length)) return [3 /*break*/, 4];\r\n                    key = _a[_i];\r\n                    if (!$object.hasKey(this._dictionary, key)) return [3 /*break*/, 3];\r\n                    return [4 /*yield*/, [key, this._dictionary[key]]];\r\n                case 2:\r\n                    _c.sent();\r\n                    _c.label = 3;\r\n                case 3:\r\n                    _i++;\r\n                    return [3 /*break*/, 1];\r\n                case 4: return [2 /*return*/];\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Calls `f` for each key/value in the dictionary.\r\n     */\r\n    Dictionary.prototype.each = function (f) {\r\n        $iter.each(this.iterator(), function (_a) {\r\n            var _b = __read(_a, 2), key = _b[0], value = _b[1];\r\n            return f(key, value);\r\n        });\r\n    };\r\n    /**\r\n     * Returns an iterator that can be used to iterate through all items in\r\n     * the dictionary, ordered by key.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Iterator\r\n     */\r\n    Dictionary.prototype.sortedIterator = function () {\r\n        return $iter.sort(this.iterator(), function (x, y) { return $string.order(x[0], y[0]); });\r\n    };\r\n    return Dictionary;\r\n}());\r\nexport { Dictionary };\r\n/**\r\n * A version of a [[Dictionary]] that has a \"template\".\r\n *\r\n * A template is an instance of an object, that can be used to create new\r\n * elements in the list without actually needing to create instances for those.\r\n *\r\n * When new element is created in the list, e.g. by calling its `create()`\r\n * method, an exact copy of the element is created (including properties and\r\n * other attributes), inserted into the list and returned.\r\n */\r\nvar DictionaryTemplate = /** @class */ (function (_super) {\r\n    __extends(DictionaryTemplate, _super);\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param t Template object\r\n     */\r\n    function DictionaryTemplate(t) {\r\n        var _this = _super.call(this) || this;\r\n        _this.template = t;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(DictionaryTemplate.prototype, \"template\", {\r\n        /**\r\n         * @return Template object\r\n         */\r\n        get: function () {\r\n            return this._template;\r\n        },\r\n        /**\r\n         * A \"template\" object to copy all properties from when creating new list\r\n         * items.\r\n         *\r\n         * @param v  Template object\r\n         */\r\n        set: function (v) {\r\n            v.isTemplate = true;\r\n            this._template = v;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Copies all elements from other dictionary.\r\n     *\r\n     * @param source  Source dictionary\r\n     */\r\n    DictionaryTemplate.prototype.copyFrom = function (source) {\r\n        var _this = this;\r\n        $iter.each(source.iterator(), function (a) {\r\n            // TODO fix this type cast\r\n            // TODO why does this need to clone ?\r\n            _this.setKey(a[0], a[1].clone());\r\n        });\r\n    };\r\n    /**\r\n     * Instantiates a new object of the specified type, adds it to specified\r\n     * `key` in the dictionary, and returns it.\r\n     *\r\n     * @param make  Item type to use. Will use the default type for the dictionary if not specified.\r\n     * @return      Newly created item\r\n     */\r\n    DictionaryTemplate.prototype.create = function (key) {\r\n        var _this = this;\r\n        return this.insertKeyIfEmpty(key, function () { return _this.template.clone(); });\r\n    };\r\n    return DictionaryTemplate;\r\n}(Dictionary));\r\nexport { DictionaryTemplate };\r\n//# sourceMappingURL=Dictionary.js.map","/**\r\n * A collection of DOM-related functions.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Disposer } from \"./Disposer\";\r\nimport { readFrame, writeFrame } from \"./AsyncPending\";\r\nimport * as $object from \"./Object\";\r\nimport * as $array from \"./Array\";\r\nimport * as $type from \"./Type\";\r\n/**\r\n * SVG namespace.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport var SVGNS = \"http://www.w3.org/2000/svg\";\r\n/**\r\n * XML namespace.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport var XMLNS = \"http://www.w3.org/2000/xmlns/\";\r\n/**\r\n * XLINK namespace.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport var XLINK = \"http://www.w3.org/1999/xlink\";\r\n/**\r\n * Function that adds a disposable event listener directly to a DOM element.\r\n *\r\n * @ignore Exclude from docs\r\n * @param dom       A DOM element to add event to\r\n * @param type      Event type\r\n * @param listener  Event listener\r\n * @returns Disposable event\r\n */\r\nexport function addEventListener(dom, type, listener, options) {\r\n    //@todo proper type check for options: EventListenerOptions | boolean (TS for some reason gives error on passive parameter)\r\n    //console.log(type, dom);\r\n    dom.addEventListener(type, listener, options || false);\r\n    return new Disposer(function () {\r\n        dom.removeEventListener(type, listener, options || false);\r\n    });\r\n}\r\n/**\r\n * Finds and returns an element reference using following logic:\r\n * * If we pass in an element instance, we just return it back.\r\n * * If we pass in a string, the function looks for an element with such id.\r\n * * If no element with such id is found, we grab the first element with a tag name like this.\r\n *\r\n * @ignore Exclude from docs\r\n * @param el  Element definition (reference, or id, or tag name)\r\n * @return Element reference\r\n * @todo Review this function as it seems pretty fuzzy and hacky\r\n */\r\nexport function getElement(el) {\r\n    if ($type.isString(el)) {\r\n        var e = document.getElementById(el);\r\n        if (e == null) {\r\n            e = document.getElementsByClassName(el)[0];\r\n        }\r\n        if (e instanceof HTMLElement) {\r\n            return e;\r\n        }\r\n    }\r\n    else if (el instanceof HTMLElement) {\r\n        return el;\r\n    }\r\n}\r\n/**\r\n * Adds a class name to an HTML or SVG element.\r\n *\r\n * @ignore Exclude from docs\r\n * @param element    Element\r\n * @param className  Class name to add\r\n */\r\nexport function addClass(element, className) {\r\n    if (!element) {\r\n        return;\r\n    }\r\n    if (element.classList) {\r\n        element.classList.add(className);\r\n    }\r\n    else {\r\n        var currentClassName = element.getAttribute(\"class\");\r\n        if (currentClassName) {\r\n            element.setAttribute(\"class\", currentClassName.split(\" \").filter(function (item) {\r\n                return item !== className;\r\n            }).join(\" \") + \" \" + className);\r\n        }\r\n        else {\r\n            element.setAttribute(\"class\", className);\r\n        }\r\n        //element.className = element.className.replace(new RegExp(\"^\" + className + \"| \" + className), \"\") + \" \" + className;\r\n    }\r\n}\r\n/**\r\n * Removes a class name from an HTML or SVG element.\r\n *\r\n * @ignore Exclude from docs\r\n * @param element    Element\r\n * @param className  Class name to add\r\n */\r\nexport function removeClass(element, className) {\r\n    if (!element) {\r\n        return;\r\n    }\r\n    if (element.classList) {\r\n        element.classList.remove(className);\r\n    }\r\n    else {\r\n        var currentClassName = element.getAttribute(\"class\");\r\n        if (currentClassName) {\r\n            element.setAttribute(\"class\", currentClassName.split(\" \").filter(function (item) {\r\n                return item !== className;\r\n            }).join(\" \"));\r\n        }\r\n        //element.className = element.className.replace(new RegExp(\"^\" + className + \"| \" + className), \"\");\r\n    }\r\n}\r\n/**\r\n * Sets style property on DOM element.\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Still needed?\r\n */\r\nexport function setStyle(element, property, value) {\r\n    element.style[property] = value;\r\n}\r\n/**\r\n * Gets the computed style value for an element.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport function getComputedStyle(element, property) {\r\n    if (element.currentStyle) {\r\n        return element.currentStyle[property];\r\n    }\r\n    return document.defaultView.getComputedStyle(element, null).getPropertyValue(property);\r\n}\r\n/**\r\n * Removes focus from any element by shifting focus to body.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport function blur() {\r\n    var input = document.createElement(\"input\");\r\n    input.style.position = \"fixed\";\r\n    input.style.top = \"0px\";\r\n    input.style.left = \"-10000px\";\r\n    document.body.appendChild(input);\r\n    input.focus();\r\n    input.blur();\r\n    document.body.removeChild(input);\r\n}\r\n/**\r\n * Tries to focus the element.\r\n *\r\n * @ignore Exlude from docs\r\n * @param element  Element to focus\r\n */\r\nexport function focus(element) {\r\n    if (element instanceof HTMLElement) {\r\n        element.focus();\r\n    }\r\n    else {\r\n        var input = document.createElement(\"input\");\r\n        var fo = document.createElementNS(SVGNS, \"foreignObject\");\r\n        fo.appendChild(input);\r\n        element.appendChild(fo);\r\n        input.focus();\r\n        input.disabled = true;\r\n        fo.remove();\r\n    }\r\n    /*if ((<any>element).focus != undefined) {\r\n        (<any>element).focus();\r\n    }\r\n    else if (element instanceof SVGSVGElement) {\r\n        // Not implemented\r\n        // @todo implement focus fallback\r\n    }*/\r\n}\r\n/**\r\n * Returns markup for the element including the element tag itself.\r\n * SVG elements do not support `outerHTML` so this functions applies of\r\n * a workaround which creates a new temporary wrapper, clones element and uses\r\n * wrapper's `innerHTML`.\r\n *\r\n * @ignore Exclude from docs\r\n * @param element  Element to get full markup for\r\n * @return Markup\r\n * @deprecated Not in use anywhere\r\n */\r\nexport function outerHTML(element) {\r\n    if (element.outerHTML) {\r\n        return element.outerHTML;\r\n    }\r\n    else {\r\n        var twrap = document.createElement(\"div\");\r\n        var tnode = element.cloneNode(true);\r\n        twrap.appendChild(tnode);\r\n        var content = twrap.innerHTML;\r\n        return content;\r\n    }\r\n}\r\n/**\r\n * Checks if element is a valid DOM node.\r\n *\r\n * @ignore Exclude from docs\r\n * @param el  Element\r\n * @return `true` if element is a valid DOM node\r\n */\r\nexport function isElement(el) {\r\n    return el instanceof Object && el && el.nodeType === 1;\r\n}\r\n/**\r\n * Checks of element `a` contains element `b`.\r\n *\r\n * @param a  Aleged ascendant\r\n * @param b  Aleged descendant\r\n * @return Contains?\r\n */\r\nexport function contains(a, b) {\r\n    var cursor = b;\r\n    while (true) {\r\n        if (a === cursor) {\r\n            return true;\r\n        }\r\n        else if (cursor.parentNode == null) {\r\n            // TODO better ShadowRoot detection\r\n            if (cursor.host == null) {\r\n                return false;\r\n            }\r\n            else {\r\n                cursor = cursor.host;\r\n            }\r\n        }\r\n        else {\r\n            cursor = cursor.parentNode;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Returns the root of the element (either the Document or the ShadowRoot)\r\n *\r\n * @param a  Node\r\n * @return Root\r\n */\r\nexport function getRoot(a) {\r\n    // TODO replace with Node.prototype.getRootNode\r\n    var owner = a.ownerDocument;\r\n    var cursor = a;\r\n    while (true) {\r\n        if (cursor.parentNode == null) {\r\n            // If the cursor is the document, or it is a ShadowRoot\r\n            // TODO better ShadowRoot detection\r\n            if (cursor === owner || cursor.host != null) {\r\n                return cursor;\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            cursor = cursor.parentNode;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Gets the true target of the Event.\r\n *\r\n * This is needed to make events work with the shadow DOM.\r\n *\r\n * @param event  Event\r\n * @return EventTarget\r\n */\r\nexport function eventTarget(event) {\r\n    if (typeof event.composedPath === \"function\") {\r\n        return event.composedPath()[0];\r\n    }\r\n    else {\r\n        return event.target;\r\n    }\r\n}\r\n/**\r\n * Copies attributes from one element to another.\r\n *\r\n * @ignore Exclude from docs\r\n * @param source  Element to copy attributes from\r\n * @param target  Element to copy attributes to\r\n */\r\nexport function copyAttributes(source, target) {\r\n    $array.each(source.attributes, function (attr) {\r\n        // TODO what if it's null ?\r\n        if (attr.value != null) {\r\n            target.setAttribute(attr.name, attr.value);\r\n        }\r\n    });\r\n}\r\n/**\r\n * [fixPixelPerfect description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param el  Element\r\n */\r\nexport function fixPixelPerfect(el) {\r\n    readFrame(function () {\r\n        // sometimes IE doesn't like this\r\n        // TODO figure out a way to remove this\r\n        try {\r\n            var rect = el.getBoundingClientRect();\r\n            var left_1 = rect.left - Math.round(rect.left);\r\n            var top_1 = rect.top - Math.round(rect.top);\r\n            if (left_1 !== 0) {\r\n                writeFrame(function () {\r\n                    el.style.left = left_1 + \"px\";\r\n                });\r\n            }\r\n            if (top_1 !== 0) {\r\n                writeFrame(function () {\r\n                    el.style.top = top_1 + \"px\";\r\n                });\r\n            }\r\n        }\r\n        catch (e) { }\r\n    });\r\n}\r\n/**\r\n * [rootStylesheet description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nvar rootStylesheet;\r\n/**\r\n * [getStylesheet description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @return [description]\r\n */\r\nfunction getStylesheet() {\r\n    if (!$type.hasValue(rootStylesheet)) {\r\n        // TODO use createElementNS ?\r\n        var e = document.createElement(\"style\");\r\n        e.type = \"text/css\";\r\n        document.head.appendChild(e);\r\n        rootStylesheet = e.sheet;\r\n    }\r\n    return rootStylesheet;\r\n}\r\n/**\r\n * [makeStylesheet description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param selector  [description]\r\n * @return [description]\r\n */\r\nfunction makeStylesheet(selector) {\r\n    var root = getStylesheet();\r\n    var index = root.cssRules.length;\r\n    root.insertRule(selector + \"{}\", index);\r\n    return root.cssRules[index];\r\n}\r\n/**\r\n * Defines a class for a CSS rule.\r\n *\r\n * Can be used to dynamically add CSS to the document.\r\n */\r\nvar StyleRule = /** @class */ (function (_super) {\r\n    __extends(StyleRule, _super);\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param selector  CSS selector\r\n     * @param styles    An object of style attribute - value pairs\r\n     */\r\n    function StyleRule(selector, styles) {\r\n        var _this = \r\n        // TODO test this\r\n        _super.call(this, function () {\r\n            var root = getStylesheet();\r\n            // TODO a bit hacky\r\n            var index = $array.indexOf(root.cssRules, _this._rule);\r\n            if (index === -1) {\r\n                throw new Error(\"Could not dispose StyleRule\");\r\n            }\r\n            else {\r\n                root.deleteRule(index);\r\n            }\r\n        }) || this;\r\n        _this._rule = makeStylesheet(selector);\r\n        $object.each(styles, function (key, value) {\r\n            _this.setStyle(key, value);\r\n        });\r\n        return _this;\r\n    }\r\n    Object.defineProperty(StyleRule.prototype, \"selector\", {\r\n        /**\r\n         * @return CSS selector\r\n         */\r\n        get: function () {\r\n            return this._rule.selectorText;\r\n        },\r\n        /**\r\n         * A CSS selector text.\r\n         *\r\n         * E.g.: `.myClass p`\r\n         *\r\n         * @param selector  CSS selector\r\n         */\r\n        set: function (selector) {\r\n            this._rule.selectorText = selector;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Sets the same style properties with browser-specific prefixes.\r\n     *\r\n     * @param name   Attribute name\r\n     * @param value  Attribute value\r\n     */\r\n    StyleRule.prototype._setVendorPrefixName = function (name, value) {\r\n        var style = this._rule.style;\r\n        style.setProperty(\"-webkit-\" + name, value, \"\");\r\n        style.setProperty(\"-moz-\" + name, value, \"\");\r\n        style.setProperty(\"-ms-\" + name, value, \"\");\r\n        style.setProperty(\"-o-\" + name, value, \"\");\r\n        style.setProperty(name, value, \"\");\r\n    };\r\n    /**\r\n     * Sets a value for specific style attribute.\r\n     *\r\n     * @param name   Attribute\r\n     * @param value  Value\r\n     */\r\n    StyleRule.prototype.setStyle = function (name, value) {\r\n        if (name === \"transition\") {\r\n            this._setVendorPrefixName(name, value);\r\n        }\r\n        else {\r\n            this._rule.style.setProperty(name, value, \"\");\r\n        }\r\n    };\r\n    return StyleRule;\r\n}(Disposer));\r\nexport { StyleRule };\r\n/**\r\n * An internal counter for unique style ids.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nvar styleId = 0;\r\n/**\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nvar StyleClass = /** @class */ (function (_super) {\r\n    __extends(StyleClass, _super);\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param styles  An object of style attribute - value pairs\r\n     * @param name    Class name\r\n     */\r\n    function StyleClass(styles, name) {\r\n        var _this = this;\r\n        var className = (!$type.hasValue(name)\r\n            // TODO generate the classname randomly\r\n            ? \"__style_\" + (++styleId) + \"__\"\r\n            : name);\r\n        _this = _super.call(this, \".\" + className, styles) || this;\r\n        _this._className = className;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(StyleClass.prototype, \"className\", {\r\n        /**\r\n         * @return Class name\r\n         */\r\n        get: function () {\r\n            return this._className;\r\n        },\r\n        /**\r\n         * Class name.\r\n         *\r\n         * @param name  Class name\r\n         */\r\n        set: function (name) {\r\n            this._className = name;\r\n            this.selector = \".\" + name;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Converts the whole class to\r\n     * @ignore Exclude from docs\r\n     */\r\n    StyleClass.prototype.toString = function () {\r\n        return this._className;\r\n    };\r\n    return StyleClass;\r\n}(StyleRule));\r\nexport { StyleClass };\r\nexport function ready(f) {\r\n    if (document.readyState !== \"loading\") {\r\n        f();\r\n    }\r\n    else {\r\n        var listener_1 = function () {\r\n            if (document.readyState !== \"loading\") {\r\n                document.removeEventListener(\"readystatechange\", listener_1);\r\n                f();\r\n            }\r\n        };\r\n        document.addEventListener(\"readystatechange\", listener_1);\r\n    }\r\n}\r\n/**\r\n * Returns a font fmaily name for the element (directly set or\r\n * computed/inherited).\r\n *\r\n * @ignore Exclude from docs\r\n * @param element  Element\r\n * @return Font family\r\n */\r\nexport function findFont(element) {\r\n    // Check if element has styles set\r\n    var font = getComputedStyle(element, \"font-family\");\r\n    if (!font) {\r\n        // Completely transparent. Look for a parent\r\n        var parent_1 = element.parentElement || element.parentNode;\r\n        if (parent_1) {\r\n            return findFont(parent_1);\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n    else {\r\n        return font;\r\n    }\r\n}\r\n/**\r\n * Returns a font fmaily name for the element (directly set or\r\n * computed/inherited).\r\n *\r\n * @ignore Exclude from docs\r\n * @param element  Element\r\n * @return Font family\r\n */\r\nexport function findFontSize(element) {\r\n    // Check if element has styles set\r\n    var font = getComputedStyle(element, \"font-size\");\r\n    if (!font) {\r\n        // Completely transparent. Look for a parent\r\n        var parent_2 = element.parentElement || element.parentNode;\r\n        if (parent_2) {\r\n            return findFontSize(parent_2);\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n    else {\r\n        return font;\r\n    }\r\n}\r\n/**\r\n * Checks whether element is not visible, whether directly or via its\r\n * ascendants.\r\n *\r\n * @param   element  Target element\r\n * @return           Hidden?\r\n */\r\nexport function isHidden(element) {\r\n    return (element.offsetParent === null);\r\n}\r\n/**\r\n * Checks wthether element is in the current viewport.\r\n *\r\n * @since 2.5.5\r\n * @param   el Element\r\n * @return     Within viewport?\r\n */\r\nexport function isElementInViewport(el, viewportTarget) {\r\n    // Get position data of the element\r\n    var rect = el.getBoundingClientRect();\r\n    // Should we measure against specific viewport element?\r\n    if (viewportTarget) {\r\n        // Check if viewport itself is visible\r\n        if (!isElementInViewport(viewportTarget)) {\r\n            return false;\r\n        }\r\n        // Check if element is visible within the viewport\r\n        var viewportRect = viewportTarget.getBoundingClientRect();\r\n        return (rect.top >= 0 &&\r\n            rect.left >= 0 &&\r\n            rect.top <= (viewportRect.top + viewportRect.height) &&\r\n            rect.left <= (viewportRect.left + viewportRect.width));\r\n    }\r\n    return (rect.top >= 0 &&\r\n        rect.left >= 0 &&\r\n        rect.top <= (window.innerHeight || document.documentElement.clientHeight) &&\r\n        rect.left <= (window.innerWidth || document.documentElement.clientWidth));\r\n}\r\n//# sourceMappingURL=DOM.js.map","/**\r\n * An Adapter can be used to apply chained synchronous transformations to any\r\n * value at runtime.\r\n *\r\n * Each type class using Adapters must have `adapters` property and adapter\r\n * interface defined.\r\n *\r\n * Adapters can be used to allow external code to apply transformations to any\r\n * value at any time.\r\n *\r\n * For example we have a Weather class which has a method `now()` which returns\r\n * current temperature.\r\n *\r\n * ```\r\n * function now() {\r\n *   // ... calculate temperature\r\n *   let temp = \"Temperature now is \" + degrees + \"F\";\r\n *   return temp;\r\n * }\r\n * ```\r\n *\r\n * Now, supposed we want to let other classes to modify the output of the\r\n * `now()`? We just apply an adapter to the `temp` before it is returned:\r\n *\r\n * ```\r\n * temp = this.adapters.apply(\"now\", {\r\n *   temp: temp,\r\n *   degrees: degrees\r\n * }).temp;\r\n * ```\r\n *\r\n * Some other class might tap onto it by defining an Adapter that calculates\r\n * the temperature in Celsius:\r\n *\r\n * weather.adapters.add(\"now\", (arg) => {\r\n *   arg.temp += \"(\" + farenheitToCelsius(arg.degrees) + \"C)\";\r\n *   return arh;\r\n * });\r\n *\r\n * Furthermore some time-related class could add time:\r\n *\r\n * weather.adapters.add(\"now\", (arg) => {\r\n *   arg.temp += \"; the time now is \" + (new Date().toLocaleString());\r\n *   return arh;\r\n * });\r\n *\r\n * So without adapters we would get output like this:\r\n *\r\n * ```\r\n * Temperature now is 90F\r\n * ```\r\n *\r\n * With adapters applied we now have:\r\n *\r\n * ```\r\n * Temperature now is 90F (32C); the time now is 12/11/2012, 7:00:00 PM\r\n * ```\r\n */\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { SortedList } from \"./SortedList\";\r\nimport * as $number from \"./Number\";\r\nimport * as $order from \"./Order\";\r\nimport * as $iter from \"../utils/Iterator\";\r\nimport * as $array from \"../utils/Array\";\r\nimport * as $type from \"../utils/Type\";\r\n/**\r\n * ============================================================================\r\n * GLOBAL ADAPTER\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * A global adapter is an adpater that is attached to a class type rather than\r\n * specific object instance.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nvar GlobalAdapter = /** @class */ (function () {\r\n    function GlobalAdapter() {\r\n        /**\r\n         * Callback id iterator.\r\n         */\r\n        this._callbackId = 0;\r\n        /**\r\n         * A list of if callbacks (adapters).\r\n         */\r\n        this._callbacks = new SortedList(function (left, right) {\r\n            return $order.or($number.order(left.priority, right.priority), $number.order(left.id, right.id));\r\n        });\r\n    }\r\n    /**\r\n     * Adds a global callback which is not specific to any particular object.\r\n     * Whenever an adapter in any object of the specific class type is invoked\r\n     * global adapters will kick in.\r\n     *\r\n     * @param type      Class type\r\n     * @param key       Adapter key\r\n     * @param callback  Callback function\r\n     * @param priority  Priority (higher priority meaning adapter will be applied later)\r\n     * @param scope     Callback function scaope\r\n     */\r\n    GlobalAdapter.prototype.addAll = function (type, key, callback, priority, scope) {\r\n        if (priority === void 0) { priority = 0; }\r\n        this._callbacks.insert({\r\n            id: ++this._callbackId,\r\n            key: key,\r\n            callback: callback,\r\n            priority: priority,\r\n            scope: scope,\r\n            type: type\r\n        });\r\n    };\r\n    /**\r\n     * Returns if there are adapters for specific type available.\r\n     *\r\n     * @param type  Adapter type\r\n     * @param key   Adapter key\r\n     * @return {boolean}\r\n     */\r\n    GlobalAdapter.prototype.isEnabled = function (type, key) {\r\n        return $array.any(this._callbacks.values, function (x) { return x.key === key && type instanceof x.type; });\r\n    };\r\n    /**\r\n     * Applies global adapters for the object of the specific type.\r\n     *\r\n     * @param type   Class type\r\n     * @param key    Adapter key\r\n     * @param value  Value\r\n     */\r\n    GlobalAdapter.prototype.applyAll = function (type, key, value) {\r\n        // This is needed to improve the performance and reduce garbage collection\r\n        var callbacks = this._callbacks.values;\r\n        var length = callbacks.length;\r\n        if (length == 0) {\r\n            return value;\r\n        }\r\n        // Cycle through all callbacks and find the ones we need to use\r\n        for (var i = 0; i < length; ++i) {\r\n            var item = callbacks[i];\r\n            if (item.key === key && type instanceof item.type) {\r\n                value = item.callback.call(item.scope, value, type, key);\r\n            }\r\n        }\r\n        return value;\r\n    };\r\n    return GlobalAdapter;\r\n}());\r\nexport { GlobalAdapter };\r\n/**\r\n * A global Adapter for plugins that want to add specific\r\n * functionality for any chart, not just specific instance.\r\n *\r\n * If you want to add an adapter which applies to all instances of the same\r\n * object type, like, for instance all slices in PieSeries, you can use\r\n * global adapter.\r\n *\r\n * Global adapter is a system-wide instance, accessible via `globalAdapter`.\r\n *\r\n * ```TypeScript\r\n * am4core.globalAdapter.addAll<am4charts.IPieSeriesAdapters, am4charts.PieSeries, \"fill\">(am4charts.PieSeries, \"fill\", (value, target, key) => {\r\n *   return am4core.color(\"#005500\");\r\n * });\r\n * ```\r\n * ```JavaScript\r\n * am4core.globalAdapter.addAll(am4charts.PieSeries, \"fill\", (value, target, key) => {\r\n *   return am4core.color(\"#005500\");\r\n * });\r\n * ```\r\n *\r\n * @todo Description (improve)\r\n */\r\nexport var globalAdapter = new GlobalAdapter();\r\n/**\r\n * ============================================================================\r\n * REGULAR ADAPTER\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Adapter allows adding ordered callback functions and associating them with a\r\n * string-based key. An Adapter user can then easily invoke those callbacks to\r\n * apply custom functions on its input, output or intermediate values.\r\n *\r\n * Custom code and plugins can add their own callbacks to modify and enhance\r\n * core functionality.\r\n *\r\n * See the description of `add()` for an example.\r\n *\r\n * Almost any object in amCharts4 has own adapter, accessible with `adapter`\r\n * property.\r\n *\r\n * Any adapters added to it will be applied to that object only.\r\n *\r\n * ### Global Adapters\r\n *\r\n * If you want to add an adapter which applies to all instances of the same\r\n * object type, like, for instance all slices in PieSeries, you can use\r\n * global adapter.\r\n *\r\n * Global adapter is a system-wide instance, accessible via `globalAdapter`.\r\n *\r\n * ```TypeScript\r\n * am4core.globalAdapter.addAll<am4charts.IPieSeriesAdapters, am4charts.PieSeries, \"fill\">(am4charts.PieSeries. \"fill\", (value, target, key) => {\r\n *   return am4core.color(\"#005500\");\r\n * });\r\n * ```\r\n * ```JavaScript\r\n * am4core.globalAdapter.addAll(am4charts.PieSeries. \"fill\", (value, target, key) => {\r\n *   return am4core.color(\"#005500\");\r\n * });\r\n * ```\r\n *\r\n * {@link https://www.amcharts.com/docs/v4/reference/adapter_module/#globalAdapter_property More info}.\r\n *\r\n * @important\r\n */\r\nvar Adapter = /** @class */ (function () {\r\n    /**\r\n     * Constructor, sets the object referece this Adapter should be used for.\r\n     *\r\n     * @param c Object\r\n     */\r\n    function Adapter(c) {\r\n        /**\r\n         * Internal counter for callback ids.\r\n         */\r\n        this._callbackId = 0;\r\n        /**\r\n         * A list of adapter callbacks.\r\n         *\r\n         * @param $number.order(left.priority, right.priority) [description]\r\n         * @param $number.order(left.id,       right.id));\t}  [description]\r\n         */\r\n        this._callbacks = new SortedList(function (left, right) {\r\n            return $order.or($number.order(left.priority, right.priority), $number.order(left.id, right.id));\r\n        });\r\n        this._disabled = {};\r\n        this.object = c;\r\n        // TODO this exposes the internal events\r\n        this.events = this._callbacks.events;\r\n    }\r\n    /**\r\n     * Adds a callback for a specific key.\r\n     *\r\n     * ```TypeScript\r\n     * // Override fill color value and make all slices green\r\n     * chart.series.template.adapter.add(\"fill\", (value, target, key) => {\r\n     *   return am4core.color(\"#005500\");\r\n     * });\r\n     * ```\r\n     * ```JavaScript\r\n     * // Override fill color value and make all slices green\r\n     * chart.series.template.adapter.add(\"fill\", function(value, target, key) {\r\n     *   return am4core.color(\"#005500\");\r\n     * });\r\n     * ```\r\n     * ```JSON\r\n     * {\r\n     *   // ...\r\n     *   \"series\": [{\r\n     *     // ...\r\n     *     \"adapter\": {\r\n     *     \t// Override fill color value and make all slices green\r\n     *     \t\"fill\": function(value, target, key) {\r\n     *     \t  return am4core.color(\"#005500\");\r\n     *     \t}\r\n     *     }\r\n     *   }]\r\n     * }\r\n     * ```\r\n     *\r\n     * The above will call user-defined function (adapter) whenever `fill` value\r\n     * is requested from the Pie series, allowing it to override the default\r\n     * using custom code and any fuzzy logic.\r\n     *\r\n     * There can be any number of adapters set on one property key.\r\n     *\r\n     * In this case adapters will be applied in daisy-chain fashion. The first\r\n     * adapter in queue will make its transformation. The next one will have\r\n     * the output of the first adapter as a starting value, etc.\r\n     *\r\n     * The order of the adapters are determined either by the order they were\r\n     * added in, or their `priority` value.\r\n     *\r\n     * The heigher the `priority`, the later in the game adapter will be applied.\r\n     *\r\n     * @param key       Key\r\n     * @param callback  A callback function\r\n     * @param priority  The higher priority, the more chance the adapter will be applied last\r\n     * @param scope     Scope for the callback function\r\n     */\r\n    Adapter.prototype.add = function (key, callback, priority, scope) {\r\n        if (priority === void 0) { priority = 0; }\r\n        this._callbacks.insert({\r\n            id: ++this._callbackId,\r\n            key: key,\r\n            callback: callback,\r\n            priority: priority,\r\n            scope: scope\r\n        });\r\n    };\r\n    /**\r\n     * Checks whether specific adapter is already set.\r\n     *\r\n     * @param key       Key\r\n     * @param callback  A callback function\r\n     * @param priority  The higher priority, the more chance the adapter will be applied last\r\n     * @param scope     Scope for the callback function\r\n     * @returns                            Adapter set?\r\n     */\r\n    Adapter.prototype.has = function (key, callback, priority, scope) {\r\n        if (priority === void 0) { priority = 0; }\r\n        return $iter.contains(this._callbacks.iterator(), function (item) {\r\n            return item.key === key && item.callback === callback && item.priority === priority && item.scope === scope;\r\n        });\r\n    };\r\n    /**\r\n     * Removes adapter callbacks for the specific `key`.\r\n     *\r\n     * If `priority` is specified, only callbacks for that priority are removed.\r\n     *\r\n     * @param key      Key\r\n     * @param priority Priority\r\n     * @todo Implement\r\n     */\r\n    Adapter.prototype.remove = function (key, priority) {\r\n        var _this = this;\r\n        // It has to make a copy because it removes the elements while iterating\r\n        // TODO inefficient\r\n        // TODO should this re-enable the key ?\r\n        $array.each($iter.toArray(this._callbacks.iterator()), function (item) {\r\n            // TODO test this\r\n            if (item.key === key && (!$type.isNumber(priority) || priority === item.priority)) {\r\n                _this._callbacks.remove(item);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Enable applying adapters for a certain key, if it was disabled before by\r\n     * `disableKey()`.\r\n     *\r\n     * @param key Key\r\n     */\r\n    Adapter.prototype.enableKey = function (key) {\r\n        delete this._disabled[key];\r\n    };\r\n    /**\r\n     * Disable applying adapters for a certain key.\r\n     *\r\n     * Optionally, can set how many applies to skip before automatically\r\n     * re-enabling the applying.\r\n     *\r\n     * @param key     Key\r\n     * @param amount  Number of applies to skip\r\n     */\r\n    Adapter.prototype.disableKey = function (key, amount) {\r\n        if (amount === void 0) { amount = Infinity; }\r\n        this._disabled[key] = amount;\r\n    };\r\n    Adapter.prototype._hasListenersByType = function (key) {\r\n        return $array.any(this._callbacks.values, function (x) { return x.key === key; });\r\n    };\r\n    /**\r\n     * Returns if there are any enabled adapters set for the specific `key`.\r\n     *\r\n     * @returns Are there any adapters for the key?\r\n     */\r\n    Adapter.prototype.isEnabled = function (key) {\r\n        return this._disabled[key] == null && (this._hasListenersByType(key) || globalAdapter.isEnabled(this.object, key));\r\n    };\r\n    Adapter.prototype._shouldDispatch = function (key) {\r\n        var count = this._disabled[key];\r\n        if (!$type.isNumber(count)) {\r\n            return true;\r\n        }\r\n        else {\r\n            if (count <= 1) {\r\n                delete this._disabled[key];\r\n            }\r\n            else {\r\n                --this._disabled[key];\r\n            }\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Passes the input value through all the callbacks for the defined `key`.\r\n     *\r\n     * @param key      Key\r\n     * @param value    Input value\r\n     * @param ...rest  Rest of the parameters to be passed into callback\r\n     * @return Output value\r\n     */\r\n    Adapter.prototype.apply = function (key, value) {\r\n        if (this._shouldDispatch(key)) {\r\n            // This is needed to improve the performance and reduce garbage collection\r\n            var callbacks = this._callbacks.values;\r\n            var length_1 = callbacks.length;\r\n            if (length_1 > 0) {\r\n                for (var i = 0; i < length_1; ++i) {\r\n                    var item = callbacks[i];\r\n                    if (item.key === key) {\r\n                        value = item.callback.call(item.scope, value, this.object, key);\r\n                    }\r\n                }\r\n            }\r\n            // Apply global adapters\r\n            value = globalAdapter.applyAll(this.object, key, value);\r\n            return value;\r\n        }\r\n        else {\r\n            return value;\r\n        }\r\n    };\r\n    /**\r\n     * Returns all adapter keys which are in this adapter.\r\n     *\r\n     * @return Adapter keys\r\n     */\r\n    Adapter.prototype.keys = function () {\r\n        // TODO inefficient\r\n        return $iter.toArray($iter.map(this._callbacks.iterator(), function (x) { return x.key; }));\r\n    };\r\n    /**\r\n     * Copies all the adapter callbacks from `source`.\r\n     *\r\n     * @param source  An Adapter to copy items from\r\n     */\r\n    Adapter.prototype.copyFrom = function (source) {\r\n        var _this = this;\r\n        $iter.each(source._callbacks.iterator(), function (x) {\r\n            _this.add(x.key, x.callback, x.priority, x.scope);\r\n        });\r\n    };\r\n    /**\r\n     * Clears all callbacks from this Adapter.\r\n     */\r\n    Adapter.prototype.clear = function () {\r\n        // TODO should this also re-enable all the keys ?\r\n        this._callbacks.clear();\r\n    };\r\n    return Adapter;\r\n}());\r\nexport { Adapter };\r\n//# sourceMappingURL=Adapter.js.map","/**\r\n * Interaction manages all aspects of user interaction - mouse move,\r\n * click, hover, drag events, touch gestures.\r\n *\r\n * [[InteractionObject]] elements that want to use certain events, must attach event\r\n * listeners to Interaction instance.\r\n *\r\n * Interaction itself will not modify [[InteractionObject]] elements, it will be up to\r\n * those elements to handle interaction information received via event triggers.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObjectEvents } from \"../Base\";\r\nimport { List } from \"../utils/List\";\r\nimport { Animation } from \"../utils/Animation\";\r\nimport { MultiDisposer } from \"../utils/Disposer\";\r\nimport { InteractionObject } from \"./InteractionObject\";\r\nimport { InteractionKeyboardObject } from \"./InteractionKeyboardObject\";\r\nimport { Dictionary } from \"../utils/Dictionary\";\r\nimport { Inertia } from \"./Inertia\";\r\nimport { addEventListener } from \"../utils/DOM\";\r\nimport { keyboard } from \"../utils/Keyboard\";\r\nimport { system } from \"./../System\";\r\nimport * as $ease from \"../utils/Ease\";\r\nimport * as $math from \"../utils/Math\";\r\nimport * as $dom from \"../utils/DOM\";\r\nimport * as $iter from \"../utils/Iterator\";\r\nimport * as $type from \"../utils/Type\";\r\nimport * as $time from \"../utils/Time\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n* Interaction manages all aspects of user interaction - mouse move,\r\n* click, hover, drag events, touch gestures.\r\n*\r\n* [[InteractionObject]] elements that want to use certain events, must attach event\r\n* listeners to Interaction instance.\r\n*\r\n* Interaction itself will not modify [[InteractionObject]] elements, it will be up to\r\n* those elements to handle interaction information received via event triggers.\r\n*\r\n* @see {@link IInteractionEvents} for a list of available events\r\n*/\r\nvar Interaction = /** @class */ (function (_super) {\r\n    __extends(Interaction, _super);\r\n    /**\r\n     * Constructor. Sets up universal document-wide move events to handle stuff\r\n     * outside particular chart container.\r\n     */\r\n    function Interaction() {\r\n        var _this = \r\n        // Call super\r\n        _super.call(this) || this;\r\n        /**\r\n         * An indicator of global events were already initialized.\r\n         */\r\n        _this._globalEventsAdded = false;\r\n        /**\r\n         * Holds which mouse event listeners to use.\r\n         */\r\n        _this._pointerEvents = {\r\n            \"pointerdown\": \"mousedown\",\r\n            \"pointerup\": \"mouseup\",\r\n            \"pointermove\": \"mousemove\",\r\n            \"pointercancel\": \"mouseup\",\r\n            \"pointerover\": \"mouseover\",\r\n            \"pointerout\": \"mouseout\",\r\n            \"wheel\": \"wheel\"\r\n        };\r\n        /**\r\n         * Indicates if Interaction should use only \"pointer\" type events, like\r\n         * \"pointermove\", available in all modern browsers, ignoring \"legacy\"\r\n         * events, like \"touchmove\".\r\n         */\r\n        _this._usePointerEventsOnly = false;\r\n        /**\r\n         * Use only touch events (for touch only devices such as tablets and phones)\r\n         */\r\n        _this._useTouchEventsOnly = false;\r\n        /**\r\n         * Add special hover events. Normally, touch device tap will also simulate\r\n         * hover event. On some devices (ahem iOS) we want to prevent that so that\r\n         * over/out events are not duplicated.\r\n         */\r\n        _this._addHoverEvents = true;\r\n        /**\r\n         * Indicates if passive mode options is supported by this browser.\r\n         */\r\n        _this._passiveSupported = false;\r\n        /**\r\n         * Holds list of delayed events\r\n         */\r\n        _this._delayedEvents = { out: [] };\r\n        /**\r\n         * List of objects that current have a pointer hovered over them.\r\n         */\r\n        _this.overObjects = new List();\r\n        /**\r\n         * List of objects that currently has a pressed pointer.\r\n         */\r\n        _this.downObjects = new List();\r\n        /**\r\n         * List of objects that need mouse position to be reported to them.\r\n         */\r\n        _this.trackedObjects = new List();\r\n        /**\r\n         * List of objects that are currently being dragged.\r\n         */\r\n        _this.transformedObjects = new List();\r\n        /**\r\n         * Holds all known pointers.\r\n         */\r\n        _this.pointers = new Dictionary();\r\n        /**\r\n         * Inertia options that need to be applied to after element drag, if it's\r\n         * `inert = true`.\r\n         *\r\n         * This is just a default, which can and probably will be overridden by\r\n         * actual elements.\r\n         */\r\n        _this.inertiaOptions = new Dictionary();\r\n        /**\r\n         * Default options for click events. These can be overridden in\r\n         * [[InteractionObject]].\r\n         */\r\n        _this.hitOptions = {\r\n            //\"holdTime\": 1000,\r\n            \"doubleHitTime\": 300,\r\n            //\"delayFirstHit\": false,\r\n            \"hitTolerance\": 10,\r\n            \"noFocus\": true\r\n        };\r\n        /**\r\n         * Default options for hover events. These can be overridden in\r\n         * [[InteractionObject]].\r\n         */\r\n        _this.hoverOptions = {\r\n            \"touchOutBehavior\": \"leave\",\r\n            \"touchOutDelay\": 1000\r\n        };\r\n        /**\r\n         * Default options for detecting a swipe gesture. These can be overridden in\r\n         * [[InteractionObject]].\r\n         */\r\n        _this.swipeOptions = {\r\n            \"time\": 500,\r\n            \"verticalThreshold\": 75,\r\n            \"horizontalThreshold\": 30\r\n        };\r\n        /**\r\n         * Default options for keyboard operations. These can be overridden in\r\n         * [[InteractionObject]].\r\n         */\r\n        _this.keyboardOptions = {\r\n            \"speed\": 0.1,\r\n            \"accelleration\": 1.2,\r\n            \"accellerationDelay\": 2000\r\n        };\r\n        /**\r\n         * Default options for keyboard operations. These can be overridden in\r\n         * [[InteractionObject]].\r\n         *\r\n         * @since 4.5.14\r\n         */\r\n        _this.mouseOptions = {\r\n            \"sensitivity\": 1\r\n        };\r\n        // Set class name\r\n        _this.className = \"Interaction\";\r\n        // Create InteractionObject for <body>\r\n        _this.body = _this.getInteraction(document.body);\r\n        _this._disposers.push(_this.body);\r\n        // Detect browser capabilities and determine what event listeners to use\r\n        if (window.hasOwnProperty(\"PointerEvent\")) {\r\n            // IE10+/Edge without touch controls enabled\r\n            _this._pointerEvents.pointerdown = \"pointerdown\";\r\n            _this._pointerEvents.pointerup = \"pointerup\";\r\n            _this._pointerEvents.pointermove = \"pointermove\";\r\n            _this._pointerEvents.pointercancel = \"pointercancel\";\r\n            _this._pointerEvents.pointerover = \"pointerover\";\r\n            _this._pointerEvents.pointerout = \"pointerout\";\r\n            //this._usePointerEventsOnly = true;\r\n        }\r\n        else if (window.hasOwnProperty(\"MSPointerEvent\")) {\r\n            // IE9\r\n            _this._pointerEvents.pointerdown = \"MSPointerDown\";\r\n            _this._pointerEvents.pointerup = \"MSPointerUp\";\r\n            _this._pointerEvents.pointermove = \"MSPointerMove\";\r\n            _this._pointerEvents.pointercancel = \"MSPointerUp\";\r\n            _this._pointerEvents.pointerover = \"MSPointerOver\";\r\n            _this._pointerEvents.pointerout = \"MSPointerOut\";\r\n            //this._usePointerEventsOnly = true;\r\n        }\r\n        else if ((typeof matchMedia !== \"undefined\") && matchMedia('(pointer:fine)').matches) {\r\n            // This is only for Safari as it does not support PointerEvent\r\n            // Do nothing and let it use regular `mouse*` events\r\n            // Hi Apple ;)\r\n            // Additionally disable hover events for iOS devices\r\n            if ('ontouchstart' in window) {\r\n                _this._addHoverEvents = false;\r\n                _this._useTouchEventsOnly = true;\r\n            }\r\n        }\r\n        else if (window.navigator.userAgent.match(/MSIE /)) {\r\n            // Oh looky, an MSIE that does not support PointerEvent. Hi granpa IE9!\r\n            _this._usePointerEventsOnly = true;\r\n        }\r\n        else if (_this.fullFF()) {\r\n            // Old FF, let's use regular events.\r\n            // (Newer FFs would be detected by the PointerEvent availability check)\r\n            _this._usePointerEventsOnly = true;\r\n        }\r\n        else {\r\n            // Uses defaults for normal browsers\r\n            // We also assume that this must be a touch device that does not have\r\n            // any pointer events\r\n            _this._useTouchEventsOnly = true;\r\n        }\r\n        // Detect if device has a mouse\r\n        // This is turning out to be not reliable\r\n        // @todo remove\r\n        /*if (!window.navigator.msPointerEnabled && (typeof matchMedia !== \"undefined\") && !matchMedia('(pointer:fine)').matches && !this.fullFF()) {\r\n            this._useTouchEventsOnly = true;\r\n        }*/\r\n        // Detect proper mouse wheel events\r\n        if (\"onwheel\" in document.createElement(\"div\")) {\r\n            // Modern browsers\r\n            _this._pointerEvents.wheel = \"wheel\";\r\n        }\r\n        else if ($type.hasValue(document.onmousewheel)) {\r\n            // Webkit and IE support at least \"mousewheel\"\r\n            _this._pointerEvents.wheel = \"mousewheel\";\r\n        }\r\n        // Set up default inertia options\r\n        _this.inertiaOptions.setKey(\"move\", {\r\n            \"time\": 100,\r\n            \"duration\": 500,\r\n            \"factor\": 1,\r\n            \"easing\": $ease.polyOut3\r\n        });\r\n        _this.inertiaOptions.setKey(\"resize\", {\r\n            \"time\": 100,\r\n            \"duration\": 500,\r\n            \"factor\": 1,\r\n            \"easing\": $ease.polyOut3\r\n        });\r\n        // Set the passive mode support\r\n        _this._passiveSupported = Interaction.passiveSupported;\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * This is a nasty detection for Firefox. The reason why we have is that\r\n     * Firefox ESR version does not support matchMedia correctly.\r\n     *\r\n     * On iOS, Firefox uses different userAgent, so we don't have to detect iOS.\r\n     *\r\n     * @return Full Firefox?\r\n     */\r\n    Interaction.prototype.fullFF = function () {\r\n        return (window.navigator.userAgent.match(/Firefox/)) && !(window.navigator.userAgent.match(/Android/));\r\n    };\r\n    Interaction.prototype.debug = function () { };\r\n    /**\r\n     * ==========================================================================\r\n     * Processing\r\n     * ==========================================================================\r\n     * @hidden\r\n     */\r\n    /**\r\n     * Sets up global events.\r\n     *\r\n     * We need this so that we can track drag movement beyond chart's container.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Interaction.prototype.addGlobalEvents = function () {\r\n        var _this = this;\r\n        if (!this._globalEventsAdded) {\r\n            if (!this._useTouchEventsOnly) {\r\n                this._disposers.push(addEventListener(document, this._pointerEvents.pointerdown, function (ev) { _this.handleGlobalPointerDown(ev); }));\r\n                this._disposers.push(addEventListener(document, this._pointerEvents.pointermove, function (ev) { _this.handleGlobalPointerMove(ev); }));\r\n                this._disposers.push(addEventListener(document, this._pointerEvents.pointerup, function (ev) { _this.handleGlobalPointerUp(ev); }));\r\n                this._disposers.push(addEventListener(document, this._pointerEvents.pointercancel, function (ev) { _this.handleGlobalPointerUp(ev, true); }));\r\n            }\r\n            // No need to duplicate events for hubrid systems that support both\r\n            // pointer events and touch events. Touch events are need only for\r\n            // some touch-only systems, like Mobile Safari.\r\n            if (!this._usePointerEventsOnly) {\r\n                this._disposers.push(addEventListener(document, \"touchstart\", function (ev) { _this.handleGlobalTouchStart(ev); }));\r\n                this._disposers.push(addEventListener(document, \"touchmove\", function (ev) { _this.handleGlobalTouchMove(ev); }));\r\n                this._disposers.push(addEventListener(document, \"touchend\", function (ev) { _this.handleGlobalTouchEnd(ev); }));\r\n            }\r\n            this._disposers.push(addEventListener(document, \"keydown\", function (ev) { _this.handleGlobalKeyDown(ev); }));\r\n            this._disposers.push(addEventListener(document, \"keyup\", function (ev) { _this.handleGlobalKeyUp(ev); }));\r\n            this._globalEventsAdded = true;\r\n        }\r\n    };\r\n    /**\r\n     * Sets if [[InteractionObject]] is clickable.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param io [[InteractionObject]] instance\r\n     */\r\n    Interaction.prototype.processClickable = function (io) {\r\n        // Add or remove touch events\r\n        this.processTouchable(io);\r\n    };\r\n    /**\r\n     * Sets if [[InteractionObject]] will display context menu when right-clicked.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param io [[InteractionObject]] instance\r\n     */\r\n    Interaction.prototype.processContextMenu = function (io) {\r\n        if (io.contextMenuDisabled) {\r\n            if (!io.eventDisposers.hasKey(\"contextMenuDisabled\")) {\r\n                io.eventDisposers.setKey(\"contextMenuDisabled\", addEventListener(io.element, \"contextmenu\", function (e) {\r\n                    e.preventDefault();\r\n                }));\r\n            }\r\n        }\r\n        else {\r\n            if (io.eventDisposers.hasKey(\"contextMenuDisabled\")) {\r\n                io.eventDisposers.getKey(\"contextMenuDisabled\").dispose();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets if [[InteractionObject]] is hoverable.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param io [[InteractionObject]] instance\r\n     */\r\n    Interaction.prototype.processHoverable = function (io) {\r\n        var _this = this;\r\n        if (io.hoverable || io.trackable) {\r\n            // Add global events\r\n            this.addGlobalEvents();\r\n            // Add hover styles\r\n            this.applyCursorOverStyle(io);\r\n            // Add local events\r\n            if (!io.eventDisposers.hasKey(\"hoverable\") && this._addHoverEvents) {\r\n                io.eventDisposers.setKey(\"hoverable\", new MultiDisposer([\r\n                    addEventListener(io.element, this._pointerEvents.pointerout, function (e) { return _this.handlePointerOut(io, e); }),\r\n                    addEventListener(io.element, this._pointerEvents.pointerover, function (e) { return _this.handlePointerOver(io, e); })\r\n                ]));\r\n            }\r\n            if (io.trackable) {\r\n                //sprite.addEventListener(\"touchmove\", this.handleTouchMove, false, this);\r\n            }\r\n        }\r\n        else {\r\n            var disposer = io.eventDisposers.getKey(\"hoverable\");\r\n            if (disposer != null) {\r\n                disposer.dispose();\r\n                io.eventDisposers.removeKey(\"hoverable\");\r\n            }\r\n        }\r\n        // Add or remove touch events\r\n        this.processTouchable(io);\r\n    };\r\n    /**\r\n     * Sets up [[InteractionObject]] as movable. Movable can be any\r\n     * transformation, e.g. drag, swipe, resize, track.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param io  Element\r\n     */\r\n    Interaction.prototype.processMovable = function (io) {\r\n        // Add unified events\r\n        if (io.draggable || io.swipeable || io.trackable || io.resizable) {\r\n            // Prep the element\r\n            if (!this.isGlobalElement(io) && !io.isTouchProtected) {\r\n                this.prepElement(io);\r\n            }\r\n            // Add hover styles\r\n            this.applyCursorOverStyle(io);\r\n        }\r\n        // Add or remove touch events\r\n        this.processTouchable(io);\r\n    };\r\n    /**\r\n     * Checks if [[InteractionObject]] is trackable and sets relative events.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param io  Element\r\n     */\r\n    Interaction.prototype.processTrackable = function (io) {\r\n        this.processHoverable(io);\r\n        this.processMovable(io);\r\n        if (io.trackable) {\r\n            this.trackedObjects.moveValue(io);\r\n        }\r\n        else {\r\n            this.trackedObjects.removeValue(io);\r\n        }\r\n    };\r\n    /**\r\n     * Checks if [[InteractionObject]] is draggable.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param io  Element\r\n     */\r\n    Interaction.prototype.processDraggable = function (io) {\r\n        this.processMovable(io);\r\n    };\r\n    /**\r\n     * Checks if [[InteractionObject]] is swipeable and sets relative events.\r\n     *\r\n     * A swipe event is triggered when a horizontal drag of 75px or more (and\r\n     * less than 30px vertically) occurs within 700 milliseconds. This can be\r\n     * overridden in sprites [[swipeOptions]].\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param io  Element\r\n     */\r\n    Interaction.prototype.processSwipeable = function (io) {\r\n        this.processMovable(io);\r\n    };\r\n    /**\r\n     * Checks if [[InteractionObject]] is resizable and attaches required events\r\n     * to it.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param io  Element\r\n     */\r\n    Interaction.prototype.processResizable = function (io) {\r\n        this.processMovable(io);\r\n    };\r\n    /**\r\n     * Checks if [[InteractionObject]] is supposed to capture mouse wheel events\r\n     * and prepares it to catch those events.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param io  Element\r\n     */\r\n    Interaction.prototype.processWheelable = function (io) {\r\n        var _this = this;\r\n        if (io.wheelable) {\r\n            //io.hoverable = true;\r\n            if (!io.eventDisposers.hasKey(\"wheelable\")) {\r\n                io.eventDisposers.setKey(\"wheelable\", new MultiDisposer([\r\n                    addEventListener(io.element, this._pointerEvents.wheel, function (e) { return _this.handleMouseWheel(io, e); }, this._passiveSupported ? { passive: false } : false),\r\n                    io.events.on(\"out\", function (e) {\r\n                        if (io.wheelable) {\r\n                            _this.unlockWheel();\r\n                        }\r\n                    }),\r\n                    io.events.on(\"over\", function (e) {\r\n                        if (io.wheelable) {\r\n                            _this.lockWheel();\r\n                        }\r\n                    })\r\n                ]));\r\n            }\r\n        }\r\n        else {\r\n            var disposer = io.eventDisposers.getKey(\"wheelable\");\r\n            if (disposer != null) {\r\n                disposer.dispose();\r\n                io.eventDisposers.removeKey(\"wheelable\");\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Checks if [[InteractionObject]] is focusable. A focusable element is an\r\n     * element that will be highlighted when users presses TAB key. If the\r\n     * element is focusable, this function will attach relative focus/blur\r\n     * events to it.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param io  Element\r\n     */\r\n    Interaction.prototype.processFocusable = function (io) {\r\n        var _this = this;\r\n        if (io.focusable === true && (io.tabindex > -1) && !this._useTouchEventsOnly) {\r\n            if (!io.eventDisposers.hasKey(\"focusable\")) {\r\n                io.eventDisposers.setKey(\"focusable\", new MultiDisposer([\r\n                    addEventListener(io.element, \"focus\", function (e) { return _this.handleFocus(io, e); }),\r\n                    addEventListener(io.element, \"blur\", function (e) { return _this.handleBlur(io, e); }),\r\n                    addEventListener(io.element, this._pointerEvents.pointerdown, function (e) { return _this.handleFocusBlur(io, e); }),\r\n                    addEventListener(io.element, \"touchstart\", function (e) { return _this.handleFocusBlur(io, e); }, this._passiveSupported ? { passive: false } : false)\r\n                ]));\r\n            }\r\n        }\r\n        else {\r\n            var disposer = io.eventDisposers.getKey(\"focusable\");\r\n            if (disposer != null) {\r\n                disposer.dispose();\r\n                io.eventDisposers.removeKey(\"focusable\");\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Checks if [[InteractionObject]] is \"touchable\". It means any interaction\r\n     * whatsoever: mouse click, touch screen tap, swipe, drag, resize, etc.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param io  Element\r\n     */\r\n    Interaction.prototype.processTouchable = function (io) {\r\n        var _this = this;\r\n        // Add unified events\r\n        if (io.clickable || io.hoverable || io.trackable || io.draggable || io.swipeable || io.resizable) {\r\n            // Add global events\r\n            this.addGlobalEvents();\r\n            // Add local events\r\n            if (!io.eventDisposers.hasKey(\"touchable\")) {\r\n                if (!this._useTouchEventsOnly && !this._usePointerEventsOnly) {\r\n                    io.eventDisposers.setKey(\"touchable\", new MultiDisposer([\r\n                        addEventListener(io.element, this._pointerEvents.pointerdown, function (e) { return _this.handlePointerDown(io, e); }),\r\n                        addEventListener(io.element, \"touchstart\", function (e) { return _this.handleTouchDown(io, e); }, this._passiveSupported ? { passive: false } : false)\r\n                    ]));\r\n                }\r\n                else if (!this._useTouchEventsOnly) {\r\n                    io.eventDisposers.setKey(\"touchable\", addEventListener(io.element, this._pointerEvents.pointerdown, function (e) { return _this.handlePointerDown(io, e); }));\r\n                }\r\n                else if (!this._usePointerEventsOnly) {\r\n                    io.eventDisposers.setKey(\"touchable\", addEventListener(io.element, \"touchstart\", function (e) { return _this.handleTouchDown(io, e); }, this._passiveSupported ? { passive: false } : false));\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var disposer = io.eventDisposers.getKey(\"touchable\");\r\n            if (disposer != null) {\r\n                disposer.dispose();\r\n                io.eventDisposers.removeKey(\"touchable\");\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * ==========================================================================\r\n     * Non-pointer events\r\n     * ==========================================================================\r\n     * @hidden\r\n     */\r\n    /**\r\n     * Dispatches \"focus\" event when element gains focus.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param io  Element\r\n     * @param ev  Original event\r\n     */\r\n    Interaction.prototype.handleFocus = function (io, ev) {\r\n        if (!io.focusable) {\r\n            ev.preventDefault();\r\n            return;\r\n        }\r\n        io.isFocused = true;\r\n        if (io.events.isEnabled(\"focus\") && !system.isPaused) {\r\n            var imev = {\r\n                type: \"focus\",\r\n                target: io,\r\n                event: ev\r\n            };\r\n            io.events.dispatchImmediately(\"focus\", imev);\r\n        }\r\n    };\r\n    /**\r\n     * Used by regular click events to prevent focus if \"noFocus\" is set.\r\n     *\r\n     * This should not be called by \"focus\" handlers.\r\n     *\r\n     * @param io  Element\r\n     * @param ev  Original event\r\n     */\r\n    Interaction.prototype.handleFocusBlur = function (io, ev) {\r\n        if (io.focusable !== false && this.getHitOption(io, \"noFocus\")) {\r\n            io.events.once(\"focus\", function () {\r\n                io.events.disableType(\"blur\");\r\n                $dom.blur();\r\n                if (io.sprite) {\r\n                    io.sprite.handleBlur();\r\n                }\r\n                io.events.enableType(\"blur\");\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Dispatches \"blur\" event when element loses focus.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param io  Element\r\n     * @param ev  Original event\r\n     */\r\n    Interaction.prototype.handleBlur = function (io, ev) {\r\n        if (!io.focusable) {\r\n            ev.preventDefault();\r\n            return;\r\n        }\r\n        io.isFocused = false;\r\n        if (io.events.isEnabled(\"blur\") && !system.isPaused) {\r\n            var imev = {\r\n                type: \"blur\",\r\n                target: io,\r\n                event: ev\r\n            };\r\n            io.events.dispatchImmediately(\"blur\", imev);\r\n        }\r\n    };\r\n    /**\r\n     * ==========================================================================\r\n     * Global keyboard-related even handlers\r\n     * ==========================================================================\r\n     * @hidden\r\n     */\r\n    /**\r\n     * Checks if there is an item that has currently focus and that they key is\r\n     * one of the directional keys. If both of the conditions are true, it\r\n     * creates an object to simulate movement of dragable element with keyboard.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param ev An original keyboard event\r\n     */\r\n    Interaction.prototype.handleGlobalKeyDown = function (ev) {\r\n        if (this.focusedObject) {\r\n            if (keyboard.isKey(ev, \"esc\")) {\r\n                // ESC removes focus\r\n                $dom.blur();\r\n            }\r\n            else if (this.focusedObject.draggable && keyboard.isKey(ev, [\"up\", \"down\", \"left\", \"right\"])) {\r\n                // Prevent scrolling of the document\r\n                ev.preventDefault();\r\n                // Get focused object\r\n                var io = this.focusedObject;\r\n                // Get particular key\r\n                var disposerKey = \"interactionKeyboardObject\";\r\n                // If such disposer already exists we know the event is going on so we\r\n                // just move on\r\n                if (io.eventDisposers.hasKey(disposerKey)) {\r\n                    return;\r\n                }\r\n                // Create a keyboard mover\r\n                var ko = new InteractionKeyboardObject(io, ev);\r\n                io.eventDisposers.setKey(disposerKey, ko);\r\n                switch (keyboard.getEventKey(ev)) {\r\n                    case \"up\":\r\n                        ko.directionY = -1;\r\n                        break;\r\n                    case \"down\":\r\n                        ko.directionY = 1;\r\n                        break;\r\n                    case \"left\":\r\n                        ko.directionX = -1;\r\n                        break;\r\n                    case \"right\":\r\n                        ko.directionX = 1;\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Dispatches related events when the keyboard key is realeasd.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param ev An original keyboard event\r\n     */\r\n    Interaction.prototype.handleGlobalKeyUp = function (ev) {\r\n        var disposerKey = \"interactionKeyboardObject\";\r\n        if (this.focusedObject) {\r\n            var disposer = this.focusedObject.eventDisposers.getKey(disposerKey);\r\n            if (disposer != null) {\r\n                // Prevent scrolling of the document\r\n                ev.preventDefault();\r\n                // Dispose stuff\r\n                disposer.dispose();\r\n                this.focusedObject.eventDisposers.removeKey(disposerKey);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * ==========================================================================\r\n     * Global pointer-related even handlers\r\n     * ==========================================================================\r\n     * @hidden\r\n     */\r\n    /**\r\n     * Handler for a global \"pointermove\" event.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param ev Event object\r\n     */\r\n    Interaction.prototype.handleGlobalPointerMove = function (ev) {\r\n        // Get pointer\r\n        var pointer = this.getPointer(ev);\r\n        // Update current point position\r\n        pointer.point = this.getPointerPoint(ev);\r\n        // Prepare and fire global event\r\n        if (this.events.isEnabled(\"track\") && !system.isPaused) {\r\n            var imev = {\r\n                type: \"track\",\r\n                target: this,\r\n                event: ev,\r\n                pointer: pointer,\r\n                touch: pointer.touch\r\n            };\r\n            this.events.dispatchImmediately(\"track\", imev);\r\n        }\r\n        // Track\r\n        this.addBreadCrumb(pointer, pointer.point);\r\n        // Process further\r\n        this.handleGlobalMove(pointer, ev);\r\n    };\r\n    /**\r\n     * Handler for a global \"pointerdown\" event.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param ev Event object\r\n     */\r\n    Interaction.prototype.handleGlobalPointerDown = function (ev) {\r\n        // Remove delayed hovers\r\n        this.processDelayed();\r\n        // Get pointer\r\n        var pointer = this.getPointer(ev);\r\n        // Prepare and fire global event\r\n        if (this.events.isEnabled(\"down\") && !system.isPaused) {\r\n            var imev = {\r\n                type: \"down\",\r\n                target: this,\r\n                event: ev,\r\n                pointer: pointer,\r\n                touch: pointer.touch\r\n            };\r\n            this.events.dispatchImmediately(\"down\", imev);\r\n        }\r\n    };\r\n    /**\r\n     * Prevents touch action from firing.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param ev Event\r\n     */\r\n    Interaction.prototype.preventTouchAction = function (ev) {\r\n        if (!ev.defaultPrevented) {\r\n            ev.preventDefault();\r\n        }\r\n    };\r\n    /**\r\n     * Handler for a global \"pointerup\" event.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param ev Event object\r\n     */\r\n    Interaction.prototype.handleGlobalPointerUp = function (ev, cancelled) {\r\n        if (cancelled === void 0) { cancelled = false; }\r\n        // Get pointer\r\n        var pointer = this.getPointer(ev);\r\n        // Prepare and fire global event\r\n        if (this.events.isEnabled(\"up\") && !system.isPaused) {\r\n            var imev = {\r\n                type: \"up\",\r\n                target: this,\r\n                event: ev,\r\n                pointer: pointer,\r\n                touch: pointer.touch\r\n            };\r\n            this.events.dispatchImmediately(\"up\", imev);\r\n        }\r\n        // Process further\r\n        this.handleGlobalUp(pointer, ev, cancelled);\r\n    };\r\n    /**\r\n * ==========================================================================\r\n * Global touch-related even handlers\r\n * ==========================================================================\r\n */\r\n    /**\r\n     * Handler for a global \"touchmove\" event.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param ev Event object\r\n     */\r\n    Interaction.prototype.handleGlobalTouchMove = function (ev) {\r\n        // Process each changed touch point\r\n        for (var i = 0; i < ev.changedTouches.length; i++) {\r\n            // Get pointer\r\n            var pointer = this.getPointer(ev.changedTouches[i]);\r\n            // Update current point position\r\n            pointer.point = this.getPointerPoint(ev.changedTouches[i]);\r\n            // Prepare and fire global event\r\n            if (this.events.isEnabled(\"track\") && !system.isPaused) {\r\n                var imev = {\r\n                    type: \"track\",\r\n                    target: this,\r\n                    event: ev,\r\n                    pointer: pointer,\r\n                    touch: pointer.touch\r\n                };\r\n                this.events.dispatchImmediately(\"track\", imev);\r\n            }\r\n            // Track\r\n            this.addBreadCrumb(pointer, pointer.point);\r\n            // Process further\r\n            this.handleGlobalMove(pointer, ev);\r\n        }\r\n    };\r\n    /**\r\n     * Handler for a global \"touchstart\" event.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param ev Event object\r\n     */\r\n    Interaction.prototype.handleGlobalTouchStart = function (ev) {\r\n        // Remove delayed hovers\r\n        this.processDelayed();\r\n        // Process each changed touch point\r\n        for (var i = 0; i < ev.changedTouches.length; i++) {\r\n            // Get pointer\r\n            var pointer = this.getPointer(ev.changedTouches[i]);\r\n            // Prepare and fire global event\r\n            if (!this._usePointerEventsOnly && this.events.isEnabled(\"down\") && !system.isPaused) {\r\n                var imev = {\r\n                    type: \"down\",\r\n                    target: this,\r\n                    event: ev,\r\n                    pointer: pointer,\r\n                    touch: pointer.touch\r\n                };\r\n                this.events.dispatchImmediately(\"down\", imev);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Handler for a global \"touchend\" event.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param ev Event object\r\n     */\r\n    Interaction.prototype.handleGlobalTouchEnd = function (ev) {\r\n        // Process each changed touch point\r\n        for (var i = 0; i < ev.changedTouches.length; i++) {\r\n            // Get pointer\r\n            var pointer = this.getPointer(ev.changedTouches[i]);\r\n            // Prepare and fire global event\r\n            if (this.events.isEnabled(\"up\") && !system.isPaused) {\r\n                var imev = {\r\n                    type: \"up\",\r\n                    target: this,\r\n                    event: ev,\r\n                    pointer: pointer,\r\n                    touch: pointer.touch\r\n                };\r\n                this.events.dispatchImmediately(\"up\", imev);\r\n            }\r\n            // Handle element-related events\r\n            this.handleGlobalUp(pointer, ev);\r\n        }\r\n    };\r\n    /**\r\n     * ==========================================================================\r\n     * Element-specific pointer-related even handlers\r\n     * ==========================================================================\r\n     * @hidden\r\n     */\r\n    /**\r\n     * Handles event when pointer is over [[InteractionObject]] and button is\r\n     * pressed.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param io  Element\r\n     * @param ev  Original event\r\n     */\r\n    Interaction.prototype.handlePointerDown = function (io, ev) {\r\n        // Stop further propagation so we don't get multiple triggers on hybrid\r\n        // devices (both mouse and touch capabilities)\r\n        //ev.preventDefault();\r\n        //ev.stopPropagation();\r\n        //if (ev.defaultPrevented) {\r\n        //}\r\n        // Get pointer\r\n        var pointer = this.getPointer(ev);\r\n        // Ignore if it's anything but mouse's primary button\r\n        if (!pointer.touch && ev.which != 1 && ev.which != 3) {\r\n            return;\r\n        }\r\n        // Set mouse button\r\n        pointer.button = ev.which;\r\n        // Reset pointer\r\n        this.resetPointer(pointer, ev);\r\n        // Process down\r\n        this.handleDown(io, pointer, ev);\r\n    };\r\n    /**\r\n     * Handles event when [[InteractionObject]] is hovered by a mouse pointer.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param io  Element\r\n     * @param ev  Original event\r\n     */\r\n    Interaction.prototype.handlePointerOver = function (io, ev) {\r\n        // Get pointer\r\n        var pointer = this.getPointer(ev);\r\n        // Process down\r\n        this.handleOver(io, pointer, ev);\r\n    };\r\n    /**\r\n     * Handles event when [[InteractionObject]] loses hover from a mouse pointer.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param io  Element\r\n     * @param ev  Original event\r\n     */\r\n    Interaction.prototype.handlePointerOut = function (io, ev) {\r\n        // Get pointer\r\n        var pointer = this.getPointer(ev);\r\n        // Process down\r\n        this.handleOut(io, pointer, ev);\r\n    };\r\n    /**\r\n     * Handles event when mouse wheel is crolled over the [[InteractionObject]].\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param io  Element\r\n     * @param ev  Original event\r\n     * @todo Investigate more-cross browser stuff https://developer.mozilla.org/en-US/docs/Web/Events/wheel\r\n     */\r\n    Interaction.prototype.handleMouseWheel = function (io, ev) {\r\n        // Get pointer\r\n        var pointer = this.getPointer(ev);\r\n        // Update current point position\r\n        pointer.point = this.getPointerPoint(ev);\r\n        // Init delta values\r\n        var deltaX = 0, deltaY = 0;\r\n        // Set up modifier\r\n        // This is needed because FireFox reports wheel deltas in \"lines\" instead\r\n        // of pixels so we have to approximate pixel value\r\n        var mod = 1;\r\n        if (ev.deltaMode == 1) {\r\n            mod = 50;\r\n        }\r\n        // Adjust configurable sensitivity\r\n        mod *= this.getMouseOption(io, \"sensitivity\");\r\n        // Calculate deltas\r\n        if (ev instanceof WheelEvent) {\r\n            deltaX = Math.round((-1 * ev.wheelDeltaX) || ev.deltaX) * mod;\r\n            deltaY = Math.round((-1 * ev.wheelDeltaY) || ev.deltaY) * mod;\r\n        }\r\n        else {\r\n            throw new Error(\"Invalid event type\");\r\n        }\r\n        // Handle the event\r\n        this.handleWheel(io, pointer, deltaX, deltaY, ev);\r\n    };\r\n    /**\r\n     * ==========================================================================\r\n     * Element-specific touch-related even handlers\r\n     * ==========================================================================\r\n     * @hidden\r\n     */\r\n    /**\r\n      * Handles an event when an [[InteractionObject]] is touched on a touch\r\n      * device.\r\n      *\r\n      * @ignore Exclude from docs\r\n      * @param io  Element\r\n      * @param ev  Original event\r\n      */\r\n    Interaction.prototype.handleTouchDown = function (io, ev) {\r\n        // Stop further propagation so we don't get multiple triggers on hybrid\r\n        // devices (both mouse and touch capabilities)\r\n        //this.maybePreventDefault(io, ev);\r\n        //return;\r\n        // Process each changed touch point\r\n        for (var i = 0; i < ev.changedTouches.length; i++) {\r\n            // Get pointer\r\n            var pointer = this.getPointer(ev.changedTouches[i]);\r\n            this.maybePreventDefault(io, ev, pointer);\r\n            // Reset pointer\r\n            this.resetPointer(pointer, ev.changedTouches[i]);\r\n            // Process down\r\n            this.handleDown(io, pointer, ev);\r\n        }\r\n    };\r\n    /**\r\n     * ==========================================================================\r\n     * Universal handlers\r\n     * ==========================================================================\r\n     * @hidden\r\n     */\r\n    /**\r\n     * Handles click/tap. Checks for doublehit.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param io       Interaction object\r\n     * @param pointer  Pointer\r\n     * @param ev       Original event\r\n     */\r\n    Interaction.prototype.handleHit = function (io, pointer, ev) {\r\n        // Check if this is a double-hit\r\n        var now = $time.getTime();\r\n        if (io.lastHit && (io.lastHit >= (now - this.getHitOption(io, \"doubleHitTime\")))) {\r\n            // Yup - it's a double-hit\r\n            // Cancel the hit\r\n            //clearTimeout(io.lastHitPointer.hitTimeout);\r\n            // If it happened too fast it probably means that hybrid device just\r\n            // generated two events for the same tap\r\n            if ((now - io.lastHit) < 100) {\r\n                // Ignore\r\n                return;\r\n            }\r\n            // Clear last hit\r\n            io.lastHit = undefined;\r\n            io.lastHitPointer = undefined;\r\n            // Dispatch event\r\n            if (io.events.isEnabled(\"doublehit\") && !system.isPaused) {\r\n                var imev = {\r\n                    type: \"doublehit\",\r\n                    target: io,\r\n                    point: pointer.point,\r\n                    event: ev,\r\n                    touch: pointer.touch\r\n                };\r\n                io.events.dispatchImmediately(\"doublehit\", imev);\r\n            }\r\n        }\r\n        else {\r\n            // Log last hit\r\n            io.lastHit = now;\r\n            io.lastHitPointer = pointer;\r\n            if (pointer.button === 3) {\r\n                // Execute HIT now\r\n                if (io.events.isEnabled(\"rightclick\") && !system.isPaused) {\r\n                    var imev = {\r\n                        type: \"rightclick\",\r\n                        target: io,\r\n                        event: ev\r\n                    };\r\n                    io.events.dispatchImmediately(\"rightclick\", imev);\r\n                }\r\n            }\r\n            else {\r\n                if (io.events.isEnabled(\"hit\") && !system.isPaused) {\r\n                    var imev = {\r\n                        type: \"hit\",\r\n                        target: io,\r\n                        event: ev,\r\n                        point: pointer.point,\r\n                        touch: pointer.touch\r\n                    };\r\n                    io.events.dispatchImmediately(\"hit\", imev);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Handles pointer hovering over [[InteractionObject]].\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param io       Interaction object\r\n     * @param pointer  Pointer\r\n     * @param ev       Original event\r\n     * @param soft     Invoked by helper function\r\n     */\r\n    Interaction.prototype.handleOver = function (io, pointer, ev, soft) {\r\n        if (soft === void 0) { soft = false; }\r\n        if (!io.hoverable) {\r\n            return;\r\n        }\r\n        // Remove any delayed outs\r\n        this.processDelayed();\r\n        // Add pointer\r\n        io.overPointers.moveValue(pointer);\r\n        // Check if object is not yet hovered\r\n        if (!io.isRealHover) {\r\n            // Set element as hovered\r\n            io.isHover = true;\r\n            io.isRealHover = true;\r\n            this.overObjects.moveValue(io);\r\n            // Generate body track event. This is needed so that if element loads\r\n            // under unmoved mouse cursor, we still need all the actions that are\r\n            // required to happen to kick in.\r\n            this.handleTrack(this.body, pointer, ev, true);\r\n            // Event\r\n            if (io.events.isEnabled(\"over\") && !system.isPaused) {\r\n                var imev = {\r\n                    type: \"over\",\r\n                    target: io,\r\n                    event: ev,\r\n                    pointer: pointer,\r\n                    touch: pointer.touch\r\n                };\r\n                io.events.dispatchImmediately(\"over\", imev);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Handles when [[InteractionObject]] is no longer hovered.\r\n     *\r\n     * If `soft = true`, this means that method is being invoked by some other\r\n     * code, not hard \"out\" function, like `handleUp` which implies we need to\r\n     * run additional checks before unhovering the object.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param io       Interaction object\r\n     * @param pointer  Pointer\r\n     * @param ev       Original event\r\n     * @param soft     Invoked by helper function\r\n     * @param force    Force imediate out\r\n     */\r\n    Interaction.prototype.handleOut = function (io, pointer, ev, soft, force) {\r\n        var _this = this;\r\n        if (soft === void 0) { soft = false; }\r\n        if (force === void 0) { force = false; }\r\n        if (!io.hoverable) {\r\n            return;\r\n        }\r\n        // Remove pointer\r\n        io.overPointers.removeValue(pointer);\r\n        // Check if element is still hovered\r\n        if (io.isHover && (!io.hasDelayedOut || force)) {\r\n            // Should we run additional checks?\r\n            if (soft && io.overPointers.length) {\r\n                // There are still pointers hovering - don't do anything else and\r\n                // wait until either no over pointers are there or we get a hard out\r\n                // event.\r\n                return;\r\n            }\r\n            // Should we delay \"out\" if this is happening on a touch device?\r\n            if (pointer.touch && !force && !this.old(pointer)) {\r\n                // This is a touch pointer, and it hasn't moved, let's pretend\r\n                // the object is still hovered, and act as per \"behavior\" setting\r\n                var behavior = this.getHoverOption(io, \"touchOutBehavior\");\r\n                if (behavior == \"leave\") {\r\n                    // Set to \"leave\", so we do not execute any \"out\" event.\r\n                    // It will be handled by any other interaction that happens\r\n                    // afterwards.\r\n                    this._delayedEvents.out.push({\r\n                        type: \"out\",\r\n                        io: io,\r\n                        pointer: pointer,\r\n                        event: ev,\r\n                        keepUntil: $time.getTime() + 500\r\n                    });\r\n                    io.hasDelayedOut = true;\r\n                    return;\r\n                }\r\n                else if (behavior == \"delay\" && this.getHoverOption(io, \"touchOutDelay\")) {\r\n                    this._delayedEvents.out.push({\r\n                        type: \"out\",\r\n                        io: io,\r\n                        pointer: pointer,\r\n                        event: ev,\r\n                        keepUntil: $time.getTime() + 500,\r\n                        timeout: this.setTimeout(function () {\r\n                            _this.handleOut(io, pointer, ev, true);\r\n                        }, this.getHoverOption(io, \"touchOutDelay\"))\r\n                    });\r\n                    return;\r\n                }\r\n                else {\r\n                    // Nothing for \"remove\" - that's how it works \"out-of-the-box\"\r\n                }\r\n            }\r\n            // Set element as not hovered\r\n            io.isHover = false;\r\n            this.overObjects.removeValue(io);\r\n            // Invoke event\r\n            if (io.events.isEnabled(\"out\") && !system.isPaused) {\r\n                var imev = {\r\n                    type: \"out\",\r\n                    target: io,\r\n                    event: ev,\r\n                    pointer: pointer,\r\n                    touch: pointer.touch\r\n                };\r\n                io.events.dispatchImmediately(\"out\", imev);\r\n            }\r\n            // Reset object from lefover delayed outs, pointers\r\n            io.overPointers.clear();\r\n            io.hasDelayedOut = false;\r\n            // @todo (clean delayed)\r\n        }\r\n    };\r\n    /**\r\n     * Processes dalyed events, such as \"out\" event that was initiated for\r\n     * elements by touch.\r\n     */\r\n    Interaction.prototype.processDelayed = function () {\r\n        var delayedEvent;\r\n        while (true) {\r\n            delayedEvent = this._delayedEvents.out.pop();\r\n            if (!delayedEvent) {\r\n                break;\r\n            }\r\n            if (delayedEvent.timeout) {\r\n                delayedEvent.timeout.dispose();\r\n            }\r\n            this.handleOut(delayedEvent.io, delayedEvent.pointer, delayedEvent.event, false, true);\r\n        }\r\n    };\r\n    /**\r\n     * Performs tasks on pointer down.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param io       Element\r\n     * @param pointer  Pointer\r\n     * @param ev       Original event\r\n     */\r\n    Interaction.prototype.handleDown = function (io, pointer, ev) {\r\n        // Need to prevent default event from happening on transformable objects\r\n        this.maybePreventDefault(io, ev, pointer);\r\n        // Stop inertia animations if they're currently being played out\r\n        if (io.inert) {\r\n            this.stopInertia(io);\r\n        }\r\n        // Trigger hover because some touch devices won't trigger over events\r\n        // on their own\r\n        this.handleOver(io, pointer, ev, true);\r\n        // Add pointer to list\r\n        io.downPointers.moveValue(pointer);\r\n        // Apply styles if necessary\r\n        this.applyCursorDownStyle(io, pointer);\r\n        // Check if object is already down\r\n        if (!io.isDown) {\r\n            // Lose focus if needed\r\n            if (io.focusable !== false && this.getHitOption(io, \"noFocus\") && this.focusedObject) {\r\n                $dom.blur();\r\n            }\r\n            // Set object as hovered\r\n            io.isDown = true;\r\n            this.downObjects.moveValue(io);\r\n            // Prep object for dragging and/or resizing\r\n            if (io.draggable) {\r\n                this.processDragStart(io, pointer, ev);\r\n            }\r\n            if (io.resizable) {\r\n                this.processResizeStart(io, pointer, ev);\r\n            }\r\n        }\r\n        // Dispatch \"down\" event\r\n        if (io.events.isEnabled(\"down\") && !system.isPaused) {\r\n            var imev = {\r\n                type: \"down\",\r\n                target: io,\r\n                event: ev,\r\n                pointer: pointer,\r\n                touch: pointer.touch\r\n            };\r\n            io.events.dispatchImmediately(\"down\", imev);\r\n        }\r\n    };\r\n    /**\r\n     * Performs tasks on pointer up.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param pointer  Pointer\r\n     * @param ev       Original event\r\n     */\r\n    Interaction.prototype.handleGlobalUp = function (pointer, ev, cancelled) {\r\n        var _this = this;\r\n        if (cancelled === void 0) { cancelled = false; }\r\n        // Process all down objects\r\n        $iter.each(this.downObjects.backwards().iterator(), function (io) {\r\n            // Check if this particular pointer is pressing down\r\n            // on object\r\n            if (io && io.downPointers.contains(pointer)) {\r\n                _this.handleUp(io, pointer, ev, cancelled);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Handles when [[InteractionObject]] is no longer hovered.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param io       Interaction object\r\n     * @param pointer  Pointer\r\n     * @param ev       Original event\r\n     */\r\n    Interaction.prototype.handleUp = function (io, pointer, ev, cancelled) {\r\n        if (cancelled === void 0) { cancelled = false; }\r\n        // Restore cursor style\r\n        this.restoreCursorDownStyle(io, pointer);\r\n        // Remove pointer from the list\r\n        io.downPointers.removeValue(pointer);\r\n        // Trigger out because some touch devices won't trigger out events\r\n        // on their own\r\n        if (pointer.touch || this._useTouchEventsOnly) {\r\n            this.handleOut(io, pointer, ev, true);\r\n        }\r\n        // Check if object still down\r\n        if (io.isDown) {\r\n            // Check if there are no other pointers hovering this element\r\n            if (io.downPointers.length == 0) {\r\n                // Set element as no longer down\r\n                io.isDown = false;\r\n                this.downObjects.removeValue(io);\r\n            }\r\n            // Dispatch \"up\" event\r\n            if (io.events.isEnabled(\"up\") && !system.isPaused) {\r\n                var imev = {\r\n                    type: \"up\",\r\n                    target: io,\r\n                    event: ev,\r\n                    pointer: pointer,\r\n                    touch: pointer.touch\r\n                };\r\n                io.events.dispatchImmediately(\"up\", imev);\r\n            }\r\n            // Check if this was not a cancelled event.\r\n            // If event was canelled (which might happen if gesture resulted in\r\n            // navigation or page scroll) there's no point in triggering hit and\r\n            // other actions.\r\n            if (!cancelled) {\r\n                // Handle swiping-related stuff\r\n                if (io.swipeable && this.swiped(io, pointer)) {\r\n                    // Swiped - nothing else should happen\r\n                    this.handleSwipe(io, pointer, ev);\r\n                }\r\n                else {\r\n                    // Check if it maybe a click\r\n                    if (io.clickable && !this.moved(pointer, this.getHitOption(io, \"hitTolerance\"))) {\r\n                        this.handleHit(io, pointer, ev);\r\n                    }\r\n                    // Handle inertia\r\n                    if (io.inert && this.moved(pointer, this.getHitOption(io, \"hitTolerance\"))) {\r\n                        this.handleInertia(io, pointer);\r\n                    }\r\n                    else if (io.draggable) {\r\n                        this.processDragStop(io, pointer, ev);\r\n                    }\r\n                    if (io.resizable) {\r\n                        this.processResizeStop(io, pointer, ev);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Checks if event needs to be prevented on draggable and such items, so that\r\n     * touch gestures like navigation and scroll do not kick in.\r\n     *\r\n     * @param io  Object\r\n     * @param ev  Event\r\n     */\r\n    Interaction.prototype.maybePreventDefault = function (io, ev, pointer) {\r\n        if ($type.hasValue(ev)\r\n            && (io.draggable || io.swipeable || io.trackable || io.resizable)\r\n            && !this.isGlobalElement(io)\r\n            && ev.cancelable !== false\r\n            && (!io.isTouchProtected || !pointer || !pointer.touch)) {\r\n            ev.preventDefault();\r\n        }\r\n    };\r\n    /**\r\n     * Handles pointer move.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param pointer  Pointer\r\n     * @param ev       Original event\r\n     */\r\n    Interaction.prototype.handleGlobalMove = function (pointer, ev) {\r\n        var _this = this;\r\n        // Process hovered elements\r\n        // We check if the element became unhovered without reporting the mouseout\r\n        // event. (it happens in some cases)\r\n        if (!pointer.touch) {\r\n            var target_1 = $dom.eventTarget(pointer.lastEvent);\r\n            $iter.each(this.overObjects.backwards().iterator(), function (io) {\r\n                // Is this pointer relevant to element?\r\n                if (io && io.overPointers.contains(pointer) && io.hoverable) {\r\n                    // Check if the element is still hovered\r\n                    var reset = false;\r\n                    if (io.element && pointer.lastEvent) {\r\n                        if (!$dom.contains(io.element, target_1)) {\r\n                            reset = true;\r\n                        }\r\n                    }\r\n                    else {\r\n                        reset = true;\r\n                    }\r\n                    if (reset) {\r\n                        _this.handleOut(io, pointer, ev, true);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        // Process down elements\r\n        $iter.each(this.transformedObjects.backwards().iterator(), function (io) {\r\n            // Is this pointer relevant to element?\r\n            if (io.downPointers.contains(pointer) &&\r\n                // Swipe still happening?\r\n                !(io.swipeable && _this.swiping(io, pointer)) &&\r\n                (io.draggable || io.resizable)) {\r\n                _this.handleTransform(io, ev);\r\n            }\r\n        });\r\n        // Process tracked elements\r\n        $iter.each(this.trackedObjects.backwards().iterator(), function (io) {\r\n            // Is this pointer relevant to element?\r\n            if (!io.overPointers.contains(pointer)) {\r\n                _this.handleTrack(io, pointer, ev);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Handles reporting of pointer movement.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param io        Element\r\n     * @param pointer    Pointer\r\n     * @param ev         Original event\r\n     * @param skipCheck  Sould we skip check if cursor actually moved\r\n     */\r\n    Interaction.prototype.handleTrack = function (io, pointer, ev, skipCheck) {\r\n        if (skipCheck === void 0) { skipCheck = false; }\r\n        // Do nothing if the cursor did not actually move\r\n        if (!skipCheck && !this.moved(pointer, 0)) {\r\n            return;\r\n        }\r\n        // Initiate TRACK event\r\n        if (io.events.isEnabled(\"track\") && !system.isPaused) {\r\n            var imev = {\r\n                type: \"track\",\r\n                target: io,\r\n                event: ev,\r\n                point: pointer.point,\r\n                pointer: pointer,\r\n                touch: pointer.touch\r\n            };\r\n            io.events.dispatchImmediately(\"track\", imev);\r\n        }\r\n    };\r\n    /**\r\n     * Handles swipe action.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param io       Element\r\n     * @param pointer  Pointer\r\n     * @param ev       Original event\r\n     */\r\n    Interaction.prototype.handleSwipe = function (io, pointer, ev) {\r\n        // We pass in InteractionEvent with shift in mouse coordinates\r\n        // between when the drag started and ended\r\n        if (io.events.isEnabled(\"swipe\") && !system.isPaused) {\r\n            var imev = {\r\n                type: \"swipe\",\r\n                target: io,\r\n                event: ev,\r\n                touch: pointer.touch\r\n            };\r\n            io.events.dispatchImmediately(\"swipe\", imev);\r\n        }\r\n        if (pointer.startPoint.x < pointer.point.x) {\r\n            if (io.events.isEnabled(\"swiperight\") && !system.isPaused) {\r\n                var imev = {\r\n                    type: \"swiperight\",\r\n                    target: io,\r\n                    event: ev,\r\n                    touch: pointer.touch\r\n                };\r\n                io.events.dispatchImmediately(\"swiperight\", imev);\r\n            }\r\n        }\r\n        else {\r\n            if (io.events.isEnabled(\"swipeleft\") && !system.isPaused) {\r\n                var imev = {\r\n                    type: \"swipeleft\",\r\n                    target: io,\r\n                    event: ev,\r\n                    touch: pointer.touch\r\n                };\r\n                io.events.dispatchImmediately(\"swipeleft\", imev);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Handles event triggering for wheel rotation.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param io       Element\r\n     * @param pointer  Pointer\r\n     * @param deltaX   Horizontal shift\r\n     * @param deltaY   Vertical shift\r\n     * @param ev       Original event\r\n     */\r\n    Interaction.prototype.handleWheel = function (io, pointer, deltaX, deltaY, ev) {\r\n        var shift = {\r\n            x: deltaX,\r\n            y: deltaY\r\n        };\r\n        // Trigger generic WHEEL event\r\n        if (io.events.isEnabled(\"wheel\") && !system.isPaused) {\r\n            io.events.dispatchImmediately(\"wheel\", {\r\n                type: \"wheel\",\r\n                target: io,\r\n                event: ev,\r\n                point: pointer.point,\r\n                shift: shift\r\n            });\r\n        }\r\n        // Trigger direction-specific events\r\n        // Horizontal\r\n        if (deltaX < 0) {\r\n            if (io.events.isEnabled(\"wheelleft\") && !system.isPaused) {\r\n                io.events.dispatchImmediately(\"wheelleft\", {\r\n                    type: \"wheelleft\",\r\n                    target: io,\r\n                    event: ev,\r\n                    point: pointer.point,\r\n                    shift: shift\r\n                });\r\n            }\r\n        }\r\n        else if (deltaX > 0) {\r\n            if (io.events.isEnabled(\"swiperight\") && !system.isPaused) {\r\n                io.events.dispatchImmediately(\"wheelright\", {\r\n                    type: \"wheelright\",\r\n                    target: io,\r\n                    event: ev,\r\n                    point: pointer.point,\r\n                    shift: shift\r\n                });\r\n            }\r\n            // Vertical\r\n        }\r\n        else if (deltaY < 0) {\r\n            if (io.events.isEnabled(\"wheelup\") && !system.isPaused) {\r\n                io.events.dispatchImmediately(\"wheelup\", {\r\n                    type: \"wheelup\",\r\n                    target: io,\r\n                    event: ev,\r\n                    point: pointer.point,\r\n                    shift: shift\r\n                });\r\n            }\r\n        }\r\n        else if (deltaY > 0) {\r\n            if (io.events.isEnabled(\"wheeldown\") && !system.isPaused) {\r\n                io.events.dispatchImmediately(\"wheeldown\", {\r\n                    type: \"wheeldown\",\r\n                    target: io,\r\n                    event: ev,\r\n                    point: pointer.point,\r\n                    shift: shift\r\n                });\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Initiates inertia checking sub-routines for different movement types:\r\n     * drag, resize.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param sprite\r\n     * @param pointer\r\n     */\r\n    Interaction.prototype.handleInertia = function (io, pointer) {\r\n        if (io.draggable && io.downPointers.length === 0) {\r\n            this.handleMoveInertia(io, pointer);\r\n        }\r\n        if (io.resizable && io.downPointers.length > 1) {\r\n            this.handleResizeInertia(io, pointer);\r\n        }\r\n    };\r\n    /**\r\n     * Continues moving the element to simulate the effect of inertia. Happens\r\n     * when `inert` and `draggable` object is dragged and then released.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param io       Element\r\n     * @param pointer  Pointer\r\n     */\r\n    Interaction.prototype.handleMoveInertia = function (io, pointer) {\r\n        var interaction = io;\r\n        var type = \"move\";\r\n        var point = {\r\n            \"x\": pointer.point.x,\r\n            \"y\": pointer.point.y\r\n        };\r\n        var startPoint = {\r\n            \"x\": pointer.startPoint.x,\r\n            \"y\": pointer.startPoint.y\r\n        };\r\n        // Init inertia object\r\n        var inertia = new Inertia(interaction, type, point, startPoint);\r\n        // Get inertia data\r\n        var ref = this.getTrailPoint(pointer, $time.getTime() - this.getInertiaOption(io, \"move\", \"time\"));\r\n        if (typeof ref === \"undefined\") {\r\n            this.processDragStop(io, pointer, pointer.lastUpEvent);\r\n            return;\r\n        }\r\n        // Init animation options\r\n        var factor = this.getInertiaOption(io, \"move\", \"factor\");\r\n        var animationOptions = [{\r\n                \"to\": pointer.point.x + (pointer.point.x - ref.point.x) * factor,\r\n                \"property\": \"x\"\r\n            }, {\r\n                \"to\": pointer.point.y + (pointer.point.y - ref.point.y) * factor,\r\n                \"property\": \"y\"\r\n            }];\r\n        // Start animation\r\n        var animation = new Animation(inertia, animationOptions, this.getInertiaOption(io, \"move\", \"duration\"), this.getInertiaOption(io, \"move\", \"easing\")).start();\r\n        this._disposers.push(animation.events.on(\"animationended\", function (ev) {\r\n            inertia.done();\r\n        }));\r\n        // Add inertia object\r\n        io.inertias.setKey(\"move\", inertia);\r\n    };\r\n    /**\r\n     * Continues resizing of a `resizable` element after it is resized and\r\n     * released.\r\n     *\r\n     * **NOTE:** this is is just a placeholder function. No actual fucntionality\r\n     * is implemented, yet.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param io       Element\r\n     * @param pointer  Pointer\r\n     */\r\n    Interaction.prototype.handleResizeInertia = function (io, pointer) {\r\n        // Some day, folks. Some day...\r\n    };\r\n    /**\r\n     * Recalculates element's position and size based on position of\r\n     * all its related pointers.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param io  Element\r\n     * @param ev  Original event\r\n     */\r\n    Interaction.prototype.handleTransform = function (io, ev) {\r\n        // Get primary pointer and its respective points\r\n        var pointer1 = io.downPointers.getIndex(0);\r\n        var point1 = null;\r\n        var startPoint1 = null;\r\n        if (pointer1) {\r\n            point1 = pointer1.point;\r\n            startPoint1 = pointer1.startPoint;\r\n        }\r\n        // Init secondary pointer\r\n        var pointer2;\r\n        var point2;\r\n        var startPoint2;\r\n        // Use center of the sprite to simulate \"second\" point of touch\r\n        point2 = {\r\n            \"x\": io.originalPosition.x,\r\n            \"y\": io.originalPosition.y\r\n        };\r\n        startPoint2 = point2;\r\n        // Determine if it's a sinngle pointer or multi\r\n        var singlePoint = true;\r\n        for (var i = 1; i < io.downPointers.length; i++) {\r\n            // Get pointer\r\n            var nextPointer = io.downPointers.getIndex(i);\r\n            // Doublecheck if it's not the same pointer by comparing original position\r\n            if (startPoint1.x != nextPointer.startPoint.x && startPoint1.y != nextPointer.startPoint.y) {\r\n                // Several pointers down\r\n                singlePoint = false;\r\n                // Get second pointer\r\n                pointer2 = nextPointer;\r\n                point2 = pointer2.point;\r\n                startPoint2 = pointer2.startPoint;\r\n                // Stop looking\r\n                break;\r\n            }\r\n        }\r\n        // Primary touch point moved?\r\n        var pointer1Moved = pointer1 && this.moved(pointer1, 0);\r\n        // Report DRAG_START if necessary\r\n        if (io.draggable && pointer1 && pointer1.dragStartEvents && pointer1.dragStartEvents.length && pointer1Moved) {\r\n            if (io.events.isEnabled(\"dragstart\") && !system.isPaused) {\r\n                io.events.dispatchImmediately(\"dragstart\", pointer1.dragStartEvents.shift());\r\n            }\r\n            //delete pointer1.dragStartEvents;\r\n        }\r\n        // Determine what we do in order of superiority\r\n        if (singlePoint && io.draggable) {\r\n            // We have only one pointer and the Sprite is draggable\r\n            // There's nothing else to be done - just move it\r\n            this.handleTransformMove(io, point1, startPoint1, ev, pointer1Moved, pointer1.touch);\r\n        }\r\n        else {\r\n            // Check if second touch point moved\r\n            var pointer2Moved = pointer2 && this.moved(pointer2, 0);\r\n            if (io.draggable && io.resizable) {\r\n                //this.handleTransformAll(io, point1, startPoint1, point2, startPoint2, ev, pointer1Moved && pointer2Moved);\r\n                this.handleTransformMove(io, point1, startPoint1, ev, pointer1Moved && pointer2Moved, pointer1.touch);\r\n                this.handleTransformResize(io, point1, startPoint1, point2, startPoint2, ev, pointer1Moved && pointer2Moved, pointer1.touch);\r\n            }\r\n            else {\r\n                if (io.draggable) {\r\n                    this.handleTransformMove(io, point1, startPoint1, ev, pointer1Moved, pointer1.touch);\r\n                }\r\n                if (io.resizable && (!singlePoint || ev.ctrlKey)) {\r\n                    this.handleTransformResize(io, point1, startPoint1, point2, startPoint2, ev, pointer1Moved && pointer2Moved, pointer1.touch);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Handles movement of the dragged element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param io            Element\r\n     * @param point         Current point of the pointer\r\n     * @param startPoint    Starting point of the pointer\r\n     * @param ev            Original event\r\n     * @param pointerMoved  Did pointer move?\r\n     */\r\n    Interaction.prototype.handleTransformMove = function (io, point, startPoint, ev, pointerMoved, touch) {\r\n        if (pointerMoved) {\r\n            if (io.events.isEnabled(\"drag\") && !system.isPaused && (!io.isTouchProtected || !touch)) {\r\n                var imev = {\r\n                    type: \"drag\",\r\n                    target: io,\r\n                    event: ev,\r\n                    shift: {\r\n                        \"x\": point.x - startPoint.x,\r\n                        \"y\": point.y - startPoint.y\r\n                    },\r\n                    startPoint: startPoint,\r\n                    point: point,\r\n                    touch: touch\r\n                };\r\n                io.events.dispatchImmediately(\"drag\", imev);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Handles resizing of the element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param io            Element\r\n     * @param point1        Current position of reference point #1\r\n     * @param startPoint1   Original position of reference point #1\r\n     * @param point2        Current position of reference point #2\r\n     * @param startPoint2   Original position of reference point #2\r\n     * @param ev            Original event\r\n     * @param pointerMoved  Did pointer move?\r\n     */\r\n    Interaction.prototype.handleTransformResize = function (io, point1, startPoint1, point2, startPoint2, ev, pointerMoved, touch) {\r\n        if (io.events.isEnabled(\"resize\") && !system.isPaused && (!io.isTouchProtected || !touch)) {\r\n            var imev = {\r\n                type: \"resize\",\r\n                target: io,\r\n                event: ev,\r\n                scale: $math.getScale(point1, startPoint1, point2, startPoint2),\r\n                startPoint1: startPoint1,\r\n                point1: point1,\r\n                startPoint2: startPoint2,\r\n                point2: point2,\r\n                touch: touch\r\n            };\r\n            io.events.dispatchImmediately(\"resize\", imev);\r\n        }\r\n    };\r\n    /**\r\n     * Handles all the preparations of the element when it starts to be dragged.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param io       Element\r\n     * @param pointer  Pointer\r\n     * @param ev       Original event\r\n     */\r\n    Interaction.prototype.processDragStart = function (io, pointer, ev) {\r\n        // Add to draggedObjects\r\n        this.transformedObjects.moveValue(io);\r\n        // Report \"dragstart\"\r\n        var imev = {\r\n            type: \"dragstart\",\r\n            target: io,\r\n            event: ev,\r\n            touch: pointer ? pointer.touch : false\r\n        };\r\n        // Log object that we are starting to drag, so we can check against and\r\n        // avoid hovers on other objects that might be in the path of movement.\r\n        if (pointer) {\r\n            pointer.dragTarget = io;\r\n            //pointer.startPoint = pointer.point;\r\n        }\r\n        /**\r\n         * If pointer is set we will not fire the event until the pointer has\r\n         * actually moved. If it's not set we don't have to wait for anything, so we\r\n         * just fire off the event right away.\r\n         */\r\n        if (pointer && pointer.dragStartEvents) {\r\n            pointer.dragStartEvents.push(imev);\r\n        }\r\n        else {\r\n            if (!system.isPaused) {\r\n                io.dispatchImmediately(\"dragstart\", imev);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Finishes up element drag operation.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param io       Element\r\n     * @param pointer  Pointer\r\n     * @param ev       Original event\r\n     */\r\n    Interaction.prototype.processDragStop = function (io, pointer, ev) {\r\n        // Pointer set?\r\n        if (!pointer) {\r\n            pointer = this.getDragPointer(io);\r\n        }\r\n        // Unset drag object\r\n        if (pointer) {\r\n            pointer.dragTarget = undefined;\r\n        }\r\n        // Removed from transformedObjects\r\n        this.transformedObjects.removeValue(io);\r\n        // Unlock document\r\n        //this.unlockDocument();\r\n        // Report dragstop\r\n        if (!pointer || this.moved(pointer, 0)) {\r\n            if (io.events.isEnabled(\"dragstop\") && !system.isPaused) {\r\n                var imev = {\r\n                    type: \"dragstop\",\r\n                    target: io,\r\n                    touch: pointer ? pointer.touch : false\r\n                };\r\n                io.events.dispatchImmediately(\"dragstop\", imev);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Handles all the preparations of the element when it starts to be resized.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param io       Element\r\n     * @param pointer  Pointer\r\n     * @param ev       Original event\r\n     */\r\n    Interaction.prototype.processResizeStart = function (io, pointer, ev) {\r\n        // Add to draggedObjects\r\n        this.transformedObjects.moveValue(io);\r\n    };\r\n    /**\r\n     * Finishes up element drag operation.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param io       Element\r\n     * @param pointer  Pointer\r\n     * @param ev       Original event\r\n     */\r\n    Interaction.prototype.processResizeStop = function (io, pointer, ev) {\r\n        // Removed from transformedObjects\r\n        this.transformedObjects.removeValue(io);\r\n    };\r\n    /**\r\n     * ==========================================================================\r\n     * Controls for InteractionObjects initiating directly\r\n     * ==========================================================================\r\n     * @hidden\r\n     */\r\n    /**\r\n     * Manually triggers drag start on the element. Could be useful in cases\r\n     * where tracking or dragging one element can also influence dragging another\r\n     * element.\r\n     *\r\n     * Passing in `pointer` reference is advisable. If not passed in it will try\r\n     * to determine which pointer to attach to. However, it's better to specify\r\n     * it explicitly.\r\n     *\r\n     * @param io       Element\r\n     * @param pointer  Pointer\r\n     */\r\n    Interaction.prototype.dragStart = function (io, pointer) {\r\n        if (!pointer) {\r\n            pointer = this.getDragPointer(io);\r\n        }\r\n        if (pointer) {\r\n            this.handleDown(io, pointer, pointer.lastDownEvent);\r\n        }\r\n    };\r\n    /**\r\n     * Manually ends drag on the element.\r\n     *\r\n     * @param io       Element\r\n     * @param pointer  Pointer\r\n     */\r\n    Interaction.prototype.dragStop = function (io, pointer) {\r\n        if (!pointer) {\r\n            pointer = this.getDragPointer(io);\r\n        }\r\n        if (pointer) {\r\n            this.handleGlobalUp(pointer, pointer.lastUpEvent);\r\n        }\r\n    };\r\n    /**\r\n     * This method uses a fuzzy logic to find the pointer to be used for dragging.\r\n     * Beware that this is not a rock-solid solution. If there are a few objects\r\n     * being dragged at the same time, you may get unexepected results.\r\n     *\r\n     * @param io  InteractionObject to get pointers from\r\n     * @return Pointer currently being used for dragging\r\n     */\r\n    Interaction.prototype.getDragPointer = function (io) {\r\n        if (io) {\r\n            // InteractionObject is supplied\r\n            // Use it's first down pointer\r\n            return io.downPointers.getIndex(0);\r\n        }\r\n        else if (this.transformedObjects.length) {\r\n            // Use first dragged object\r\n            return this.getDragPointer(this.transformedObjects.getIndex(0));\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    };\r\n    /**\r\n     * ==========================================================================\r\n     * Utils\r\n     * ==========================================================================\r\n     * @hidden\r\n     */\r\n    /**\r\n     * Returns pointer id for the given event object.\r\n     *\r\n     * @param ev  Event\r\n     * @return Pointer ID\r\n     */\r\n    Interaction.prototype.getPointerId = function (ev) {\r\n        var id = \"\";\r\n        if ($type.hasValue(ev.identifier)) {\r\n            id = \"\" + ev.identifier;\r\n        }\r\n        else if ($type.hasValue(ev.pointerId)) {\r\n            id = \"\" + ev.pointerId;\r\n        }\r\n        else {\r\n            id = \"m\";\r\n        }\r\n        return id.replace(\"-\", \"\");\r\n    };\r\n    /**\r\n     * Returns a cursor position of the event.\r\n     *\r\n     * @param ev  Original event\r\n     * @return Event point\r\n     */\r\n    Interaction.prototype.getPointerPoint = function (ev) {\r\n        return {\r\n            \"x\": ev.clientX,\r\n            \"y\": ev.clientY\r\n        };\r\n    };\r\n    /**\r\n     * Returns [[Pointer]] object that is associated with the Event.\r\n     *\r\n     * If no such [[Pointer]] object exists, it is created.\r\n     *\r\n     * @param ev  Event\r\n     * @return Pointer\r\n     */\r\n    Interaction.prototype.getPointer = function (ev) {\r\n        // Get pointer id\r\n        var id = this.getPointerId(ev);\r\n        // Get current coordinates\r\n        var point = this.getPointerPoint(ev);\r\n        // Look for the pointer in the Dictionary if it maybe already exists\r\n        var pointer;\r\n        if (this.pointers.hasKey(id)) {\r\n            // We already have such pointer\r\n            pointer = this.pointers.getKey(id);\r\n            // We need this, because Edge reuses pointer ids across touch and mouse\r\n            pointer.touch = this.isPointerTouch(ev);\r\n            // Reset pointer\r\n            //pointer.point = point;\r\n        }\r\n        else {\r\n            // Init pointer\r\n            pointer = {\r\n                \"id\": id,\r\n                //\"touch\": !(ev instanceof MouseEvent) || ((<any>ev).pointerType && (<any>ev).pointerType != \"pointer\"),\r\n                //\"touch\": !(ev instanceof MouseEvent) || ((<any>ev).pointerType && (<any>ev).pointerType != \"mouse\"),\r\n                \"touch\": this.isPointerTouch(ev),\r\n                \"startPoint\": point,\r\n                \"startTime\": $time.getTime(),\r\n                \"point\": point,\r\n                \"track\": [],\r\n                \"swipeCanceled\": false,\r\n                \"dragStartEvents\": []\r\n            };\r\n            // Add first breadcrumb\r\n            this.addBreadCrumb(pointer, point);\r\n            // Add for re-use later\r\n            this.pointers.setKey(id, pointer);\r\n        }\r\n        // Log last event\r\n        pointer.lastEvent = ev;\r\n        return pointer;\r\n    };\r\n    /**\r\n     * Determines if pointer event originated from a touch pointer or mouse.\r\n     *\r\n     * @param ev  Original event\r\n     * @return Touch pointer?\r\n     */\r\n    Interaction.prototype.isPointerTouch = function (ev) {\r\n        if (typeof Touch !== \"undefined\" && ev instanceof Touch) {\r\n            return true;\r\n        }\r\n        else if (typeof PointerEvent !== \"undefined\" && ev instanceof PointerEvent && $type.hasValue(ev.pointerType)) {\r\n            switch (ev.pointerType) {\r\n                case \"touch\":\r\n                case \"pen\":\r\n                case 2:\r\n                    return true;\r\n                case \"mouse\":\r\n                case 4:\r\n                    return false;\r\n                default:\r\n                    return !(ev instanceof MouseEvent);\r\n            }\r\n        }\r\n        else if ($type.hasValue(ev.type)) {\r\n            if (ev.type.match(/^mouse/)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Resets the poiner to original state, i.e. cleans movement information,\r\n     * starting point, etc.\r\n     *\r\n     * @param pointer Pointer\r\n     */\r\n    Interaction.prototype.resetPointer = function (pointer, ev) {\r\n        // Get current coordinates\r\n        var point = this.getPointerPoint(ev);\r\n        ;\r\n        pointer.startTime = $time.getTime();\r\n        pointer.startPoint = { x: point.x, y: point.y };\r\n        pointer.point = { x: point.x, y: point.y };\r\n        pointer.track = [];\r\n        pointer.swipeCanceled = false;\r\n        //clearTimeout(pointer.swipeTimeout);\r\n        //clearTimeout(pointer.holdTimeout);\r\n    };\r\n    /**\r\n     * Adds a \"breadcrumb\" point to the [[Pointer]] to log its movement path.\r\n     *\r\n     * @param pointer  Pointer\r\n     * @param point    Point coordinates\r\n     */\r\n    Interaction.prototype.addBreadCrumb = function (pointer, point) {\r\n        pointer.track.push({\r\n            \"timestamp\": $time.getTime(),\r\n            \"point\": point\r\n        });\r\n    };\r\n    /**\r\n     * Prepares the document for various touch-related operations.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Interaction.prototype.lockDocument = function () {\r\n        this.prepElement(this.body);\r\n    };\r\n    /**\r\n     * Restores document functionality.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Interaction.prototype.unlockDocument = function () {\r\n        if (this.transformedObjects.length == 0) {\r\n            this.restoreAllStyles(this.body);\r\n        }\r\n    };\r\n    /**\r\n     * Lock element (disable all touch)\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Interaction.prototype.lockElement = function (io) {\r\n        this.prepElement(io);\r\n    };\r\n    /**\r\n     * Restores element's functionality.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Interaction.prototype.unlockElement = function (io) {\r\n        this.restoreAllStyles(io);\r\n    };\r\n    /**\r\n     * Locks document's wheel scroll.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Interaction.prototype.lockWheel = function () {\r\n        window.addEventListener(this._pointerEvents.wheel, this.wheelLockEvent, this._passiveSupported ? { passive: false } : false);\r\n    };\r\n    /**\r\n     * Unlocks document's wheel scroll.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Interaction.prototype.unlockWheel = function () {\r\n        window.removeEventListener(this._pointerEvents.wheel, this.wheelLockEvent);\r\n    };\r\n    /**\r\n     * Checks if top element at pointer's position belongs to the SVG.\r\n     *\r\n     * @ignore Exlude from docs\r\n     * @param pointer  Pointer\r\n     * @param svg      The <svg> element\r\n     * @param id       A unique identifier of the object that is checking for locality\r\n     * @return Belongs to SVG\r\n     */\r\n    Interaction.prototype.isLocalElement = function (pointer, svg, id) {\r\n        var cached = this.getCache(\"local_pointer_\" + pointer.id);\r\n        if ($type.hasValue(cached)) {\r\n            return cached;\r\n        }\r\n        var target = ($dom.getRoot(svg) || document).elementFromPoint(pointer.point.x, pointer.point.y);\r\n        var local = target && $dom.contains(svg, target);\r\n        this.setCache(\"local_pointer_\" + pointer.id + \"_\" + id, local, 100);\r\n        return local;\r\n    };\r\n    /**\r\n     * A function that cancels mouse wheel scroll.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param ev  Event object\r\n     * @return Returns `false` to cancel\r\n     */\r\n    Interaction.prototype.wheelLockEvent = function (ev) {\r\n        ev.preventDefault();\r\n        return false;\r\n    };\r\n    /**\r\n     * Applies a set of styles to an element. Stores the original styles so they\r\n     * can be restored later.\r\n     *\r\n     * @ignore\r\n     * @param io      Element\r\n     */\r\n    Interaction.prototype.prepElement = function (io) {\r\n        var el = io.element;\r\n        if (el) {\r\n            // Define possible props\r\n            var props = [\r\n                \"touchAction\", \"webkitTouchAction\", \"MozTouchAction\", \"MSTouchAction\", \"msTouchAction\", \"oTouchAction\",\r\n                \"userSelect\", \"webkitUserSelect\", \"MozUserSelect\", \"MSUserSelect\", \"msUserSelect\", \"oUserSelect\",\r\n                \"touchSelect\", \"webkitTouchSelect\", \"MozTouchSelect\", \"MSTouchSelect\", \"msTouchSelect\", \"oTouchSelect\",\r\n                \"touchCallout\", \"webkitTouchCallout\", \"MozTouchCallout\", \"MSTouchCallout\", \"msTouchCallout\", \"oTouchCallout\",\r\n                \"contentZooming\", \"webkitContentZooming\", \"MozContentZooming\", \"MSContentZooming\", \"msContentZooming\", \"oContentZooming\",\r\n                \"userDrag\", \"webkitUserDrag\", \"MozUserDrag\", \"MSUserDrag\", \"msUserDrag\", \"oUserDrag\"\r\n            ];\r\n            for (var i = 0; i < props.length; i++) {\r\n                if (props[i] in el.style) {\r\n                    this.setTemporaryStyle(io, props[i], \"none\");\r\n                }\r\n            }\r\n            // Remove iOS-specific selection;\r\n            this.setTemporaryStyle(io, \"tapHighlightColor\", \"rgba(0, 0, 0, 0)\");\r\n            //this.setTemporaryStyle(io, \"webkitOverflowScrolling\", \"none\");\r\n        }\r\n    };\r\n    /**\r\n     * Restores replaced styles\r\n     *\r\n     * @ignore\r\n     * @param  io  Element\r\n     */\r\n    Interaction.prototype.unprepElement = function (io) {\r\n        var el = io.element;\r\n        if (el) {\r\n            // Define possible props\r\n            var props = [\r\n                \"touchAction\", \"webkitTouchAction\", \"MozTouchAction\", \"MSTouchAction\", \"msTouchAction\", \"oTouchAction\",\r\n                \"userSelect\", \"webkitUserSelect\", \"MozUserSelect\", \"MSUserSelect\", \"msUserSelect\", \"oUserSelect\",\r\n                \"touchSelect\", \"webkitTouchSelect\", \"MozTouchSelect\", \"MSTouchSelect\", \"msTouchSelect\", \"oTouchSelect\",\r\n                \"touchCallout\", \"webkitTouchCallout\", \"MozTouchCallout\", \"MSTouchCallout\", \"msTouchCallout\", \"oTouchCallout\",\r\n                \"contentZooming\", \"webkitContentZooming\", \"MozContentZooming\", \"MSContentZooming\", \"msContentZooming\", \"oContentZooming\",\r\n                \"userDrag\", \"webkitUserDrag\", \"MozUserDrag\", \"MSUserDrag\", \"msUserDrag\", \"oUserDrag\"\r\n            ];\r\n            for (var i = 0; i < props.length; i++) {\r\n                if (props[i] in el.style) {\r\n                    this.restoreStyle(io, props[i]);\r\n                }\r\n            }\r\n            // Remove iOS-specific selection;\r\n            this.restoreStyle(io, \"tapHighlightColor\");\r\n            //this.restoreStyle(io, \"webkitOverflowScrolling\");\r\n        }\r\n    };\r\n    /**\r\n     * Returns an option associated with hit events.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param io      Element\r\n     * @param option  Option key\r\n     * @return Option value\r\n     */\r\n    Interaction.prototype.getHitOption = function (io, option) {\r\n        var res = io.hitOptions[option];\r\n        if (typeof res === \"undefined\") {\r\n            res = this.hitOptions[option];\r\n        }\r\n        return res;\r\n    };\r\n    /**\r\n     * Returns an option associated with hover events.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param io      Element\r\n     * @param option  Option key\r\n     * @return Option value\r\n     */\r\n    Interaction.prototype.getHoverOption = function (io, option) {\r\n        var res = io.hoverOptions[option];\r\n        if (typeof res === \"undefined\") {\r\n            res = this.hoverOptions[option];\r\n        }\r\n        return res;\r\n    };\r\n    /**\r\n     * Returns an option associated with swipe events.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param io      Element\r\n     * @param option  Option key\r\n     * @return Option value\r\n     */\r\n    Interaction.prototype.getSwipeOption = function (io, option) {\r\n        var res = io.swipeOptions[option];\r\n        if (typeof res === \"undefined\") {\r\n            res = this.swipeOptions[option];\r\n        }\r\n        return res;\r\n    };\r\n    /**\r\n     * Returns an option for keyboard.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param io      Element\r\n     * @param option  Option key\r\n     * @return Option value\r\n     */\r\n    Interaction.prototype.getKeyboardOption = function (io, option) {\r\n        var res = io.keyboardOptions[option];\r\n        if (typeof res === \"undefined\") {\r\n            res = this.keyboardOptions[option];\r\n        }\r\n        return res;\r\n    };\r\n    /**\r\n     * Returns an option for mouse.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param io      Element\r\n     * @param option  Option key\r\n     * @return Option value\r\n     */\r\n    Interaction.prototype.getMouseOption = function (io, option) {\r\n        var res = io.mouseOptions[option];\r\n        if (typeof res === \"undefined\") {\r\n            res = this.mouseOptions[option];\r\n        }\r\n        return res;\r\n    };\r\n    /**\r\n     * Returns an option associated with inertia.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param io      Element\r\n     * @param type    Inertia type\r\n     * @param option  Option key\r\n     * @return Option value\r\n     */\r\n    Interaction.prototype.getInertiaOption = function (io, type, option) {\r\n        var options = io.inertiaOptions.getKey(type);\r\n        var res;\r\n        if (options && $type.hasValue(options[option])) {\r\n            res = options[option];\r\n        }\r\n        else {\r\n            res = this.inertiaOptions.getKey(type)[option];\r\n        }\r\n        return res;\r\n    };\r\n    /**\r\n     * Stops currently going on inertia. Useful if inertia is currently being\r\n     * animated and the object is being interacted with.\r\n     *\r\n     * @param io Element\r\n     */\r\n    Interaction.prototype.stopInertia = function (io) {\r\n        var x;\r\n        var inertias = [\"move\", \"resize\"];\r\n        for (var i = 0; i < inertias.length; i++) {\r\n            x = inertias[i];\r\n            if (io.inertias.hasKey(x)) {\r\n                var inertia = io.inertias.getKey(x);\r\n                if (inertia) {\r\n                    inertia.dispose();\r\n                    //io.inertiaAnimations.removeKey(x);\r\n                    //this.processDragStop(io);\r\n                    continue;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Check if swiping is currently being performed on an object.\r\n     *\r\n     * @param io       Element\r\n     * @param pointer  Pointer to check\r\n     * @return `true` if swiping\r\n     */\r\n    Interaction.prototype.swiping = function (io, pointer) {\r\n        var now = $time.getTime();\r\n        if (pointer.swipeCanceled || !io.swipeable) {\r\n            return false;\r\n        }\r\n        else if ((Math.abs(pointer.startPoint.y - pointer.point.y) < this.getSwipeOption(io, \"verticalThreshold\")) &&\r\n            (pointer.startTime > (now - this.getSwipeOption(io, \"time\")))) {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Returns `true` if a successfull swipe action was performed on an element.\r\n     *\r\n     * @param io       Element\r\n     * @param pointer  Pointer\r\n     * @return Swiped?\r\n     */\r\n    Interaction.prototype.swiped = function (io, pointer) {\r\n        var now = $time.getTime();\r\n        if (pointer.swipeCanceled) {\r\n            return false;\r\n        }\r\n        else if ((Math.abs(pointer.startPoint.x - pointer.point.x) > this.getSwipeOption(io, \"horizontalThreshold\")) &&\r\n            (Math.abs(pointer.startPoint.y - pointer.point.y) < this.getSwipeOption(io, \"verticalThreshold\")) &&\r\n            (pointer.startTime > (now - this.getSwipeOption(io, \"time\")))) {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Applies style to mouse cursor based on its stage in relation to\r\n     * [[InteractionObject]].\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param Element\r\n     */\r\n    Interaction.prototype.applyCursorOverStyle = function (io) {\r\n        // Get sprite's cursor ooptions\r\n        var options = io.cursorOptions;\r\n        if (!$type.hasValue(options.overStyle)) {\r\n            return;\r\n        }\r\n        // Apply cursor down styles\r\n        for (var i = 0; i < options.overStyle.length; i++) {\r\n            $dom.setStyle(io.element, options.overStyle[i].property, options.overStyle[i].value);\r\n        }\r\n    };\r\n    /**\r\n     * Applies style to mouse cursor based on its stage in relation to\r\n     * [[InteractionObject]].\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param io       Element\r\n     * @param pointer  Pointer\r\n     */\r\n    Interaction.prototype.applyCursorDownStyle = function (io, pointer) {\r\n        // Not applicable for touch pointers since they don't display a cursor\r\n        if (pointer.touch) {\r\n            return;\r\n        }\r\n        var downStyle = io.cursorOptions.downStyle;\r\n        // Is down?\r\n        if (io.downPointers.contains(pointer) && $type.hasValue(downStyle)) {\r\n            // Apply cursor down styles\r\n            for (var i = 0; i < downStyle.length; i++) {\r\n                this.setTemporaryStyle(this.body, downStyle[i].property, downStyle[i].value);\r\n                this.setTemporaryStyle(io, downStyle[i].property, downStyle[i].value);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Restores original cursor style for the element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param io       Element\r\n     * @param pointer  Pointer\r\n     */\r\n    Interaction.prototype.restoreCursorDownStyle = function (io, pointer) {\r\n        // Not applicable for touch pointers since they don't display a cursor\r\n        if (pointer.touch) {\r\n            return;\r\n        }\r\n        var downStyle = io.cursorOptions.downStyle;\r\n        // Is down?\r\n        if (io.downPointers.contains(pointer) && $type.hasValue(downStyle)) {\r\n            // Apply cursor down styles\r\n            for (var i = 0; i < downStyle.length; i++) {\r\n                this.restoreStyle(this.body, downStyle[i].property);\r\n                this.restoreStyle(io, downStyle[i].property);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets style on the body of the document.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param style  Style definitions\r\n     */\r\n    Interaction.prototype.setGlobalStyle = function (style) {\r\n        var body = getInteraction().body;\r\n        var styles = ($type.isArray(style) ? style : [style]);\r\n        for (var i = 0; i < styles.length; i++) {\r\n            this.setTemporaryStyle(body, styles[i].property, styles[i].value);\r\n        }\r\n    };\r\n    /**\r\n     * Restores style on the body of the document.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param style  Style definitions\r\n     */\r\n    Interaction.prototype.restoreGlobalStyle = function (style) {\r\n        var body = getInteraction().body;\r\n        var styles = ($type.isArray(style) ? style : [style]);\r\n        for (var i = 0; i < styles.length; i++) {\r\n            this.restoreStyle(body, styles[i].property);\r\n        }\r\n    };\r\n    /**\r\n     * Checks if element is a non-cahrt element.\r\n     *\r\n     * @param io  InteractionObject\r\n     * @return Global element?\r\n     */\r\n    Interaction.prototype.isGlobalElement = function (io) {\r\n        return document.body === io.element;\r\n    };\r\n    /**\r\n     * Checks if pointer has moved since it was created.\r\n     *\r\n     * @param pointer    Pointer\r\n     * @param tolerance  Tolerance in pixels\r\n     * @param minTime    Minimum time required for the pointer to be down to be considered moved\r\n     * @return `true` if the pointer has moved\r\n     */\r\n    Interaction.prototype.moved = function (pointer, tolerance, minTime) {\r\n        /*// If there was more time, we don't care if cursor actually moved\r\n        let duration = $time.getTime() - pointer.startTime;\r\n        if ($type.hasValue(minTime) && (minTime > duration)) {\r\n            return false;\r\n        }*/\r\n        if (minTime === void 0) { minTime = 300; }\r\n        // That was quick measure shift\r\n        var shift = this.getShift(pointer);\r\n        return (Math.abs(shift.x) > tolerance) || (Math.abs(shift.y) > tolerance);\r\n    };\r\n    /**\r\n     * Returns if pointer is \"old\", meaning it has been pressing for more than\r\n     * X milliseconds.\r\n     *\r\n     * @ignore\r\n     * @param pointer  Pointer\r\n     * @param minTime  Minimum time to consider pointer old\r\n     * @return {boolean}\r\n     */\r\n    Interaction.prototype.old = function (pointer, minTime) {\r\n        if (minTime === void 0) { minTime = 300; }\r\n        return $time.getTime() - pointer.startTime > minTime;\r\n    };\r\n    /**\r\n     * Returns total a shift in pointers coordinates between its original\r\n     * position and now.\r\n     *\r\n     * @param pointer  Pointer\r\n     * @return Shift in coordinates (x/y)\r\n     */\r\n    Interaction.prototype.getShift = function (pointer) {\r\n        return {\r\n            \"x\": pointer.startPoint.x - pointer.point.x,\r\n            \"y\": pointer.startPoint.y - pointer.point.y\r\n        };\r\n    };\r\n    /**\r\n     * Returns a point from [[Pointer]]'s move history at a certain timetamp.\r\n     *\r\n     * @param pointer    Pointer\r\n     * @param timestamp  Timestamp\r\n     * @return Point\r\n     */\r\n    Interaction.prototype.getTrailPoint = function (pointer, timestamp) {\r\n        var res;\r\n        for (var i = 0; i < pointer.track.length; i++) {\r\n            if (pointer.track[i].timestamp >= timestamp) {\r\n                res = pointer.track[i];\r\n                break;\r\n            }\r\n        }\r\n        return res;\r\n    };\r\n    /**\r\n     * Checks if same pointer already exists in the list.\r\n     *\r\n     * @param list     List to check agains\r\n     * @param pointer  Pointer\r\n     * @return Exists?\r\n     */\r\n    Interaction.prototype.pointerExists = function (list, pointer) {\r\n        var exists = false;\r\n        list.each(function (item) {\r\n            if (item == pointer) {\r\n                return;\r\n            }\r\n            exists = item.point.x == pointer.point.x && item.point.y == pointer.point.y;\r\n        });\r\n        return exists;\r\n    };\r\n    /**\r\n     * Returns an [[InteractionObject]] representation of a DOM element.\r\n     *\r\n     * You can use this on any HTML or SVG element, to add interactive features\r\n     * to it.\r\n     *\r\n     * @param element  Element\r\n     * @return InteractionObject\r\n     */\r\n    Interaction.prototype.getInteraction = function (element) {\r\n        return new InteractionObject(element);\r\n    };\r\n    /**\r\n     * Sets a style property on an element. Stores original value to be restored\r\n     * later with [[restoreStyle]].\r\n     *\r\n     * @see {@link restoreStyle}\r\n     * @param io        Element\r\n     * @param property  Property\r\n     * @param value     Value\r\n     */\r\n    Interaction.prototype.setTemporaryStyle = function (io, property, value) {\r\n        // Get element\r\n        //let el = io.element.tagName == \"g\" ? <SVGSVGElement>io.element.parentNode : io.element;\r\n        var el = io.element;\r\n        // Save original property if it is set and hasn't been saved before already\r\n        if ($type.hasValue(el.style[property]) && !io.replacedStyles.hasKey(property)) {\r\n            io.replacedStyles.setKey(property, el.style[property]);\r\n        }\r\n        // Replace with the new one\r\n        $dom.setStyle(el, property, value);\r\n    };\r\n    /**\r\n     * Restores specific style on an element.\r\n     *\r\n     * @param io        Element\r\n     * @param property  Style property\r\n     */\r\n    Interaction.prototype.restoreStyle = function (io, property) {\r\n        // Reset style\r\n        if (io.replacedStyles.hasKey(property)) {\r\n            io.element.style[property] = io.replacedStyles.getKey(property);\r\n            io.replacedStyles.removeKey(property);\r\n        }\r\n        else {\r\n            delete io.element.style[property];\r\n        }\r\n    };\r\n    /**\r\n     * Restore temporarily reset styles on an element.\r\n     *\r\n     * @param io Element\r\n     */\r\n    Interaction.prototype.restoreAllStyles = function (io) {\r\n        $iter.each(io.replacedStyles.iterator(), function (a) {\r\n            var key = a[0];\r\n            var value = a[1];\r\n            io.element.style[key] = value;\r\n            io.replacedStyles.removeKey(key);\r\n        });\r\n    };\r\n    /**\r\n     * Disposes this object and cleans up after itself.\r\n     */\r\n    Interaction.prototype.dispose = function () {\r\n        if (!this.isDisposed()) {\r\n            _super.prototype.dispose.call(this);\r\n            this.restoreAllStyles(this.body);\r\n            this.unlockWheel();\r\n        }\r\n    };\r\n    // @ts-ignore Used for debugging\r\n    Interaction.prototype.log = function (text, ev, io) {\r\n        var show = true;\r\n        if (show) {\r\n            // Touchlist?\r\n            if (ev.changedTouches) {\r\n                for (var i = 0; i < ev.changedTouches.length; i++) {\r\n                    this.logTouch(text, ev.type, ev.changedTouches[i]);\r\n                }\r\n                return;\r\n            }\r\n            // Get type\r\n            var type = \"\";\r\n            if (ev.pointerType) {\r\n                switch (ev.pointerType) {\r\n                    case 2:\r\n                        type = \"touch\";\r\n                        break;\r\n                    case 4:\r\n                        type = \"mouse\";\r\n                        break;\r\n                    default:\r\n                        type = ev.pointerType;\r\n                        break;\r\n                }\r\n            }\r\n            else if (typeof TouchEvent != \"undefined\" && ev instanceof TouchEvent) {\r\n                type = \"touch\";\r\n            }\r\n            else if (ev.type.match(/^mouse/)) {\r\n                type = \"mouse\";\r\n            }\r\n            else {\r\n                type = \"???\";\r\n            }\r\n            // Get ID\r\n            var id = \"\";\r\n            if ($type.hasValue(ev.identifier)) {\r\n                id = ev.identifier;\r\n            }\r\n            else if ($type.hasValue(ev.pointerId)) {\r\n                id = ev.pointerId;\r\n            }\r\n            else {\r\n                id = \"???\";\r\n            }\r\n            if (io) {\r\n                console.log(text + \" (\" + io.uid + \")  \" + ev.type + \"  \" + type + \"  \" + id);\r\n            }\r\n            else {\r\n                console.log(text + \"  \" + ev.type + \"  \" + type + \"  \" + id);\r\n            }\r\n        }\r\n    };\r\n    Interaction.prototype.logTouch = function (text, type, ev) {\r\n        console.log(text + \"  \" + type + \"  \" + \"touch\" + \"  \" + ev.identifier);\r\n    };\r\n    Object.defineProperty(Interaction, \"passiveSupported\", {\r\n        /**\r\n         * Indicates if passive mode options is supported by this browser.\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            if (this._passiveSupported == null) {\r\n                // Check for passive mode support\r\n                try {\r\n                    var options = Object.defineProperty({}, \"passive\", {\r\n                        get: function () {\r\n                            _this._passiveSupported = true;\r\n                        }\r\n                    });\r\n                    window.addEventListener(\"test\", options, options);\r\n                    window.removeEventListener(\"test\", options, options);\r\n                }\r\n                catch (err) {\r\n                    this._passiveSupported = false;\r\n                }\r\n            }\r\n            return this._passiveSupported;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Interaction;\r\n}(BaseObjectEvents));\r\nexport { Interaction };\r\nvar interaction = null;\r\n/**\r\n * Returns a single unified global instance of [[Interaction]].\r\n *\r\n * All code should use this function, rather than create their own instances\r\n * of [[Interaction]].\r\n */\r\nexport function getInteraction() {\r\n    if (interaction == null) {\r\n        interaction = new Interaction();\r\n    }\r\n    return interaction;\r\n}\r\n//# sourceMappingURL=Interaction.js.map","/**\r\n * Event Dispatcher module is used for registering listeners and dispatching\r\n * events across amCharts system.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Disposer } from \"./Disposer\";\r\nimport * as $array from \"./Array\";\r\nimport * as $async from \"./AsyncPending\";\r\nimport * as $type from \"./Type\";\r\n/*export interface IEventDispatcher<T> {\r\n    isDisposed(): boolean;\r\n    dispose(): void;\r\n    hasListeners(): boolean;\r\n    enable(): void;\r\n    disable(): void;\r\n    enableType<Key extends keyof T>(type: Key): void;\r\n    disableType<Key extends keyof T>(type: Key, amount?: number): void;\r\n    isEnabled<Key extends keyof T>(type: Key): boolean;\r\n    has<C, Key extends keyof T>(type: Key, callback?: (this: C, event: T[Key]) => void, context?: C): boolean;\r\n    dispatchImmediately<Key extends keyof T>(type: Key, event: T[Key]): void;\r\n    dispatch<Key extends keyof T>(type: Key, event: T[Key]): void;\r\n    onAll<C, Key extends keyof T>(callback: (this: C, type: Key, event: T[Key]) => void, context?: C): IDisposer;\r\n    on<C, Key extends keyof T>(type: Key, callback: (this: C, event: T[Key]) => void, context?: C): IDisposer;\r\n    once<C, Key extends keyof T>(type: Key, callback: (this: C, event: T[Key]) => void, context?: C): IDisposer;\r\n    off<C, Key extends keyof T>(type: Key, callback: (this: C, event: T[Key]) => void, context?: C): void;\r\n    off<C, Key extends keyof T>(type: Key, callback: (this: C, event: T[Key]) => void, context?: C): void;\r\n    copyFrom(source: this): void;\r\n}*/\r\n/**\r\n * Universal Event Dispatcher.\r\n *\r\n * @important\r\n */\r\nvar EventDispatcher = /** @class */ (function () {\r\n    /**\r\n     * Constructor\r\n     */\r\n    function EventDispatcher() {\r\n        this._listeners = [];\r\n        this._killed = [];\r\n        this._disabled = {};\r\n        this._iterating = 0;\r\n        this._enabled = true;\r\n        this._disposed = false;\r\n    }\r\n    /**\r\n     * Returns if this object has been already disposed.\r\n     *\r\n     * @return Disposed?\r\n     */\r\n    EventDispatcher.prototype.isDisposed = function () {\r\n        return this._disposed;\r\n    };\r\n    /**\r\n     * Dispose (destroy) this object.\r\n     */\r\n    EventDispatcher.prototype.dispose = function () {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            var a = this._listeners;\r\n            this._iterating = 1;\r\n            this._listeners = null;\r\n            this._disabled = null;\r\n            try {\r\n                $array.each(a, function (x) {\r\n                    x.disposer.dispose();\r\n                });\r\n            }\r\n            finally {\r\n                this._killed = null;\r\n                this._iterating = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Checks if this particular event dispatcher has any listeners set.\r\n     *\r\n     * @return Has listeners?\r\n     */\r\n    EventDispatcher.prototype.hasListeners = function () {\r\n        return this._listeners.length !== 0;\r\n    };\r\n    /**\r\n     * Checks if this particular event dispatcher has any particular listeners set.\r\n     *\r\n     * @return Has particular event listeners?\r\n     */\r\n    EventDispatcher.prototype.hasListenersByType = function (type) {\r\n        return $array.any(this._listeners, function (x) { return (x.type === null || x.type === type) && !x.killed; });\r\n    };\r\n    /**\r\n     * Enable dispatching of events if they were previously disabled by\r\n     * `disable()`.\r\n     */\r\n    EventDispatcher.prototype.enable = function () {\r\n        this._enabled = true;\r\n    };\r\n    /**\r\n     * Disable dispatching of events until re-enabled by `enable()`.\r\n     */\r\n    EventDispatcher.prototype.disable = function () {\r\n        this._enabled = false;\r\n    };\r\n    /**\r\n     * Enable dispatching particular event, if it was disabled before by\r\n     * `disableType()`.\r\n     *\r\n     * @param type Event type\r\n     */\r\n    EventDispatcher.prototype.enableType = function (type) {\r\n        delete this._disabled[type];\r\n    };\r\n    /**\r\n     * Disable dispatching of events for a certain event type.\r\n     *\r\n     * Optionally, can set how many dispatches to skip before automatically\r\n     * re-enabling the dispatching.\r\n     *\r\n     * @param type    Event type\r\n     * @param amount  Number of event dispatches to skip\r\n     */\r\n    EventDispatcher.prototype.disableType = function (type, amount) {\r\n        if (amount === void 0) { amount = Infinity; }\r\n        this._disabled[type] = amount;\r\n    };\r\n    /**\r\n     * Removes listener from dispatcher.\r\n     *\r\n     * Will throw an exception if such listener does not exists.\r\n     *\r\n     * @param listener Listener to remove\r\n     */\r\n    EventDispatcher.prototype._removeListener = function (listener) {\r\n        if (this._iterating === 0) {\r\n            var index = this._listeners.indexOf(listener);\r\n            if (index === -1) {\r\n                throw new Error(\"Invalid state: could not remove listener\");\r\n            }\r\n            this._listeners.splice(index, 1);\r\n        }\r\n        else {\r\n            this._killed.push(listener);\r\n        }\r\n    };\r\n    /**\r\n     * Removes existing listener by certain parameters.\r\n     *\r\n     * @param once         Listener's once setting\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     */\r\n    EventDispatcher.prototype._removeExistingListener = function (once, type, callback, context) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        this._eachListener(function (info) {\r\n            if (info.once === once && // TODO is this correct ?\r\n                info.type === type &&\r\n                (callback == null || info.callback === callback) &&\r\n                info.context === context) {\r\n                info.disposer.dispose();\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Checks if dispatching for particular event type is enabled.\r\n     *\r\n     * @param type  Event type\r\n     * @return Enabled?\r\n     */\r\n    EventDispatcher.prototype.isEnabled = function (type) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        // TODO is this check correct ?\r\n        return this._enabled && this._listeners.length > 0 && this.hasListenersByType(type) && this._disabled[type] == null;\r\n    };\r\n    /**\r\n     * Checks if there's already a listener with specific parameters.\r\n     *\r\n     * @param type      Listener's type\r\n     * @param callback  Callback function\r\n     * @param context   Callback context\r\n     * @return Has listener?\r\n     */\r\n    EventDispatcher.prototype.has = function (type, callback, context) {\r\n        var index = $array.findIndex(this._listeners, function (info) {\r\n            return info.once !== true && // Ignoring \"once\" listeners\r\n                info.type === type &&\r\n                (callback == null || info.callback === callback) &&\r\n                info.context === context;\r\n        });\r\n        return index !== -1;\r\n    };\r\n    /**\r\n     * Checks whether event of the particular type should be dispatched.\r\n     *\r\n     * @param type  Event type\r\n     * @return Dispatch?\r\n     */\r\n    EventDispatcher.prototype._shouldDispatch = function (type) {\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        var count = this._disabled[type];\r\n        if (!$type.isNumber(count)) {\r\n            return this._enabled;\r\n        }\r\n        else {\r\n            if (count <= 1) {\r\n                delete this._disabled[type];\r\n            }\r\n            else {\r\n                --this._disabled[type];\r\n            }\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * [_eachListener description]\r\n     *\r\n     * All of this extra code is needed when a listener is removed while iterating\r\n     *\r\n     * @todo Description\r\n     * @param fn [description]\r\n     */\r\n    EventDispatcher.prototype._eachListener = function (fn) {\r\n        var _this = this;\r\n        ++this._iterating;\r\n        try {\r\n            $array.each(this._listeners, fn);\r\n        }\r\n        finally {\r\n            --this._iterating;\r\n            // TODO should this be inside or outside the finally ?\r\n            if (this._iterating === 0 && this._killed.length !== 0) {\r\n                // Remove killed listeners\r\n                $array.each(this._killed, function (killed) {\r\n                    _this._removeListener(killed);\r\n                });\r\n                this._killed.length = 0;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Dispatches an event immediately without waiting for next cycle.\r\n     *\r\n     * @param type   Event type\r\n     * @param event  Event object\r\n     * @todo automatically add in type and target properties if they are missing\r\n     */\r\n    EventDispatcher.prototype.dispatchImmediately = function (type, event) {\r\n        if (this._shouldDispatch(type)) {\r\n            // TODO check if it's faster to use an object of listeners rather than a single big array\r\n            // TODO if the function throws, maybe it should keep going ?\r\n            this._eachListener(function (listener) {\r\n                if (!listener.killed && (listener.type === null || listener.type === type)) {\r\n                    listener.dispatch(type, event);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Shelves the event to be dispatched within next update cycle.\r\n     *\r\n     * @param type   Event type\r\n     * @param event  Event object\r\n     * @todo automatically add in type and target properties if they are missing\r\n     */\r\n    EventDispatcher.prototype.dispatch = function (type, event) {\r\n        if (this._shouldDispatch(type)) {\r\n            this._eachListener(function (listener) {\r\n                // TODO check if it's faster to use an object of listeners rather than a single big array\r\n                if (!listener.killed && (listener.type === null || listener.type === type)) {\r\n                    // TODO if the function throws, maybe it should keep going ?\r\n                    // TODO dispatch during the update cycle, rather than using whenIdle\r\n                    $async.whenIdle(function () {\r\n                        if (!listener.killed) {\r\n                            listener.dispatch(type, event);\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Creates, catalogs and returns an [[EventListener]].\r\n     *\r\n     * Event listener can be disposed.\r\n     *\r\n     * @param once         Listener's once setting\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\r\n     * @param dispatch\r\n     * @returns An event listener\r\n     */\r\n    EventDispatcher.prototype._on = function (once, type, callback, context, shouldClone, dispatch) {\r\n        var _this = this;\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        this._removeExistingListener(once, type, callback, context);\r\n        var info = {\r\n            type: type,\r\n            callback: callback,\r\n            context: context,\r\n            shouldClone: shouldClone,\r\n            dispatch: dispatch,\r\n            killed: false,\r\n            once: once,\r\n            disposer: new Disposer(function () {\r\n                info.killed = true;\r\n                _this._removeListener(info);\r\n            })\r\n        };\r\n        this._listeners.push(info);\r\n        return info;\r\n    };\r\n    /**\r\n     * Creates an event listener to be invoked on **any** event.\r\n     *\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\r\n     * @returns A disposable event listener\r\n     * @todo what if `listen` is called on the same function twice ?\r\n     */\r\n    EventDispatcher.prototype.onAll = function (callback, context, shouldClone) {\r\n        if (shouldClone === void 0) { shouldClone = true; }\r\n        return this._on(false, null, callback, context, shouldClone, function (type, event) { return callback.call(context, type, event); }).disposer;\r\n    };\r\n    /**\r\n     * Creates an event listener to be invoked on a specific event type.\r\n     *\r\n     * ```TypeScript\r\n     * series.events.on(\"hidden\", (ev) => {\r\n     *   console.log(\"Series hidden: \" + ev.target.name);\r\n     * }, this);\r\n     * ```\r\n     * ```JavaScript\r\n     * series.events.on(\"hidden\", function(ev) {\r\n     *   console.log(\"Series hidden: \" + ev.target.name);\r\n     * }, this);\r\n     * ```\r\n     * ```JSON\r\n     * {\r\n     *   // ...\r\n     *   \"series\": [{\r\n     *     // ...\r\n     *     \"events\": {\r\n     *     \t\"hidden\": function(ev) {\r\n     *     \t  console.log(\"Series hidden: \" + ev.target.name);\r\n     *     \t}\r\n     *     }\r\n     *   }]\r\n     * }\r\n     * ```\r\n     *\r\n     * The above will invoke our custom event handler whenever series we put\r\n     * event on is hidden.\r\n     *\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\r\n     * @returns A disposable event listener\r\n     * @todo what if `listen` is called on the same function twice ?\r\n     */\r\n    EventDispatcher.prototype.on = function (type, callback, context, shouldClone) {\r\n        if (shouldClone === void 0) { shouldClone = true; }\r\n        return this._on(false, type, callback, context, shouldClone, function (type, event) { return callback.call(context, event); }).disposer;\r\n    };\r\n    /**\r\n     * Creates an event listener to be invoked on a specific event type once.\r\n     *\r\n     * Once the event listener is invoked, it is automatically disposed.\r\n     *\r\n     * ```TypeScript\r\n     * series.events.on(\"hidden\", (ev) => {\r\n     *   console.log(\"Series hidden: \" + ev.target.name);\r\n     * }, this);\r\n     * ```\r\n     * ```JavaScript\r\n     * series.events.on(\"hidden\", function(ev) {\r\n     *   console.log(\"Series hidden: \" + ev.target.name);\r\n     * }, this);\r\n     * ```\r\n     * ```JSON\r\n     * {\r\n     *   // ...\r\n     *   \"series\": [{\r\n     *     // ...\r\n     *     \"events\": {\r\n     *     \t\"hidden\": function(ev) {\r\n     *     \t  console.log(\"Series hidden: \" + ev.target.name);\r\n     *     \t}\r\n     *     }\r\n     *   }]\r\n     * }\r\n     * ```\r\n     *\r\n     * The above will invoke our custom event handler the first time series we\r\n     * put event on is hidden.\r\n     *\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\r\n     * @returns A disposable event listener\r\n     * @todo what if `listen` is called on the same function twice ?\r\n     */\r\n    EventDispatcher.prototype.once = function (type, callback, context, shouldClone) {\r\n        if (shouldClone === void 0) { shouldClone = true; }\r\n        var x = this._on(true, type, callback, context, shouldClone, function (type, event) {\r\n            x.disposer.dispose();\r\n            callback.call(context, event);\r\n        });\r\n        // TODO maybe this should return a different Disposer ?\r\n        return x.disposer;\r\n    };\r\n    /**\r\n     * Removes the event listener with specific parameters.\r\n     *\r\n     * @param type         Listener's type\r\n     * @param callback     Callback function\r\n     * @param context      Callback context\r\n     */\r\n    EventDispatcher.prototype.off = function (type, callback, context) {\r\n        this._removeExistingListener(false, type, callback, context);\r\n    };\r\n    /**\r\n     * Copies all dispatcher parameters, including listeners, from another event\r\n     * dispatcher.\r\n     *\r\n     * @param source Source event dispatcher\r\n     */\r\n    EventDispatcher.prototype.copyFrom = function (source) {\r\n        var _this = this;\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        if (source === this) {\r\n            throw new Error(\"Cannot copyFrom the same TargetedEventDispatcher\");\r\n        }\r\n        $array.each(source._listeners, function (x) {\r\n            // TODO is this correct ?\r\n            if (!x.killed && x.shouldClone) {\r\n                if (x.type === null) {\r\n                    _this.onAll(x.callback, x.context);\r\n                }\r\n                else if (x.once) {\r\n                    _this.once(x.type, x.callback, x.context);\r\n                }\r\n                else {\r\n                    _this.on(x.type, x.callback, x.context);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    return EventDispatcher;\r\n}());\r\nexport { EventDispatcher };\r\n/**\r\n * A version of the [[EventDispatcher]] that dispatches events for a specific\r\n * target object.\r\n *\r\n * @important\r\n */\r\nvar TargetedEventDispatcher = /** @class */ (function (_super) {\r\n    __extends(TargetedEventDispatcher, _super);\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param target Event dispatcher target\r\n     */\r\n    function TargetedEventDispatcher(target) {\r\n        var _this = _super.call(this) || this;\r\n        _this.target = target;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Copies all dispatcher parameters, including listeners, from another event\r\n     * dispatcher.\r\n     *\r\n     * @param source Source event dispatcher\r\n     */\r\n    TargetedEventDispatcher.prototype.copyFrom = function (source) {\r\n        var _this = this;\r\n        if (this._disposed) {\r\n            throw new Error(\"EventDispatcher is disposed\");\r\n        }\r\n        if (source === this) {\r\n            throw new Error(\"Cannot copyFrom the same TargetedEventDispatcher\");\r\n        }\r\n        $array.each(source._listeners, function (x) {\r\n            // TODO very hacky\r\n            if (x.context === source.target) {\r\n                return;\r\n            }\r\n            // TODO is this correct ?\r\n            if (!x.killed && x.shouldClone) {\r\n                if (x.type === null) {\r\n                    _this.onAll(x.callback, x.context);\r\n                }\r\n                else if (x.once) {\r\n                    _this.once(x.type, x.callback, x.context);\r\n                }\r\n                else {\r\n                    _this.on(x.type, x.callback, x.context);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    return TargetedEventDispatcher;\r\n}(EventDispatcher));\r\nexport { TargetedEventDispatcher };\r\n//# sourceMappingURL=EventDispatcher.js.map","/**\r\n * A collection of String-based constants.\r\n * @hidden\r\n * @ignore Exclude from docs\r\n */\r\n/**\r\n * @ignore Exclude from docs\r\n */\r\nexport var PX = \"px\";\r\n/**\r\n * @ignore Exclude from docs\r\n */\r\nexport var STRING = \"string\";\r\n/**\r\n * @ignore Exclude from docs\r\n */\r\nexport var NUMBER = \"number\";\r\n/**\r\n * @ignore Exclude from docs\r\n */\r\nexport var DATE = \"date\";\r\n/**\r\n * @ignore Exclude from docs\r\n */\r\nexport var DURATION = \"duration\";\r\n/**\r\n * @ignore Exclude from docs\r\n */\r\nexport var PLACEHOLDER = \"__§§§__\";\r\n/**\r\n * @ignore Exclude from docs\r\n */\r\nexport var PLACEHOLDER2 = \"__§§§§__\";\r\n//# sourceMappingURL=Strings.js.map","/**\r\n * Animation module.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObjectEvents } from \"../Base\";\r\nimport { SVGDefaults } from \"../defs/SVGDefaults\";\r\nimport { Disposer } from \"../utils/Disposer\";\r\nimport { Color } from \"../utils/Color\";\r\nimport { Percent, percent } from \"../utils/Percent\";\r\nimport * as $async from \"../utils/AsyncPending\";\r\nimport * as $ease from \"../utils/Ease\";\r\nimport * as $colors from \"../utils/Colors\";\r\nimport * as $math from \"../utils/Math\";\r\nimport * as $array from \"../utils/Array\";\r\nimport * as $type from \"../utils/Type\";\r\nimport { system } from \"../System\";\r\n/**\r\n * Calls a `callback` function for the `duration` of milliseconds.\r\n *\r\n * @todo Needed?\r\n * @deprecated Not used anywhere\r\n * @ignore Exclude from docs\r\n * @param duration  Duration (ms)\r\n * @param callback  Callback function\r\n * @return Disposer\r\n */\r\nexport function animate(duration, callback) {\r\n    var disposed = false;\r\n    // TODO use performance.now() ?\r\n    var startTime = Date.now();\r\n    function loop(now) {\r\n        if (!disposed) {\r\n            var diff = now - startTime;\r\n            if (diff >= duration) {\r\n                callback(1);\r\n            }\r\n            else {\r\n                $async.nextFrame(loop);\r\n                callback(diff / duration);\r\n            }\r\n        }\r\n    }\r\n    $async.nextFrame(loop);\r\n    return new Disposer(function () {\r\n        disposed = true;\r\n    });\r\n}\r\n/**\r\n * Returns numeric value accoring to progress between start and end values.\r\n *\r\n * @param progress  Progress (0-1)\r\n * @param from\r\n * @param to\r\n * @return Value according to progress\r\n */\r\nfunction getProgressNumber(progress, from, to) {\r\n    return from + ((to - from) * progress);\r\n}\r\n/**\r\n * Returns [[Percent]] value accoring to progress between start and end\r\n * values.\r\n *\r\n * @param progress  Progress (0-1)\r\n * @param from\r\n * @param to\r\n * @return Value according to progress\r\n */\r\nfunction getProgressPercent(progress, from, to) {\r\n    return new Percent(getProgressNumber(progress, from.percent, to.percent));\r\n}\r\n/**\r\n * Returns color value accoring to progress between start and end values.\r\n *\r\n * @param progress  Progress (0-1)\r\n * @param from\r\n * @param to\r\n * @return Color according to progress\r\n */\r\nfunction getProgressColor(progress, from, to) {\r\n    var color = new Color($colors.interpolate(from.rgb, to.rgb, progress));\r\n    if (from.alpha != to.alpha) {\r\n        color.alpha = from.alpha + (to.alpha - from.alpha) * progress;\r\n    }\r\n    return color;\r\n}\r\n/**\r\n * [getHybridProperty description]\r\n *\r\n * @todo Description\r\n * @param property [description]\r\n * @param type [description]\r\n * @return [description]\r\n */\r\nfunction getHybridProperty(property, type) {\r\n    return type + property.charAt(0).toUpperCase() + property.substr(1);\r\n}\r\nvar AnimationDisposer = /** @class */ (function () {\r\n    function AnimationDisposer(array) {\r\n        this._disposer = new Disposer(function () {\r\n            while (array.length !== 0) {\r\n                array[0].dispose();\r\n            }\r\n        });\r\n    }\r\n    AnimationDisposer.prototype.isDisposed = function () {\r\n        return this._disposer.isDisposed();\r\n    };\r\n    AnimationDisposer.prototype.dispose = function () {\r\n        this._disposer.dispose();\r\n    };\r\n    return AnimationDisposer;\r\n}());\r\nexport { AnimationDisposer };\r\n/**\r\n * Animation can be used to transition certain properties on an object that\r\n * implements [[IAnimatable]] interface.\r\n *\r\n * @see {@link IAnimationEvents} for a list of available events\r\n */\r\nvar Animation = /** @class */ (function (_super) {\r\n    __extends(Animation, _super);\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param object            An object animation should run on\r\n     * @param animationOptions  One or several (array) of animation options\r\n     * @param duration          Duration (ms)\r\n     * @param easing            Easing function\r\n     */\r\n    function Animation(object, animationOptions, duration, easing) {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        /**\r\n         * Duration of the animation in milliseconds.\r\n         */\r\n        _this.duration = 0;\r\n        /**\r\n         * Easing function to use.\r\n         *\r\n         * @see {@link Ease}\r\n         */\r\n        _this.easing = $ease.linear;\r\n        /**\r\n         * Contains progress of the current animation: 0 (start) to 1 (end).\r\n         */\r\n        _this.progress = 0;\r\n        /**\r\n         * Indicated how many times animation should loop.\r\n         */\r\n        _this._loop = 0;\r\n        /**\r\n         * Animation is paused.\r\n         */\r\n        _this._pause = false;\r\n        /**\r\n         * Holds reference to timeout for delayed play.\r\n         */\r\n        _this._delayTimeout = null;\r\n        /**\r\n         * Elapsed time in currently playing animation.\r\n         */\r\n        _this._time = 0;\r\n        _this._isFinished = false;\r\n        _this.className = \"Animation\";\r\n        // Set parameters\r\n        _this.object = object;\r\n        _this.animationOptions = $array.toArray(animationOptions);\r\n        _this.duration = duration;\r\n        if (easing) {\r\n            _this.easing = easing;\r\n        }\r\n        // Run check if there are already animations playing on the same properties\r\n        // and stop them - the last animation takes precedence\r\n        //this.stopSameAnimations();\r\n        /*if ($type.hasValue(callback)) {\r\n            // TODO don't use .call\r\n            this.events.on(\"animationended\", callback, object);\r\n        }*/\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    // TODO verify that this is correct\r\n    Animation.prototype.debug = function () { };\r\n    /**\r\n     * Disposes this object, clears up after itself.\r\n     */\r\n    Animation.prototype.dispose = function () {\r\n        _super.prototype.dispose.call(this);\r\n        this.pause();\r\n    };\r\n    /**\r\n     * Delays animation start by X milliseconds.\r\n     *\r\n     * @param delay  Delay (ms)\r\n     * @return Animation\r\n     */\r\n    Animation.prototype.delay = function (delay) {\r\n        var _this = this;\r\n        //@todo Maybe not use `bind()`\r\n        if (delay > 0) {\r\n            this.pause();\r\n            // This is so that it will get disposed if `this.object` is disposed\r\n            // TODO hacky, figure out a better way\r\n            $array.move(this.object.animations, this);\r\n            var id_1 = setTimeout(function () {\r\n                _this._delayTimeout = null;\r\n                _this.start();\r\n            }, delay);\r\n            this._delayTimeout = new Disposer(function () {\r\n                clearTimeout(id_1);\r\n            });\r\n        }\r\n        return this;\r\n    };\r\n    Animation.prototype._start = function () {\r\n        this._isFinished = false;\r\n        // Clear delay timeout if there was one\r\n        if (this._delayTimeout) {\r\n            this.removeDispose(this._delayTimeout);\r\n            this._delayTimeout = null;\r\n        }\r\n        // Run check if there are already animations playing on the same properties\r\n        // and stop them - the last animation takes precedence\r\n        this.stopSameAnimations();\r\n        // Reset counters\r\n        this._pause = false;\r\n        // Register animation\r\n        $array.move(system.animations, this);\r\n        // Register this animation in object's `animations` list\r\n        $array.move(this.object.animations, this);\r\n        system.requestFrame();\r\n    };\r\n    /**\r\n     * Starts animation.\r\n     *\r\n     * @return Animation\r\n     */\r\n    Animation.prototype.start = function () {\r\n        this._start();\r\n        this._startTime = Date.now();\r\n        this._time = 0;\r\n        this.staticOptions = [];\r\n        // Process initial property values\r\n        for (var i = this.animationOptions.length - 1; i >= 0; i--) {\r\n            var options = this.animationOptions[i];\r\n            if (!$type.hasValue(options.from)) {\r\n                if (options.childObject) {\r\n                    options.from = options.childObject[options.property];\r\n                }\r\n                else {\r\n                    options.from = this.object[options.property];\r\n                    if (!$type.hasValue(options.from)) {\r\n                        options.from = SVGDefaults[options.property];\r\n                    }\r\n                }\r\n                /*if (!$type.hasValue(options.from)) {\r\n                    throw Error(\"Could not get initial transition value.\");\r\n                }*/\r\n            }\r\n            if (options.from == options.to) { // || options.to == (<any>this.object)[options.property]){ this is not good, as dataItem.value is set to final at once, and we animate workingValue\r\n                $array.remove(this.animationOptions, options);\r\n            }\r\n            else if (!$type.hasValue(options.from) || (!(options.from instanceof Percent) && (options.to instanceof Percent)) || ((options.from instanceof Percent) && !(options.to instanceof Percent))) {\r\n                // Initial value is undefined, treat it as static\r\n                this.staticOptions.push(options);\r\n                $array.remove(this.animationOptions, options);\r\n            }\r\n            else {\r\n                // Use different update methods for different value types\r\n                if ($type.isNumber(options.to)) {\r\n                    // Numeric value\r\n                    options.updateMethod = getProgressNumber;\r\n                    // Check if initial value is not Percent\r\n                    if (options.from instanceof Percent) {\r\n                        // It is. Let's convert it to pixel value\r\n                        // @todo Check if we can do this in a less hacky way\r\n                        var convertedFrom = this.object[getHybridProperty(options.property, \"pixel\")];\r\n                        if (!isNaN(convertedFrom)) {\r\n                            options.from = convertedFrom;\r\n                        }\r\n                        else {\r\n                            this.staticOptions.push(options);\r\n                            $array.remove(this.animationOptions, options);\r\n                        }\r\n                    }\r\n                    else if (isNaN(options.from)) {\r\n                        // Static value\r\n                        this.staticOptions.push(options);\r\n                        $array.remove(this.animationOptions, options);\r\n                    }\r\n                }\r\n                else {\r\n                    // Check if maybe we have a color or percent value\r\n                    if (options.to instanceof Color) {\r\n                        // Yup - set resolved named color\r\n                        //options.from = $colors.stringToColor(<string>options.from);\r\n                        if (options.from) {\r\n                            options.updateMethod = getProgressColor;\r\n                        }\r\n                        else {\r\n                            // Static value\r\n                            this.staticOptions.push(options);\r\n                            $array.remove(this.animationOptions, options);\r\n                        }\r\n                    }\r\n                    else if (options.to instanceof Percent) {\r\n                        // Percent\r\n                        options.updateMethod = getProgressPercent;\r\n                        // Check if the initial value is maybe in pixels\r\n                        if (!isNaN(options.from)) {\r\n                            // It is. Let's convert it\r\n                            // @todo Check if we can do this in a less hacky way\r\n                            var convertedFrom = this.object[getHybridProperty(options.property, \"relative\")];\r\n                            if (!isNaN(convertedFrom)) {\r\n                                options.from = percent(convertedFrom * 100);\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        // Static value\r\n                        this.staticOptions.push(options);\r\n                        $array.remove(this.animationOptions, options);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // Apply static options (just in case they were reset by previous\r\n        // animation loop)\r\n        this.applyStaticOptions();\r\n        if (this.events.isEnabled(\"animationstarted\")) {\r\n            var event_1 = {\r\n                type: \"animationstarted\",\r\n                target: this,\r\n                progress: this.progress\r\n            };\r\n            this.events.dispatchImmediately(\"animationstarted\", event_1);\r\n        }\r\n        this.update();\r\n        // If duration is 0, just end animation\r\n        if (this.duration === 0) {\r\n            this.end();\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Sets loop count for the animation. If parameter is not a valid number the\r\n     * animation will keep on looping indefinitely.\r\n     *\r\n     * @param count  Number of times to loop animation\r\n     * @return Animation\r\n     */\r\n    Animation.prototype.loop = function (count) {\r\n        if (!$type.isNumber(count)) {\r\n            count = Infinity;\r\n        }\r\n        this._loop = count;\r\n        return this;\r\n    };\r\n    /**\r\n     * Pauses animation.\r\n     *\r\n     * @return Animation\r\n     */\r\n    Animation.prototype.pause = function () {\r\n        this._pause = true;\r\n        if (this._delayTimeout) {\r\n            this.removeDispose(this._delayTimeout);\r\n            this._delayTimeout = null;\r\n        }\r\n        $array.remove(system.animations, this);\r\n        $array.remove(this.object.animations, this);\r\n        return this;\r\n    };\r\n    /**\r\n     * Resumes paused animation.\r\n     *\r\n     * @return Animation\r\n     */\r\n    Animation.prototype.resume = function () {\r\n        this._start();\r\n        this._startTime = Date.now() - this._time;\r\n        return this;\r\n    };\r\n    /**\r\n     * Jumps to animation end. If animation is set to loop, this will start\r\n     * another round of animation from start.\r\n     *\r\n     * @return Animation\r\n     */\r\n    Animation.prototype.end = function () {\r\n        // Pause and complete the progress\r\n        if (this._loop == 0) {\r\n            this.pause();\r\n        }\r\n        this.setProgress(1);\r\n        // Apply static options\r\n        this.applyStaticOptions();\r\n        if (this.events.isEnabled(\"animationended\")) {\r\n            var event_2 = {\r\n                type: \"animationended\",\r\n                target: this,\r\n                progress: this.progress\r\n            };\r\n            this.events.dispatchImmediately(\"animationended\", event_2);\r\n        }\r\n        // Check if we should loop\r\n        if (this._loop > 0) {\r\n            this._loop--;\r\n            this.start();\r\n        }\r\n        else {\r\n            this.stop();\r\n            this._isFinished = true;\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Stops animation immediately leaving properties in their current values.\r\n     */\r\n    Animation.prototype.kill = function () {\r\n        this.pause();\r\n        this._isFinished = true;\r\n    };\r\n    /**\r\n     * Returns indicator if this animation is finished or not\r\n     *\r\n     * @return Is finished?\r\n     */\r\n    Animation.prototype.isFinished = function () {\r\n        return this._isFinished;\r\n    };\r\n    /**\r\n     * Applies static options that can't be animated.\r\n     */\r\n    Animation.prototype.applyStaticOptions = function () {\r\n        var _this = this;\r\n        $array.each(this.staticOptions, function (options) {\r\n            if (options.childObject) {\r\n                options.childObject[options.property] = _this.progress == 1 ? options.to : options.from;\r\n            }\r\n            else {\r\n                _this.object[options.property] = _this.progress == 1 ? options.to : options.from;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Stops animation.\r\n     *\r\n     * When animation is stopped, the properties of the target object will remain\r\n     * where they were at the moment when `stop()` was called.\r\n     *\r\n     * @param skipEvent  Do not trigger `animationstopped` event\r\n     * @return Animation\r\n     */\r\n    Animation.prototype.stop = function (skipEvent) {\r\n        this.pause();\r\n        if (!skipEvent) {\r\n            if (this.events.isEnabled(\"animationstopped\")) {\r\n                var event_3 = {\r\n                    type: \"animationstopped\",\r\n                    target: this,\r\n                    progress: this.progress\r\n                };\r\n                this.events.dispatchImmediately(\"animationstopped\", event_3);\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Sets current progress and updates object's numeric and color values.\r\n     *\r\n     * @param progress Progress (0-1)\r\n     */\r\n    Animation.prototype.setProgress = function (progress) {\r\n        var _this = this;\r\n        this._time = this.duration * progress; // just in case we call this from outside\r\n        $array.each(this.animationOptions, function (options) {\r\n            if (options.updateMethod && $type.hasValue(options.from)) {\r\n                var value = options.updateMethod(progress, options.from, options.to);\r\n                if (options.childObject) {\r\n                    options.childObject[options.property] = value;\r\n                }\r\n                else {\r\n                    _this.object[options.property] = value;\r\n                }\r\n            }\r\n        });\r\n        this.progress = progress;\r\n        if (this.events.isEnabled(\"animationprogress\")) {\r\n            var event_4 = {\r\n                type: \"animationprogress\",\r\n                target: this,\r\n                progress: this.progress\r\n            };\r\n            this.events.dispatchImmediately(\"animationprogress\", event_4);\r\n        }\r\n        system.requestFrame();\r\n    };\r\n    /**\r\n     * Tracks and sets progress according to time or frames.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Animation\r\n     */\r\n    Animation.prototype.update = function () {\r\n        if (!this._pause) {\r\n            var progress = void 0;\r\n            this._time = $math.fitToRange(Date.now() - this._startTime, 0, this.duration);\r\n            var timeProgress = this._time / this.duration;\r\n            progress = this.easing(timeProgress);\r\n            if (this.duration == 0 || !$type.isNumber(progress) || timeProgress >= 1) {\r\n                progress = 1;\r\n            }\r\n            this.setProgress(progress);\r\n            if ($math.round(this._time / this.duration, 6) == 1) {\r\n                this.end();\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    Object.defineProperty(Animation.prototype, \"delayed\", {\r\n        /**\r\n         * Returns `true` if this animation is delayed.\r\n         *\r\n         * @readonly\r\n         * @return [description]\r\n         */\r\n        get: function () {\r\n            return this._delayTimeout ? true : false;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Checks other animations currently running on the same object and removes\r\n     * overlapping options from those other animations that are contained in\r\n     * this animation.\r\n     *\r\n     * This is needed to ensure that no two confurent animations step on each\r\n     * other's toes by trying to animate the same property.\r\n     */\r\n    Animation.prototype.stopSameAnimations = function () {\r\n        var _this = this;\r\n        // stop animation of the same property\r\n        // TODO make this more efficient\r\n        // TODO don't copy the array\r\n        $array.each($array.copy(this.object.animations), function (animation) {\r\n            if (animation !== _this && !animation.delayed) {\r\n                var killed_1 = [];\r\n                $array.each(_this.animationOptions, function (newOptions) {\r\n                    $array.each(animation.animationOptions, function (oldOptions) {\r\n                        if (newOptions.property == oldOptions.property && newOptions.childObject == oldOptions.childObject) {\r\n                            killed_1.push(oldOptions);\r\n                            if (animation.animationOptions.length == 0) {\r\n                                animation.kill();\r\n                            }\r\n                        }\r\n                    });\r\n                });\r\n                $array.each(killed_1, function (oldOptions) {\r\n                    $array.remove(animation.animationOptions, oldOptions);\r\n                });\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Adds easing functions to \"function\" fields.\r\n     *\r\n     * @param field  Field name\r\n     * @return Assign as function?\r\n     */\r\n    Animation.prototype.asFunction = function (field) {\r\n        return field == \"easing\" || _super.prototype.asIs.call(this, field);\r\n    };\r\n    return Animation;\r\n}(BaseObjectEvents));\r\nexport { Animation };\r\n//# sourceMappingURL=Animation.js.map","/**\r\n * A collection of easing functions\r\n *\r\n * Parts of this collection are taken from D3.js library (https://d3js.org/)\r\n */\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport * as $math from \"../utils/Math\";\r\nimport { registry } from \"../Registry\";\r\n/**\r\n * The functions below are from D3.js library (https://d3js.org/)\r\n *\r\n * ----------------------------------------------------------------------------\r\n * Copyright 2017 Mike Bostock\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n *    this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n *    this list of conditions and the following disclaimer in the documentation\r\n *    and/or other materials provided with the distribution.\r\n *\r\n * 3. Neither the name of the copyright holder nor the names of its\r\n *    contributors may be used to endorse or promote products derived from this\r\n *    software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n * ----------------------------------------------------------------------------\r\n * @hidden\r\n */\r\n/**\r\n * ============================================================================\r\n * LINEAR FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Easing function: \"linear\".\r\n */\r\nexport function linear(t) {\r\n    return +t;\r\n}\r\nregistry.registeredClasses[\"ease.linear\"] = linear;\r\n/**\r\n * Easing function: \"quadIn\".\r\n */\r\nexport function quadIn(t) {\r\n    return t * t;\r\n}\r\nregistry.registeredClasses[\"ease.quadIn\"] = quadIn;\r\n/**\r\n * Easing function: \"quadOut\".\r\n */\r\nexport function quadOut(t) {\r\n    return t * (2 - t);\r\n}\r\nregistry.registeredClasses[\"ease.quadOut\"] = quadOut;\r\n/**\r\n * Easing function: \"quadInOut\".\r\n */\r\nexport function quadInOut(t) {\r\n    t *= 2;\r\n    return (t <= 1 ? t * t : --t * (2 - t) + 1) / 2;\r\n}\r\nregistry.registeredClasses[\"ease.quadInOut\"] = quadInOut;\r\n/**\r\n * Easing function: \"polyIn\".\r\n */\r\nexport function polyIn(t, e) {\r\n    return Math.pow(t, e);\r\n}\r\nregistry.registeredClasses[\"ease.polyIn\"] = polyIn;\r\n/**\r\n * Easing function: \"polyOut\".\r\n */\r\nexport function polyOut(t, e) {\r\n    return 1 - Math.pow(1 - t, e);\r\n}\r\nregistry.registeredClasses[\"ease.polyOut\"] = polyOut;\r\n/**\r\n * Easing function: \"polyInOut\".\r\n */\r\nexport function polyInOut(t, e) {\r\n    t *= 2;\r\n    return (t <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\r\n}\r\nregistry.registeredClasses[\"ease.polyInOut\"] = polyInOut;\r\n/**\r\n * Easing function: \"polyIn3\".\r\n */\r\nexport function polyIn3(t) {\r\n    return polyIn(t, 3);\r\n}\r\nregistry.registeredClasses[\"ease.polyIn3\"] = polyIn3;\r\n/**\r\n * Easing function: \"polyOut3\".\r\n */\r\nexport function polyOut3(t) {\r\n    return polyOut(t, 3);\r\n}\r\nregistry.registeredClasses[\"ease.polyOut3\"] = polyOut3;\r\n/**\r\n * Easing function: \"polyInOut3\".\r\n */\r\nexport function polyInOut3(t) {\r\n    return polyInOut(t, 3);\r\n}\r\nregistry.registeredClasses[\"ease.polyInOut3\"] = polyInOut3;\r\n/**\r\n * ============================================================================\r\n * EXPONENTIAL FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Easing function: \"expIn\".\r\n */\r\nexport function expIn(t) {\r\n    return Math.pow(2, 10 * t - 10);\r\n}\r\nregistry.registeredClasses[\"ease.expIn\"] = expIn;\r\n/**\r\n * Easing function: \"expOut\".\r\n */\r\nexport function expOut(t) {\r\n    return 1 - Math.pow(2, -10 * t);\r\n}\r\nregistry.registeredClasses[\"ease.expOut\"] = expOut;\r\n/**\r\n * Easing function: \"expInOut\".\r\n */\r\nexport function expInOut(t) {\r\n    t *= 2;\r\n    return (t <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\r\n}\r\nregistry.registeredClasses[\"ease.expInOut\"] = expInOut;\r\n/**\r\n * ============================================================================\r\n * SINE FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Easing function: \"sinIn\".\r\n */\r\nexport function sinIn(t) {\r\n    return 1 - Math.cos(t * $math.HALFPI);\r\n}\r\nregistry.registeredClasses[\"ease.sinIn\"] = sinIn;\r\n/**\r\n * Easing function: \"sinOut\".\r\n */\r\nexport function sinOut(t) {\r\n    return Math.sin(t * $math.HALFPI);\r\n}\r\nregistry.registeredClasses[\"ease.sinOut\"] = sinOut;\r\n/**\r\n * Easing function: \"sinInOut\".\r\n */\r\nexport function sinInOut(t) {\r\n    return (1 - Math.cos($math.PI * t)) / 2;\r\n}\r\nregistry.registeredClasses[\"ease.sinInOut\"] = sinInOut;\r\n/**\r\n * ============================================================================\r\n * CUBIC FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Easing function: \"cubicIn\".\r\n */\r\nexport function cubicIn(t) {\r\n    return t * t * t;\r\n}\r\nregistry.registeredClasses[\"ease.cubicIn\"] = cubicIn;\r\n/**\r\n * Easing function: \"cubicOut\".\r\n */\r\nexport function cubicOut(t) {\r\n    return --t * t * t + 1;\r\n}\r\nregistry.registeredClasses[\"ease.cubicOut\"] = cubicOut;\r\n/**\r\n * Easing function: \"cubicInOut\".\r\n */\r\nexport function cubicInOut(t) {\r\n    t *= 2;\r\n    return (t <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\r\n}\r\nregistry.registeredClasses[\"ease.cubicInOut\"] = cubicInOut;\r\n/**\r\n * ============================================================================\r\n * CIRCLE FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Easing function: \"circleIn\".\r\n */\r\nexport function circleIn(t) {\r\n    return 1 - Math.sqrt(1 - t * t);\r\n}\r\nregistry.registeredClasses[\"ease.circleIn\"] = circleIn;\r\n/**\r\n * Easing function: \"circleOut\".\r\n */\r\nexport function circleOut(t) {\r\n    return Math.sqrt(1 - --t * t);\r\n}\r\nregistry.registeredClasses[\"ease.circleOut\"] = circleOut;\r\n/**\r\n * Easing function: \"circleInOut\".\r\n */\r\nexport function circleInOut(t) {\r\n    t *= 2;\r\n    return (t <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\r\n}\r\nregistry.registeredClasses[\"ease.circleInOut\"] = circleInOut;\r\n/**\r\n * ============================================================================\r\n * BOUNCE FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nvar b1 = 4 / 11, b2 = 6 / 11, b3 = 8 / 11, b4 = 3 / 4, b5 = 9 / 11, b6 = 10 / 11, b7 = 15 / 16, b8 = 21 / 22, b9 = 63 / 64, b0 = 1 / b1 / b1;\r\n/**\r\n * Easing function: \"bounceIn\".\r\n */\r\nexport function bounceIn(t) {\r\n    return 1 - bounceOut(1 - t);\r\n}\r\nregistry.registeredClasses[\"ease.bounceIn\"] = bounceIn;\r\n/**\r\n * Easing function: \"bounceOut\".\r\n */\r\nexport function bounceOut(t) {\r\n    t = +t;\r\n    return t < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\r\n}\r\nregistry.registeredClasses[\"ease.bounceOut\"] = bounceOut;\r\n/**\r\n * Easing function: \"bounceInOut\".\r\n */\r\nexport function bounceInOut(t) {\r\n    t *= 2;\r\n    return (t <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\r\n}\r\nregistry.registeredClasses[\"ease.bounceInOut\"] = bounceInOut;\r\n/**\r\n * ============================================================================\r\n * ELASTIC FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nvar tau = 2 * Math.PI;\r\nvar amplitude = 1;\r\nvar period = 0.3 / tau;\r\nvar s = Math.asin(1 / amplitude) * period;\r\n/**\r\n * Easing function: \"elasticIn\".\r\n *\r\n * @function elasticIn\r\n * @param a  Amplitude\r\n * @param p  period\r\n */\r\nexport function elasticIn(t) {\r\n    return amplitude * Math.pow(2, 10 * --t) * Math.sin((s - t) / period);\r\n}\r\nregistry.registeredClasses[\"ease.elasticIn\"] = elasticIn;\r\n/**\r\n * Easing function: \"elasticOut\".\r\n *\r\n * @function elasticOut\r\n * @param a  Amplitude\r\n * @param p  period\r\n */\r\nexport function elasticOut(t) {\r\n    return 1 - amplitude * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / period);\r\n}\r\nregistry.registeredClasses[\"ease.elasticOut\"] = elasticOut;\r\n/**\r\n * Easing function: \"elasticInOut\".\r\n *\r\n * @function elasticInOut\r\n * @param a  Amplitude\r\n * @param p  period\r\n */\r\nexport function elasticInOut(t) {\r\n    t = t * 2 - 1;\r\n    return (t < 0\r\n        ? amplitude * Math.pow(2, 10 * t) * Math.sin((s - t) / period)\r\n        : 2 - amplitude * Math.pow(2, -10 * t) * Math.sin((s + t) / period)) / 2;\r\n}\r\nregistry.registeredClasses[\"ease.elasticInOut\"] = elasticInOut;\r\n//# sourceMappingURL=Ease.js.map","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { registry, is } from \"./Registry\";\r\nimport { Container } from \"./Container\";\r\nimport { raf } from \"./utils/AsyncPending\";\r\nimport { triggerIdle } from \"./utils/AsyncPending\";\r\nimport * as $array from \"./utils/Array\";\r\nimport * as $object from \"./utils/Object\";\r\nimport * as $log from \"./utils/Log\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * The main class that handles system-wide tasks, like caching, heartbeats, etc.\r\n * @important\r\n */\r\nvar System = /** @class */ (function () {\r\n    /**\r\n     * Performs initialization of the System object.\r\n     *\r\n     * Called when the first [[Sprite]] object is created.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    function System() {\r\n        /**\r\n         * A flag indicating if the system is on pause.\r\n         */\r\n        this._isPaused = false;\r\n        /**\r\n         * Holds the list of currently playing animations.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        this.animations = [];\r\n        /**\r\n         * Unique ID of the object.\r\n         */\r\n        this.uid = registry.getUniqueId();\r\n        /**\r\n         * @todo Description\r\n         * @todo Needed?\r\n         * @ignore Exclude from docs\r\n         */\r\n        this.dummyCounter = 0;\r\n        this._frameRequested = false;\r\n        this.updateStepDuration = 45;\r\n        this.time = Date.now();\r\n    }\r\n    /**\r\n     * Reports time elapsed since timer was reset.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Needed?\r\n     * @param msg    Message to report in console\r\n     * @param reset  Reset time counter\r\n     */\r\n    System.prototype.reportTime = function (msg, reset) {\r\n        if (this.dummyCounter < 6) {\r\n            //console.log(Date.now() - this.time, msg, this.dummyCounter2);\r\n        }\r\n        if (reset) {\r\n            this.time = Date.now();\r\n        }\r\n    };\r\n    /**\r\n     * Performs \"heartbeat\" operations `frameRate` number of times per second.\r\n     *\r\n     * When the chart element is invalidated, it is not immediately redrawn.\r\n     *\r\n     * Instead it waits for the next `update()` cycle to be re-validated.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Maybe should be private?\r\n     */\r\n    System.prototype.update = function () {\r\n        var _this = this;\r\n        if (this._isPaused) {\r\n            return;\r\n        }\r\n        this._frameRequested = false;\r\n        var time = Date.now();\r\n        registry.dispatchImmediately(\"enterframe\");\r\n        //this.validateLayouts();\r\n        //this.validatePositions();\r\n        /*\r\n                for (let key in registry.invalidLayouts) {\r\n                    this.validateLayouts(key);\r\n                }\r\n                for (let key in registry.invalidPositions) {\r\n                    this.validatePositions(key);\r\n                }\r\n        */\r\n        var skippedComponents = [];\r\n        // data objects first - do all calculations\r\n        // only data is parsed in chunks, thats why we do for loop instead of a while like with other invalid items.\r\n        // important to go backwards, as items are removed!\r\n        // TODO use iterator instead\r\n        for (var key in registry.invalidDatas) {\r\n            if ($object.hasKey(registry.invalidDatas, key)) {\r\n                var invalidData = registry.invalidDatas[key];\r\n                while (invalidData.length > 0) {\r\n                    var component = invalidData[0];\r\n                    var dataProvider = component.dataProvider;\r\n                    if (!component.isDisposed()) {\r\n                        if (dataProvider && dataProvider.dataInvalid) {\r\n                            try {\r\n                                dataProvider.validateData();\r\n                                if (dataProvider.dataValidationProgress < 1) {\r\n                                    break;\r\n                                }\r\n                            }\r\n                            catch (e) {\r\n                                $array.remove(invalidData, dataProvider);\r\n                                dataProvider.raiseCriticalError(e);\r\n                            }\r\n                        }\r\n                        else {\r\n                            try {\r\n                                component.validateData();\r\n                                if (component.dataValidationProgress < 1) {\r\n                                    break;\r\n                                }\r\n                            }\r\n                            catch (e) {\r\n                                $array.remove(invalidData, component);\r\n                                component.raiseCriticalError(e);\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        $array.remove(invalidData, component);\r\n                    }\r\n                }\r\n                if (Date.now() - time > this.updateStepDuration) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        while (registry.invalidRawDatas.length > 0) {\r\n            var component = registry.invalidRawDatas[0];\r\n            if (!component.isDisposed()) {\r\n                try {\r\n                    component.validateRawData();\r\n                }\r\n                catch (e) {\r\n                    $array.remove(registry.invalidRawDatas, component);\r\n                    component.raiseCriticalError(e);\r\n                }\r\n            }\r\n            else {\r\n                $array.remove(registry.invalidRawDatas, component);\r\n            }\r\n        }\r\n        // TODO use iterator instead\r\n        while (registry.invalidDataItems.length > 0) {\r\n            var component = registry.invalidDataItems[0];\r\n            var dataProvider = component.dataProvider;\r\n            // this is needed to avoid partial value validation when data is parsed in chunks\r\n            if (component.isDisposed() || component.dataInvalid || (dataProvider && dataProvider.dataInvalid)) {\r\n                // void\r\n            }\r\n            else {\r\n                try {\r\n                    component.validateDataItems();\r\n                }\r\n                catch (e) {\r\n                    $array.remove(registry.invalidDataItems, component);\r\n                    component.raiseCriticalError(e);\r\n                }\r\n            }\r\n            // this might seem too much, as validateValues removes from invalidDataItems aswell, but just to be sure (in case validateData is overriden and no super is called)\r\n            $array.remove(registry.invalidDataItems, component);\r\n        }\r\n        // TODO use iterator instead\r\n        while (registry.invalidDataRange.length > 0) {\r\n            var component = registry.invalidDataRange[0];\r\n            var dataProvider = component.dataProvider;\r\n            if (component.isDisposed() || component.dataInvalid || (dataProvider && dataProvider.dataInvalid)) {\r\n                // void\r\n            }\r\n            else {\r\n                try {\r\n                    component.validateDataRange();\r\n                    if (!component.skipRangeEvent) {\r\n                        component.dispatchImmediately(\"datarangechanged\");\r\n                    }\r\n                    component.skipRangeEvent = false;\r\n                }\r\n                catch (e) {\r\n                    $array.remove(registry.invalidDataRange, component);\r\n                    component.raiseCriticalError(e);\r\n                }\r\n            }\r\n            // this might seem too much, as validateDataRange removes from invalidDataRange aswell, but just to be sure (in case validateData is overriden and no super is called)\r\n            $array.remove(registry.invalidDataRange, component);\r\n        }\r\n        var skippedSprites = [];\r\n        // display objects later\r\n        // TODO use iterator instead\r\n        $object.each(registry.invalidLayouts, function (key) {\r\n            _this.validateLayouts(key);\r\n        });\r\n        $object.each(registry.invalidPositions, function (key) {\r\n            _this.validatePositions(key);\r\n        });\r\n        var hasSkipped = false;\r\n        time = Date.now();\r\n        $object.each(registry.invalidSprites, function (key, invalidSprites) {\r\n            var count = 0;\r\n            while (invalidSprites.length > 0) {\r\n                _this.validateLayouts(key);\r\n                _this.validatePositions(key);\r\n                count++;\r\n                if (count == 5) {\r\n                    if (Date.now() - time > _this.updateStepDuration) {\r\n                        break;\r\n                    }\r\n                    count = 0;\r\n                }\r\n                var sprite = invalidSprites[invalidSprites.length - 1];\r\n                // we need to check this, as validateLayout might validate sprite\r\n                if (sprite && !sprite.isDisposed()) {\r\n                    if (!sprite._systemCheckIfValidate()) {\r\n                        // void\r\n                        skippedSprites.push(sprite);\r\n                    }\r\n                    else {\r\n                        if (!_this.checkIfValidate2(sprite)) {\r\n                            // void\r\n                            skippedSprites.push(sprite);\r\n                        }\r\n                        else {\r\n                            try {\r\n                                sprite._systemUpdate(skippedSprites);\r\n                            }\r\n                            catch (e) {\r\n                                sprite.invalid = false;\r\n                                $array.remove(invalidSprites, sprite);\r\n                                sprite.raiseCriticalError(e);\r\n                            }\r\n                        }\r\n                    }\r\n                    // this might seem too much, but it's ok\r\n                    sprite.invalid = false;\r\n                }\r\n                $array.remove(invalidSprites, sprite);\r\n            }\r\n            registry.invalidSprites[key] = registry.invalidSprites[key].concat(skippedSprites);\r\n        });\r\n        $object.each(registry.invalidSprites, function (key, value) {\r\n            if (value.length > 0) {\r\n                hasSkipped = true;\r\n            }\r\n        });\r\n        $object.each(registry.invalidDatas, function (key, value) {\r\n            if (value.length > 0) {\r\n                hasSkipped = true;\r\n            }\r\n        });\r\n        // TODO make this more efficient\r\n        // TODO don't copy the array\r\n        $array.each($array.copy(this.animations), function (x) {\r\n            x.update();\r\n        });\r\n        //if(!hasSkipped){\r\n        $object.each(registry.invalidLayouts, function (key) {\r\n            _this.validateLayouts(key);\r\n        });\r\n        $object.each(registry.invalidPositions, function (key) {\r\n            _this.validatePositions(key);\r\n        });\r\n        //}\r\n        triggerIdle();\r\n        $object.each(registry.invalidLayouts, function (key) {\r\n            _this.validateLayouts(key);\r\n        });\r\n        $object.each(registry.invalidPositions, function (key) {\r\n            _this.validatePositions(key);\r\n        });\r\n        registry.dispatchImmediately(\"exitframe\");\r\n        if (hasSkipped || this.animations.length > 0 || skippedComponents.length > 0) {\r\n            this.requestFrame();\r\n        }\r\n        if (this.updateStepDuration < 200) {\r\n            var all0_1 = true;\r\n            $object.each(registry.invalidDatas, function (key, value) {\r\n                if (value.length > 0) {\r\n                    all0_1 = false;\r\n                }\r\n            });\r\n            $object.each(registry.invalidSprites, function (key, value) {\r\n                if (value.length > 0) {\r\n                    all0_1 = false;\r\n                }\r\n            });\r\n            if (all0_1) {\r\n                this.updateStepDuration = 200;\r\n            }\r\n        }\r\n    };\r\n    System.prototype.checkIfValidate2 = function (sprite) {\r\n        if (sprite.dataItem && sprite.dataItem.component && sprite.dataItem.component.dataInvalid && !sprite.dataItem.component.isTemplate) {\r\n            return false;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    };\r\n    /**\r\n     * Requests new animation frame\r\n     */\r\n    System.prototype.requestFrame = function () {\r\n        var _this = this;\r\n        if (!this._frameRequested) {\r\n            raf(function () {\r\n                _this.update();\r\n            });\r\n            this._frameRequested = true;\r\n        }\r\n    };\r\n    /**\r\n     * Call this method if you update data or config of a chart that is in\r\n     * hidden container, after revealing the container, so that labels and\r\n     * possibly other elements can correctly arrange themselves.\r\n     *\r\n     * @since 4.7.10\r\n     * @param  container  Target container\r\n     */\r\n    System.prototype.softInvalidate = function (container) {\r\n        var _this = this;\r\n        container.children.each(function (child) {\r\n            if (child instanceof Container) {\r\n                _this.softInvalidate(child);\r\n            }\r\n            if (child.measureFailed) {\r\n                if (is(child, \"Label\")) {\r\n                    child.hardInvalidate();\r\n                }\r\n                else {\r\n                    child.invalidate();\r\n                }\r\n                child.measureFailed = false;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Triggers position re-validation on all [[Sprite]] elements that have\r\n     * invalid(ated) positions.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Maybe should be private?\r\n     */\r\n    System.prototype.validatePositions = function (id) {\r\n        // invalid positions\r\n        // TODO use iterator instead\r\n        var invalidPositions = registry.invalidPositions[id];\r\n        while (invalidPositions.length > 0) {\r\n            var sprite = invalidPositions[invalidPositions.length - 1];\r\n            if (!sprite.isDisposed()) {\r\n                try {\r\n                    sprite._systemValidatePositions();\r\n                }\r\n                catch (e) {\r\n                    sprite.positionInvalid = false;\r\n                    $array.remove(invalidPositions, sprite);\r\n                    sprite.raiseCriticalError(e);\r\n                }\r\n            }\r\n            else {\r\n                $array.remove(invalidPositions, sprite);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Triggers position re-validation on all [[Container]] elements that have\r\n     * invalid(ated) layouts.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Maybe should be private?\r\n     */\r\n    System.prototype.validateLayouts = function (id) {\r\n        // invalid positions\r\n        // TODO use iterator instead\r\n        var invalidLayouts = registry.invalidLayouts[id];\r\n        while (invalidLayouts.length > 0) {\r\n            var container = invalidLayouts[invalidLayouts.length - 1];\r\n            if (!container.isDisposed()) {\r\n                try {\r\n                    container.children.each(function (sprite) {\r\n                        sprite._systemValidateLayouts();\r\n                    });\r\n                    container.validateLayout();\r\n                }\r\n                catch (e) {\r\n                    container.layoutInvalid = false;\r\n                    $array.remove(invalidLayouts, container);\r\n                    container.raiseCriticalError(e);\r\n                }\r\n            }\r\n            else {\r\n                $array.remove(invalidLayouts, container);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Outputs string to console if `verbose` is `true`.\r\n     *\r\n     * @param value Message to output to console\r\n     */\r\n    System.prototype.log = function (value) {\r\n        $log.log(value);\r\n    };\r\n    Object.defineProperty(System.prototype, \"isPaused\", {\r\n        /**\r\n         * @return Is system on pause?\r\n         */\r\n        get: function () {\r\n            return this._isPaused;\r\n        },\r\n        /**\r\n         * Pauses all the processes of all the amCharts objects on the page\r\n         *\r\n         * @return is paused?\r\n         */\r\n        set: function (value) {\r\n            this._isPaused = value;\r\n            if (!value) {\r\n                this._frameRequested = false;\r\n                this.requestFrame();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * amCharts Version.\r\n     *\r\n     * This follows npm's semver specification.\r\n     *\r\n     * @see {@link https://docs.npmjs.com/misc/semver}\r\n     */\r\n    System.VERSION = \"4.9.1\";\r\n    return System;\r\n}());\r\nexport { System };\r\n/**\r\n * A singleton global instance of [[System]].\r\n *\r\n * All code should use this, rather than instantiating their\r\n * own System objects.\r\n */\r\nexport var system = new System();\r\n//# sourceMappingURL=System.js.map","/**\r\n * A collection of low-level async operation stuff.\r\n */\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport * as $array from \"./Array\";\r\nvar pendingFrame = false;\r\nvar nextQueue = [];\r\nvar readQueue = [];\r\nvar writeQueue = [];\r\nvar idleQueue = [];\r\nvar fps = 1000 / 60;\r\n/**\r\n * [raf description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nexport var raf = (typeof requestAnimationFrame === \"function\"\r\n    ? function (fn) {\r\n        requestAnimationFrame(fn);\r\n    }\r\n    : function (fn) {\r\n        setTimeout(fn, fps);\r\n    });\r\n/**\r\n * [frameLoop description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nfunction frameLoop() {\r\n    var now = Date.now();\r\n    var length = nextQueue.length;\r\n    for (var i = 0; i < length; ++i) {\r\n        nextQueue[i](now);\r\n    }\r\n    $array.shiftLeft(nextQueue, length);\r\n    for (var i = 0; i < readQueue.length; ++i) {\r\n        readQueue[i](now);\r\n    }\r\n    readQueue.length = 0;\r\n    for (var i = 0; i < writeQueue.length; ++i) {\r\n        writeQueue[i](now);\r\n    }\r\n    writeQueue.length = 0;\r\n    if (nextQueue.length === 0 && readQueue.length === 0) {\r\n        pendingFrame = false;\r\n    }\r\n    else {\r\n        raf(frameLoop);\r\n    }\r\n}\r\n/**\r\n * [pendFrame description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n */\r\nfunction pendFrame() {\r\n    if (!pendingFrame) {\r\n        pendingFrame = true;\r\n        raf(frameLoop);\r\n    }\r\n}\r\n/**\r\n * [nextFrame description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param fn [description]\r\n */\r\nexport function nextFrame(fn) {\r\n    nextQueue.push(fn);\r\n    pendFrame();\r\n}\r\n/**\r\n * [readFrame description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param fn [description]\r\n */\r\nexport function readFrame(fn) {\r\n    readQueue.push(fn);\r\n    pendFrame();\r\n}\r\n/**\r\n * [writeFrame description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param fn [description]\r\n */\r\nexport function writeFrame(fn) {\r\n    writeQueue.push(fn);\r\n    pendFrame();\r\n}\r\n/**\r\n * [whenIdle description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param fn [description]\r\n */\r\nexport function whenIdle(fn) {\r\n    idleQueue.push(fn);\r\n}\r\n/**\r\n * [triggerIdle description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @todo Maybe don't trigger a callback which was added while in the middle of triggering?\r\n */\r\nexport function triggerIdle() {\r\n    var now = Date.now();\r\n    var length = idleQueue.length;\r\n    for (var i = 0; i < length; ++i) {\r\n        idleQueue.shift()(now);\r\n    }\r\n}\r\n//# sourceMappingURL=AsyncPending.js.map","/**\r\n * Global options.\r\n */\r\nexport var options = {\r\n    verbose: true,\r\n    commercialLicense: false,\r\n    classNamePrefix: \"amcharts-\",\r\n    autoSetClassName: false,\r\n    minPolylineStep: 0.5,\r\n    onlyShowOnViewport: false,\r\n    queue: false,\r\n    licenses: []\r\n};\r\n//# sourceMappingURL=Options.js.map","/**\r\n * amCharts 4 locale\r\n *\r\n * Locale: en\r\n * Language: International English\r\n * Author: Martynas Majeris\r\n *\r\n * Follow instructions in [on this page](https://www.amcharts.com/docs/v4/tutorials/creating-translations/) to make corrections or add new translations.\r\n *\r\n * ---\r\n * Edit but leave the header section above this line. You can remove any\r\n * subsequent comment sections.\r\n * ---\r\n *\r\n * Use this file as a template to create translations. Leave the key part in\r\n * English intact. Fill the value with a translation.\r\n *\r\n * Empty string means no translation, so default \"International English\"\r\n * will be used.\r\n *\r\n * If you need the translation to literally be an empty string, use `null`\r\n * instead.\r\n *\r\n * IMPORTANT:\r\n * When translating make good effort to keep the translation length\r\n * at least the same chartcount as the English, especially for short prompts.\r\n *\r\n * Having significantly longer prompts may distort the actual charts.\r\n *\r\n * NOTE:\r\n * Some prompts - like months or weekdays - come in two versions: full and\r\n * shortened.\r\n *\r\n * If there's no official shortened version of these in your language, and it\r\n * would not be possible to invent such short versions that don't seem weird\r\n * to native speakers of that language, fill those with the same as full\r\n * version.\r\n *\r\n * PLACEHOLDERS:\r\n * Some prompts have placeholders like \"%1\". Those will be replaced by actual\r\n * values during translation and should be retained in the translated prompts.\r\n *\r\n * Placeholder positions may be changed to better suit structure of the\r\n * sentence.\r\n *\r\n * For example \"From %1 to %2\", when actually used will replace \"%1\" with an\r\n * actual value representing range start, and \"%2\" will be replaced by end\r\n * value.\r\n *\r\n * E.g. in a Scrollbar for Value axis \"From %1 to %2\" will become\r\n * \"From 100 to 200\". You may translate \"From\" and \"to\", as well as re-arrange\r\n * the order of the prompt itself, but make sure the \"%1\" and \"%2\" remain, in\r\n * places where they will make sense.\r\n *\r\n * Save the file as language_LOCALE, i.e. `en_GB.ts`, `fr_FR.ts`, etc.\r\n */\r\nexport default {\r\n    // Number formatting options.\r\n    // \r\n    // Please check with the local standards which separator is accepted to be\r\n    // used for separating decimals, and which for thousands.\r\n    \"_decimalSeparator\": \".\",\r\n    \"_thousandSeparator\": \",\",\r\n    // Suffixes for numbers\r\n    // When formatting numbers, big or small numers might be reformatted to\r\n    // shorter version, by applying a suffix.\r\n    // \r\n    // For example, 1000000 might become \"1m\".\r\n    // Or 1024 might become \"1KB\" if we're formatting byte numbers.\r\n    // \r\n    // This section defines such suffixes for all such cases.\r\n    \"_big_number_suffix_3\": \"k\",\r\n    \"_big_number_suffix_6\": \"M\",\r\n    \"_big_number_suffix_9\": \"G\",\r\n    \"_big_number_suffix_12\": \"T\",\r\n    \"_big_number_suffix_15\": \"P\",\r\n    \"_big_number_suffix_18\": \"E\",\r\n    \"_big_number_suffix_21\": \"Z\",\r\n    \"_big_number_suffix_24\": \"Y\",\r\n    \"_small_number_suffix_3\": \"m\",\r\n    \"_small_number_suffix_6\": \"μ\",\r\n    \"_small_number_suffix_9\": \"n\",\r\n    \"_small_number_suffix_12\": \"p\",\r\n    \"_small_number_suffix_15\": \"f\",\r\n    \"_small_number_suffix_18\": \"a\",\r\n    \"_small_number_suffix_21\": \"z\",\r\n    \"_small_number_suffix_24\": \"y\",\r\n    \"_byte_suffix_B\": \"B\",\r\n    \"_byte_suffix_KB\": \"KB\",\r\n    \"_byte_suffix_MB\": \"MB\",\r\n    \"_byte_suffix_GB\": \"GB\",\r\n    \"_byte_suffix_TB\": \"TB\",\r\n    \"_byte_suffix_PB\": \"PB\",\r\n    // Default date formats for various periods.\r\n    // \r\n    // This should reflect official or de facto formatting universally accepted\r\n    // in the country translation is being made for\r\n    // Available format codes here:\r\n    // https://www.amcharts.com/docs/v4/concepts/formatters/formatting-date-time/#Format_codes\r\n    // \r\n    // This will be used when formatting date/time for particular granularity,\r\n    // e.g. \"_date_hour\" will be shown whenever we need to show time as hours.\r\n    // \r\n    // \"date\" is used as in default date format when showing standalone dates.\r\n    \"_date\": \"yyyy-MM-dd\",\r\n    \"_date_millisecond\": \"mm:ss SSS\",\r\n    \"_date_second\": \"HH:mm:ss\",\r\n    \"_date_minute\": \"HH:mm\",\r\n    \"_date_hour\": \"HH:mm\",\r\n    \"_date_day\": \"MMM dd\",\r\n    \"_date_week\": \"ww\",\r\n    \"_date_month\": \"MMM\",\r\n    \"_date_year\": \"yyyy\",\r\n    // Default duration formats for various base units.\r\n    // \r\n    // This will be used by DurationFormatter to format numeric values into\r\n    // duration.\r\n    // \r\n    // Notice how each duration unit comes in several versions. This is to ensure\r\n    // that each base unit is shown correctly.\r\n    // \r\n    // For example, if we have baseUnit set to \"second\", meaning our duration is\r\n    // in seconds.\r\n    // \r\n    // If we pass in `50` to formatter, it will know that we have just 50 seconds\r\n    // (less than a minute) so it will use format in `\"_duration_second\"` (\"ss\"),\r\n    // and the formatted result will be in like `\"50\"`.\r\n    // \r\n    // If we pass in `70`, which is more than a minute, the formatter will switch\r\n    // to `\"_duration_second_minute\"` (\"mm:ss\"), resulting in \"01:10\" formatted\r\n    // text.\r\n    // \r\n    // Available codes here:\r\n    // https://www.amcharts.com/docs/v4/concepts/formatters/formatting-duration/#Available_Codes\r\n    \"_duration_millisecond\": \"SSS\",\r\n    \"_duration_millisecond_second\": \"ss.SSS\",\r\n    \"_duration_millisecond_minute\": \"mm:ss SSS\",\r\n    \"_duration_millisecond_hour\": \"hh:mm:ss SSS\",\r\n    \"_duration_millisecond_day\": \"d'd' mm:ss SSS\",\r\n    \"_duration_millisecond_week\": \"d'd' mm:ss SSS\",\r\n    \"_duration_millisecond_month\": \"M'm' dd'd' mm:ss SSS\",\r\n    \"_duration_millisecond_year\": \"y'y' MM'm' dd'd' mm:ss SSS\",\r\n    \"_duration_second\": \"ss\",\r\n    \"_duration_second_minute\": \"mm:ss\",\r\n    \"_duration_second_hour\": \"hh:mm:ss\",\r\n    \"_duration_second_day\": \"d'd' hh:mm:ss\",\r\n    \"_duration_second_week\": \"d'd' hh:mm:ss\",\r\n    \"_duration_second_month\": \"M'm' dd'd' hh:mm:ss\",\r\n    \"_duration_second_year\": \"y'y' MM'm' dd'd' hh:mm:ss\",\r\n    \"_duration_minute\": \"mm\",\r\n    \"_duration_minute_hour\": \"hh:mm\",\r\n    \"_duration_minute_day\": \"d'd' hh:mm\",\r\n    \"_duration_minute_week\": \"d'd' hh:mm\",\r\n    \"_duration_minute_month\": \"M'm' dd'd' hh:mm\",\r\n    \"_duration_minute_year\": \"y'y' MM'm' dd'd' hh:mm\",\r\n    \"_duration_hour\": \"hh'h'\",\r\n    \"_duration_hour_day\": \"d'd' hh'h'\",\r\n    \"_duration_hour_week\": \"d'd' hh'h'\",\r\n    \"_duration_hour_month\": \"M'm' dd'd' hh'h'\",\r\n    \"_duration_hour_year\": \"y'y' MM'm' dd'd' hh'h'\",\r\n    \"_duration_day\": \"d'd'\",\r\n    \"_duration_day_week\": \"d'd'\",\r\n    \"_duration_day_month\": \"M'm' dd'd'\",\r\n    \"_duration_day_year\": \"y'y' MM'm' dd'd'\",\r\n    \"_duration_week\": \"w'w'\",\r\n    \"_duration_week_month\": \"w'w'\",\r\n    \"_duration_week_year\": \"w'w'\",\r\n    \"_duration_month\": \"M'm'\",\r\n    \"_duration_month_year\": \"y'y' MM'm'\",\r\n    \"_duration_year\": \"y'y'\",\r\n    // Era translations\r\n    \"_era_ad\": \"AD\",\r\n    \"_era_bc\": \"BC\",\r\n    // Day part, used in 12-hour formats, e.g. 5 P.M.\r\n    // Please note that these come in 3 variants:\r\n    // * one letter (e.g. \"A\")\r\n    // * two letters (e.g. \"AM\")\r\n    // * two letters with dots (e.g. \"A.M.\")\r\n    // \r\n    // All three need to to be translated even if they are all the same. Some\r\n    // users might use one, some the other.\r\n    \"A\": \"\",\r\n    \"P\": \"\",\r\n    \"AM\": \"\",\r\n    \"PM\": \"\",\r\n    \"A.M.\": \"\",\r\n    \"P.M.\": \"\",\r\n    // Date-related stuff.\r\n    // \r\n    // When translating months, if there's a difference, use the form which is\r\n    // best for a full date, e.g. as you would use it in \"2018 January 1\".\r\n    // \r\n    // Note that May is listed twice. This is because in English May is the same\r\n    // in both long and short forms, while in other languages it may not be the\r\n    // case. Translate \"May\" to full word, while \"May(short)\" to shortened\r\n    // version.\r\n    // \r\n    // Should month names and weekdays be capitalized or not?\r\n    // \r\n    // Rule of thumb is this: if the names should always be capitalized,\r\n    // regardless of name position within date (\"January\", \"21st January 2018\",\r\n    // etc.) use capitalized names. Otherwise enter all lowercase.\r\n    // \r\n    // The date formatter will automatically capitalize names if they are the\r\n    // first (or only) word in resulting date.\r\n    \"January\": \"\",\r\n    \"February\": \"\",\r\n    \"March\": \"\",\r\n    \"April\": \"\",\r\n    \"May\": \"\",\r\n    \"June\": \"\",\r\n    \"July\": \"\",\r\n    \"August\": \"\",\r\n    \"September\": \"\",\r\n    \"October\": \"\",\r\n    \"November\": \"\",\r\n    \"December\": \"\",\r\n    \"Jan\": \"\",\r\n    \"Feb\": \"\",\r\n    \"Mar\": \"\",\r\n    \"Apr\": \"\",\r\n    \"May(short)\": \"May\",\r\n    \"Jun\": \"\",\r\n    \"Jul\": \"\",\r\n    \"Aug\": \"\",\r\n    \"Sep\": \"\",\r\n    \"Oct\": \"\",\r\n    \"Nov\": \"\",\r\n    \"Dec\": \"\",\r\n    // Weekdays.\r\n    \"Sunday\": \"\",\r\n    \"Monday\": \"\",\r\n    \"Tuesday\": \"\",\r\n    \"Wednesday\": \"\",\r\n    \"Thursday\": \"\",\r\n    \"Friday\": \"\",\r\n    \"Saturday\": \"\",\r\n    \"Sun\": \"\",\r\n    \"Mon\": \"\",\r\n    \"Tue\": \"\",\r\n    \"Wed\": \"\",\r\n    \"Thu\": \"\",\r\n    \"Fri\": \"\",\r\n    \"Sat\": \"\",\r\n    // Date ordinal function.\r\n    // \r\n    // This is used when adding number ordinal when formatting days in dates.\r\n    // \r\n    // E.g. \"January 1st\", \"February 2nd\".\r\n    // \r\n    // The function accepts day number, and returns a string to be added to the\r\n    // day, like in default English translation, if we pass in 2, we will receive\r\n    // \"nd\" back.\r\n    \"_dateOrd\": function (day) {\r\n        var res = \"th\";\r\n        if ((day < 11) || (day > 13)) {\r\n            switch (day % 10) {\r\n                case 1:\r\n                    res = \"st\";\r\n                    break;\r\n                case 2:\r\n                    res = \"nd\";\r\n                    break;\r\n                case 3:\r\n                    res = \"rd\";\r\n                    break;\r\n            }\r\n        }\r\n        return res;\r\n    },\r\n    // Various chart controls.\r\n    // Shown as a tooltip on zoom out button.\r\n    \"Zoom Out\": \"\",\r\n    // Timeline buttons\r\n    \"Play\": \"\",\r\n    \"Stop\": \"\",\r\n    // Chart's Legend screen reader title.\r\n    \"Legend\": \"\",\r\n    // Legend's item screen reader indicator.\r\n    \"Click, tap or press ENTER to toggle\": \"\",\r\n    // Shown when the chart is busy loading something.\r\n    \"Loading\": \"\",\r\n    // Shown as the first button in the breadcrumb navigation, e.g.:\r\n    // Home > First level > ...\r\n    \"Home\": \"\",\r\n    // Chart types.\r\n    // Those are used as default screen reader titles for the main chart element\r\n    // unless developer has set some more descriptive title.\r\n    \"Chart\": \"\",\r\n    \"Serial chart\": \"\",\r\n    \"X/Y chart\": \"\",\r\n    \"Pie chart\": \"\",\r\n    \"Gauge chart\": \"\",\r\n    \"Radar chart\": \"\",\r\n    \"Sankey diagram\": \"\",\r\n    \"Flow diagram\": \"\",\r\n    \"Chord diagram\": \"\",\r\n    \"TreeMap chart\": \"\",\r\n    \"Force directed tree\": \"\",\r\n    \"Sliced chart\": \"\",\r\n    // Series types.\r\n    // Used to name series by type for screen readers if they do not have their\r\n    // name set.\r\n    \"Series\": \"\",\r\n    \"Candlestick Series\": \"\",\r\n    \"OHLC Series\": \"\",\r\n    \"Column Series\": \"\",\r\n    \"Line Series\": \"\",\r\n    \"Pie Slice Series\": \"\",\r\n    \"Funnel Series\": \"\",\r\n    \"Pyramid Series\": \"\",\r\n    \"X/Y Series\": \"\",\r\n    // Map-related stuff.\r\n    \"Map\": \"\",\r\n    \"Press ENTER to zoom in\": \"\",\r\n    \"Press ENTER to zoom out\": \"\",\r\n    \"Use arrow keys to zoom in and out\": \"\",\r\n    \"Use plus and minus keys on your keyboard to zoom in and out\": \"\",\r\n    // Export-related stuff.\r\n    // These prompts are used in Export menu labels.\r\n    // \r\n    // \"Export\" is the top-level menu item.\r\n    // \r\n    // \"Image\", \"Data\", \"Print\" as second-level indicating type of export\r\n    // operation.\r\n    // \r\n    // Leave actual format untranslated, unless you absolutely know that they\r\n    // would convey more meaning in some other way.\r\n    \"Export\": \"\",\r\n    \"Image\": \"\",\r\n    \"Data\": \"\",\r\n    \"Print\": \"\",\r\n    \"Click, tap or press ENTER to open\": \"\",\r\n    \"Click, tap or press ENTER to print.\": \"\",\r\n    \"Click, tap or press ENTER to export as %1.\": \"\",\r\n    'To save the image, right-click this link and choose \"Save picture as...\"': \"\",\r\n    'To save the image, right-click thumbnail on the left and choose \"Save picture as...\"': \"\",\r\n    \"(Press ESC to close this message)\": \"\",\r\n    \"Image Export Complete\": \"\",\r\n    \"Export operation took longer than expected. Something might have gone wrong.\": \"\",\r\n    \"Saved from\": \"\",\r\n    \"PNG\": \"\",\r\n    \"JPG\": \"\",\r\n    \"GIF\": \"\",\r\n    \"SVG\": \"\",\r\n    \"PDF\": \"\",\r\n    \"JSON\": \"\",\r\n    \"CSV\": \"\",\r\n    \"XLSX\": \"\",\r\n    // Scrollbar-related stuff.\r\n    // \r\n    // Scrollbar is a control which can zoom and pan the axes on the chart.\r\n    // \r\n    // Each scrollbar has two grips: left or right (for horizontal scrollbar) or\r\n    // upper and lower (for vertical one).\r\n    // \r\n    // Prompts change in relation to whether Scrollbar is vertical or horizontal.\r\n    // \r\n    // The final section is used to indicate the current range of selection.\r\n    \"Use TAB to select grip buttons or left and right arrows to change selection\": \"\",\r\n    \"Use left and right arrows to move selection\": \"\",\r\n    \"Use left and right arrows to move left selection\": \"\",\r\n    \"Use left and right arrows to move right selection\": \"\",\r\n    \"Use TAB select grip buttons or up and down arrows to change selection\": \"\",\r\n    \"Use up and down arrows to move selection\": \"\",\r\n    \"Use up and down arrows to move lower selection\": \"\",\r\n    \"Use up and down arrows to move upper selection\": \"\",\r\n    \"From %1 to %2\": \"\",\r\n    \"From %1\": \"\",\r\n    \"To %1\": \"\",\r\n    // Data loader-related.\r\n    \"No parser available for file: %1\": \"\",\r\n    \"Error parsing file: %1\": \"\",\r\n    \"Unable to load file: %1\": \"\",\r\n    \"Invalid date\": \"\",\r\n    // Common actions\r\n    \"Close\": \"\",\r\n    \"Minimize\": \"\"\r\n};\r\n//# sourceMappingURL=en.js.map","/**\r\n * Language module contains everything related to language-specific operations:\r\n * * Translating prompts\r\n * * Translating functions\r\n * * Date format localizations\r\n */\r\nimport { __extends, __read, __spread } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObjectEvents } from \"../Base\";\r\nimport { Adapter } from \"./Adapter\";\r\nimport * as $array from \"./Array\";\r\nimport * as $type from \"./Type\";\r\nimport en from \"../../../lang/en\";\r\nimport { options } from \"../Options\";\r\n;\r\n;\r\n/**\r\n * Handles all language-related tasks, like loading and storing translations,\r\n * translating prompts, lists of prompts and even functions.\r\n *\r\n * Almost every object in amCharts4 universe will have a `language` property,\r\n * which can be accessed for prompt translation.\r\n *\r\n * @see {@link ILanguageAdapters} for a list of available Adapters\r\n * @todo Make prompt keys case-insensitive\r\n * @important\r\n */\r\nvar Language = /** @class */ (function (_super) {\r\n    __extends(Language, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Language() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * Adapter.\r\n         */\r\n        _this.adapter = new Adapter(_this);\r\n        /**\r\n         * Current locale.\r\n         */\r\n        _this._locale = en;\r\n        /**\r\n         * Default locale. A locale to fall back to if none is specified, or\r\n         * if there's no translation for the prompt for the current language.\r\n         */\r\n        _this._defaultLocale = en;\r\n        _this.className = \"Language\";\r\n        // Set default language if necessary\r\n        if ($type.hasValue(options.defaultLocale)) {\r\n            _this.locale = options.defaultLocale;\r\n        }\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Returns locale that is currently used.\r\n     *\r\n     * @param locale  Force locale. Will use current language if not set.\r\n     * @return Locale\r\n     */\r\n    Language.prototype.getLocale = function (locale) {\r\n        if (locale == null) {\r\n            locale = this._locale;\r\n        }\r\n        return this.adapter.apply(\"locale\", {\r\n            locale: locale\r\n        }).locale;\r\n    };\r\n    /**\r\n     * Returns the translation of the string.\r\n     *\r\n     * If the translation is empty, it will return untranslated prompt.\r\n     *\r\n     * Third parameter and up are strings that can be used to replace \"%X\"\r\n     * placeholders in prompt.\r\n     *\r\n     * E.g.:\r\n     *\r\n     * ```TypeScript\r\n     * // Results in \"This is a first translation test\"\r\n     * chart.language.translate(\"This is a %1 translation %2\", null, \"first\", \"test\");\r\n     * ```\r\n     * ```JavaScriptScript\r\n     * // Results in \"This is a first translation test\"\r\n     * chart.language.translate(\"This is a %1 translation %2\", null, \"first\", \"test\");\r\n     * ```\r\n     *\r\n     * @param  prompt   A string to translate\r\n     * @param  locale   Force translation into specific locale, e.g. fr_FR\r\n     * @param  rest     Parameters to replace in string\r\n     * @return          Translation\r\n     */\r\n    Language.prototype.translate = function (prompt, locale) {\r\n        var rest = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            rest[_i - 2] = arguments[_i];\r\n        }\r\n        // Get langauge\r\n        locale = this.getLocale(locale);\r\n        // Init translation\r\n        var translation = prompt;\r\n        // Get translations for the locale\r\n        var translations = this.getTranslations(locale);\r\n        var value = translations[prompt];\r\n        // Try to look for the translation\r\n        if (value === null) {\r\n            value = \"\";\r\n        }\r\n        else if ($type.hasValue(value)) {\r\n            // It might be an empty string\r\n            if (value) {\r\n                translation = value;\r\n            }\r\n        }\r\n        else if (locale !== this._defaultLocale) {\r\n            // Try to look in default language\r\n            return this.translate.apply(this, __spread([prompt, this._defaultLocale], rest));\r\n        }\r\n        // Replace %1, %2, etc params\r\n        if (rest.length) {\r\n            for (var len = rest.length, i = 0; i < len; ++i) {\r\n                translation = translation.split(\"%\" + (i + 1)).join(rest[i]);\r\n            }\r\n        }\r\n        // Return the translation\r\n        return this.adapter.apply(\"translate\", {\r\n            translation: translation,\r\n            locale: locale\r\n        }).translation;\r\n    };\r\n    /**\r\n     * Non-type-checked translation.\r\n     *\r\n     * Can be used by plugins and other code that may have their own non-standard\r\n     * translation prompts.\r\n     *\r\n     * @since 4.5.5\r\n     * @param  prompt   A string to translate\r\n     * @param  locale   Force translation into specific locale, e.g. fr_FR\r\n     * @param  rest     Parameters to replace in string\r\n     * @return          Translation\r\n     */\r\n    Language.prototype.translateAny = function (prompt, locale) {\r\n        var rest = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            rest[_i - 2] = arguments[_i];\r\n        }\r\n        return this.translate(prompt, locale);\r\n    };\r\n    /**\r\n     * Translates prompt.\r\n     *\r\n     * If translation is empty, it will return empty string, which is a different\r\n     * behavior than that of regular `translate`.\r\n     *\r\n     * @param prompt   A string to translate\r\n     * @param locale   Force translation into specific locale, e.g. fr_FR\r\n     * @param ...rest  Parameters to replace in string\r\n     * @return Translation\r\n     */\r\n    Language.prototype.translateEmpty = function (prompt, locale) {\r\n        var rest = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            rest[_i - 2] = arguments[_i];\r\n        }\r\n        var translation = this.translate.apply(this, __spread([prompt, locale], rest));\r\n        return translation == prompt ? \"\" : translation;\r\n    };\r\n    /**\r\n     * Translates a function.\r\n     *\r\n     * This method will return a function reference, but will not run it. It's\r\n     * up to the caller script to run the function.\r\n     *\r\n     * @param prompt  A function id to translate\r\n     * @param locale  Force translation into specific locale. e.g. fr_FR\r\n     * @return A language-specific version of the function\r\n     * @todo Apply adapter\r\n     */\r\n    Language.prototype.translateFunc = function (prompt, locale) {\r\n        // Get langauge\r\n        locale = this.getLocale(locale);\r\n        // Get translations for the locale\r\n        var translations = this.getTranslations(locale);\r\n        var value = translations[prompt];\r\n        // Try to look for the translation\r\n        if (value != null) {\r\n            return value;\r\n        }\r\n        // Try to look in default language\r\n        if (locale !== this._defaultLocale) {\r\n            return this.translateFunc(prompt, this._defaultLocale);\r\n        }\r\n        // Fail - return empty function\r\n        return function () {\r\n            return \"\";\r\n        };\r\n    };\r\n    /**\r\n     * Translates a list of prompts in one go.\r\n     *\r\n     * @param list    An array of strings to translate\r\n     * @param locale  Force translation into specific locale. e.g. fr_FR\r\n     * @return An array of translated strings in the same order as source list\r\n     */\r\n    Language.prototype.translateAll = function (list, locale) {\r\n        var _this = this;\r\n        // Translate all items in the list\r\n        if (!this.isDefault()) {\r\n            return $array.map(list, function (x) { return _this.translate(x, locale); });\r\n        }\r\n        else {\r\n            return list;\r\n        }\r\n    };\r\n    /**\r\n     * Returns `true` if the currently selected locale is a default locale.\r\n     *\r\n     * @return `true` if locale is default; `false` if it is not.\r\n     */\r\n    Language.prototype.isDefault = function () {\r\n        return this._defaultLocale === this._locale;\r\n    };\r\n    Object.defineProperty(Language.prototype, \"locale\", {\r\n        /**\r\n         * @return Locale definition\r\n         */\r\n        get: function () {\r\n            return this._locale;\r\n        },\r\n        /**\r\n         * Current locale.\r\n         *\r\n         * @param value  Locale definition (translations)\r\n         */\r\n        set: function (value) {\r\n            if (this._locale != value) {\r\n                this._locale = value;\r\n                if (this.events.isEnabled(\"localechanged\")) {\r\n                    var event_1 = {\r\n                        type: \"localechanged\",\r\n                        locale: value,\r\n                        target: this\r\n                    };\r\n                    this.events.dispatchImmediately(\"localechanged\", event_1);\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns translations for a given locale.\r\n     *\r\n     * @ignore\r\n     * @deprecated\r\n     * @param locale  Locale\r\n     * @return Translations\r\n     */\r\n    Language.prototype.getTranslations = function (locale) {\r\n        return this.adapter.apply(\"translations\", {\r\n            translations: locale,\r\n            locale: locale\r\n        }).translations;\r\n    };\r\n    return Language;\r\n}(BaseObjectEvents));\r\nexport { Language };\r\n//# sourceMappingURL=Language.js.map","/**\r\n * Responsive functionality module.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObjectEvents } from \"../Base\";\r\nimport { List } from \"../utils/List\";\r\nimport { Adapter } from \"../utils/Adapter\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $iter from \"../utils/Iterator\";\r\nimport * as $array from \"../utils/Array\";\r\nimport * as $type from \"../utils/Type\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Responsive is responsible for overriding certain properties when conditions\r\n * are met.\r\n *\r\n * This class is used to dynamically apply and change certain chart properties\r\n * based on the current values of properties.\r\n *\r\n * Mainly, this is used with [[Sprite]]'s dimensional properties, like\r\n * `pixelWidth` and `pixelHeight`. However, it can be used to dynamically\r\n * change any property, based on any other property's value.\r\n *\r\n * A default responsive rules are disabled.\r\n *\r\n * To enable, set `enabled = false`. E.g.:\r\n *\r\n * ```TypeScript\r\n * chart.responsive.enabled = true;\r\n * ```\r\n * ```JavaScript\r\n * chart.responsive.enabled = true;\r\n * ```\r\n *\r\n * @see {@link IResponsiveEvents} for a list of available events\r\n * @see {@link IResponsiveAdapters} for a list of available Adapters\r\n * @todo Add default rules\r\n * @todo Watch for rule modification\r\n * @important\r\n */\r\nvar Responsive = /** @class */ (function (_super) {\r\n    __extends(Responsive, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Responsive() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        /**\r\n         * Holds a list of responsive rules organized by object type.\r\n         */\r\n        _this._rules = new List();\r\n        /**\r\n         * Holds the list of the default responsive rules.\r\n         * @deprecated\r\n         */\r\n        //protected _defaultRules = new List<IResponsiveRule>();\r\n        /**\r\n         * Holds the list of currently applied rules.\r\n         */\r\n        _this._appliedRules = {};\r\n        /**\r\n         * Used to keep track of objects that have rules applied at the moment.\r\n         */\r\n        _this._appliedTargets = [];\r\n        /**\r\n         * Use default rules in addition to the user-defined ones?\r\n         */\r\n        _this._useDefault = true;\r\n        /**\r\n         * Adapter.\r\n         */\r\n        _this.adapter = new Adapter(_this);\r\n        /**\r\n         * Indicates of responsive rules application is enabled.\r\n         */\r\n        _this._enabled = false;\r\n        /**\r\n         * Collection of objects and state ids that do not have any properties set.\r\n         */\r\n        _this._noStates = [];\r\n        _this.className = \"Responsive\";\r\n        // Set up rules list events\r\n        _this.rules.events.on(\"inserted\", _this.checkRules, true);\r\n        _this.rules.events.on(\"removed\", _this.checkRules, true);\r\n        _this._disposers.push(_this.rules.events);\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Responsive.prototype, \"component\", {\r\n        /**\r\n         * @return Target object\r\n         */\r\n        get: function () {\r\n            return this._component;\r\n        },\r\n        /**\r\n         * A target object that responsive rules will need to be applied to.\r\n         *\r\n         * @param value  Target object\r\n         */\r\n        set: function (value) {\r\n            // Check if it's the same\r\n            if (value == this._component) {\r\n                return;\r\n            }\r\n            // Check if we already have a set up component and remove its events\r\n            if (this._sizeEventDisposer) {\r\n                this.removeDispose(this._sizeEventDisposer);\r\n            }\r\n            // Set\r\n            this._component = value;\r\n            // Set up resize monitoring events\r\n            this._sizeEventDisposer = $type.getValue(this.component).events.on(\"sizechanged\", this.checkRules, this);\r\n            this._disposers.push(this._sizeEventDisposer);\r\n            // Enable resoponsive\r\n            this.enabled = true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Responsive.prototype, \"enabled\", {\r\n        /**\r\n         * @return Apply responsive rules?\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"enabled\", this._enabled);\r\n        },\r\n        /**\r\n         * Should responsive rules be checked against and applied?\r\n         *\r\n         * @default false\r\n         * @param value  Apply responsive rules?\r\n         */\r\n        set: function (value) {\r\n            if (this._enabled != value) {\r\n                this._enabled = value;\r\n                // Run `applyRules` so that any currently applied rules can be reset\r\n                this.applyRules();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Responsive.prototype, \"useDefault\", {\r\n        /**\r\n         * @return Use default rules?\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"useDefault\", this._useDefault);\r\n        },\r\n        /**\r\n         * Should default responsive rules be applied in addition to user-defined\r\n         * ones.\r\n         *\r\n         * User-defined rules will take precedence over default rules whenever they\r\n         * produce conflicting settings.\r\n         *\r\n         * @default true\r\n         * @param value  Use default rules?\r\n         */\r\n        set: function (value) {\r\n            if (this._useDefault != value) {\r\n                this._useDefault = value;\r\n                // Run `applyRules` so that any currently applied rules can be reset\r\n                this.applyRules();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Responsive.prototype, \"rules\", {\r\n        /**\r\n         * @return User-defined rules\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"rules\", this._rules);\r\n        },\r\n        /**\r\n         * User-defined responsive rules.\r\n         *\r\n         * User-defined rules will take precedence over default rules whenever they\r\n         * produce conflicting settings.\r\n         *\r\n         * Use `allRules` to get all applicable rules including default and\r\n         * user-defined ones.\r\n         *\r\n         * @param value  User-defined rules\r\n         */\r\n        set: function (value) {\r\n            this._rules = value;\r\n            this._enabled = true;\r\n            this.applyRules();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Responsive.prototype, \"defaultRules\", {\r\n        /**\r\n         * Default responsive rules.\r\n         *\r\n         * @readonly\r\n         * @return List of responsive rules\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"defaultRules\", defaultRules);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Responsive.prototype, \"allRules\", {\r\n        /**\r\n         * Returns all rules: default rules (if not disabled) combined with\r\n         * user-defined ones.\r\n         *\r\n         * @readonly\r\n         * @return List of all applicable rules\r\n         */\r\n        get: function () {\r\n            // Create empty list\r\n            var rules = new List();\r\n            // Add default rules if not disabled\r\n            // A code, requesting `allRules` must ensure loading of default rules\r\n            // by calling `loadDefaultRules()`\r\n            if (this.useDefault) {\r\n                rules.copyFrom(this.defaultRules);\r\n            }\r\n            // Add user-defined ones\r\n            rules.copyFrom(this.rules);\r\n            return this.adapter.apply(\"allRules\", rules);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Checks if rule by the particular id currently applied.\r\n     *\r\n     * @param ruleId  Rule ID\r\n     * @return Is currently applied?\r\n     */\r\n    Responsive.prototype.isApplied = function (ruleId) {\r\n        var rule = this._appliedRules[ruleId];\r\n        return $type.hasValue(rule) ? rule : false;\r\n    };\r\n    /**\r\n     * Checks which responsive rules currently satisfy their conditions and\r\n     * should be applied, or unapplied.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Responsive.prototype.checkRules = function () {\r\n        var _this = this;\r\n        // Check if there are any rules\r\n        var rules = this.allRules;\r\n        if (!rules || rules.length == 0) {\r\n            return;\r\n        }\r\n        // Init a list of rules to be applied\r\n        var rulesChanged = false;\r\n        var component = $type.getValue(this.component);\r\n        // Check which rules match\r\n        $iter.each(rules.iterator(), function (rule) {\r\n            // Check if rule has an id\r\n            if (!rule.id) {\r\n                rule.id = registry.getUniqueId();\r\n            }\r\n            // Init indicator if this rule should be applied\r\n            var apply = rule.relevant(component);\r\n            // Let's check if this rule needs to be applied\r\n            if ((apply && !_this.isApplied(rule.id)) || (!apply && _this.isApplied(rule.id))) {\r\n                rulesChanged = true;\r\n            }\r\n            _this._appliedRules[rule.id] = apply;\r\n        });\r\n        // Check if we need to re-apply the rules\r\n        if (rulesChanged) {\r\n            if (!this.component.isReady()) {\r\n                // The chart is not yet ready (built)\r\n                // We will hide the chart and delay application of rules\r\n                // until \"ready\" event kicks in\r\n                //component.hide(0);\r\n                component.hidden = true;\r\n                component.events.once(\"ready\", function (ev) {\r\n                    ev.target.show(0);\r\n                    _this.applyRules();\r\n                });\r\n                return;\r\n            }\r\n            this.dispatchImmediately(\"ruleschanged\");\r\n            this.applyRules();\r\n        }\r\n    };\r\n    /**\r\n     * Applies current rules to the object.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param target Target object\r\n     * @todo Better type check\r\n     */\r\n    Responsive.prototype.applyRules = function (target) {\r\n        var _this = this;\r\n        // If no target supplied, we assume the top-level element\r\n        var newTarget = ($type.hasValue(target)\r\n            ? target\r\n            : $type.getValue(this.component));\r\n        // Check each rule\r\n        var defaultStateApplied = false;\r\n        if (this.enabled) {\r\n            var isApplied_1 = false;\r\n            $iter.each(this.allRules.iterator(), function (rule) {\r\n                // Get relevant state\r\n                var state = _this.getState(rule, newTarget);\r\n                // If there's a state, it means it needs to be applied\r\n                if (state) {\r\n                    // Check if default state was already applied to this element.\r\n                    // We don't want to go resetting default states to ALL element,\r\n                    // if they don't have responsive states.\r\n                    if (!defaultStateApplied) {\r\n                        // Nope, reset states (instantly).\r\n                        if ($array.indexOf(_this._appliedTargets, newTarget.uid) !== -1) {\r\n                            // But only if this element has any rules applied, otherwise no\r\n                            // point in setting current state\r\n                            newTarget.applyCurrentState(0);\r\n                        }\r\n                        defaultStateApplied = true;\r\n                    }\r\n                    // Is this rule currently applied?\r\n                    if (_this.isApplied($type.getValue(rule.id))) {\r\n                        // Yes. Apply the responsive state\r\n                        state.transitionDuration = 0;\r\n                        newTarget.setState(state);\r\n                        _this.dispatchImmediately(\"ruleapplied\", {\r\n                            rule: rule\r\n                        });\r\n                        isApplied_1 = true;\r\n                    }\r\n                }\r\n            });\r\n            if (isApplied_1) {\r\n                $array.replace(this._appliedTargets, newTarget.uid);\r\n            }\r\n            else {\r\n                $array.remove(this._appliedTargets, newTarget.uid);\r\n            }\r\n        }\r\n        // Apply rules to the children\r\n        if (newTarget.children) {\r\n            $iter.each(newTarget.children.iterator(), function (child) {\r\n                _this.applyRules(child);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Returns a relative state for the rule/target, or `undefined` if no state is\r\n     * needed.\r\n     *\r\n     * @param rule    [description]\r\n     * @param target  [description]\r\n     * @return [description]\r\n     */\r\n    Responsive.prototype.getState = function (rule, target) {\r\n        var stateId = \"responsive-\" + rule.id;\r\n        var tmpId = target.uid + \"_\" + stateId;\r\n        if ($array.indexOf(this._noStates, tmpId) !== -1) {\r\n            return;\r\n        }\r\n        else if (!target.states.hasKey(stateId)) {\r\n            var state = rule.state(target, stateId);\r\n            if (!state) {\r\n                this._noStates.push(tmpId);\r\n            }\r\n            return state;\r\n        }\r\n        else {\r\n            return target.states.getKey(stateId);\r\n        }\r\n    };\r\n    /**\r\n     * Gets a value from an element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param target    Target object\r\n     * @param property  Property\r\n     * @return Property value\r\n     */\r\n    Responsive.prototype.getValue = function (target, property) {\r\n        // This is a bit hacky, first we check if the property exist.\r\n        // If it doesn't we try accessing target's property directly\r\n        var value = target.getPropertyValue(property);\r\n        if (!$type.hasValue(value) && $type.hasValue(target[property])) {\r\n            value = target[property];\r\n        }\r\n        return value;\r\n    };\r\n    return Responsive;\r\n}(BaseObjectEvents));\r\nexport { Responsive };\r\n/**\r\n * [defaultRules description]\r\n *\r\n * @todo description\r\n */\r\nexport var defaultRules = new List();\r\ndefaultRules.events.on(\"inserted\", function (ev) {\r\n    ev.newValue.id = registry.getUniqueId();\r\n});\r\n/**\r\n *\r\n * @todo description\r\n */\r\nvar ResponsiveBreakpoints = /** @class */ (function () {\r\n    function ResponsiveBreakpoints() {\r\n    }\r\n    // Breakpoint functions (for use in `relevant` clause of the responsive rules)\r\n    ResponsiveBreakpoints.widthXXS = function (container) {\r\n        return container.pixelWidth <= ResponsiveBreakpoints.XXS;\r\n    };\r\n    ResponsiveBreakpoints.widthXS = function (container) {\r\n        return container.pixelWidth <= ResponsiveBreakpoints.XS;\r\n    };\r\n    ResponsiveBreakpoints.widthS = function (container) {\r\n        return container.pixelWidth <= ResponsiveBreakpoints.S;\r\n    };\r\n    ResponsiveBreakpoints.widthM = function (container) {\r\n        return container.pixelWidth <= ResponsiveBreakpoints.M;\r\n    };\r\n    ResponsiveBreakpoints.widthL = function (container) {\r\n        return container.pixelWidth <= ResponsiveBreakpoints.L;\r\n    };\r\n    ResponsiveBreakpoints.widthXL = function (container) {\r\n        return container.pixelWidth <= ResponsiveBreakpoints.XL;\r\n    };\r\n    ResponsiveBreakpoints.widthXXL = function (container) {\r\n        return container.pixelWidth <= ResponsiveBreakpoints.XXL;\r\n    };\r\n    ResponsiveBreakpoints.heightXXS = function (container) {\r\n        return container.pixelHeight <= ResponsiveBreakpoints.XXS;\r\n    };\r\n    ResponsiveBreakpoints.heightXS = function (container) {\r\n        return container.pixelHeight <= ResponsiveBreakpoints.XS;\r\n    };\r\n    ResponsiveBreakpoints.heightS = function (container) {\r\n        return container.pixelHeight <= ResponsiveBreakpoints.S;\r\n    };\r\n    ResponsiveBreakpoints.heightM = function (container) {\r\n        return container.pixelHeight <= ResponsiveBreakpoints.M;\r\n    };\r\n    ResponsiveBreakpoints.heightL = function (container) {\r\n        return container.pixelHeight <= ResponsiveBreakpoints.L;\r\n    };\r\n    ResponsiveBreakpoints.heightXL = function (container) {\r\n        return container.pixelHeight <= ResponsiveBreakpoints.XL;\r\n    };\r\n    ResponsiveBreakpoints.heightXXL = function (container) {\r\n        return container.pixelHeight <= ResponsiveBreakpoints.XXL;\r\n    };\r\n    ResponsiveBreakpoints.isXXS = function (container) {\r\n        return (container.pixelWidth <= ResponsiveBreakpoints.XXS) && (container.pixelHeight <= ResponsiveBreakpoints.XXS);\r\n    };\r\n    ResponsiveBreakpoints.isXS = function (container) {\r\n        return (container.pixelWidth <= ResponsiveBreakpoints.XS) && (container.pixelHeight <= ResponsiveBreakpoints.XS);\r\n    };\r\n    ResponsiveBreakpoints.isS = function (container) {\r\n        return (container.pixelWidth <= ResponsiveBreakpoints.S) && (container.pixelHeight <= ResponsiveBreakpoints.S);\r\n    };\r\n    ResponsiveBreakpoints.isM = function (container) {\r\n        return (container.pixelWidth <= ResponsiveBreakpoints.M) && (container.pixelHeight <= ResponsiveBreakpoints.M);\r\n    };\r\n    ResponsiveBreakpoints.isL = function (container) {\r\n        return (container.pixelWidth <= ResponsiveBreakpoints.L) && (container.pixelHeight <= ResponsiveBreakpoints.L);\r\n    };\r\n    ResponsiveBreakpoints.isXL = function (container) {\r\n        return (container.pixelWidth <= ResponsiveBreakpoints.XL) && (container.pixelHeight <= ResponsiveBreakpoints.XL);\r\n    };\r\n    ResponsiveBreakpoints.isXXL = function (container) {\r\n        return (container.pixelWidth <= ResponsiveBreakpoints.XXL) && (container.pixelHeight <= ResponsiveBreakpoints.XXL);\r\n    };\r\n    ResponsiveBreakpoints.maybeXXS = function (container) {\r\n        return (container.pixelWidth <= ResponsiveBreakpoints.XXS) || (container.pixelHeight <= ResponsiveBreakpoints.XXS);\r\n    };\r\n    ResponsiveBreakpoints.maybeXS = function (container) {\r\n        return (container.pixelWidth <= ResponsiveBreakpoints.XS) || (container.pixelHeight <= ResponsiveBreakpoints.XS);\r\n    };\r\n    ResponsiveBreakpoints.maybeS = function (container) {\r\n        return (container.pixelWidth <= ResponsiveBreakpoints.S) || (container.pixelHeight <= ResponsiveBreakpoints.S);\r\n    };\r\n    ResponsiveBreakpoints.maybeM = function (container) {\r\n        return (container.pixelWidth <= ResponsiveBreakpoints.M) || (container.pixelHeight <= ResponsiveBreakpoints.M);\r\n    };\r\n    ResponsiveBreakpoints.maybeL = function (container) {\r\n        return (container.pixelWidth <= ResponsiveBreakpoints.L) || (container.pixelHeight <= ResponsiveBreakpoints.L);\r\n    };\r\n    ResponsiveBreakpoints.maybeXL = function (container) {\r\n        return (container.pixelWidth <= ResponsiveBreakpoints.XL) || (container.pixelHeight <= ResponsiveBreakpoints.XL);\r\n    };\r\n    ResponsiveBreakpoints.maybeXXL = function (container) {\r\n        return (container.pixelWidth <= ResponsiveBreakpoints.XXL) || (container.pixelHeight <= ResponsiveBreakpoints.XXL);\r\n    };\r\n    // Named pixel breakpoints\r\n    ResponsiveBreakpoints.XXS = 100;\r\n    ResponsiveBreakpoints.XS = 200;\r\n    ResponsiveBreakpoints.S = 300;\r\n    ResponsiveBreakpoints.M = 400;\r\n    ResponsiveBreakpoints.L = 600;\r\n    ResponsiveBreakpoints.XL = 800;\r\n    ResponsiveBreakpoints.XXL = 1000;\r\n    return ResponsiveBreakpoints;\r\n}());\r\nexport { ResponsiveBreakpoints };\r\n//# sourceMappingURL=Responsive.js.map","/**\r\n * Paper class just like the white sheet of pressed fiber it draws its name\r\n * inspiration from is used as a starting point to start a drawing.\r\n *\r\n * Before we can start adding elements (drawing) we need to take out a new sheet\r\n * of paper, or in this instance create a blank SVG element.\r\n *\r\n * This class creates such element, as well as implements methods needed to\r\n * start adding elements to it.\r\n */\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { AMElement } from \"./AMElement\";\r\nimport { Group } from \"./Group\";\r\nimport { SVGContainer } from \"./SVGContainer\";\r\nimport * as $dom from \"../utils/DOM\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Paper class which when instantiated will create an SVG element as well as\r\n * some of the sub-elements like `<desc>`, `<defs>`.\r\n *\r\n * Use its methods like `addGroup` and `append` to add elements to the paper.\r\n */\r\nvar Paper = /** @class */ (function () {\r\n    /**\r\n     * Creates main `<svg>` container and related elements.\r\n     *\r\n     * @param container A reference to HTML element to create `<svg>` in\r\n     */\r\n    function Paper(container, id) {\r\n        // Store container reference\r\n        this.container = container;\r\n        this.id = id;\r\n        // Create SVG element\r\n        var svg = document.createElementNS($dom.SVGNS, \"svg\");\r\n        svg.setAttribute(\"version\", \"1.1\");\r\n        svg.setAttributeNS($dom.XMLNS, \"xmlns\", $dom.SVGNS);\r\n        svg.setAttributeNS($dom.XMLNS, \"xmlns:xlink\", $dom.XLINK);\r\n        svg.setAttribute(\"role\", \"group\");\r\n        this.container.appendChild(svg);\r\n        // Add description\r\n        var desc = document.createElementNS($dom.SVGNS, \"desc\");\r\n        desc.appendChild(document.createTextNode(\"JavaScript chart by amCharts\"));\r\n        svg.appendChild(desc);\r\n        // Add defs\r\n        this.defs = document.createElementNS($dom.SVGNS, \"defs\");\r\n        svg.appendChild(this.defs);\r\n        // Set width and height to fit container\r\n        svg.style.width = \"100%\";\r\n        svg.style.height = \"100%\";\r\n        svg.style.overflow = \"visible\";\r\n        // Store variable\r\n        this.svg = svg;\r\n    }\r\n    /**\r\n     * Creates and returns a new element. Does not attach it to Paper yet.\r\n     *\r\n     * @param elementName  Element name\r\n     * @return New element\r\n     */\r\n    Paper.prototype.add = function (elementName) {\r\n        return new AMElement(elementName);\r\n    };\r\n    /**\r\n     * Creates and returns a new Group element. Does not attach it to Paper.\r\n     *\r\n     * @param groupName  Element name\r\n     * @return New Group\r\n     */\r\n    Paper.prototype.addGroup = function (groupName) {\r\n        return new Group(groupName);\r\n    };\r\n    /**\r\n     * Appends an element to Paper.\r\n     *\r\n     * @param element Element to append\r\n     */\r\n    Paper.prototype.append = function (element) {\r\n        if (element) {\r\n            this.svg.appendChild(element.node);\r\n        }\r\n    };\r\n    /**\r\n     * Appends an element to `<defs>` block of the Paper.\r\n     *\r\n     * @param element  Element\r\n     */\r\n    Paper.prototype.appendDef = function (element) {\r\n        if (element) {\r\n            this.defs.appendChild(element.node);\r\n        }\r\n    };\r\n    /**\r\n     * Creates and returns new `<foreignObject>` element. Does not append it to\r\n     * Paper.\r\n     *\r\n     * @return A foreignObject element\r\n     */\r\n    Paper.prototype.foreignObject = function () {\r\n        var element = new AMElement(\"foreignObject\");\r\n        //this.append(element);\r\n        return element;\r\n    };\r\n    /**\r\n     * Checks if browser supports `<foreignObject>` elements.\r\n     *\r\n     * @return Supports `foreignObject`?\r\n     */\r\n    Paper.prototype.supportsForeignObject = function () {\r\n        return document.implementation.hasFeature(\"http://www.w3.org/TR/SVG11/feature#Extensibility\", \"1.1\");\r\n    };\r\n    return Paper;\r\n}());\r\nexport { Paper };\r\nvar ghostPaper = null;\r\n/**\r\n * A [[Paper]] instance to create elements, that are not yet ready to be\r\n * placed in visible DOM.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport function getGhostPaper() {\r\n    if (ghostPaper === null) {\r\n        // ghost is used to draw elements while real paper is not yet created or Sprite doesn't know parent yet\r\n        var ghostDiv = document.createElement(\"div\");\r\n        ghostDiv.hidden = true;\r\n        document.body.appendChild(ghostDiv);\r\n        var ghostSvgContainer = new SVGContainer(ghostDiv, true);\r\n        ghostPaper = new Paper(ghostSvgContainer.SVGContainer, \"ghost\");\r\n    }\r\n    return ghostPaper;\r\n}\r\n//# sourceMappingURL=Paper.js.map","/**\r\n * Text class deals with all text placed on chart.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container } from \"../Container\";\r\nimport { registry } from \"../Registry\";\r\nimport { getTextFormatter } from \"../formatters/TextFormatter\";\r\nimport { MultiDisposer } from \"../utils/Disposer\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $math from \"../utils/Math\";\r\nimport * as $utils from \"../utils/Utils\";\r\nimport * as $type from \"../utils/Type\";\r\nimport * as $dom from \"../utils/DOM\";\r\nimport { defaultRules, ResponsiveBreakpoints } from \"../utils/Responsive\";\r\n;\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Text is used to display highly configurable, data-enabled textual elements.\r\n *\r\n * ## Data Binding\r\n *\r\n * A Text element can dynamically parse and populate its contents with values\r\n * from a [[DataItem]].\r\n *\r\n * To activate such binding, set element's `dataItem` property.\r\n *\r\n * When activated, text contents will be parsed for special tags, e.g.:\r\n *\r\n * ```TypeScript\r\n * label.dataItem = myDataItem;\r\n * label.text = \"The title is: {title}\";\r\n * ```\r\n * ```JavaScript\r\n * label.dataItem = myDataItem;\r\n * label.text = \"The title is: {title}\";\r\n * ```\r\n *\r\n * The above will automatically replace \"{title}\" in the string with the\r\n * actual data value from `myDataItem`.\r\n *\r\n * Note, that most often dataItem is set by the Component.\r\n *\r\n *\r\n * @see {@link ILabelEvents} for a list of available events\r\n * @see {@link ILabelAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-strings/} for info on string formatting and data binding\r\n * @todo Vertical align\r\n * @important\r\n */\r\nvar Label = /** @class */ (function (_super) {\r\n    __extends(Label, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Label() {\r\n        var _this = \r\n        // Execute super's constructor\r\n        _super.call(this) || this;\r\n        /**\r\n         * Indicates if the whole text does not fit into max dimenstions set for it.\r\n         */\r\n        _this.isOversized = false;\r\n        // Set this class name\r\n        _this.className = \"Label\";\r\n        _this.fill = new InterfaceColorSet().getFor(\"text\");\r\n        // not good to set this, as then these will appear on each label and values set on container won't be applied.\r\n        //this.textDecoration = \"none\";\r\n        //this.fontWeight = \"normal\";\r\n        // Set defaults\r\n        _this.wrap = false;\r\n        _this.truncate = false;\r\n        _this.fullWords = true;\r\n        _this.ellipsis = \"…\";\r\n        _this.textAlign = \"start\";\r\n        _this.textValign = \"top\";\r\n        _this.layout = \"absolute\";\r\n        _this.baseLineRatio = -0.27;\r\n        //this.pixelPerfect = true;\r\n        _this._positionPrecision = 1;\r\n        // Add events to watch for maxWidth/maxHeight changes so that we can\r\n        // invalidate this\r\n        _this.events.on(\"maxsizechanged\", function () {\r\n            if (_this.inited) {\r\n                _this.handleMaxSize();\r\n            }\r\n        }, _this, false);\r\n        // this solves strange bug when text just added to svg is 0x0\r\n        _this.events.once(\"validated\", _this.handleValidate, _this, false);\r\n        // Aply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * A placeholder method that is called **after** element finishes drawing\r\n     * itself.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Label.prototype.afterDraw = function () {\r\n        // since we removed validatePosition from sprite, we still need it here to handle rotated text\r\n        _super.prototype.afterDraw.call(this);\r\n        this.validatePosition();\r\n    };\r\n    /**\r\n     * Sets [[Paper]] instance to use to draw elements.\r\n     * @ignore\r\n     * @param paper Paper\r\n     * @return true if paper was changed, false, if it's the same\r\n     */\r\n    Label.prototype.setPaper = function (paper) {\r\n        var changed = _super.prototype.setPaper.call(this, paper);\r\n        if (changed) {\r\n            this.hardInvalidate();\r\n        }\r\n        return changed;\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    Label.prototype.handleValidate = function () {\r\n        if ((this.currentText || this.text) && (this.bbox.width == 0 || this.bbox.height == 0)) {\r\n            registry.events.once(\"exitframe\", this.hardInvalidate, this);\r\n        }\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    Label.prototype.handleMaxSize = function () {\r\n        if ((this.bbox.width > this.availableWidth)\r\n            || ((this.bbox.width < this.availableWidth) && (this.isOversized || this.truncate))\r\n            || (this.bbox.height > this.availableHeight)\r\n            || ((this.bbox.height < this.availableHeight) && this.isOversized)) {\r\n            this.invalidate();\r\n        }\r\n        else {\r\n            this.alignSVGText();\r\n        }\r\n    };\r\n    /**\r\n     * [arrange description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     */\r\n    Label.prototype.arrange = function () {\r\n    };\r\n    /**\r\n     * Updates current text according to data item and supported features.\r\n     * Returns `true` if current text has changed.\r\n     *\r\n     * @return Text changed?\r\n     */\r\n    Label.prototype.updateCurrentText = function () {\r\n        // Determine output format\r\n        var output, text;\r\n        if ($utils.isNotEmpty(this.html) && this.paper.supportsForeignObject()) {\r\n            // We favor HTML text if it's set and browser supports `foreignObject`\r\n            output = \"html\";\r\n            text = this.html;\r\n        }\r\n        else {\r\n            output = \"svg\";\r\n            text = this.text;\r\n        }\r\n        // Need to toString source?\r\n        if ($type.isObject(text)) {\r\n            text = text.toString();\r\n        }\r\n        // Need to format text all the time\r\n        if ($type.hasValue(text) && text !== \"\") {\r\n            text = this.populateString(text, this.dataItem);\r\n        }\r\n        if (output == \"html\") {\r\n            if (this._adapterO) {\r\n                text = this._adapterO.apply(\"htmlOutput\", text);\r\n            }\r\n        }\r\n        else {\r\n            if (this._adapterO) {\r\n                text = this._adapterO.apply(\"textOutput\", text);\r\n            }\r\n        }\r\n        // Update the text\r\n        var changed = text != this.currentText || output != this._currentFormat;\r\n        this.currentText = text;\r\n        this._currentFormat = output;\r\n        return changed;\r\n    };\r\n    /**\r\n     * Hard invalidate means the text will be redrawn even if it hasn't changed.\r\n     * This is used when we change `fontSize`, `fontFamily`, or for some other\r\n     * reasons.\r\n     */\r\n    Label.prototype.hardInvalidate = function () {\r\n        this._prevStatus = \"\";\r\n        this.invalidate();\r\n    };\r\n    /**\r\n     * Gets line bbox, uses caching to save cpu\r\n     * @ignore\r\n     */\r\n    Label.prototype.getLineBBox = function (lineInfo) {\r\n        //let cacheKey = lineInfo.text + lineInfo.style;\r\n        //let lineBBox = this.getCache(cacheKey);\r\n        //if (!lineBBox) {\r\n        //lineBBox = lineInfo.element.getBBox();\r\n        //if (lineBBox.width != 0 && lineBBox.height != 0) {\r\n        //\tthis.setCache(cacheKey, lineBBox, 5000);\r\n        //}\r\n        //}\r\n        var element = lineInfo && lineInfo.element;\r\n        var node = element && element.node;\r\n        // Check for the parent Node to avoid FF from throwing errors\r\n        if (node && node.parentNode) {\r\n            lineInfo.bbox = element.getBBox();\r\n        }\r\n    };\r\n    /**\r\n     * Draws the textual label.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Label.prototype.draw = function () {\r\n        // Draw super\r\n        _super.prototype.draw.call(this);\r\n        var oldW = this.bbox.width;\r\n        var oldH = this.bbox.height;\r\n        var topParent = this.topParent;\r\n        if (topParent) {\r\n            if (!topParent.maxWidth || !topParent.maxHeight) {\r\n                topParent.events.once(\"maxsizechanged\", this.hardInvalidate, this, false);\r\n                return;\r\n            }\r\n        }\r\n        // Calculate max width and height\r\n        var maxWidth = $math.max(this.availableWidth - this.pixelPaddingLeft - this.pixelPaddingRight, 0);\r\n        var maxHeight = $math.max(this.availableHeight - this.pixelPaddingTop - this.pixelPaddingBottom, 0);\r\n        // save\r\n        var status = maxHeight + \",\" + maxWidth + this.wrap + this.truncate + this.fullWords + this.rtl + this.ellipsis;\r\n        // Update text\r\n        if (!this.updateCurrentText() && this.inited && this._prevStatus == status) {\r\n            return;\r\n        }\r\n        this._measuredWidth = 0;\r\n        this._measuredHeight = 0;\r\n        // Reset\r\n        this.isOversized = false;\r\n        // Determine output format\r\n        var output = this._currentFormat;\r\n        var text = this.currentText;\r\n        // Empty string\r\n        if (!$type.hasValue(text) || text == \"\") {\r\n            this.element.attr({ display: \"none\" });\r\n            return;\r\n        }\r\n        // Chop up text into lines\r\n        // We're still processing SVG and HTML in the same way for now\r\n        var lines = text.split(\"\\n\");\r\n        // Do we need to go through the trouble of measuring lines\r\n        //let measure: boolean = true;// (lines.length > 1) || this.wrap;\r\n        this._prevStatus = status;\r\n        this.textAlign = this.textAlign;\r\n        // need this to measure\r\n        var display = this.group.getAttr(\"display\");\r\n        if (display == \"none\") {\r\n            this.group.removeAttr(\"display\");\r\n        }\r\n        if (this.textPathElement) {\r\n            this.textPathElement.removeChildren();\r\n        }\r\n        // SVG or HTML?\r\n        if (output === \"svg\") {\r\n            /**\r\n             * SVG\r\n             */\r\n            this.element.removeAttr(\"display\");\r\n            // Clear the element\r\n            var group = this.element;\r\n            this.resetBBox();\r\n            // Init state variables\r\n            var currentHeight = 0;\r\n            var currentFormat = \"\";\r\n            // Process each line\r\n            for (var i = 0; i < lines.length; i++) {\r\n                // Get line\r\n                var line = lines[i];\r\n                // Check if line is empty\r\n                if (line == \"\") {\r\n                    // It is, let's just update currentHeight and go to the next one\r\n                    // If it's the first line, we'll have to use arbirary line height,\r\n                    // since there's nothing to measure. For subsequent lines we can take\r\n                    // previous line's height\r\n                    var tempElement = this.getSVGLineElement(\"\", 0);\r\n                    tempElement.add(this.getSvgElement(\".\", getTextFormatter().translateStyleShortcuts(currentFormat)));\r\n                    group.add(tempElement);\r\n                    var offset = Math.ceil(tempElement.getBBox().height);\r\n                    if (offset > 0) {\r\n                        currentHeight += offset;\r\n                    }\r\n                    group.removeElement(tempElement);\r\n                    // Clear cache if necessary\r\n                    var lineInfo_1 = this.getLineInfo(i);\r\n                    if (lineInfo_1) {\r\n                        lineInfo_1.text = \"\";\r\n                        lineInfo_1.element.textContent = \"\";\r\n                    }\r\n                    continue;\r\n                }\r\n                // Chunk up the line and process each chunk\r\n                var chunks = getTextFormatter().chunk(line, null, this.ignoreFormatting);\r\n                var currentLineHeight = 0;\r\n                var firstChunk = true;\r\n                var skipTextChunks = false;\r\n                // Create line element or grab it from cache\r\n                var lineInfo = this.getLineInfo(i);\r\n                if (lineInfo) {\r\n                    // Empty line\r\n                    lineInfo.text = \"\";\r\n                    lineInfo.element.textContent = \"\";\r\n                }\r\n                else {\r\n                    // Init new line info\r\n                    lineInfo = {\r\n                        \"text\": \"\",\r\n                        \"element\": this.getSVGLineElement(\"\", 0),\r\n                        \"complex\": false\r\n                    };\r\n                    // Create the line element\r\n                    //lineInfo.element = this.getSVGLineElement(\"\", 0);\r\n                    //lineElement = this.getSVGLineElement(\"\", 0);\r\n                    group.add(lineInfo.element);\r\n                }\r\n                lineInfo.element.removeAttr(\"display\");\r\n                lineInfo.element.removeChildren(); // memory leak without this\r\n                if (this.textPathElement) {\r\n                    lineInfo.element.add(this.textPathElement);\r\n                }\r\n                /*// @todo not needed anymore\r\n                if (this.rtl) {\r\n                    chunks.reverse();\r\n                }*/\r\n                // Process each chunk\r\n                for (var x = 0; x < chunks.length; x++) {\r\n                    // If there's more than one chunk, means the line is \"complex\"\r\n                    if (x) {\r\n                        lineInfo.complex = true;\r\n                    }\r\n                    // Get chunk\r\n                    var chunk = chunks[x];\r\n                    // Is this chunk format or text?\r\n                    if (chunk.type === \"format\") {\r\n                        // Log current format, so that we can apply it to multiple lines if\r\n                        // necessary\r\n                        currentFormat = chunk.text;\r\n                    }\r\n                    else {\r\n                        // It's text block\r\n                        // Need to skip?\r\n                        // We do this when truncating. We can't just simply go ahead and\r\n                        // abandon chunk processing as they might have formatting\r\n                        // instructions in them that are relevant for subsequent lines\r\n                        if (skipTextChunks) {\r\n                            continue;\r\n                        }\r\n                        // Add chunk to the current element\r\n                        //lineInfo.element.content += $utils.trim(getTextFormatter().format(currentFormat + chunk.text, output));\r\n                        lineInfo.text = chunk.text;\r\n                        lineInfo.style = getTextFormatter().translateStyleShortcuts(currentFormat);\r\n                        var tspan = this.getSvgElement(lineInfo.text, lineInfo.style);\r\n                        if (this.textPathElement) {\r\n                            this.textPathElement.add(tspan);\r\n                        }\r\n                        else {\r\n                            lineInfo.element.add(tspan);\r\n                        }\r\n                        this.getLineBBox(lineInfo);\r\n                        lineInfo.bbox.width = Math.ceil(lineInfo.bbox.width);\r\n                        // Updated current line height\r\n                        if (currentLineHeight < lineInfo.bbox.height) {\r\n                            currentLineHeight = lineInfo.bbox.height;\r\n                        }\r\n                        // Wrapping?\r\n                        if ((this.wrap || this.truncate) && (lineInfo.bbox.width > maxWidth)) {\r\n                            // Set oversized\r\n                            this.isOversized = true;\r\n                            // Take temporary measurements\r\n                            var lineText = lineInfo.element.textContent;\r\n                            var avgCharWidth = (lineInfo.bbox.width / lineText.length); // * .9;\r\n                            // Calculate average number of symbols / width\r\n                            var excessChars = $math.min(Math.ceil((lineInfo.bbox.width - maxWidth) / avgCharWidth), lineText.length);\r\n                            // Are we truncating or auto-wrapping text?\r\n                            if (this.truncate) {\r\n                                /**\r\n                                 * Processing line truncation\r\n                                 * With the addition of each text chunk we measure if current\r\n                                 * line does not exceed maxWidth. If it does, we will stop\r\n                                 * addition of further chunks as well as try to truncate\r\n                                 * current or any number of previous chunks with an added\r\n                                 * ellipsis\r\n                                 */\r\n                                // Indicator whether we need to add ellipsis to the current\r\n                                // element, even if it fits. This is needed to indicate\r\n                                // whether we have already removed some subsequent chunks in\r\n                                // which case we need to add ellipsis.\r\n                                var addEllipsis = false;\r\n                                // Process each child in the temporary line, until the whole\r\n                                // line fits, preferably with an ellipsis\r\n                                // TODO use iterator instead\r\n                                var node_1 = lineInfo.element.node;\r\n                                if (node_1 && node_1.childNodes) {\r\n                                    for (var e = lineInfo.element.node.childNodes.length - 1; e >= 0; e--) {\r\n                                        // Get current element\r\n                                        var node_2 = lineInfo.element.node.childNodes[e];\r\n                                        // Add ellipsis only if previous chunk was removed in full\r\n                                        // and this chunk already fits\r\n                                        //if (addEllipsis && (bbox.width <= maxWidth)) {\r\n                                        if (addEllipsis && (lineInfo.bbox.width <= maxWidth)) {\r\n                                            // Add ellipsis\r\n                                            node_2.textContent += \" \" + this.ellipsis;\r\n                                            // Measure again (we need to make sure ellipsis fits)\r\n                                            lineInfo.bbox = lineInfo.element.getBBox();\r\n                                            lineInfo.bbox.width = Math.floor(lineInfo.bbox.width);\r\n                                            // If it fits, we're done here\r\n                                            // If it doesn't we continue rolling\r\n                                            if (lineInfo.bbox.width <= maxWidth) {\r\n                                                break;\r\n                                            }\r\n                                        }\r\n                                        addEllipsis = false;\r\n                                        // Get element text\r\n                                        var elementText = node_2.textContent;\r\n                                        // Calculate average number of symbols / width\r\n                                        lineText = lineInfo.element.textContent;\r\n                                        excessChars = $math.min(Math.ceil((lineInfo.bbox.width - maxWidth) / avgCharWidth), lineText.length);\r\n                                        // Do this until we fit\r\n                                        while ((lineInfo.bbox.width > maxWidth) && (excessChars <= lineText.length) && (excessChars > 0)) {\r\n                                            // Calculate max available chars\r\n                                            var maxChars = $math.max(lineText.length - excessChars - this.ellipsis.length, 1);\r\n                                            // Is there anything left?\r\n                                            if (maxChars <= 1) {\r\n                                                // Nope, let's jump to the previous item\r\n                                                // Set excess characters to zero so that this loop does\r\n                                                // not repeat when it over\r\n                                                excessChars = 0;\r\n                                                // Add ellipsis to previous item\r\n                                                // Subsequent iterations will check if the ellipsis fits\r\n                                                if (e > 0) {\r\n                                                    // Indicating to add ellipsis to previous item\r\n                                                    addEllipsis = true;\r\n                                                    // Removing this node\r\n                                                    lineInfo.element.node.removeChild(node_2);\r\n                                                }\r\n                                            }\r\n                                            // Truncate the text\r\n                                            elementText = $utils.truncateWithEllipsis(elementText, maxChars, this.ellipsis, this.fullWords, this.rtl);\r\n                                            if ((elementText.length > maxChars) && this.fullWords) {\r\n                                                // Still too long?\r\n                                                // Let's try truncating breaking words anyway\r\n                                                elementText = $utils.truncateWithEllipsis(elementText, maxChars, this.ellipsis, false, this.rtl);\r\n                                            }\r\n                                            // Set truncated text\r\n                                            node_2.textContent = elementText;\r\n                                            // Measure again\r\n                                            lineInfo.bbox = lineInfo.element.getBBox();\r\n                                            lineInfo.bbox.width = Math.floor(lineInfo.bbox.width);\r\n                                            // Increase excess characters count, just in case it still\r\n                                            // doesn't fit and we have to go at it again\r\n                                            excessChars = Math.ceil(excessChars * 1.1);\r\n                                        }\r\n                                        // Do not process further chunks\r\n                                        skipTextChunks = true;\r\n                                    }\r\n                                }\r\n                            }\r\n                            else {\r\n                                /**\r\n                                 * Processign auto-wrap\r\n                                 * In this case we're going to be adding text chunks until\r\n                                 * they don't fit into current line. Once that happens we will\r\n                                 * inject the rest of the chunks to the next line\r\n                                 */\r\n                                // Get last node added and measure it\r\n                                var node_3 = lineInfo.element.node;\r\n                                if (node_3) {\r\n                                    var lastNode = lineInfo.element.node.lastChild;\r\n                                    // Init split lines\r\n                                    var splitLines = void 0;\r\n                                    while ((lineInfo.bbox.width > maxWidth) && (excessChars <= lineText.length) && (excessChars > 0)) {\r\n                                        // Calculate max available chars\r\n                                        var maxChars = $math.max(chunk.text.length - excessChars, 1);\r\n                                        // Don't split the words mid-word if it's not the first chunk\r\n                                        // in the line\r\n                                        if (firstChunk) {\r\n                                            // Split mid-word if necessary\r\n                                            splitLines = $utils.splitTextByCharCount(chunk.text, maxChars, true, this.rtl);\r\n                                        }\r\n                                        else {\r\n                                            // Don't split mid-word\r\n                                            splitLines = $utils.splitTextByCharCount(chunk.text, maxChars, true, this.rtl);\r\n                                            // Check if the first word is too long\r\n                                            if ((splitLines[0].length > maxChars) || maxChars === 1) {\r\n                                                // Yes - move the whole chunk to the next line\r\n                                                // Remove the element we just added\r\n                                                lineInfo.element.node.removeChild(lastNode);\r\n                                                // Break out of the while on next cycle\r\n                                                excessChars = 0;\r\n                                            }\r\n                                        }\r\n                                        // Use the first line to update last item\r\n                                        if (excessChars > 0) {\r\n                                            lastNode.textContent = getTextFormatter().cleanUp($utils.trim(splitLines.shift()));\r\n                                        }\r\n                                        // Measure again, just in case\r\n                                        lineInfo.bbox = lineInfo.element.getBBox();\r\n                                        lineInfo.bbox.width = Math.floor(lineInfo.bbox.width);\r\n                                        // Increase excess characters count, just in case it still\r\n                                        // doesn't fit and we have to go at it again\r\n                                        excessChars = Math.ceil(excessChars * 1.1);\r\n                                    }\r\n                                    // Construct the rest of the line\r\n                                    if (splitLines.length > 0) {\r\n                                        var restOfLine = \"\";\r\n                                        // Add leftovers from splitting the current chunk\r\n                                        if ($type.hasValue(splitLines)) {\r\n                                            if (this.rtl) {\r\n                                                restOfLine += splitLines.join(\"\") + currentFormat;\r\n                                            }\r\n                                            else {\r\n                                                restOfLine += currentFormat + splitLines.join(\"\").replace(/([\\[\\]]{1})/g, \"$1$1\");\r\n                                            }\r\n                                        }\r\n                                        // Add the rest of the chunks\r\n                                        for (var c = x + 1; c < chunks.length; c++) {\r\n                                            if (chunks[c].type == \"value\") {\r\n                                                // We're escaping single square brackets that were\r\n                                                // cleaned up by chunk() back to double square brackets\r\n                                                // so that they are not being treated as format on\r\n                                                // next pass.\r\n                                                restOfLine += chunks[c].text.replace(/([\\[\\]]{1})/g, \"$1$1\");\r\n                                            }\r\n                                            else {\r\n                                                restOfLine += chunks[c].text;\r\n                                            }\r\n                                        }\r\n                                        // Inject the rest of the lines as chunks for subsequent\r\n                                        lines.splice(i + 1, 0, restOfLine);\r\n                                    }\r\n                                    // Skip processing the rest of the chunks\r\n                                    skipTextChunks = true;\r\n                                }\r\n                            }\r\n                        }\r\n                        // Let's update the text's bbox with the line's one\r\n                        if (this.bbox.width < lineInfo.bbox.width) {\r\n                            this.bbox.width = lineInfo.bbox.width;\r\n                        }\r\n                        // commented to avoid bug (seen on sankey link) where text is incorrectly aligned\r\n                        //if (this.bbox.x > lineInfo.bbox.x) {\r\n                        //this.bbox.x = lineInfo.bbox.x;\r\n                        //}\r\n                        this.bbox.height = currentHeight + currentLineHeight;\r\n                        // Position current line\r\n                        if (!this.textPathElement) {\r\n                            lineInfo.element.attr({\r\n                                \"x\": \"0\",\r\n                                \"y\": currentHeight + currentLineHeight,\r\n                                \"dy\": $math.round((this.baseLineRatio * currentLineHeight), 3).toString()\r\n                            });\r\n                        }\r\n                        else {\r\n                            lineInfo.element.attr({\r\n                                \"dy\": -this.paddingBottom.toString()\r\n                            });\r\n                        }\r\n                        firstChunk = false;\r\n                    }\r\n                }\r\n                // Trim the last item\r\n                var node = lineInfo.element.node;\r\n                if (node) {\r\n                    var lastNode = node.lastChild;\r\n                    if (lastNode) {\r\n                        lastNode.textContent = this.rtl ?\r\n                            $utils.ltrim(lastNode.textContent) :\r\n                            $utils.rtrim(lastNode.textContent);\r\n                    }\r\n                }\r\n                // Increment collective height\r\n                currentHeight += currentLineHeight;\r\n                // Save line cache\r\n                this.addLineInfo(lineInfo, i);\r\n            }\r\n            // Check if maybe we need to hide the whole label if it doesn't fit\r\n            this.maybeHideOversized();\r\n            this.measureFailed = false;\r\n            if (this.bbox.width == 0 || this.bbox.height == 0) {\r\n                this.measureFailed = true;\r\n            }\r\n            // Updated measured dims\r\n            this._measuredWidth = $math.round($math.max(this.bbox.width, this.pixelWidth - this.pixelPaddingLeft - this.pixelPaddingRight));\r\n            this._measuredHeight = $math.round($math.max(this.bbox.height, this.pixelHeight - this.pixelPaddingTop - this.pixelPaddingBottom));\r\n            // Align the lines\r\n            this.alignSVGText();\r\n            this.bbox.width = this._measuredWidth;\r\n            this.bbox.height = this._measuredHeight;\r\n            if (oldH != this._measuredHeight || oldW != this._measuredWidth) {\r\n                this.dispatch(\"transformed\");\r\n            }\r\n            this.hideUnused(lines.length);\r\n        }\r\n        else {\r\n            /**\r\n             * HTML\r\n             */\r\n            this.element.removeAttr(\"display\");\r\n            this.resetBBox();\r\n            // Clear the element\r\n            var group = this.element;\r\n            group.removeChildren();\r\n            // Create a ForeignObject to use as HTML container\r\n            var fo = this.paper.foreignObject();\r\n            group.add(fo);\r\n            // Set widths on foreignObject so that autosizing measurements work\r\n            // This will bet reset to actual content width/height\r\n            if (this.maxWidth) {\r\n                fo.attr({\r\n                    width: this.maxWidth\r\n                });\r\n            }\r\n            if (this.maxHeight) {\r\n                fo.attr({\r\n                    height: this.maxHeight\r\n                });\r\n            }\r\n            // Create line element\r\n            //let lineElement: HTMLElement = this.getHTMLLineElement(getTextFormatter().format(this.html, output));\r\n            var lineElement = this.getHTMLLineElement(text);\r\n            fo.node.appendChild(lineElement);\r\n            // Temporarily set to inline-block so we can measure real width and height\r\n            lineElement.style.display = \"inline-block\";\r\n            var clientWidth = lineElement.clientWidth;\r\n            var clientHeight = lineElement.clientHeight;\r\n            lineElement.style.display = \"block\";\r\n            this._bbox = {\r\n                x: 0,\r\n                y: 0,\r\n                width: clientWidth,\r\n                height: clientHeight\r\n            };\r\n            // Set exact dimensions of foreignObject so it is sized exactly as\r\n            // the content within\r\n            fo.attr({\r\n                width: clientWidth,\r\n                height: clientHeight\r\n            });\r\n            // Check if maybe we need to hide the whole label if it doesn't fit\r\n            this.maybeHideOversized();\r\n            // Set measurements and update bbox\r\n            this._measuredWidth = $math.max(this.bbox.width, this.pixelWidth - this.pixelPaddingLeft - this.pixelPaddingRight);\r\n            this._measuredHeight = $math.max(this.bbox.height, this.pixelHeight - this.pixelPaddingTop - this.pixelPaddingBottom);\r\n            this.bbox.width = this._measuredWidth;\r\n            this.bbox.height = this._measuredHeight;\r\n            // Don't let labels bleed out of the alotted area\r\n            if (this.truncate) {\r\n                lineElement.style.overflow = \"hidden\";\r\n            }\r\n            if ((clientWidth > maxWidth) || (clientHeight > maxHeight)) {\r\n                this.isOversized = true;\r\n            }\r\n        }\r\n        // Set applicable styles\r\n        this.setStyles();\r\n        this.updateCenter();\r\n        this.updateBackground();\r\n        if (display == \"none\") {\r\n            this.group.attr({ display: \"none\" });\r\n        }\r\n        if (this.pathElement) {\r\n            this.paper.appendDef(this.pathElement);\r\n        }\r\n    };\r\n    /**\r\n     * Hides element if it does not fit into available space\r\n     */\r\n    Label.prototype.maybeHideOversized = function () {\r\n        if (this.hideOversized) {\r\n            if ((this.availableWidth < this.bbox.width) || (this.availableHeight < this.bbox.height)) {\r\n                this.element.attr({ display: \"none\" });\r\n                this.isOversized = true;\r\n            }\r\n            else {\r\n                this.element.removeAttr(\"display\");\r\n                this.isOversized = false;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Aligns the lines horizontally ant vertically, based on properties.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Label.prototype.alignSVGText = function () {\r\n        // Get Group\r\n        var group = this.element;\r\n        var children = group.node.children || group.node.childNodes;\r\n        // Is there anything to align?\r\n        if (!children || (children && children.length == 0)) {\r\n            return;\r\n        }\r\n        var width = this._measuredWidth;\r\n        var height = this._measuredHeight;\r\n        // TODO maybe these aren't needed ?\r\n        $utils.used(this.pixelPaddingLeft);\r\n        $utils.used(this.pixelPaddingRight);\r\n        $utils.used(this.pixelPaddingTop);\r\n        $utils.used(this.pixelPaddingBottom);\r\n        // Process each line\r\n        //$iter.each(group.children.backwards().iterator(), (element) => {\r\n        for (var i = children.length - 1; i >= 0; i--) {\r\n            // Align horizontally\r\n            // Since we are using `text-anchor` for horizontal alignment, all we need\r\n            // to do here is move the `x` position\r\n            var node = children[i];\r\n            node.setAttribute(\"text-anchor\", this.textAlign);\r\n            if (this.textPathElement) {\r\n                node.removeAttribute(\"x\");\r\n                node.removeAttribute(\"y\");\r\n            }\r\n            else {\r\n                switch (this.textAlign) {\r\n                    case \"middle\":\r\n                        node.setAttribute(\"x\", (width / 2).toString() + \"px\");\r\n                        break;\r\n                    case \"end\":\r\n                        if (this.rtl) {\r\n                        }\r\n                        else {\r\n                            node.setAttribute(\"x\", width.toString());\r\n                        }\r\n                        break;\r\n                    default:\r\n                        if (this.rtl) {\r\n                            node.setAttribute(\"x\", width.toString());\r\n                        }\r\n                        else {\r\n                            node.removeAttribute(\"text-anchor\");\r\n                        }\r\n                        break;\r\n                }\r\n                var y = $type.toNumber(node.getAttribute(\"y\"));\r\n                switch (this.textValign) {\r\n                    case \"middle\":\r\n                        node.setAttribute(\"y\", (y + (height - this.bbox.height) / 2).toString());\r\n                        break;\r\n                    case \"bottom\":\r\n                        node.setAttribute(\"y\", (y + height - this.bbox.height).toString());\r\n                        break;\r\n                    default:\r\n                        node.setAttribute(\"y\", y.toString());\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Produces an SVG line element with formatted text.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text    Text to wrap into line\r\n     * @param y       Current line vertical position\r\n     * @return A DOM element\r\n     * @todo Implement HTML support\r\n     */\r\n    Label.prototype.getSVGLineElement = function (text, y) {\r\n        // Create a <text> node and set text\r\n        var element = this.paper.addGroup(\"text\");\r\n        element.textContent = text;\r\n        // Set parameters\r\n        element.attr({\r\n            \"x\": \"0\"\r\n            //\"alignment-baseline\": \"hanging\",\r\n            //\"baseline-shift\": \"-20%\",\r\n            //\"text-anchor\": \"center\"\r\n        });\r\n        // Set `y` position\r\n        if ($type.hasValue(y)) {\r\n            element.attr({\r\n                \"y\": y.toString()\r\n            });\r\n        }\r\n        // Don't let labels blled out of the alotted area\r\n        if (this.truncate || this.wrap) {\r\n            element.attr({ \"overflow\": \"hidden\" });\r\n        }\r\n        // Add RTL?\r\n        if (this.rtl) {\r\n            element.attr({\r\n                \"direction\": \"rtl\",\r\n            });\r\n        }\r\n        return element;\r\n    };\r\n    /**\r\n     * Resets cached BBox.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Label.prototype.resetBBox = function () {\r\n        this._bbox = { x: 0, y: 0, width: 0, height: 0 };\r\n    };\r\n    /**\r\n     * Creates and returns an HTML line element (`<div>`).\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Text to add\r\n     * @return `<div>` element reference\r\n     */\r\n    Label.prototype.getHTMLLineElement = function (text) {\r\n        // Create the <div> element\r\n        var div = document.createElement(\"div\");\r\n        div.innerHTML = text;\r\n        // Set text alignment\r\n        switch (this.textAlign) {\r\n            case \"middle\":\r\n                div.style.textAlign = \"center\";\r\n                break;\r\n            case \"end\":\r\n                div.style.textAlign = \"right\";\r\n                break;\r\n        }\r\n        // Disable or enable wrapping\r\n        if (this.wrap) {\r\n            div.style.wordWrap = \"break-word\";\r\n        }\r\n        else {\r\n            div.style.whiteSpace = \"nowrap\";\r\n        }\r\n        // Don't let labels bleed out of the alotted area\r\n        // Moved to `draw()` because setting \"hidden\" kills all measuring\r\n        /*if (this.truncate) {\r\n            div.style.overflow = \"hidden\";\r\n        }*/\r\n        // Set RTL-related styles\r\n        if (this.rtl) {\r\n            div.style.direction = \"rtl\";\r\n            //div.style.unicodeBidi = \"bidi-override\";\r\n        }\r\n        // Translate some of the SVG styles into CSS\r\n        if ($type.hasValue(this.fill)) {\r\n            div.style.color = this.fill.toString();\r\n        }\r\n        return div;\r\n    };\r\n    /**\r\n     * Applies specific styles to text to make it not selectable, unless it is\r\n     * explicitly set as `selectable`.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Set styles via AMElement\r\n     */\r\n    Label.prototype.setStyles = function () {\r\n        var group = this.element;\r\n        if (!this.selectable || this.draggable || this.resizable || this.swipeable) {\r\n            group.addStyle({\r\n                \"webkitUserSelect\": \"none\",\r\n                \"msUserSelect\": \"none\"\r\n            });\r\n        }\r\n        else if (this.selectable) {\r\n            group.removeStyle(\"webkitUserSelect\");\r\n            group.removeStyle(\"msUserSelect\");\r\n        }\r\n    };\r\n    /**\r\n     * Hides unused lines\r\n     */\r\n    Label.prototype.hideUnused = function (index) {\r\n        this.initLineCache();\r\n        var lines = this.getCache(\"lineInfo\");\r\n        if (lines.length >= index) {\r\n            for (var i = index; i < lines.length; i++) {\r\n                var line = lines[i];\r\n                if (line && line.element) {\r\n                    line.element.attr({ \"display\": \"none\" });\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(Label.prototype, \"text\", {\r\n        /**\r\n         * @return SVG text\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"text\");\r\n        },\r\n        /**\r\n         * An SVG text.\r\n         *\r\n         * Please note that setting `html` will override this setting if browser\r\n         * supports `foreignObject` in SGV, such as most modern browsers excluding\r\n         * IEs.\r\n         *\r\n         * @param value  SVG Text\r\n         */\r\n        set: function (value) {\r\n            //this.setPropertyValue(\"html\", undefined);\r\n            this.setPropertyValue(\"text\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Label.prototype, \"path\", {\r\n        /**\r\n         * @return Path\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"path\");\r\n        },\r\n        /**\r\n         * An SVG path string to position text along. If set, the text will follow\r\n         * the curvature of the path.\r\n         *\r\n         * Location along the path can be set using `locationOnPath`.\r\n         *\r\n         * IMPORTANT: Only SVG text can be put on path. If you are using HTML text\r\n         * this setting will be ignored.\r\n         *\r\n         * @since 4.1.2\r\n         * @param  value  Path\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"path\", value, true)) {\r\n                if (this.pathElement) {\r\n                    this.pathElement.dispose();\r\n                }\r\n                if (this.textPathElement) {\r\n                    this.textPathElement.dispose();\r\n                }\r\n                this.pathElement = this.paper.add(\"path\");\r\n                this.pathElement.attr({ \"d\": value });\r\n                this.pathElement.attr({ \"id\": \"text-path-\" + this.uid });\r\n                this._disposers.push(this.pathElement);\r\n                this.textPathElement = this.paper.addGroup(\"textPath\");\r\n                this.textPathElement.attrNS($dom.XLINK, \"xlink:href\", \"#text-path-\" + this.uid);\r\n                // TODO remove after https://bugzilla.mozilla.org/show_bug.cgi?id=455986 is fixed\r\n                this.textPathElement.attr({ \"path\": value });\r\n                this._disposers.push(this.textPathElement);\r\n                this.hardInvalidate();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Label.prototype, \"locationOnPath\", {\r\n        /**\r\n         * @return Relatvie location on path\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"locationOnPath\");\r\n        },\r\n        /**\r\n         * Relative label location on `path`. Value range is from 0 (beginning)\r\n         * to 1 (end).\r\n         *\r\n         * Works only if you set `path` setting to an SVG path.\r\n         *\r\n         * @since 4.1.2\r\n         * @default 0\r\n         * @param  value  Relatvie location on path\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"locationOnPath\", value);\r\n            if (this.textPathElement) {\r\n                this.textPathElement.attr({ \"startOffset\": (value * 100) + \"%\" });\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Label.prototype, \"baseLineRatio\", {\r\n        /**\r\n         * @return Base line ratio\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"baseLineRatio\");\r\n        },\r\n        /**\r\n         * A ratio to calculate text baseline. Ralative distance from the bottom of\r\n         * the label.\r\n         *\r\n         * @since 4.4.2\r\n         * @default -0.27\r\n         * @param  value  Base line ratio\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"baseLineRatio\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Label.prototype, \"wrap\", {\r\n        /**\r\n         * @return Auto-wrap enabled or not\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"wrap\");\r\n        },\r\n        /**\r\n         * Enables or disables autowrapping of text.\r\n         *\r\n         * @param value  Auto-wrapping enabled\r\n         */\r\n        set: function (value) {\r\n            this.resetBBox();\r\n            this.setPropertyValue(\"wrap\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Label.prototype, \"truncate\", {\r\n        /**\r\n         * @return Truncate text?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"truncate\");\r\n        },\r\n        /**\r\n         * Indicates if text lines need to be truncated if they do not fit, using\r\n         * configurable `ellipsis` string.\r\n         *\r\n         * `truncate` overrides `wrap` if both are set to `true`.\r\n         *\r\n         * NOTE: For HTML text, this setting **won't** trigger a parser and actual\r\n         * line truncation with ellipsis. It will just hide everything that goes\r\n         * outside the label.\r\n         *\r\n         * @param value  trincate text?\r\n         */\r\n        set: function (value) {\r\n            this.resetBBox();\r\n            this.setPropertyValue(\"truncate\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Label.prototype, \"fullWords\", {\r\n        /**\r\n         * @return Truncate on full words?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"fullWords\");\r\n        },\r\n        /**\r\n         * If `truncate` is enabled, should Label try to break only on full words\r\n         * (`true`), or whenever needed, including middle of the word. (`false`)\r\n         *\r\n         * @default true\r\n         * @param value  Truncate on full words?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"fullWords\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Label.prototype, \"ellipsis\", {\r\n        /**\r\n         * @return Ellipsis string\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"ellipsis\");\r\n        },\r\n        /**\r\n         * Ellipsis character to use if `truncate` is enabled.\r\n         *\r\n         * @param value Ellipsis string\r\n         * @default \"...\"\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"ellipsis\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Label.prototype, \"selectable\", {\r\n        /**\r\n         * @return Text selectable?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"selectable\");\r\n        },\r\n        /**\r\n         * Forces the text to be selectable. This setting will be ignored if the\r\n         * object has some kind of interaction attached to it, such as it is\r\n         * `draggable`, `swipeable`, `resizable`.\r\n         *\r\n         * @param value  Text selectable?\r\n         * @default false\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"selectable\", value, true);\r\n            this.setStyles();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Label.prototype, \"textAlign\", {\r\n        /**\r\n         * @return Alignment\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"textAlign\");\r\n        },\r\n        /**\r\n         * Horizontal text alignment.\r\n         *\r\n         * Available choices:\r\n         * * \"start\"\r\n         * * \"middle\"\r\n         * * \"end\"\r\n         *\r\n         * @param value  Alignment\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"textAlign\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Label.prototype, \"textValign\", {\r\n        /**\r\n         * @ignore Exclude from docs (not used)\r\n         * @return Alignment\r\n         * @deprecated\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"textValign\");\r\n        },\r\n        /**\r\n         * Vertical text alignment.\r\n         *\r\n         * @ignore Exclude from docs (not used)\r\n         * @param value  Alignment\r\n         * @deprecated\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"textValign\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Label.prototype, \"html\", {\r\n        /**\r\n         * @return HTML content\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"html\");\r\n        },\r\n        /**\r\n         * Raw HTML to be used as text.\r\n         *\r\n         * NOTE: HTML text is subject to browser support. It relies on browsers\r\n         * supporting SVG `foreignObject` nodes. Some browsers (read IEs) do not\r\n         * support it. On those browsers, the text will fall back to basic SVG text,\r\n         * striping out all HTML markup and styling that goes with it.\r\n         *\r\n         * For more information about `foreignObject` and its browser compatibility\r\n         * refer to [this page](https://developer.mozilla.org/en/docs/Web/SVG/Element/foreignObject#Browser_compatibility).\r\n         *\r\n         * @param value HTML text\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"html\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Label.prototype, \"hideOversized\", {\r\n        /**\r\n         * @return Hide if text does not fit?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"hideOversized\");\r\n        },\r\n        /**\r\n         * Indicates whether the whole text should be hidden if it does not fit into\r\n         * its allotted space.\r\n         *\r\n         * @param value  Hide if text does not fit?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"hideOversized\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Label.prototype, \"ignoreFormatting\", {\r\n        /**\r\n         * @return Ignore formatting?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"ignoreFormatting\");\r\n        },\r\n        /**\r\n         * If set to `true` square-bracket formatting blocks will be treated as\r\n         * regular text.\r\n         *\r\n         * @default false\r\n         * @param value  Ignore formatting?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"ignoreFormatting\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Override `mesaureElement` so it does not get measure again, because\r\n     * internal `_bbox` is being updated by measuring routines in Text itself.\r\n     */\r\n    Label.prototype.measureElement = function () { };\r\n    /**\r\n     * Returns information about a line element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param index  Line index\r\n     * @return Line info object\r\n     */\r\n    Label.prototype.getLineInfo = function (index) {\r\n        this.initLineCache();\r\n        var lines = this.getCache(\"lineInfo\");\r\n        return lines.length > index ? lines[index] : undefined;\r\n    };\r\n    /**\r\n     * Adds a line to line info cache.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param line     Line info object\r\n     * @param index    Insert at specified index\r\n     */\r\n    Label.prototype.addLineInfo = function (line, index) {\r\n        this.initLineCache();\r\n        this.getCache(\"lineInfo\")[index] = line;\r\n    };\r\n    /**\r\n     * Checks if line cache is initialized and initializes it.\r\n     */\r\n    Label.prototype.initLineCache = function () {\r\n        if (!$type.hasValue(this.getCache(\"lineInfo\"))) {\r\n            this.setCache(\"lineInfo\", [], 0);\r\n        }\r\n    };\r\n    /**\r\n     * Sets a [[DataItem]] to use for populating dynamic sections of the text.\r\n     *\r\n     * Check the description for [[Text]] class, for data binding.\r\n     *\r\n     * @param dataItem Data item\r\n     */\r\n    Label.prototype.setDataItem = function (dataItem) {\r\n        if (this._sourceDataItemEvents) {\r\n            this._sourceDataItemEvents.dispose();\r\n        }\r\n        if (dataItem) {\r\n            this._sourceDataItemEvents = new MultiDisposer([\r\n                dataItem.events.on(\"valuechanged\", this.invalidate, this, false),\r\n                dataItem.events.on(\"workingvaluechanged\", this.invalidate, this, false),\r\n                dataItem.events.on(\"calculatedvaluechanged\", this.invalidate, this, false),\r\n                dataItem.events.on(\"propertychanged\", this.invalidate, this, false)\r\n            ]);\r\n        }\r\n        _super.prototype.setDataItem.call(this, dataItem);\r\n    };\r\n    Object.defineProperty(Label.prototype, \"availableWidth\", {\r\n        /**\r\n         * Returns available horizontal space.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return Available width (px)\r\n         */\r\n        get: function () {\r\n            return $type.hasValue(this.maxWidth) ? this.maxWidth : this.pixelWidth;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Label.prototype, \"availableHeight\", {\r\n        /**\r\n         * Returns available vertical space.\r\n         *\r\n         * @return Available height (px)\r\n         */\r\n        get: function () {\r\n            return $type.hasValue(this.maxHeight) ? this.maxHeight : this.pixelHeight;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    // temp, replacing textFormatter method\r\n    Label.prototype.getSvgElement = function (text, style) {\r\n        var element = this.paper.add(\"tspan\");\r\n        element.textContent = text;\r\n        if (style) {\r\n            element.node.setAttribute(\"style\", style);\r\n        }\r\n        return element;\r\n    };\r\n    /**\r\n     * Invalidates the whole element, including layout AND all its child\r\n     * elements.\r\n     */\r\n    Label.prototype.deepInvalidate = function () {\r\n        _super.prototype.deepInvalidate.call(this);\r\n        this.hardInvalidate();\r\n    };\r\n    Object.defineProperty(Label.prototype, \"readerTitle\", {\r\n        /**\r\n         * @return Title\r\n         */\r\n        get: function () {\r\n            var title = this.getPropertyValue(\"readerTitle\");\r\n            if (!title) {\r\n                title = this.populateString($utils.plainText($utils.isNotEmpty(this.html)\r\n                    ? this.html\r\n                    : this.text));\r\n            }\r\n            return title;\r\n        },\r\n        /**\r\n         * Screen reader title of the element.\r\n         *\r\n         * @param value Title\r\n         */\r\n        set: function (value) {\r\n            value = $type.toText(value);\r\n            if (this.setPropertyValue(\"readerTitle\", value)) {\r\n                this.applyAccessibility();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Label;\r\n}(Container));\r\nexport { Label };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Label\"] = Label;\r\n/**\r\n * Add default responsive rules\r\n */\r\n/**\r\n * Hide labels added directly to chart, like titles if chart is short.\r\n */\r\ndefaultRules.push({\r\n    relevant: ResponsiveBreakpoints.heightXS,\r\n    state: function (target, stateId) {\r\n        if (target instanceof Label && target.parent && target.parent.isBaseSprite) {\r\n            var state = target.states.create(stateId);\r\n            state.properties.disabled = true;\r\n            return state;\r\n        }\r\n        return null;\r\n    }\r\n});\r\n//# sourceMappingURL=Label.js.map","/**\r\n * Handles formatting of pseudo-markup in text.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObject } from \"../Base\";\r\nimport { AMElement } from \"../rendering/AMElement\";\r\nimport { Adapter } from \"../utils/Adapter\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $strings from \"../utils/Strings\";\r\nimport * as $type from \"../utils/Type\";\r\n/**\r\n * Handles formatting of pseudo-markdown in text.\r\n *\r\n * @todo Encode < > in output\r\n * @todo Add more adapters\r\n * @important\r\n */\r\nvar TextFormatter = /** @class */ (function (_super) {\r\n    __extends(TextFormatter, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function TextFormatter() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * Adapter.\r\n         */\r\n        _this.adapter = new Adapter(_this);\r\n        _this.className = \"TextFormatter\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    TextFormatter.prototype.debug = function () { };\r\n    /**\r\n     * Formats the text according to specifications passed in.\r\n     *\r\n     * @param text    Text to format\r\n     * @param output  Output format (svg, html)\r\n     * @return Formatted text\r\n     */\r\n    TextFormatter.prototype.format = function (text, output) {\r\n        // Apply default\r\n        if (!$type.hasValue(output)) {\r\n            output = \"svg\";\r\n        }\r\n        // Init return value\r\n        var formatted = \"\";\r\n        // Replace double (escaped) square spaces with remporary codes\r\n        text = this.escape(text);\r\n        // Divvy up the string by style tags\r\n        var styles = text.match(/\\[([^\\]]*?)\\]/gm);\r\n        if (!styles) {\r\n            // Nothing to do here - no formatting elements\r\n            return this.wrap(text, \"\", output);\r\n        }\r\n        // Get pure text - no style tags\r\n        var texts = text.split(/\\[[^\\[\\]]*\\]/);\r\n        // Go through each of the texts and wrap it in style tags\r\n        for (var i = 0, len = texts.length; i < len; i++) {\r\n            // Get text bit\r\n            var t = texts[i];\r\n            // Check if string is empty\r\n            if (t === \"\") {\r\n                continue;\r\n            }\r\n            // Run through an adapter\r\n            t = this.adapter.apply(\"chunk\", t);\r\n            // Get related style\r\n            var s = \"\";\r\n            if (i > 0) {\r\n                s = styles[i - 1].replace('[', '').replace(']', '');\r\n            }\r\n            // Wrap text in tag\r\n            formatted += this.wrap(t, s, output);\r\n        }\r\n        // Replace placeholders back\r\n        formatted = this.unescape(formatted);\r\n        // Return result\r\n        return this.cleanUp(formatted);\r\n    };\r\n    /**\r\n     * Replaces brackets with temporary placeholders.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Input text\r\n     * @return Escaped text\r\n     */\r\n    TextFormatter.prototype.escape = function (text) {\r\n        return text.\r\n            replace(/\\[\\[/g, registry.getPlaceholder(\"1\")).\r\n            replace(/([^\\/]{1})\\]\\]/g, \"$1\" + registry.getPlaceholder(\"2\")).\r\n            replace(/\\]\\]/g, registry.getPlaceholder(\"2\")).\r\n            replace(/\\{\\{/g, registry.getPlaceholder(\"3\")).\r\n            replace(/\\}\\}/g, registry.getPlaceholder(\"4\")).\r\n            replace(/\\'\\'/g, registry.getPlaceholder(\"5\"));\r\n    };\r\n    /**\r\n     * Replaces placeholders back to brackets.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Escaped text\r\n     * @return Unescaped text\r\n     */\r\n    TextFormatter.prototype.unescape = function (text) {\r\n        return text.\r\n            replace(new RegExp(registry.getPlaceholder(\"1\"), \"g\"), \"[[\").\r\n            replace(new RegExp(registry.getPlaceholder(\"2\"), \"g\"), \"]]\").\r\n            replace(new RegExp(registry.getPlaceholder(\"3\"), \"g\"), \"{{\").\r\n            replace(new RegExp(registry.getPlaceholder(\"4\"), \"g\"), \"}}\").\r\n            replace(new RegExp(registry.getPlaceholder(\"5\"), \"g\"), \"'\");\r\n    };\r\n    /**\r\n     * Cleans up the text text for leftover double square brackets.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Input text\r\n     * @return Cleaned up text\r\n     */\r\n    TextFormatter.prototype.cleanUp = function (text) {\r\n        return text.\r\n            replace(/\\[\\[/g, \"[\").\r\n            replace(/\\]\\]/g, \"]\").\r\n            replace(/\\{\\{/g, \"{\").\r\n            replace(/\\}\\}/g, \"}\").\r\n            replace(/\\'\\'/g, \"'\");\r\n    };\r\n    /**\r\n     * Wraps text into corresponding tags.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text   Text to wrap\r\n     * @param style  Styles\r\n     * @param output  Format to output in (svg, html)\r\n     * @return Formatted string\r\n     */\r\n    TextFormatter.prototype.wrap = function (text, style, output) {\r\n        if (style === \"\" || style === \"/\") {\r\n            //return text;\r\n            style = \"\";\r\n        }\r\n        switch (output) {\r\n            case \"html\":\r\n                return this.wrapHtml(text, this.translateStyleShortcuts(style));\r\n            default:\r\n                return this.wrapSvg(text, this.translateStyleShortcuts(style));\r\n        }\r\n    };\r\n    /**\r\n     * Wraps text in styled SVG tag.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text   Text to wrap\r\n     * @param style  Style property\r\n     * @return Formatted tag\r\n     */\r\n    TextFormatter.prototype.wrapSvg = function (text, style) {\r\n        if (style === \"\") {\r\n            return \"<tspan>\" + text + \"</tspan>\";\r\n        }\r\n        else {\r\n            return \"<tspan style='\" + style + \"'>\" + text + \"</tspan>\";\r\n        }\r\n    };\r\n    /**\r\n     * Returns an SVG `<tspan>` element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text   Text\r\n     * @param style  Style\r\n     * @return Element\r\n     */\r\n    TextFormatter.prototype.getSvgElement = function (text, style) {\r\n        var element = new AMElement(\"tspan\");\r\n        element.textContent = text;\r\n        if (style) {\r\n            element.node.setAttribute(\"style\", style);\r\n        }\r\n        return element;\r\n    };\r\n    /**\r\n     * Wraps text in HTML <span> tag.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text   Text to wrap\r\n     * @param style  Style property\r\n     * @return Formatted tag\r\n     * @todo Translate SVG styles into HTML ones\r\n     */\r\n    TextFormatter.prototype.wrapHtml = function (text, style) {\r\n        if (style === \"\") {\r\n            return \"<span>\" + text + \"</span>\";\r\n        }\r\n        else {\r\n            return \"<span style='\" + this.styleSvgToHtml(style) + \"'>\" + text + \"</span>\";\r\n        }\r\n    };\r\n    /**\r\n     * Returns an HTML `<span>` element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text   Text/HTML\r\n     * @param style  Style definition\r\n     * @return HTML element\r\n     */\r\n    TextFormatter.prototype.getHtmlElement = function (text, style) {\r\n        var element = document.createElement(\"span\");\r\n        element.innerHTML = text;\r\n        if (style) {\r\n            element.setAttribute(\"style\", style);\r\n        }\r\n        return element;\r\n    };\r\n    /**\r\n     * Trabslates SVG CSS into HTML CSS.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param style  SVG CSS\r\n     * @return HTML CSS\r\n     * @todo Implement actual translation\r\n     */\r\n    TextFormatter.prototype.styleSvgToHtml = function (style) {\r\n        style = style.replace(/fill:/, \"color:\");\r\n        return style;\r\n    };\r\n    /**\r\n     * Translates style shortcuts into full styles, i.e.:\r\n     * \"bold\" => \"font-weight: bold\"\r\n     * \"#f00\" => \"fill: #f00\"\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param style  Untranslated style\r\n     * @return Translated style\r\n     * @todo Implement actual translation\r\n     */\r\n    TextFormatter.prototype.translateStyleShortcuts = function (style) {\r\n        if (style == \"\" || style == \"[ ]\") {\r\n            return \"\";\r\n        }\r\n        var cached = registry.getCache(\"translateStyleShortcuts_\" + style);\r\n        if (cached) {\r\n            return cached;\r\n        }\r\n        // Get style parts\r\n        var b = style.match(/([\\w\\-]*:[\\s]?[^;\\s\\]]*)|(\\#[\\w]{1,6})|([\\w]+)|(\\/)/gi);\r\n        // Empty?\r\n        if (!b) {\r\n            return style;\r\n        }\r\n        // Check each part\r\n        for (var i = 0; i < b.length; i++) {\r\n            if (b[i].match(/^bold$/i)) {\r\n                // Bold\r\n                b[i] = \"font-weight:\" + b[i];\r\n            }\r\n            else if (b[i] == \"/\") {\r\n                // Just closing tag\r\n                // Do nothing\r\n                b[i] = \"\";\r\n            }\r\n            else if (!b[i].match(/:/)) {\r\n                // Color\r\n                b[i] = \"fill:\" + b[i];\r\n            }\r\n        }\r\n        var res = b.join(';');\r\n        registry.setCache(\"translateStyleShortcuts_\" + style, res);\r\n        return res;\r\n    };\r\n    /**\r\n     * Splits string into chunks. (style blocks, quoted blocks, regular blocks)\r\n     *\r\n     * If the second parameter `quotedBlocks` is set to `true` this method will\r\n     * also single out text blocks enclosed within single quotes that no\r\n     * formatting should be applied to, and they should be displayed as is.\r\n     *\r\n     * Default for the above is `false`, so that you can use single quote in text\r\n     * without escaping it.\r\n     *\r\n     * If enabled, single quotes can be escaped by doubling it - adding two\r\n     * single quotes, which will be replaced by a one single quote in the final\r\n     * output.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text          Text to chunk\r\n     * @param quotedBlocks  Use quoted blocks\r\n     * @param noFormatting  Formatting blocks will be treated as regular text\r\n     * @return Array of string chunks\r\n     */\r\n    TextFormatter.prototype.chunk = function (text, quotedBlocks, noFormatting) {\r\n        if (quotedBlocks === void 0) { quotedBlocks = false; }\r\n        if (noFormatting === void 0) { noFormatting = false; }\r\n        // Init result\r\n        var res = [];\r\n        // Replace double (escaped) square spaces and quotes with temporary codes\r\n        text = this.escape(text);\r\n        // Deal with style blocks\r\n        var chunks = quotedBlocks ? text.split(\"'\") : [text];\r\n        for (var i = 0; i < chunks.length; i++) {\r\n            var chunk = chunks[i];\r\n            // Empty?\r\n            if (chunk === \"\") {\r\n                continue;\r\n            }\r\n            if ((i % 2) === 0) {\r\n                // Text outside quotes\r\n                // Parse for style blocks which are \"text\" chunks, the rest chunks are\r\n                // \"value\"\r\n                chunk = chunk.replace(/\\]\\[/g, \"]\" + $strings.PLACEHOLDER + \"[\");\r\n                chunk = chunk.replace(/\\[\\]/g, \"[ ]\");\r\n                var chunks2 = chunk.split(/[\\[\\]]+/);\r\n                for (var i2 = 0; i2 < chunks2.length; i2++) {\r\n                    var chunk2 = this.cleanUp(this.unescape(chunks2[i2]));\r\n                    // Placeholder?\r\n                    if (chunk2 === $strings.PLACEHOLDER) {\r\n                        continue;\r\n                    }\r\n                    // Empty?\r\n                    if (chunk2 === \"\") {\r\n                        continue;\r\n                    }\r\n                    // Block or value\r\n                    if ((i2 % 2) === 0) {\r\n                        res.push({\r\n                            \"type\": \"value\",\r\n                            \"text\": this.adapter.apply(\"chunk\", chunk2)\r\n                        });\r\n                    }\r\n                    else {\r\n                        res.push({\r\n                            \"type\": noFormatting ? \"value\" : \"format\",\r\n                            \"text\": \"[\" + chunk2 + \"]\"\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // A text within doublequotes\r\n                // All chunks are \"text\"\r\n                var chunks2 = chunk.split(/[\\[\\]]+/);\r\n                for (var i2 = 0; i2 < chunks2.length; i2++) {\r\n                    var chunk2 = this.cleanUp(this.unescape(chunks2[i2]));\r\n                    // Empty?\r\n                    if (chunk2 === \"\") {\r\n                        continue;\r\n                    }\r\n                    // Block or text\r\n                    if ((i2 % 2) === 0) {\r\n                        res.push({\r\n                            \"type\": \"text\",\r\n                            \"text\": chunk2\r\n                        });\r\n                    }\r\n                    else if (this.isImage(chunk2)) {\r\n                        res.push({\r\n                            \"type\": \"image\",\r\n                            \"text\": \"[\" + chunk2 + \"]\"\r\n                        });\r\n                    }\r\n                    else {\r\n                        res.push({\r\n                            \"type\": \"format\",\r\n                            \"text\": \"[\" + chunk2 + \"]\"\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    };\r\n    /**\r\n     * Checks if supplied format contains image information and should be\r\n     * formatted as such.\r\n     * I.e.: `[img: myImage.png]`\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Format\r\n     * @return `true` if it is an image\r\n     */\r\n    TextFormatter.prototype.isImage = function (text) {\r\n        return text.match(/img[ ]?:/) ? true : false;\r\n    };\r\n    return TextFormatter;\r\n}(BaseObject));\r\nexport { TextFormatter };\r\nvar formatter;\r\n/**\r\n * Returns the global instance of [[TextFormatter]].\r\n *\r\n * All classes and instances should reuse this universal text formatter,\r\n * rather than create their own instance of it.\r\n */\r\nexport function getTextFormatter() {\r\n    if (formatter == null) {\r\n        formatter = new TextFormatter();\r\n    }\r\n    return formatter;\r\n}\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"TextFormatter\"] = TextFormatter;\r\n//# sourceMappingURL=TextFormatter.js.map","/**\r\n * A collection of keyboard-related utilities accessible via `keyboard`\r\n * instance.\r\n */\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport * as $type from \"./Type\";\r\n/**\r\n * A class that represents collection of keyboard-related utilities.\r\n *\r\n * Do not instantiate this class directly, but rather use `keyboard` variable.\r\n */\r\nvar Keyboard = /** @class */ (function () {\r\n    function Keyboard() {\r\n    }\r\n    /**\r\n     * Returns a named key based on information contained in the event or\r\n     * \"other\".\r\n     *\r\n     * @param ev  A keyboard event\r\n     * @return Keyboard named key\r\n     */\r\n    Keyboard.prototype.getEventKey = function (ev) {\r\n        // Get the key code\r\n        var code = ev.keyCode || ev.which, key;\r\n        // Map to internal key\r\n        switch (code) {\r\n            case 38:\r\n                key = \"up\";\r\n                break;\r\n            case 40:\r\n                key = \"down\";\r\n                break;\r\n            case 37:\r\n                key = \"left\";\r\n                break;\r\n            case 39:\r\n                key = \"right\";\r\n                break;\r\n            case 13:\r\n                key = \"enter\";\r\n                break;\r\n            case 27:\r\n                key = \"esc\";\r\n                break;\r\n            case 36:\r\n                key = \"home\";\r\n                break;\r\n            case 35:\r\n                key = \"end\";\r\n                break;\r\n            case 9:\r\n                key = \"tab\";\r\n                break;\r\n            case 17:\r\n                key = \"ctrl\";\r\n                break;\r\n            case 18:\r\n                key = \"alt\";\r\n                break;\r\n            case 16:\r\n                key = \"shift\";\r\n                break;\r\n            case 32:\r\n                key = \"space\";\r\n                break;\r\n            case 36:\r\n                key = \"home\";\r\n                break;\r\n            case 35:\r\n                key = \"end\";\r\n                break;\r\n            case 33:\r\n                key = \"pgup\";\r\n                break;\r\n            case 34:\r\n                key = \"pgdn\";\r\n                break;\r\n            case 45:\r\n                key = \"ins\";\r\n                break;\r\n            case 46:\r\n                key = \"del\";\r\n                break;\r\n            case 107:\r\n                key = \"plus\";\r\n                break;\r\n            case 109:\r\n                key = \"minus\";\r\n                break;\r\n            default:\r\n                key = \"other\";\r\n                break;\r\n        }\r\n        return key;\r\n    };\r\n    /**\r\n     * Checks if event key is one or more of the selected named keys.\r\n     *\r\n     * @param ev   Keyboard event\r\n     * @param key  Named key or array of keys\r\n     * @return Is event key one of the list?\r\n     */\r\n    Keyboard.prototype.isKey = function (ev, key) {\r\n        var eventKey = this.getEventKey(ev);\r\n        if ($type.isString(key)) {\r\n            key = [key];\r\n        }\r\n        return key.indexOf(eventKey) !== -1;\r\n    };\r\n    /**\r\n     * Returns `true` if shift key was presset at the moment of the event.\r\n     *\r\n     * @param ev  Event object\r\n     * @return Was shift pressed?\r\n     */\r\n    Keyboard.prototype.shiftKey = function (ev) {\r\n        return ev.shiftKey;\r\n    };\r\n    /**\r\n     * Returns `true` if ctrl key was presset at the moment of the event.\r\n     *\r\n     * @param ev  Event object\r\n     * @return Was ctrl pressed?\r\n     */\r\n    Keyboard.prototype.ctrlKey = function (ev) {\r\n        return ev.ctrlKey;\r\n    };\r\n    /**\r\n     * Returns `true` if alt key was presset at the moment of the event\r\n     * @param ev  Event object\r\n     * @return Was alt pressed?\r\n     */\r\n    Keyboard.prototype.altKey = function (ev) {\r\n        return ev.altKey;\r\n    };\r\n    /**\r\n     * Returns `true` if meta key was presset at the moment of the event\r\n     * @param ev  Event object\r\n     * @return Was meta pressed?\r\n     */\r\n    Keyboard.prototype.metaKey = function (ev) {\r\n        return ev.metaKey;\r\n    };\r\n    return Keyboard;\r\n}());\r\nexport { Keyboard };\r\n/**\r\n * A single [[Keyboard]] instance to be reused across all elements so that\r\n * they don't need to instantiate their own.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport var keyboard = new Keyboard();\r\n//# sourceMappingURL=Keyboard.js.map","/**\r\n * Rounded rectangle module.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite } from \"../Sprite\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $math from \"../utils/Math\";\r\nimport * as $type from \"../utils/Type\";\r\nimport * as $utils from \"../utils/Utils\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Draws a rectangle with rounded corners.\r\n *\r\n * @see {@link IRoundedRectangleEvents} for a list of available events\r\n * @see {@link IRoundedRectangleAdapters} for a list of available Adapters\r\n */\r\nvar RoundedRectangle = /** @class */ (function (_super) {\r\n    __extends(RoundedRectangle, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function RoundedRectangle() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"RoundedRectangle\";\r\n        _this.element = _this.paper.add(\"path\");\r\n        _this.cornerRadius(3, 3, 3, 3);\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Draws the element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    RoundedRectangle.prototype.draw = function () {\r\n        _super.prototype.draw.call(this);\r\n        var w = this.innerWidth;\r\n        var h = this.innerHeight;\r\n        if ($type.isNumber(w) && $type.isNumber(h)) {\r\n            var minSide = $math.min(w, h) / 2;\r\n            var cornerRadiusTopLeft = $utils.relativeToValue(this.cornerRadiusTopLeft, minSide);\r\n            var cornerRadiusTopRight = $utils.relativeToValue(this.cornerRadiusTopRight, minSide);\r\n            var cornerRadiusBottomRight = $utils.relativeToValue(this.cornerRadiusBottomRight, minSide);\r\n            var cornerRadiusBottomLeft = $utils.relativeToValue(this.cornerRadiusBottomLeft, minSide);\r\n            var maxcr = $math.min(Math.abs(w / 2), Math.abs(h / 2));\r\n            var crtl = $math.fitToRange(cornerRadiusTopLeft, 0, maxcr);\r\n            var crtr = $math.fitToRange(cornerRadiusTopRight, 0, maxcr);\r\n            var crbr = $math.fitToRange(cornerRadiusBottomRight, 0, maxcr);\r\n            var crbl = $math.fitToRange(cornerRadiusBottomLeft, 0, maxcr);\r\n            var lineT = \"M\" + crtl + \",0 L\" + (w - crtr) + \",0\";\r\n            var lineB = \" L\" + crbl + \",\" + h;\r\n            var lineL = \" L0,\" + crtl;\r\n            var lineR = \" L\" + w + \",\" + (h - crbr);\r\n            var arcTR = \" a\" + crtr + \",\" + crtr + \" 0 0 1 \" + crtr + \",\" + crtr;\r\n            var arcBR = \" a\" + crbr + \",\" + crbr + \" 0 0 1 -\" + crbr + \",\" + crbr;\r\n            var arcBL = \" a\" + crbl + \",\" + crbl + \" 0 0 1 -\" + crbl + \",-\" + crbl;\r\n            var arcTL = \" a\" + crtl + \",\" + crtl + \" 0 0 1 \" + crtl + \",-\" + crtl;\r\n            var path = lineT + arcTR + lineR + arcBR + lineB + arcBL + lineL + arcTL + \" Z\";\r\n            this.path = path;\r\n        }\r\n    };\r\n    /**\r\n     * Sets radius for all four corners at ones.\r\n     *\r\n     * All numbers are in pixels.\r\n     *\r\n     * @param tl  Top-left corner\r\n     * @param tr  Top-right corner\r\n     * @param bl  Bottom-left corner\r\n     * @param br  Bottom-right corner\r\n     */\r\n    RoundedRectangle.prototype.cornerRadius = function (tl, tr, bl, br) {\r\n        this.cornerRadiusTopLeft = tl;\r\n        this.cornerRadiusTopRight = tr;\r\n        this.cornerRadiusBottomLeft = bl;\r\n        this.cornerRadiusBottomRight = br;\r\n    };\r\n    Object.defineProperty(RoundedRectangle.prototype, \"cornerRadiusTopLeft\", {\r\n        /**\r\n         * @return Radius (px or Percent)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"cornerRadiusTopLeft\");\r\n        },\r\n        /**\r\n         * Radius of the top-left corner in pixels.\r\n         *\r\n         * @default 3\r\n         * @param value  Radius (px or Percent)\r\n         */\r\n        set: function (value) {\r\n            this.setPercentProperty(\"cornerRadiusTopLeft\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RoundedRectangle.prototype, \"cornerRadiusTopRight\", {\r\n        /**\r\n         * @return Radius (px or Percent)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"cornerRadiusTopRight\");\r\n        },\r\n        /**\r\n         * Radius of the top-right corner in pixels.\r\n         *\r\n         * @default 3\r\n         * @param value  Radius (px or Percent)\r\n         */\r\n        set: function (value) {\r\n            this.setPercentProperty(\"cornerRadiusTopRight\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RoundedRectangle.prototype, \"cornerRadiusBottomRight\", {\r\n        /**\r\n         * @return Radius (px or Percent)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"cornerRadiusBottomRight\");\r\n        },\r\n        /**\r\n         * Radius of the bottom-right corner in pixels.\r\n         *\r\n         * @default 3\r\n         * @param value  Radius (px or Percent)\r\n         */\r\n        set: function (value) {\r\n            this.setPercentProperty(\"cornerRadiusBottomRight\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RoundedRectangle.prototype, \"cornerRadiusBottomLeft\", {\r\n        /**\r\n         * @return Radius (px or Percent)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"cornerRadiusBottomLeft\");\r\n        },\r\n        /**\r\n         * Radius of the bottom-left corner in pixels.\r\n         *\r\n         * @default 3\r\n         * @param value  Radius (px or Percent)\r\n         */\r\n        set: function (value) {\r\n            this.setPercentProperty(\"cornerRadiusBottomLeft\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Measures the element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    RoundedRectangle.prototype.measureElement = function () {\r\n    };\r\n    Object.defineProperty(RoundedRectangle.prototype, \"bbox\", {\r\n        /**\r\n         * Returns bounding box (square) for this element.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        get: function () {\r\n            if (this.definedBBox) {\r\n                return this.definedBBox;\r\n            }\r\n            if (this.isMeasured) {\r\n                return {\r\n                    x: 0,\r\n                    y: 0,\r\n                    width: this.innerWidth,\r\n                    height: this.innerHeight\r\n                };\r\n            }\r\n            else {\r\n                return { x: 0, y: 0, width: 0, height: 0 };\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return RoundedRectangle;\r\n}(Sprite));\r\nexport { RoundedRectangle };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"RoundedRectangle\"] = RoundedRectangle;\r\n//# sourceMappingURL=RoundedRectangle.js.map","import { __extends, __generator } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { EventDispatcher } from \"./EventDispatcher\";\r\nimport * as $array from \"./Array\";\r\nimport * as $iter from \"./Iterator\";\r\nimport * as $type from \"./Type\";\r\n/**\r\n * Ordered list contains values of any type in an indexed array.\r\n */\r\nvar OrderedList = /** @class */ (function () {\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param initial  Inital list of values to add to list\r\n     */\r\n    function OrderedList(initial) {\r\n        /**\r\n         * Holds list values.\r\n         */\r\n        this._values = [];\r\n        /**\r\n         * Event dispatcher.\r\n         */\r\n        this.events = new EventDispatcher();\r\n        if (initial != null) {\r\n            this.setAll(initial);\r\n        }\r\n    }\r\n    Object.defineProperty(OrderedList.prototype, \"values\", {\r\n        /**\r\n         * All items of the list.\r\n         *\r\n         * Do not modify the list directly. Rather use `insert()` and `remove()`\r\n         * methods.\r\n         *\r\n         * @return List values\r\n         */\r\n        get: function () {\r\n            return this._values;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Inserts a value into list item array.\r\n     *\r\n     * @param value  Value\r\n     */\r\n    OrderedList.prototype._insert = function (value) {\r\n        this._values.push(value);\r\n        return this._values.length - 1;\r\n    };\r\n    Object.defineProperty(OrderedList.prototype, \"length\", {\r\n        /**\r\n         * Number of items in the list.\r\n         *\r\n         * @readonly\r\n         * @return Length\r\n         */\r\n        get: function () {\r\n            return this._values.length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the index of the specific `value`.\r\n     *\r\n     * -1 if not found.\r\n     *\r\n     * @param value  Value\r\n     * @return Index\r\n     */\r\n    OrderedList.prototype.indexOf = function (value) {\r\n        return $array.indexOf(this._values, value);\r\n    };\r\n    /**\r\n     * Checks if list contains the `value`.\r\n     *\r\n     * @param value  Value\r\n     * @return In the list?\r\n     */\r\n    OrderedList.prototype.contains = function (value) {\r\n        return this.indexOf(value) !== -1;\r\n    };\r\n    /**\r\n     * Returns an item at specific `index`.\r\n     *\r\n     * @param index  Index\r\n     * @return Item\r\n     */\r\n    OrderedList.prototype.getIndex = function (index) {\r\n        return this._values[index];\r\n    };\r\n    Object.defineProperty(OrderedList.prototype, \"first\", {\r\n        /**\r\n         * First item in the list.\r\n         *\r\n         * @return Item\r\n         */\r\n        get: function () {\r\n            return this._values[0];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(OrderedList.prototype, \"last\", {\r\n        /**\r\n         * Last item in the list.\r\n         *\r\n         * @return Item\r\n         */\r\n        get: function () {\r\n            return this._values[this._values.length - 1];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Inserts a value into list.\r\n     *\r\n     * @param value  Value\r\n     */\r\n    OrderedList.prototype.insert = function (value) {\r\n        var index = this._insert(value);\r\n        if (this.events.isEnabled(\"inserted\")) {\r\n            this.events.dispatchImmediately(\"inserted\", {\r\n                type: \"inserted\",\r\n                target: this,\r\n                index: index,\r\n                newValue: value\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Removes an item with the `value` from the list.\r\n     *\r\n     * @param value  Value\r\n     */\r\n    OrderedList.prototype.remove = function (value) {\r\n        var index = this.indexOf(value);\r\n        if (index !== -1) {\r\n            var oldValue = this._values[index];\r\n            $array.removeIndex(this._values, index);\r\n            if (this.events.isEnabled(\"removed\")) {\r\n                this.events.dispatchImmediately(\"removed\", {\r\n                    type: \"removed\",\r\n                    target: this,\r\n                    index: index,\r\n                    oldValue: oldValue,\r\n                });\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets multiple items to the list.\r\n     *\r\n     * All current items are removed.\r\n     *\r\n     * @param newArray  New items\r\n     */\r\n    OrderedList.prototype.setAll = function (newArray) {\r\n        var _this = this;\r\n        $array.eachReverse(this._values, function (x, i) {\r\n            _this._values.pop();\r\n            if (_this.events.isEnabled(\"removed\")) {\r\n                _this.events.dispatchImmediately(\"removed\", {\r\n                    type: \"removed\",\r\n                    target: _this,\r\n                    index: i,\r\n                    oldValue: x\r\n                });\r\n            }\r\n        });\r\n        $array.each(newArray, function (value) {\r\n            _this.insert(value);\r\n        });\r\n    };\r\n    /**\r\n     * Removes all items from the list.\r\n     */\r\n    OrderedList.prototype.clear = function () {\r\n        this.setAll([]);\r\n    };\r\n    /**\r\n     * Returns part of the list between `start` and `end` indexes, as a new\r\n     * [[OrderedList]].\r\n     *\r\n     * @param start  Start index\r\n     * @param end    End index\r\n     * @return Items in range\r\n     */\r\n    OrderedList.prototype.slice = function (start, end) {\r\n        var out = new OrderedList();\r\n        out._values = this._values.slice(start, end);\r\n        return out;\r\n    };\r\n    /**\r\n     * Finds a closest available index to the `value` in specified direction.\r\n     *\r\n     * @ignore exclude from docs\r\n     * @param value      value to search for\r\n     * @param fn         A callback function that returns value of the item\r\n     * @param direction  Direciton\r\n     * @return Index\r\n     */\r\n    OrderedList.prototype.findClosestIndex = function (value, fn, direction) {\r\n        if (direction === void 0) { direction = \"any\"; }\r\n        // Init temporary values\r\n        var closestIndex = -1;\r\n        var closestValue;\r\n        var closestDifference;\r\n        var i = 0;\r\n        $iter.eachContinue(this.iterator(), function (element) {\r\n            var item = fn(element);\r\n            // Calc difference\r\n            if (direction === \"any\") {\r\n                // Exact match?\r\n                if (item === value) {\r\n                    // Found exact value - don't bother searching further\r\n                    closestIndex = i;\r\n                    return false;\r\n                }\r\n                var difference = Math.abs(value - item);\r\n                if (!$type.hasValue(closestDifference) || (closestDifference > difference)) {\r\n                    closestIndex = i;\r\n                    closestValue = item;\r\n                    closestDifference = difference;\r\n                }\r\n            }\r\n            else if (direction === \"left\" && (item < value)) {\r\n                if (!$type.hasValue(closestValue) || (closestValue < item)) {\r\n                    closestIndex = i;\r\n                    closestValue = item;\r\n                }\r\n            }\r\n            else if (direction === \"right\" && (item >= value)) {\r\n                if (!$type.hasValue(closestValue) || (closestValue >= item)) {\r\n                    closestIndex = i;\r\n                    closestValue = item;\r\n                }\r\n            }\r\n            ++i;\r\n            return true;\r\n        });\r\n        // Found nothing?\r\n        if (closestIndex === -1) {\r\n            if (direction === \"left\") {\r\n                // Use First one\r\n                closestIndex = 0;\r\n            }\r\n            else if (direction === \"right\") {\r\n                // Use last item\r\n                closestIndex = this.length - 1;\r\n            }\r\n        }\r\n        return closestIndex;\r\n    };\r\n    /**\r\n     * Returns a list iterator.\r\n     *\r\n     * @return Iterator\r\n     */\r\n    OrderedList.prototype.iterator = function () {\r\n        return $iter.fromArray(this._values);\r\n    };\r\n    /**\r\n     * Returns an ES6 iterator for the list.\r\n     */\r\n    OrderedList.prototype[Symbol.iterator] = function () {\r\n        var length, i;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    length = this._values.length;\r\n                    i = 0;\r\n                    _a.label = 1;\r\n                case 1:\r\n                    if (!(i < length)) return [3 /*break*/, 4];\r\n                    return [4 /*yield*/, this._values[i]];\r\n                case 2:\r\n                    _a.sent();\r\n                    _a.label = 3;\r\n                case 3:\r\n                    ++i;\r\n                    return [3 /*break*/, 1];\r\n                case 4: return [2 /*return*/];\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Calls `f` for each element in the list.\r\n     */\r\n    OrderedList.prototype.each = function (f) {\r\n        $array.each(this._values, f);\r\n    };\r\n    return OrderedList;\r\n}());\r\nexport { OrderedList };\r\n/**\r\n * A list where all items are ordered according to specific ordering function,\r\n * which is passed in via constructor parameter, when creating an instance of\r\n * [[SortedList]].\r\n */\r\nvar SortedList = /** @class */ (function (_super) {\r\n    __extends(SortedList, _super);\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param sort  Ordering function\r\n     */\r\n    function SortedList(sort) {\r\n        var _this = _super.call(this) || this;\r\n        _this._ordering = sort;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Inserts item into the list.\r\n     *\r\n     * @param value  Item\r\n     */\r\n    SortedList.prototype._insert = function (value) {\r\n        var index = $array.getSortedIndex(this._values, this._ordering, value).index;\r\n        $array.insertIndex(this._values, index, value);\r\n        return index;\r\n    };\r\n    /**\r\n     * Returns index of the item in list if found.\r\n     *\r\n     * -1 if item is not in the list.\r\n     *\r\n     * @param value  Item to search for\r\n     * @return Index\r\n     */\r\n    SortedList.prototype.indexOf = function (value) {\r\n        var _a = $array.getSortedIndex(this._values, this._ordering, value), found = _a.found, index = _a.index;\r\n        if (found) {\r\n            return index;\r\n        }\r\n        else {\r\n            return -1;\r\n        }\r\n    };\r\n    /**\r\n     * [udpate description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param value [description]\r\n     */\r\n    SortedList.prototype.update = function (value) {\r\n        // @todo test this\r\n        var index = $array.indexOf(this._values, value);\r\n        // @todo throw an error if it doesn't exist ?\r\n        if (index !== -1) {\r\n            var last = this._values.length - 1;\r\n            // Check if the current ordering is correct\r\n            if (!((index === 0 || this._ordering(this._values[index - 1], value) < 0) &&\r\n                (index === last || this._ordering(value, this._values[index + 1]) < 0))) {\r\n                // TODO send remove/insert/move events\r\n                $array.removeIndex(this._values, index);\r\n                this._insert(value);\r\n            }\r\n        }\r\n    };\r\n    return SortedList;\r\n}(OrderedList));\r\nexport { SortedList };\r\n/**\r\n * A version of a [[OrderedList]] that has a \"template\".\r\n *\r\n * A template is an instance of an object, that can be used to create new\r\n * elements in the list without actually needing to create instances for those.\r\n *\r\n * When new element is created in the list, e.g. by calling its `create()`\r\n * method, an exact copy of the element is created (including properties and\r\n * other attributes), inserted into the list and returned.\r\n */\r\nvar OrderedListTemplate = /** @class */ (function (_super) {\r\n    __extends(OrderedListTemplate, _super);\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param t Template object\r\n     */\r\n    function OrderedListTemplate(t) {\r\n        var _this = _super.call(this) || this;\r\n        _this.template = t;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(OrderedListTemplate.prototype, \"template\", {\r\n        /**\r\n         * @return Template object\r\n         */\r\n        get: function () {\r\n            return this._template;\r\n        },\r\n        /**\r\n         * A \"template\" object to copy all properties from when creating new list\r\n         * items.\r\n         *\r\n         * @param v  Template object\r\n         */\r\n        set: function (v) {\r\n            v.isTemplate = true;\r\n            this._template = v;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Copies all elements from other list.\r\n     *\r\n     * @param source  Source list\r\n     */\r\n    OrderedListTemplate.prototype.copyFrom = function (source) {\r\n        var _this = this;\r\n        $iter.each(source.iterator(), function (value) {\r\n            _this.insert(value.clone());\r\n        });\r\n    };\r\n    /**\r\n     * Returns part of the list, starting at `start` and ending at `end` indexes,\r\n     * as a new [[OrderedListTemplate]].\r\n     *\r\n     * @param start  Start index\r\n     * @param end    End index\r\n     * @return New list\r\n     */\r\n    OrderedListTemplate.prototype.slice = function (start, end) {\r\n        var out = new OrderedListTemplate(this.template);\r\n        out._values = this._values.slice(start, end);\r\n        return out;\r\n    };\r\n    OrderedListTemplate.prototype.create = function (make) {\r\n        var clone = (make != null\r\n            ? new make()\r\n            : this.template.clone());\r\n        this.insert(clone);\r\n        return clone;\r\n    };\r\n    return OrderedListTemplate;\r\n}(OrderedList));\r\nexport { OrderedListTemplate };\r\n/**\r\n * A version of a [[SortedList]] that has a \"template\".\r\n *\r\n * A template is an instance of an object, that can be used to create new\r\n * elements in the list without actually needing to create instances for those.\r\n *\r\n * When new element is created in the list, e.g. by calling its `create()`\r\n * method, an exact copy of the element is created (including properties and\r\n * other attributes), inserted into the list and returned.\r\n */\r\nvar SortedListTemplate = /** @class */ (function (_super) {\r\n    __extends(SortedListTemplate, _super);\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param t     Template object\r\n     * @param sort  Ordering function\r\n     */\r\n    function SortedListTemplate(t, sort) {\r\n        var _this = _super.call(this, sort) || this;\r\n        _this.template = t;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(SortedListTemplate.prototype, \"template\", {\r\n        /**\r\n         * @return Template object\r\n         */\r\n        get: function () {\r\n            return this._template;\r\n        },\r\n        /**\r\n         * A \"template\" object to copy all properties from when creating new list\r\n         * items.\r\n         *\r\n         * @param v  Template object\r\n         */\r\n        set: function (v) {\r\n            v.isTemplate = true;\r\n            this._template = v;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Copies all elements from other list.\r\n     *\r\n     * @param source  Source list\r\n     */\r\n    SortedListTemplate.prototype.copyFrom = function (source) {\r\n        var _this = this;\r\n        $iter.each(source.iterator(), function (value) {\r\n            _this.insert(value.clone());\r\n        });\r\n    };\r\n    SortedListTemplate.prototype.create = function (make) {\r\n        var clone = (make != null\r\n            ? new make()\r\n            : this.template.clone());\r\n        this.insert(clone);\r\n        return clone;\r\n    };\r\n    return SortedListTemplate;\r\n}(SortedList));\r\nexport { SortedListTemplate };\r\n//# sourceMappingURL=SortedList.js.map","/**\r\n * Contains code and logic for generating linear gradients.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObject } from \"../../Base\";\r\nimport { List } from \"../../utils/List\";\r\nimport { getGhostPaper } from \"../Paper\";\r\nimport { registry } from \"../../Registry\";\r\nimport * as $iter from \"../../utils/Iterator\";\r\nimport * as $math from \"../../utils/Math\";\r\nimport * as $type from \"../../utils/Type\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Linear gradient class.\r\n */\r\nvar LinearGradient = /** @class */ (function (_super) {\r\n    __extends(LinearGradient, _super);\r\n    /**\r\n     * Constructor.\r\n     */\r\n    function LinearGradient() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        /**\r\n         * List of colors switch definitions in a gradient.\r\n         */\r\n        _this._stops = new List();\r\n        /**\r\n         * Gradient direction.\r\n         */\r\n        _this._rotation = 0;\r\n        _this.className = \"LinearGradient\";\r\n        _this._stops.events.on(\"setIndex\", _this.validate, _this);\r\n        _this._stops.events.on(\"inserted\", _this.validate, _this);\r\n        // Create element\r\n        _this.element = _this.paper.addGroup(\"linearGradient\");\r\n        _this.id = \"gradient-\" + registry.getUniqueId();\r\n        _this.element.attr({ \"id\": _this.id });\r\n        _this._disposers.push(_this.element);\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Draws gradient.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    LinearGradient.prototype.validate = function () {\r\n        var _this = this;\r\n        var rotation = (this._rotation + 90) * $math.RADIANS;\r\n        var x1 = Math.round(50 + Math.sin(rotation + Math.PI) * 50) + '%';\r\n        var y1 = Math.round(50 + Math.cos(rotation) * 50) + '%';\r\n        var x2 = Math.round(50 + Math.sin(rotation) * 50) + '%';\r\n        var y2 = Math.round(50 + Math.cos(rotation + Math.PI) * 50) + '%';\r\n        var gradientElement = this.element;\r\n        gradientElement.removeChildNodes();\r\n        gradientElement.attr({ \"x1\": x1, \"x2\": x2, \"y1\": y1, \"y2\": y2 });\r\n        $iter.each($iter.indexed(this._stops.iterator()), function (a) {\r\n            var i = a[0];\r\n            var stop = a[1];\r\n            var offset = stop.offset;\r\n            if (!$type.isNumber(offset)) {\r\n                offset = i / (_this._stops.length - 1);\r\n            }\r\n            var gradientStop = _this.paper.add(\"stop\");\r\n            if ($type.hasValue(stop.color)) {\r\n                gradientStop.attr({ \"stop-color\": stop.color.toString() });\r\n            }\r\n            if ($type.isNumber(stop.opacity)) {\r\n                gradientStop.attr({ \"stop-opacity\": stop.opacity });\r\n            }\r\n            if ($type.isNumber(offset)) {\r\n                gradientStop.attr({ \"offset\": offset });\r\n            }\r\n            gradientElement.add(gradientStop);\r\n        });\r\n    };\r\n    /**\r\n     * Clears the gradient.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    LinearGradient.prototype.clear = function () {\r\n        this._stops.clear();\r\n    };\r\n    /**\r\n     * Adds a color step to the gradient.\r\n     *\r\n     * @param color    Color (hex code or named color)\r\n     * @param opacity  Opacity (value from 0 to 1; 0 completely transaprent, 1 fully opaque)\r\n     * @param offset   Position of color in the gradient (value 0 to 1; 0 meaning start of the gradient and 1 end)\r\n     */\r\n    LinearGradient.prototype.addColor = function (color, opacity, offset) {\r\n        this._stops.push({ color: color, opacity: opacity, offset: offset });\r\n    };\r\n    Object.defineProperty(LinearGradient.prototype, \"stops\", {\r\n        /**\r\n         * A list of color stops in the gradient.\r\n         *\r\n         * @return Stops\r\n         */\r\n        get: function () {\r\n            return this._stops;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LinearGradient.prototype, \"paper\", {\r\n        /**\r\n         * @ignore Exclude from docs\r\n         * @return Paper\r\n         */\r\n        get: function () {\r\n            if (this._paper) {\r\n                return this._paper;\r\n            }\r\n            return getGhostPaper();\r\n        },\r\n        /**\r\n         * [[Paper]] instace to use for the gradient.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @param paper  Paper\r\n         */\r\n        set: function (paper) {\r\n            if (this._paper != paper) {\r\n                this._paper = paper;\r\n                this.validate();\r\n                paper.appendDef(this.element);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LinearGradient.prototype, \"rotation\", {\r\n        /**\r\n         * @return Rotation\r\n         */\r\n        get: function () {\r\n            return this._rotation;\r\n        },\r\n        /**\r\n         * Rotation (direction) of the gradient in degrees.\r\n         *\r\n         * @param value  Rotation\r\n         */\r\n        set: function (value) {\r\n            //this.element.attr({ \"gradientTransform\": \"rotate(\" + value + \" 10 100)\" });\r\n            this._rotation = value;\r\n            this.validate();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    LinearGradient.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        this.stops.copyFrom(source.stops);\r\n        this._rotation = source.rotation;\r\n    };\r\n    return LinearGradient;\r\n}(BaseObject));\r\nexport { LinearGradient };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"LinearGradient\"] = LinearGradient;\r\n//# sourceMappingURL=LinearGradient.js.map","/**\r\n * Mouse-related functionality\r\n */\r\n/**\r\n * Defines static methods that hold style list for various mouse cursor styles,\r\n * maintaining browser compatibility.\r\n */\r\nvar MouseCursorStyle = /** @class */ (function () {\r\n    function MouseCursorStyle() {\r\n    }\r\n    /**\r\n     * Styles for \"grab\" mouse cursor.\r\n     */\r\n    MouseCursorStyle.grab = [{\r\n            \"property\": \"cursor\",\r\n            \"value\": \"move\"\r\n        }, {\r\n            \"property\": \"cursor\",\r\n            \"value\": \"grab\"\r\n        }, {\r\n            \"property\": \"cursor\",\r\n            \"value\": \"-webkit-grab\"\r\n        }];\r\n    /**\r\n     * Styles for \"grabbing\" mouse cursor.\r\n     */\r\n    MouseCursorStyle.grabbing = [{\r\n            \"property\": \"cursor\",\r\n            \"value\": \"move\"\r\n        }, {\r\n            \"property\": \"cursor\",\r\n            \"value\": \"grabbing\"\r\n        }, {\r\n            \"property\": \"cursor\",\r\n            \"value\": \"-webkit-grabbing\"\r\n        }];\r\n    /**\r\n     * Styles for \"pointer\" mouse cursor. (usually used for links)\r\n     */\r\n    MouseCursorStyle.pointer = [{\r\n            \"property\": \"cursor\",\r\n            \"value\": \"pointer\"\r\n        }];\r\n    /**\r\n     * Styles for default mouse cursor. (browser determines style)\r\n     */\r\n    MouseCursorStyle.default = [{\r\n            \"property\": \"cursor\",\r\n            \"value\": \"default\"\r\n        }];\r\n    /**\r\n     * Styles for horizontal bi-directional resize mouse cursor.\r\n     */\r\n    MouseCursorStyle.horizontalResize = [{\r\n            \"property\": \"cursor\",\r\n            \"value\": \"ew-resize\"\r\n        }];\r\n    /**\r\n     * Styles for vertical bi-directional mouse cursor.\r\n     */\r\n    MouseCursorStyle.verticalResize = [{\r\n            \"property\": \"cursor\",\r\n            \"value\": \"ns-resize\"\r\n        }];\r\n    /**\r\n     * Styles for \"no-allowed\" cursor.\r\n     * @since 4.7.15\r\n     */\r\n    MouseCursorStyle.notAllowed = [{\r\n            \"property\": \"cursor\",\r\n            \"value\": \"not-allowed\"\r\n        }];\r\n    return MouseCursorStyle;\r\n}());\r\nexport { MouseCursorStyle };\r\n//# sourceMappingURL=Mouse.js.map","/**\r\n * ============================================================================\r\n * COMPARING FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Comparing function used for ordering.\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Use localeCompare\r\n * @param a  Item 1\r\n * @param b  Item 2\r\n * @return Result\r\n */\r\nexport function order(a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a < b) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n/**\r\n * ============================================================================\r\n * OTHER FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Repeats a `string` number of times as set in `amount`.\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Make this faster\r\n * @param string  Source string\r\n * @param amount  Number of times to repeat string\r\n * @return New string\r\n */\r\nexport function repeat(string, amount) {\r\n    return new Array(amount + 1).join(string);\r\n}\r\n/**\r\n * Generates a random string `characters` length.\r\n *\r\n * @param chars  Number of characters\r\n * @return Random string\r\n */\r\nexport function random(chars) {\r\n    var res = \"\";\r\n    var choice = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n    for (var i = 0; i < chars; i++) {\r\n        res += choice.charAt(Math.floor(Math.random() * choice.length));\r\n    }\r\n    return res;\r\n}\r\n//# sourceMappingURL=String.js.map","/**\r\n * A collection of color-related functions\r\n */\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport * as $math from \"./Math\";\r\nimport * as $type from \"./Type\";\r\n/**\r\n * Define named colors for easy resolution to RGB.\r\n */\r\nvar namedColors = {\r\n    aliceblue: { r: 240, g: 248, b: 255 },\r\n    antiquewhite: { r: 250, g: 235, b: 215 },\r\n    aqua: { r: 0, g: 255, b: 255 },\r\n    aquamarine: { r: 127, g: 255, b: 212 },\r\n    azure: { r: 240, g: 255, b: 255 },\r\n    beige: { r: 245, g: 245, b: 220 },\r\n    bisque: { r: 255, g: 228, b: 196 },\r\n    black: { r: 0, g: 0, b: 0 },\r\n    blanchedalmond: { r: 255, g: 235, b: 205 },\r\n    blue: { r: 0, g: 0, b: 255 },\r\n    blueviolet: { r: 138, g: 43, b: 226 },\r\n    brown: { r: 165, g: 42, b: 42 },\r\n    burlywood: { r: 222, g: 184, b: 135 },\r\n    cadetblue: { r: 95, g: 158, b: 160 },\r\n    chartreuse: { r: 127, g: 255, b: 0 },\r\n    chocolate: { r: 210, g: 105, b: 30 },\r\n    coral: { r: 255, g: 127, b: 80 },\r\n    cornflowerblue: { r: 100, g: 149, b: 237 },\r\n    cornsilk: { r: 255, g: 248, b: 220 },\r\n    crimson: { r: 220, g: 20, b: 60 },\r\n    cyan: { r: 0, g: 255, b: 255 },\r\n    darkblue: { r: 0, g: 0, b: 139 },\r\n    darkcyan: { r: 0, g: 139, b: 139 },\r\n    darkgoldenrod: { r: 184, g: 134, b: 11 },\r\n    darkgray: { r: 169, g: 169, b: 169 },\r\n    darkgrey: { r: 169, g: 169, b: 169 },\r\n    darkgreen: { r: 0, g: 100, b: 0 },\r\n    darkkhaki: { r: 189, g: 183, b: 107 },\r\n    darkmagenta: { r: 139, g: 0, b: 139 },\r\n    darkolivegreen: { r: 85, g: 107, b: 47 },\r\n    darkorange: { r: 255, g: 140, b: 0 },\r\n    darkorchid: { r: 153, g: 50, b: 204 },\r\n    darkred: { r: 139, g: 0, b: 0 },\r\n    darksalmon: { r: 233, g: 150, b: 122 },\r\n    darkseagreen: { r: 143, g: 188, b: 143 },\r\n    darkslateblue: { r: 72, g: 61, b: 139 },\r\n    darkslategray: { r: 47, g: 79, b: 79 },\r\n    darkslategrey: { r: 47, g: 79, b: 79 },\r\n    darkturquoise: { r: 0, g: 206, b: 209 },\r\n    darkviolet: { r: 148, g: 0, b: 211 },\r\n    deeppink: { r: 255, g: 20, b: 147 },\r\n    deepskyblue: { r: 0, g: 191, b: 255 },\r\n    dimgray: { r: 105, g: 105, b: 105 },\r\n    dimgrey: { r: 105, g: 105, b: 105 },\r\n    dodgerblue: { r: 30, g: 144, b: 255 },\r\n    firebrick: { r: 178, g: 34, b: 34 },\r\n    floralwhite: { r: 255, g: 250, b: 240 },\r\n    forestgreen: { r: 34, g: 139, b: 34 },\r\n    fuchsia: { r: 255, g: 0, b: 255 },\r\n    gainsboro: { r: 220, g: 220, b: 220 },\r\n    ghostwhite: { r: 248, g: 248, b: 255 },\r\n    gold: { r: 255, g: 215, b: 0 },\r\n    goldenrod: { r: 218, g: 165, b: 32 },\r\n    gray: { r: 128, g: 128, b: 128 },\r\n    grey: { r: 128, g: 128, b: 128 },\r\n    green: { r: 0, g: 128, b: 0 },\r\n    greenyellow: { r: 173, g: 255, b: 47 },\r\n    honeydew: { r: 240, g: 255, b: 240 },\r\n    hotpink: { r: 255, g: 105, b: 180 },\r\n    indianred: { r: 205, g: 92, b: 92 },\r\n    indigo: { r: 75, g: 0, b: 130 },\r\n    ivory: { r: 255, g: 255, b: 240 },\r\n    khaki: { r: 240, g: 230, b: 140 },\r\n    lavender: { r: 230, g: 230, b: 250 },\r\n    lavenderblush: { r: 255, g: 240, b: 245 },\r\n    lawngreen: { r: 124, g: 252, b: 0 },\r\n    lemonchiffon: { r: 255, g: 250, b: 205 },\r\n    lightblue: { r: 173, g: 216, b: 230 },\r\n    lightcoral: { r: 240, g: 128, b: 128 },\r\n    lightcyan: { r: 224, g: 255, b: 255 },\r\n    lightgoldenrodyellow: { r: 250, g: 250, b: 210 },\r\n    lightgray: { r: 211, g: 211, b: 211 },\r\n    lightgrey: { r: 211, g: 211, b: 211 },\r\n    lightgreen: { r: 144, g: 238, b: 144 },\r\n    lightpink: { r: 255, g: 182, b: 193 },\r\n    lightsalmon: { r: 255, g: 160, b: 122 },\r\n    lightseagreen: { r: 32, g: 178, b: 170 },\r\n    lightskyblue: { r: 135, g: 206, b: 250 },\r\n    lightslategray: { r: 119, g: 136, b: 153 },\r\n    lightslategrey: { r: 119, g: 136, b: 153 },\r\n    lightsteelblue: { r: 176, g: 196, b: 222 },\r\n    lightyellow: { r: 255, g: 255, b: 224 },\r\n    lime: { r: 0, g: 255, b: 0 },\r\n    limegreen: { r: 50, g: 205, b: 50 },\r\n    linen: { r: 250, g: 240, b: 230 },\r\n    magenta: { r: 255, g: 0, b: 255 },\r\n    maroon: { r: 128, g: 0, b: 0 },\r\n    mediumaquamarine: { r: 102, g: 205, b: 170 },\r\n    mediumblue: { r: 0, g: 0, b: 205 },\r\n    mediumorchid: { r: 186, g: 85, b: 211 },\r\n    mediumpurple: { r: 147, g: 112, b: 219 },\r\n    mediumseagreen: { r: 60, g: 179, b: 113 },\r\n    mediumslateblue: { r: 123, g: 104, b: 238 },\r\n    mediumspringgreen: { r: 0, g: 250, b: 154 },\r\n    mediumturquoise: { r: 72, g: 209, b: 204 },\r\n    mediumvioletred: { r: 199, g: 21, b: 133 },\r\n    midnightblue: { r: 25, g: 25, b: 112 },\r\n    mintcream: { r: 245, g: 255, b: 250 },\r\n    mistyrose: { r: 255, g: 228, b: 225 },\r\n    moccasin: { r: 255, g: 228, b: 181 },\r\n    navajowhite: { r: 255, g: 222, b: 173 },\r\n    navy: { r: 0, g: 0, b: 128 },\r\n    oldlace: { r: 253, g: 245, b: 230 },\r\n    olive: { r: 128, g: 128, b: 0 },\r\n    olivedrab: { r: 107, g: 142, b: 35 },\r\n    orange: { r: 255, g: 165, b: 0 },\r\n    orangered: { r: 255, g: 69, b: 0 },\r\n    orchid: { r: 218, g: 112, b: 214 },\r\n    palegoldenrod: { r: 238, g: 232, b: 170 },\r\n    palegreen: { r: 152, g: 251, b: 152 },\r\n    paleturquoise: { r: 175, g: 238, b: 238 },\r\n    palevioletred: { r: 219, g: 112, b: 147 },\r\n    papayawhip: { r: 255, g: 239, b: 213 },\r\n    peachpuff: { r: 255, g: 218, b: 185 },\r\n    peru: { r: 205, g: 133, b: 63 },\r\n    pink: { r: 255, g: 192, b: 203 },\r\n    plum: { r: 221, g: 160, b: 221 },\r\n    powderblue: { r: 176, g: 224, b: 230 },\r\n    purple: { r: 128, g: 0, b: 128 },\r\n    rebeccapurple: { r: 102, g: 51, b: 153 },\r\n    red: { r: 255, g: 0, b: 0 },\r\n    rosybrown: { r: 188, g: 143, b: 143 },\r\n    royalblue: { r: 65, g: 105, b: 225 },\r\n    saddlebrown: { r: 139, g: 69, b: 19 },\r\n    salmon: { r: 250, g: 128, b: 114 },\r\n    sandybrown: { r: 244, g: 164, b: 96 },\r\n    seagreen: { r: 46, g: 139, b: 87 },\r\n    seashell: { r: 255, g: 245, b: 238 },\r\n    sienna: { r: 160, g: 82, b: 45 },\r\n    silver: { r: 192, g: 192, b: 192 },\r\n    skyblue: { r: 135, g: 206, b: 235 },\r\n    slateblue: { r: 106, g: 90, b: 205 },\r\n    slategray: { r: 112, g: 128, b: 144 },\r\n    slategrey: { r: 112, g: 128, b: 144 },\r\n    snow: { r: 255, g: 250, b: 250 },\r\n    springgreen: { r: 0, g: 255, b: 127 },\r\n    steelblue: { r: 70, g: 130, b: 180 },\r\n    tan: { r: 210, g: 180, b: 140 },\r\n    teal: { r: 0, g: 128, b: 128 },\r\n    thistle: { r: 216, g: 191, b: 216 },\r\n    tomato: { r: 255, g: 99, b: 71 },\r\n    turquoise: { r: 64, g: 224, b: 208 },\r\n    violet: { r: 238, g: 130, b: 238 },\r\n    wheat: { r: 245, g: 222, b: 179 },\r\n    white: { r: 255, g: 255, b: 255 },\r\n    whitesmoke: { r: 245, g: 245, b: 245 },\r\n    yellow: { r: 255, g: 255, b: 0 },\r\n    yellowgreen: { r: 154, g: 205, b: 50 }\r\n};\r\n/**\r\n * Tries to resolve a named color into a hex color representation.\r\n *\r\n * @ignore Exclude from docs\r\n * @param value  Color name\r\n * @return Color\r\n * @deprecated\r\n * @hidden\r\n */\r\n/*export function resolveNamedColor(value: string): Color {\r\n    return (<any>namedColors)[value] ? (<any>namedColors)[value] : undefined;\r\n}*/\r\n/**\r\n * Converts a proper color hex code (i.e. \"#FF5500\") or named color (i.e. \"red\")\r\n * into an {iRGB} object. If the code is not correctly formatted, an RGB of\r\n * black is returned.\r\n *\r\n * @ignore Exclude from docs\r\n * @param color  Color code\r\n * @param alpha  Alpha (0-1)\r\n * @return RGB\r\n */\r\nexport function rgb(color, alpha) {\r\n    // Init return value\r\n    var rgb;\r\n    // Try resolving color format\r\n    // Named color?\r\n    if (namedColors[color]) {\r\n        rgb = namedColors[color];\r\n    }\r\n    // Hex code?\r\n    else if (color.charAt(0) === \"#\") {\r\n        rgb = hexToRgb(color);\r\n    }\r\n    // rgb() format?\r\n    else if (color.match(/^rgba?\\(/)) {\r\n        rgb = rgbaToRgb(color);\r\n    }\r\n    // Was not able to resolve?\r\n    if (!rgb) {\r\n        rgb = { r: 0, g: 0, b: 0, a: 1 };\r\n    }\r\n    // Set alpha\r\n    if ($type.hasValue(alpha)) {\r\n        rgb.a = alpha;\r\n    }\r\n    return rgb;\r\n}\r\n/**\r\n * Converts a hex color code (i.e. \"#FF5500\") to an [[iRGB]] object.\r\n *\r\n * @ignore Exclude from docs\r\n * @param hex  Hex color code\r\n * @return RGB\r\n */\r\nexport function hexToRgb(hex) {\r\n    // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\r\n    var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\r\n    hex = hex.replace(shorthandRegex, function (m, r, g, b) {\r\n        return r + r + g + g + b + b;\r\n    });\r\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    return result ? {\r\n        r: parseInt(result[1], 16),\r\n        g: parseInt(result[2], 16),\r\n        b: parseInt(result[3], 16)\r\n    } : undefined;\r\n}\r\n/**\r\n * Converts color strings in format like `rgb()` and `rgba()` to [[iRGB]].\r\n *\r\n * @ignore Exclude from docs\r\n * @param color  Color code\r\n * @return RGB\r\n */\r\nexport function rgbaToRgb(color) {\r\n    color = color.replace(/[ ]/g, \"\");\r\n    // Init\r\n    var matches = color.match(/^rgb\\(([0-9]*),([0-9]*),([0-9]*)\\)/i);\r\n    // Try rgb() format\r\n    if (matches) {\r\n        matches.push(\"1\");\r\n    }\r\n    else {\r\n        matches = color.match(/^rgba\\(([0-9]*),([0-9]*),([0-9]*),([.0-9]*)\\)/i);\r\n        if (!matches) {\r\n            return;\r\n        }\r\n    }\r\n    return {\r\n        r: parseInt(matches[1]),\r\n        g: parseInt(matches[2]),\r\n        b: parseInt(matches[3]),\r\n        a: parseFloat(matches[4])\r\n    };\r\n}\r\n/**\r\n * Converts an [[iRGB]] object into a hex color code.\r\n *\r\n * @ignore Exclude from docs\r\n * @param rgb  RGB\r\n * @return Hex color code\r\n */\r\nexport function rgbToHex(rgb) {\r\n    return \"#\" + pad2(rgb.r.toString(16)) + pad2(rgb.g.toString(16)) + pad2(rgb.b.toString(16));\r\n}\r\n/**\r\n * Converts an [[iRGB]] object into its `rgb()` or `rgba()` representation.\r\n *\r\n * @ignore Exclude from docs\r\n * @param rgb  RGB\r\n * @return `rgba()` syntax\r\n */\r\nexport function rgbToRGBA(rgb) {\r\n    if ($type.hasValue(rgb.a) && rgb.a !== 1) {\r\n        return \"rgba(\" + rgb.r + \",\" + rgb.g + \",\" + rgb.b + \",\" + rgb.a + \")\";\r\n    }\r\n    else {\r\n        return \"rgb(\" + rgb.r + \",\" + rgb.g + \",\" + rgb.b + \")\";\r\n    }\r\n}\r\n/**\r\n * Pads a 1-digit string with a zero.\r\n *\r\n * @ignore Exclude from docs\r\n * @param c  Input string\r\n * @return Padded string\r\n */\r\nexport function pad2(c) {\r\n    return c.length == 1 ? \"0\" + c : \"\" + c;\r\n}\r\n/**\r\n * Returns an intermediate color between two colors based on the relative\r\n * position. Position needs to be in range between 0 and 1. Zero meaning the\r\n * resulting color will be closest to the first reference color.\r\n *\r\n * @ignore Exclude from docs\r\n * @param color1   First reference color\r\n * @param color2   Second reference color\r\n * @param percent  Relative position (0-1)\r\n * @return Interpolated color\r\n */\r\nexport function interpolate(rgb1, rgb2, percent) {\r\n    percent = $math.fitToRange(percent, 0, 1);\r\n    if (rgb1) {\r\n        if (rgb2) {\r\n            return {\r\n                r: rgb1.r + Math.round((rgb2.r - rgb1.r) * percent),\r\n                g: rgb1.g + Math.round((rgb2.g - rgb1.g) * percent),\r\n                b: rgb1.b + Math.round((rgb2.b - rgb1.b) * percent),\r\n                a: (rgb1.a || 1) + Math.round(((rgb2.a || 1) - (rgb1.a || 1)) * percent)\r\n            };\r\n        }\r\n        else {\r\n            return rgb1;\r\n        }\r\n    }\r\n    else if (rgb2) {\r\n        return rgb2;\r\n    }\r\n    else {\r\n        return rgb1;\r\n    }\r\n}\r\n/**\r\n * Returns a color that is `percent` brighter than the reference color.\r\n *\r\n * @ignore Exclude from docs\r\n * @param color    Reference color\r\n * @param percent  Brightness percent\r\n * @return Hex code of the new color\r\n */\r\nexport function lighten(rgb, percent) {\r\n    if (rgb) {\r\n        return {\r\n            r: Math.max(0, Math.min(255, rgb.r + getLightnessStep(rgb.r, percent))),\r\n            g: Math.max(0, Math.min(255, rgb.g + getLightnessStep(rgb.g, percent))),\r\n            b: Math.max(0, Math.min(255, rgb.b + getLightnessStep(rgb.b, percent))),\r\n            a: rgb.a\r\n        };\r\n    }\r\n    else {\r\n        // TODO is this correct ?\r\n        return rgb;\r\n    }\r\n}\r\n;\r\n/**\r\n * Gets lightness step.\r\n *\r\n * @ignore Exclude from docs\r\n * @param value    Value\r\n * @param percent  Percent\r\n * @return Step\r\n */\r\nexport function getLightnessStep(value, percent) {\r\n    var base = percent > 0 ? 255 - value : value;\r\n    return Math.round(base * percent);\r\n}\r\n/**\r\n * Returns a color that is `percent` brighter than the source `color`.\r\n *\r\n * @ignore Exclude from docs\r\n * @param color    Source color\r\n * @param percent  Brightness percent\r\n * @return New color\r\n */\r\nexport function brighten(rgb, percent) {\r\n    if (rgb) {\r\n        var base = Math.min(Math.max(rgb.r, rgb.g, rgb.b), 230);\r\n        //let base = Math.max(rgb.r, rgb.g, rgb.b);\r\n        var step = getLightnessStep(base, percent);\r\n        return {\r\n            r: Math.max(0, Math.min(255, Math.round(rgb.r + step))),\r\n            g: Math.max(0, Math.min(255, Math.round(rgb.g + step))),\r\n            b: Math.max(0, Math.min(255, Math.round(rgb.b + step))),\r\n            a: rgb.a\r\n        };\r\n    }\r\n    else {\r\n        // TODO is this correct ?\r\n        return rgb;\r\n    }\r\n}\r\n;\r\n/**\r\n * Returns brightness step.\r\n *\r\n * @ignore Exclude from docs\r\n * @param value    Value\r\n * @param percent  Percent\r\n * @return Step\r\n */\r\nexport function getBrightnessStep(value, percent) {\r\n    var base = 255; //percent > 0 ? 255 - value : value;\r\n    return Math.round(base * percent);\r\n}\r\n/**\r\n * Returns a new [[iRGB]] object based on `rgb` parameter with specific\r\n * saturation applied.\r\n *\r\n * `saturation` can be in the range of 0 (fully desaturated) to 1 (fully\r\n * saturated).\r\n *\r\n * @ignore Exclude from docs\r\n * @param color       Base color\r\n * @param saturation  Saturation (0-1)\r\n * @return New color\r\n */\r\nexport function saturate(rgb, saturation) {\r\n    if (rgb == null || saturation == 1) {\r\n        return rgb;\r\n    }\r\n    var hsl = rgbToHsl(rgb);\r\n    hsl.s = saturation;\r\n    return hslToRgb(hsl);\r\n}\r\n/*\r\n// not used\r\nexport function rgbToMatrix(rgb: iRGB): string {\r\n    let r = $type.toText($math.round((rgb.r || 0) / 255, 10));\r\n    let g = $type.toText($math.round((rgb.g || 0) / 255, 10));\r\n    let b = $type.toText($math.round((rgb.b || 0) / 255, 10));\r\n    let a = $type.toText(rgb.a || 1);\r\n    return\t      r + \" 0 0 0 0\" +\r\n                    \" 0 \" + g + \" 0 0 0\" +\r\n                    \" 0 0 \" + b + \" 0 0\" +\r\n                    \" 0 0 0 \" + a + \" 0\";\r\n}\r\n*/\r\n/**\r\n * The functions below are taken and adapted from Garry Tan's blog post:\r\n * http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\r\n *\r\n * The further attributions go mjijackson.com, which now seems to be defunct.\r\n */\r\n/**\r\n * Converts an HSL color value to RGB. Conversion formula\r\n * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\r\n * Assumes h, s, and l are contained in the set [0, 1] and\r\n * returns r, g, and b in the set [0, 255].\r\n *\r\n * Function adapted from:\r\n * http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\r\n *\r\n * @ignore Exclude from docs\r\n * @param h       The hue\r\n * @param s       The saturation\r\n * @param l       The lightness\r\n * @return The RGB representation\r\n */\r\nexport function hslToRgb(color) {\r\n    var r, g, b;\r\n    var h = color.h;\r\n    var s = color.s;\r\n    var l = color.l;\r\n    if (s == 0) {\r\n        r = g = b = l; // achromatic\r\n    }\r\n    else {\r\n        var hue2rgb = function hue2rgb(p, q, t) {\r\n            if (t < 0) {\r\n                t += 1;\r\n            }\r\n            if (t > 1) {\r\n                t -= 1;\r\n            }\r\n            if (t < 1 / 6) {\r\n                return p + (q - p) * 6 * t;\r\n            }\r\n            if (t < 1 / 2) {\r\n                return q;\r\n            }\r\n            if (t < 2 / 3) {\r\n                return p + (q - p) * (2 / 3 - t) * 6;\r\n            }\r\n            return p;\r\n        };\r\n        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n        var p = 2 * l - q;\r\n        r = hue2rgb(p, q, h + 1 / 3);\r\n        g = hue2rgb(p, q, h);\r\n        b = hue2rgb(p, q, h - 1 / 3);\r\n    }\r\n    return {\r\n        r: Math.round(r * 255),\r\n        g: Math.round(g * 255),\r\n        b: Math.round(b * 255)\r\n    };\r\n}\r\n/**\r\n * Converts an RGB color value to HSL. Conversion formula\r\n * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\r\n * Assumes r, g, and b are contained in the set [0, 255] and\r\n * returns h, s, and l in the set [0, 1].\r\n *\r\n * Function adapted from:\r\n * http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\r\n *\r\n * @ignore Exclude from docs\r\n * @param r       The red color value\r\n * @param g       The green color value\r\n * @param b       The blue color value\r\n * @return The HSL representation\r\n */\r\nexport function rgbToHsl(color) {\r\n    var r = color.r / 255;\r\n    var g = color.g / 255;\r\n    var b = color.b / 255;\r\n    var max = Math.max(r, g, b);\r\n    var min = Math.min(r, g, b);\r\n    var h = 0;\r\n    var s = 0;\r\n    var l = (max + min) / 2;\r\n    if (max === min) {\r\n        h = s = 0; // achromatic\r\n    }\r\n    else {\r\n        var d = max - min;\r\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n        switch (max) {\r\n            case r:\r\n                h = (g - b) / d + (g < b ? 6 : 0);\r\n                break;\r\n            case g:\r\n                h = (b - r) / d + 2;\r\n                break;\r\n            case b:\r\n                h = (r - g) / d + 4;\r\n                break;\r\n        }\r\n        h /= 6;\r\n    }\r\n    return {\r\n        h: h,\r\n        s: s,\r\n        l: l\r\n    };\r\n}\r\n/**\r\n * Converts an RGB color value to HSV. Conversion formula\r\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\r\n * Assumes r, g, and b are contained in the set [0, 255] and\r\n * returns h, s, and v in the set [0, 1].\r\n *\r\n * @ignore Exclude from docs\r\n * @param   Number  r       The red color value\r\n * @param   Number  g       The green color value\r\n * @param   Number  b       The blue color value\r\n * @return  Array           The HSV representation\r\n */\r\nexport function rgbToHsv(color) {\r\n    var r = color.r / 255;\r\n    var g = color.g / 255;\r\n    var b = color.b / 255;\r\n    var max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n    var h = 0;\r\n    var s = 0;\r\n    var v = max;\r\n    var d = max - min;\r\n    s = max == 0 ? 0 : d / max;\r\n    if (max == min) {\r\n        h = 0; // achromatic\r\n    }\r\n    else {\r\n        switch (max) {\r\n            case r:\r\n                h = (g - b) / d + (g < b ? 6 : 0);\r\n                break;\r\n            case g:\r\n                h = (b - r) / d + 2;\r\n                break;\r\n            case b:\r\n                h = (r - g) / d + 4;\r\n                break;\r\n        }\r\n        h /= 6;\r\n    }\r\n    return {\r\n        h: h,\r\n        s: s,\r\n        v: v\r\n    };\r\n}\r\n/**\r\n * Converts an HSV color value to RGB. Conversion formula\r\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\r\n * Assumes h, s, and v are contained in the set [0, 1] and\r\n * returns r, g, and b in the set [0, 255].\r\n *\r\n * @ignore Exclude from docs\r\n * @param   Number  h       The hue\r\n * @param   Number  s       The saturation\r\n * @param   Number  v       The value\r\n * @return  Array           The RGB representation\r\n */\r\nexport function hsvToRgb(color) {\r\n    var r = 0;\r\n    var g = 0;\r\n    var b = 0;\r\n    var h = color.h;\r\n    var s = color.s;\r\n    var v = color.v;\r\n    var i = Math.floor(h * 6);\r\n    var f = h * 6 - i;\r\n    var p = v * (1 - s);\r\n    var q = v * (1 - f * s);\r\n    var t = v * (1 - (1 - f) * s);\r\n    switch (i % 6) {\r\n        case 0:\r\n            r = v;\r\n            g = t;\r\n            b = p;\r\n            break;\r\n        case 1:\r\n            r = q;\r\n            g = v;\r\n            b = p;\r\n            break;\r\n        case 2:\r\n            r = p;\r\n            g = v;\r\n            b = t;\r\n            break;\r\n        case 3:\r\n            r = p;\r\n            g = q;\r\n            b = v;\r\n            break;\r\n        case 4:\r\n            r = t;\r\n            g = p;\r\n            b = v;\r\n            break;\r\n        case 5:\r\n            r = v;\r\n            g = p;\r\n            b = q;\r\n            break;\r\n    }\r\n    return {\r\n        r: Math.round(r * 255),\r\n        g: Math.round(g * 255),\r\n        b: Math.round(b * 255)\r\n    };\r\n}\r\n/**\r\n * Returns `true` if color is \"light\". Useful indetermining which contrasting\r\n * color to use for elements over this color. E.g.: you would want to use\r\n * black text over light background, and vice versa.\r\n *\r\n * @ignore Exclude from docs\r\n * @param color  Source color\r\n * @return Light?\r\n */\r\nexport function isLight(color) {\r\n    return ((color.r * 299) + (color.g * 587) + (color.b * 114)) / 1000 >= 128;\r\n}\r\n//# sourceMappingURL=Colors.js.map","/**\r\n * Handles date and time formatting\r\n */\r\nimport { __extends } from \"tslib\";\r\nimport { Language } from \"../utils/Language\";\r\nimport { BaseObject } from \"../Base\";\r\nimport { getTextFormatter } from \"../formatters/TextFormatter\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $strings from \"../utils/Strings\";\r\nimport * as $utils from \"../utils/Utils\";\r\nimport * as $type from \"../utils/Type\";\r\n/**\r\n * Handles date and time formatting.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-date-time/} Tutorial on date/time formatting\r\n * @todo Better type casting of passed in date?\r\n * @todo Quarter support?\r\n * @todo When parsing named months make the search case-insensitive\r\n * @todo Escape a.m./p.m. properly when used in RegEx\r\n */\r\nvar DateFormatter = /** @class */ (function (_super) {\r\n    __extends(DateFormatter, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function DateFormatter() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * Date format.\r\n         */\r\n        _this._dateFormat = \"yyyy-MM-dd\";\r\n        /**\r\n         * Input date format.\r\n         */\r\n        _this._inputDateFormat = \"yyyy-MM-dd\";\r\n        /**\r\n         * Assume UTC time zone.\r\n         */\r\n        _this._utc = false;\r\n        /**\r\n         * First day of week.\r\n         *\r\n         * 0 - Sunday\r\n         * 1 - Monday\r\n         *\r\n         * Etc.\r\n         */\r\n        _this._firstDayOfWeek = 1;\r\n        /**\r\n         * A list of month names.\r\n         */\r\n        _this._months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n        /**\r\n         * A list of short month names.\r\n         *\r\n         * @param {Array<ShortMonthNames>}\r\n         */\r\n        _this._monthsShort = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May(short)\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n        /**\r\n         * A list of weekday names.\r\n         */\r\n        _this._weekdays = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n        /**\r\n         * A list of short weekday names.\r\n         */\r\n        _this._weekdaysShort = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n        /**\r\n         * Output format to produce. If the format calls for applying color to the\r\n         * formatted value, this setting will determine what markup to use: SVG or\r\n         * HTML.\r\n         *\r\n         * Available options: svg, html.\r\n         *\r\n         * @default \"svg\"\r\n         */\r\n        _this._outputFormat = \"svg\";\r\n        /**\r\n         * Should the first letter of the formatted date be capitalized?\r\n         *\r\n         * @default true\r\n         */\r\n        _this.capitalize = true;\r\n        _this.className = \"DateFormatter\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(DateFormatter.prototype, \"language\", {\r\n        /**\r\n         * @return Language\r\n         */\r\n        get: function () {\r\n            return this._language;\r\n        },\r\n        /**\r\n         * A reference to [[Language]] object.\r\n         *\r\n         * @param  value  Language\r\n         */\r\n        set: function (value) {\r\n            this._language = value;\r\n            this.dateFormat = this._language.translate(\"_date\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Formats the date value according to specified format.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-date-time/} Tutorial on date/time formatting\r\n     * @param source  Date value\r\n     * @param format  Format\r\n     * @return Formatted date string\r\n     */\r\n    DateFormatter.prototype.format = function (source, format) {\r\n        // No language?\r\n        if (!this.language) {\r\n            if (this.sprite) {\r\n                this.language = this.sprite.language;\r\n            }\r\n            else {\r\n                this.language = new Language();\r\n            }\r\n        }\r\n        // No format passed in or it's empty\r\n        if (typeof format === \"undefined\" || format === \"\") {\r\n            format = this._dateFormat;\r\n        }\r\n        // Init return value\r\n        var formatted;\r\n        // Do casting if required\r\n        // This will take care of timestamps as well as Date objects\r\n        var date;\r\n        if ($type.isString(source)) {\r\n            // If it's a string, let's try parsing it using our own functionality\r\n            date = this.parse(source);\r\n        }\r\n        else {\r\n            date = $utils.anyToDate(source);\r\n        }\r\n        // Is it a built-in format or Intl.DateTimeFormat\r\n        if (format instanceof Object) {\r\n            if (this.intlLocales) {\r\n                return new Intl.DateTimeFormat(this.intlLocales, format).format(date);\r\n            }\r\n            else {\r\n                return new Intl.DateTimeFormat(undefined, format).format(date);\r\n            }\r\n        }\r\n        else {\r\n            // Clean format\r\n            format = $utils.cleanFormat(format);\r\n            // get format info (it will also deal with parser caching)\r\n            var info = this.parseFormat(format);\r\n            // Should we apply custom time zone?\r\n            if ($type.hasValue(this.timezoneOffset)) {\r\n                date.setMinutes(date.getMinutes() + date.getTimezoneOffset() - this.timezoneOffset);\r\n            }\r\n            // Check if it's a valid date\r\n            if (!$type.isNumber(date.getTime())) {\r\n                return this.language.translate(\"Invalid date\");\r\n            }\r\n            // Apply format\r\n            formatted = this.applyFormat(date, info, this.language);\r\n            // Capitalize\r\n            if (this.capitalize) {\r\n                formatted = formatted.replace(/^.{1}/, formatted.substr(0, 1).toUpperCase());\r\n            }\r\n        }\r\n        // We're done\r\n        return formatted;\r\n    };\r\n    /**\r\n     * Parses format into structured infromation.\r\n     *\r\n     * @param format Format template\r\n     */\r\n    DateFormatter.prototype.parseFormat = function (format) {\r\n        // Check cache\r\n        var cached = this.getCache(format);\r\n        if ($type.hasValue(cached)) {\r\n            return cached;\r\n        }\r\n        // Init format parse info holder\r\n        var info = {\r\n            \"template\": \"\",\r\n            \"parts\": []\r\n        };\r\n        // Let TextFormatter split into chunks\r\n        var chunks = getTextFormatter().chunk(format, true);\r\n        for (var i = 0; i < chunks.length; i++) {\r\n            var chunk = chunks[i];\r\n            if (chunk.type === \"value\") {\r\n                // Just \"Date\"?\r\n                if (chunk.text.match(/^date$/i) && $type.isString(this._dateFormat)) {\r\n                    chunk.text = this._dateFormat;\r\n                }\r\n                // Find all possible parts\r\n                var matches = chunk.text.match(/G|yyyy|yyy|yy|y|YYYY|YYY|YY|Y|u|MMMMM|MMMM|MMM|MM|M|ww|w|W|dd|d|DDD|DD|D|F|g|EEEEE|EEEE|EEE|EE|E|eeeee|eeee|eee|ee|e|aaa|aa|a|hh|h|HH|H|KK|K|kk|k|mm|m|ss|s|SSS|SS|S|A|zzzz|zzz|zz|z|ZZ|Z|t|x|nnn|nn|n|i|I/g);\r\n                // Found?\r\n                if (matches) {\r\n                    // Populate template\r\n                    for (var x = 0; x < matches.length; x++) {\r\n                        info.parts.push(matches[x]);\r\n                        chunk.text = chunk.text.replace(matches[x], $strings.PLACEHOLDER);\r\n                    }\r\n                }\r\n            }\r\n            // Apply to template\r\n            info.template += chunk.text;\r\n        }\r\n        // Apply style formatting\r\n        //info.template = getTextFormatter().format(info.template, this.outputFormat);\r\n        // Save cache\r\n        this.setCache(format, info);\r\n        return info;\r\n    };\r\n    /**\r\n     * Applies format to Date.\r\n     *\r\n     * @param date      Date object\r\n     * @param info      Parsed format information\r\n     * @param language  Language\r\n     * @return Formatted date string\r\n     */\r\n    DateFormatter.prototype.applyFormat = function (date, info, language) {\r\n        // Init return value\r\n        var res = info.template;\r\n        // Get values\r\n        var fullYear, month, weekday, day, hours, minutes, seconds, milliseconds, offset = date.getTimezoneOffset(), timestamp = date.getTime();\r\n        if (this.utc) {\r\n            fullYear = date.getUTCFullYear();\r\n            month = date.getUTCMonth();\r\n            weekday = date.getUTCDay();\r\n            day = date.getUTCDate();\r\n            hours = date.getUTCHours();\r\n            minutes = date.getUTCMinutes();\r\n            seconds = date.getUTCSeconds();\r\n            milliseconds = date.getUTCMilliseconds();\r\n        }\r\n        else {\r\n            fullYear = date.getFullYear();\r\n            month = date.getMonth();\r\n            weekday = date.getDay();\r\n            day = date.getDate();\r\n            hours = date.getHours();\r\n            minutes = date.getMinutes();\r\n            seconds = date.getSeconds();\r\n            milliseconds = date.getMilliseconds();\r\n        }\r\n        // Go through each part and format/replace it in template\r\n        for (var i = 0, len = info.parts.length; i < len; i++) {\r\n            var value = \"\";\r\n            switch (info.parts[i]) {\r\n                case \"G\":\r\n                    value = language.translate(fullYear < 0\r\n                        ? \"_era_bc\"\r\n                        : \"_era_ad\");\r\n                    break;\r\n                case \"yyyy\":\r\n                    value = Math.abs(fullYear).toString();\r\n                    if (fullYear < 0) {\r\n                        value += language.translate(\"_era_bc\");\r\n                    }\r\n                    break;\r\n                case \"yyy\":\r\n                case \"yy\":\r\n                case \"y\":\r\n                    value = Math.abs(fullYear).toString().substr(-info.parts[i].length);\r\n                    if (fullYear < 0) {\r\n                        value += language.translate(\"_era_bc\");\r\n                    }\r\n                    break;\r\n                case \"YYYY\":\r\n                case \"YYY\":\r\n                case \"YY\":\r\n                case \"Y\":\r\n                    var week = $utils.getWeek(date);\r\n                    var year = fullYear;\r\n                    if (week == 1 && (weekday > 1)) {\r\n                        year--;\r\n                    }\r\n                    if (info.parts[i] == \"YYYY\") {\r\n                        value = Math.abs(year).toString();\r\n                    }\r\n                    else {\r\n                        value = Math.abs(year).toString().substr(-info.parts[i].length);\r\n                    }\r\n                    if (year < 0) {\r\n                        value += language.translate(\"_era_bc\");\r\n                    }\r\n                    break;\r\n                case \"u\":\r\n                    // @todo\r\n                    break;\r\n                case \"MMMMM\":\r\n                    value = language.translate(this._months[month]).substr(0, 1);\r\n                    break;\r\n                case \"MMMM\":\r\n                    value = language.translate(this._months[month]);\r\n                    break;\r\n                case \"MMM\":\r\n                    value = language.translate(this._monthsShort[month]);\r\n                    break;\r\n                case \"MM\":\r\n                    value = $utils.padString(month + 1, 2, \"0\");\r\n                    break;\r\n                case \"M\":\r\n                    value = (month + 1).toString();\r\n                    break;\r\n                case \"ww\":\r\n                    value = $utils.padString($utils.getWeek(date, this.utc), 2, \"0\");\r\n                    break;\r\n                case \"w\":\r\n                    value = $utils.getWeek(date, this.utc).toString();\r\n                    break;\r\n                case \"W\":\r\n                    value = $utils.getMonthWeek(date, this.utc).toString();\r\n                    break;\r\n                case \"dd\":\r\n                    value = $utils.padString(day, 2, \"0\");\r\n                    break;\r\n                case \"d\":\r\n                    value = day.toString();\r\n                    break;\r\n                case \"DD\":\r\n                case \"DDD\":\r\n                    value = $utils.padString($utils.getYearDay(date, this.utc).toString(), info.parts[i].length, \"0\");\r\n                    break;\r\n                case \"D\":\r\n                    value = $utils.getYearDay(date, this.utc).toString();\r\n                    break;\r\n                case \"F\":\r\n                    // @todo\r\n                    break;\r\n                case \"g\":\r\n                    // @todo\r\n                    break;\r\n                case \"t\":\r\n                    value = language.translateFunc(\"_dateOrd\").call(this, day);\r\n                    break;\r\n                case \"E\":\r\n                    value = (weekday || 7).toString();\r\n                    break;\r\n                case \"EE\":\r\n                    value = $utils.padString((weekday || 7).toString(), 2, \"0\");\r\n                    break;\r\n                case \"EEE\":\r\n                case \"eee\":\r\n                    value = language.translate(this._weekdaysShort[weekday]);\r\n                    break;\r\n                case \"EEEE\":\r\n                case \"eeee\":\r\n                    value = language.translate(this._weekdays[weekday]);\r\n                    break;\r\n                case \"EEEEE\":\r\n                case \"eeeee\":\r\n                    value = language.translate(this._weekdays[weekday]).substr(0, 1);\r\n                    break;\r\n                case \"e\":\r\n                case \"ee\":\r\n                    value = (weekday - this.firstDayOfWeek + 1).toString();\r\n                    if (info.parts[i] == \"ee\") {\r\n                        value = $utils.padString(value, 2, \"0\");\r\n                    }\r\n                    break;\r\n                case \"a\":\r\n                    if (hours >= 12) {\r\n                        value = language.translate(\"PM\");\r\n                    }\r\n                    else {\r\n                        value = language.translate(\"AM\");\r\n                    }\r\n                    break;\r\n                case \"aa\":\r\n                    if (hours >= 12) {\r\n                        value = language.translate(\"P.M.\");\r\n                    }\r\n                    else {\r\n                        value = language.translate(\"A.M.\");\r\n                    }\r\n                    break;\r\n                case \"aaa\":\r\n                    if (hours >= 12) {\r\n                        value = language.translate(\"P\");\r\n                    }\r\n                    else {\r\n                        value = language.translate(\"A\");\r\n                    }\r\n                    break;\r\n                case \"h\":\r\n                    value = $utils.get12Hours(hours).toString();\r\n                    break;\r\n                case \"hh\":\r\n                    value = $utils.padString($utils.get12Hours(hours), 2, \"0\");\r\n                    break;\r\n                case \"H\":\r\n                    value = hours.toString();\r\n                    break;\r\n                case \"HH\":\r\n                    value = $utils.padString(hours, 2, \"0\");\r\n                    break;\r\n                case \"K\":\r\n                    value = $utils.get12Hours(hours, 0).toString();\r\n                    break;\r\n                case \"KK\":\r\n                    value = $utils.padString($utils.get12Hours(hours, 0), 2, \"0\");\r\n                    break;\r\n                case \"k\":\r\n                    value = (hours + 1).toString();\r\n                    break;\r\n                case \"kk\":\r\n                    value = $utils.padString(hours + 1, 2, \"0\");\r\n                    break;\r\n                case \"m\":\r\n                    value = minutes.toString();\r\n                    break;\r\n                case \"mm\":\r\n                    value = $utils.padString(minutes, 2, \"0\");\r\n                    break;\r\n                case \"s\":\r\n                    value = seconds.toString();\r\n                    break;\r\n                case \"ss\":\r\n                    value = $utils.padString(seconds, 2, \"0\");\r\n                    break;\r\n                case \"S\":\r\n                case \"SS\":\r\n                case \"SSS\":\r\n                    value = Math.round((milliseconds / 1000) * Math.pow(10, info.parts[i].length)).toString();\r\n                    break;\r\n                case \"x\":\r\n                    value = timestamp.toString();\r\n                    break;\r\n                case \"n\":\r\n                case \"nn\":\r\n                case \"nnn\":\r\n                    value = $utils.padString(milliseconds, info.parts[i].length, \"0\");\r\n                    break;\r\n                case \"z\":\r\n                    value = $utils.getTimeZone(date, false, false, this.utc);\r\n                    break;\r\n                case \"zz\":\r\n                    value = $utils.getTimeZone(date, true, false, this.utc);\r\n                    break;\r\n                case \"zzz\":\r\n                    value = $utils.getTimeZone(date, false, true, this.utc);\r\n                    break;\r\n                case \"zzzz\":\r\n                    value = $utils.getTimeZone(date, true, true, this.utc);\r\n                    break;\r\n                case \"Z\":\r\n                case \"ZZ\":\r\n                    var tz = Math.abs(offset) / 60;\r\n                    var tzh = Math.floor(tz);\r\n                    var tzm = tz * 60 - tzh * 60;\r\n                    if (this.utc) {\r\n                        tzh = 0;\r\n                        tzm = 0;\r\n                    }\r\n                    if (info.parts[i] == \"Z\") {\r\n                        value = \"GMT\";\r\n                        value += offset > 0 ? \"-\" : \"+\";\r\n                        value += $utils.padString(tzh, 2) + \":\" + $utils.padString(tzm, 2);\r\n                    }\r\n                    else {\r\n                        value = offset > 0 ? \"-\" : \"+\";\r\n                        value += $utils.padString(tzh, 2) + $utils.padString(tzm, 2);\r\n                    }\r\n                    break;\r\n                case \"i\":\r\n                    value = date.toISOString();\r\n                    break;\r\n                case \"I\":\r\n                    value = date.toUTCString();\r\n                    break;\r\n            }\r\n            res = res.replace($strings.PLACEHOLDER, value);\r\n        }\r\n        return res;\r\n    };\r\n    /**\r\n     * Parses any input value into Date object.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-date-time/#Parsing_Dates} Tutorial on date/time parsing\r\n     * @param source  Source value\r\n     * @param format  Source format\r\n     * @return Date object\r\n     */\r\n    DateFormatter.prototype.parse = function (source, format) {\r\n        // Format set?\r\n        if (!$type.hasValue(format)) {\r\n            format = this.inputDateFormat;\r\n        }\r\n        // Is it already a Date\r\n        if (source instanceof Date) {\r\n            return source;\r\n        }\r\n        // Is it a numeric timestamp\r\n        if (typeof source === \"number\") {\r\n            return new Date(source);\r\n        }\r\n        // No? Let's check if it's string, and try converting to it if nec\r\n        if (typeof source !== \"string\") {\r\n            source = source.toString();\r\n        }\r\n        // no language?\r\n        if (!this.language) {\r\n            if (this.sprite) {\r\n                this.language = this.sprite.language;\r\n            }\r\n            else {\r\n                this.language = new Language;\r\n            }\r\n        }\r\n        // Init return value\r\n        var res;\r\n        // Init RegEx for parsing\r\n        var reg = \"\";\r\n        // Clean format\r\n        format = $utils.cleanFormat(format);\r\n        // Clip format to length of the source string\r\n        format = format.substr(0, source.length);\r\n        // Parse format\r\n        var info = this.parseFormat(format);\r\n        // Init parsed items holder\r\n        var parsedIndexes = {\r\n            \"year\": -1,\r\n            \"year3\": -1,\r\n            \"year2\": -1,\r\n            \"year1\": -1,\r\n            \"month\": -1,\r\n            \"monthShort\": -1,\r\n            \"monthLong\": -1,\r\n            \"weekdayShort\": -1,\r\n            \"weekdayLong\": -1,\r\n            \"day\": -1,\r\n            \"yearDay\": -1,\r\n            \"week\": -1,\r\n            \"hourBase0\": -1,\r\n            \"hour12Base0\": -1,\r\n            \"hourBase1\": -1,\r\n            \"hour12Base1\": -1,\r\n            \"minute\": -1,\r\n            \"second\": -1,\r\n            \"millisecond\": -1,\r\n            \"millisecondDigits\": -1,\r\n            \"am\": -1,\r\n            \"zone\": -1,\r\n            \"timestamp\": -1,\r\n            \"iso\": -1\r\n        };\r\n        // Init values\r\n        var resValues = {\r\n            \"year\": 1970,\r\n            \"month\": 0,\r\n            \"day\": 1,\r\n            \"hour\": 0,\r\n            \"minute\": 0,\r\n            \"second\": 0,\r\n            \"millisecond\": 0,\r\n            \"timestamp\": null,\r\n            \"offset\": 0,\r\n            \"utc\": this.utc\r\n        };\r\n        // Index adjuster\r\n        var indexAdjust = 0, index = 0;\r\n        // Iterate through all of the parts\r\n        for (var i = 0; i < info.parts.length; i++) {\r\n            // Set current match index\r\n            index = i + indexAdjust + 1;\r\n            switch (info.parts[i]) {\r\n                case \"yyyy\":\r\n                case \"YYYY\":\r\n                    reg += \"([0-9]{4})\";\r\n                    parsedIndexes.year = index;\r\n                    break;\r\n                case \"yyy\":\r\n                case \"YYY\":\r\n                    reg += \"([0-9]{3})\";\r\n                    parsedIndexes.year3 = index;\r\n                    break;\r\n                case \"yy\":\r\n                case \"YY\":\r\n                    reg += \"([0-9]{2})\";\r\n                    parsedIndexes.year2 = index;\r\n                    break;\r\n                case \"y\":\r\n                case \"Y\":\r\n                    reg += \"([0-9]{1})\";\r\n                    parsedIndexes.year1 = index;\r\n                    break;\r\n                case \"MMMM\":\r\n                    reg += \"(\" + this.getStringList(this._months).join(\"|\") + \")\";\r\n                    parsedIndexes.monthLong = index;\r\n                    break;\r\n                case \"MMM\":\r\n                    reg += \"(\" + this.getStringList(this._monthsShort).join(\"|\") + \")\";\r\n                    parsedIndexes.monthShort = index;\r\n                    break;\r\n                case \"MM\":\r\n                case \"M\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.month = index;\r\n                    break;\r\n                case \"ww\":\r\n                case \"w\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.week = index;\r\n                    break;\r\n                case \"dd\":\r\n                case \"d\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.day = index;\r\n                    break;\r\n                case \"DDD\":\r\n                case \"DD\":\r\n                case \"D\":\r\n                    reg += \"([0-9]{3}|[0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.yearDay = index;\r\n                    break;\r\n                case \"dddd\":\r\n                    reg += \"(\" + this.getStringList(this._weekdays).join(\"|\") + \")\";\r\n                    parsedIndexes.weekdayLong = index;\r\n                    break;\r\n                case \"ddd\":\r\n                    reg += \"(\" + this.getStringList(this._weekdaysShort).join(\"|\") + \")\";\r\n                    parsedIndexes.weekdayShort = index;\r\n                    break;\r\n                case \"aaa\":\r\n                case \"aa\":\r\n                case \"a\":\r\n                    // TODO: fix (escape regex)\r\n                    reg += \"(\" + this.getStringList([\"AM\", \"PM\", \"A\\.M\\.\", \"P\\.M\\.\", \"A\", \"P\"]).join(\"|\") + \")\";\r\n                    parsedIndexes.am = index;\r\n                    break;\r\n                case \"hh\":\r\n                case \"h\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.hour12Base1 = index;\r\n                    break;\r\n                case \"HH\":\r\n                case \"H\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.hourBase0 = index;\r\n                    break;\r\n                case \"KK\":\r\n                case \"K\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.hour12Base0 = index;\r\n                    break;\r\n                case \"kk\":\r\n                case \"k\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.hourBase1 = index;\r\n                    break;\r\n                case \"mm\":\r\n                case \"m\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.minute = index;\r\n                    break;\r\n                case \"ss\":\r\n                case \"s\":\r\n                    reg += \"([0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.second = index;\r\n                    break;\r\n                case \"SSS\":\r\n                case \"SS\":\r\n                case \"S\":\r\n                    reg += \"([0-9]{3}|[0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.millisecond = index;\r\n                    parsedIndexes.millisecondDigits = info.parts[i].length;\r\n                    break;\r\n                case \"nnn\":\r\n                case \"nn\":\r\n                case \"n\":\r\n                    reg += \"([0-9]{3}|[0-9]{2}|[0-9]{1})\";\r\n                    parsedIndexes.millisecond = index;\r\n                    break;\r\n                case \"x\":\r\n                    reg += \"([0-9]{1,})\";\r\n                    parsedIndexes.timestamp = index;\r\n                    break;\r\n                case \"Z\":\r\n                    reg += \"GMT([-+]+[0-9]{2}:[0-9]{2})\";\r\n                    parsedIndexes.zone = index;\r\n                    break;\r\n                case \"ZZ\":\r\n                    reg += \"([\\\\-+]+[0-9]{2}[0-9]{2})\";\r\n                    parsedIndexes.zone = index;\r\n                    break;\r\n                case \"i\":\r\n                    reg += \"([0-9]{4})-([0-9]{2})-([0-9]{2})T([0-9]{2}):([0-9]{2}):([0-9]{2})\\.([0-9]{3})([Zz]?)\";\r\n                    parsedIndexes.iso = index;\r\n                    indexAdjust += 7;\r\n                    break;\r\n                case \"G\":\r\n                case \"YYYY\":\r\n                case \"YYY\":\r\n                case \"YY\":\r\n                case \"Y\":\r\n                case \"MMMMM\":\r\n                case \"W\":\r\n                case \"EEEEE\":\r\n                case \"EEEE\":\r\n                case \"EEE\":\r\n                case \"EE\":\r\n                case \"E\":\r\n                case \"eeeee\":\r\n                case \"eeee\":\r\n                case \"eee\":\r\n                case \"ee\":\r\n                case \"e\":\r\n                case \"zzzz\":\r\n                case \"zzz\":\r\n                case \"zz\":\r\n                case \"z\":\r\n                case \"t\":\r\n                    // Ignore\r\n                    indexAdjust--;\r\n                    break;\r\n            }\r\n            reg += \"[^0-9]*\";\r\n        }\r\n        // Try matching\r\n        var regex = new RegExp(reg);\r\n        var matches = source.match(regex);\r\n        if (matches) {\r\n            // Populate the date object\r\n            // Full year\r\n            if (parsedIndexes.year > -1) {\r\n                resValues.year = parseInt(matches[parsedIndexes.year]);\r\n            }\r\n            // 3-digit year\r\n            if (parsedIndexes.year3 > -1) {\r\n                var val = parseInt(matches[parsedIndexes.year3]);\r\n                val += 1000;\r\n                resValues.year = val;\r\n            }\r\n            // 2-digit year\r\n            if (parsedIndexes.year2 > -1) {\r\n                var val = parseInt(matches[parsedIndexes.year2]);\r\n                if (val > 50) {\r\n                    val += 1000;\r\n                }\r\n                else {\r\n                    val += 2000;\r\n                }\r\n                resValues.year = val;\r\n            }\r\n            // 1-digit year\r\n            if (parsedIndexes.year1 > -1) {\r\n                var val = parseInt(matches[parsedIndexes.year1]);\r\n                val = Math.floor((new Date().getFullYear()) / 10) * 10 + val;\r\n                resValues.year = val;\r\n            }\r\n            // Full month\r\n            if (parsedIndexes.monthLong > -1) {\r\n                resValues.month = this.resolveMonth(matches[parsedIndexes.monthLong]);\r\n            }\r\n            // Short month\r\n            if (parsedIndexes.monthShort > -1) {\r\n                resValues.month = this.resolveShortMonth(matches[parsedIndexes.monthShort]);\r\n            }\r\n            // Numeric month\r\n            if (parsedIndexes.month > -1) {\r\n                resValues.month = parseInt(matches[parsedIndexes.month]) - 1;\r\n            }\r\n            // Weekday\r\n            // @todo\r\n            // Week\r\n            if ((parsedIndexes.week > -1) && (parsedIndexes.day === -1)) {\r\n                // We parse weeks ONLY if day is not explicitly set\r\n                // TODO: this needs work\r\n                // (but maybe later - I can hardly imagine anyone passing their dates in weeks)\r\n                resValues.month = 0;\r\n                resValues.day = $utils.getDayFromWeek(parseInt(matches[parsedIndexes.week]), resValues.year, 1, this.utc);\r\n            }\r\n            // Day\r\n            if (parsedIndexes.day > -1) {\r\n                resValues.day = parseInt(matches[parsedIndexes.day]);\r\n            }\r\n            // Year day\r\n            if (parsedIndexes.yearDay > -1) {\r\n                resValues.month = 0;\r\n                resValues.day = parseInt(matches[parsedIndexes.yearDay]);\r\n            }\r\n            // 24 Hour (0-23)\r\n            if (parsedIndexes.hourBase0 > -1) {\r\n                resValues.hour = parseInt(matches[parsedIndexes.hourBase0]);\r\n            }\r\n            // 24 Hour (1-24)\r\n            if (parsedIndexes.hourBase1 > -1) {\r\n                resValues.hour = parseInt(matches[parsedIndexes.hourBase1]) - 1;\r\n            }\r\n            // 12 Hour (0-11)\r\n            if (parsedIndexes.hour12Base0 > -1) {\r\n                var val = parseInt(matches[parsedIndexes.hour12Base0]);\r\n                if (val == 11) {\r\n                    val = 0;\r\n                }\r\n                if ((parsedIndexes.am > -1) && !this.isAm(matches[parsedIndexes.am])) {\r\n                    val += 12;\r\n                }\r\n                resValues.hour = val;\r\n            }\r\n            // 12 Hour (1-12)\r\n            if (parsedIndexes.hour12Base1 > -1) {\r\n                var val = parseInt(matches[parsedIndexes.hour12Base1]);\r\n                if (val == 12) {\r\n                    val = 0;\r\n                }\r\n                if ((parsedIndexes.am > -1) && !this.isAm(matches[parsedIndexes.am])) {\r\n                    val += 12;\r\n                }\r\n                resValues.hour = val;\r\n            }\r\n            // Minute\r\n            if (parsedIndexes.minute > -1) {\r\n                resValues.minute = parseInt(matches[parsedIndexes.minute]);\r\n            }\r\n            // Second\r\n            if (parsedIndexes.second > -1) {\r\n                resValues.second = parseInt(matches[parsedIndexes.second]);\r\n            }\r\n            // Millisecond\r\n            if (parsedIndexes.millisecond > -1) {\r\n                var val = parseInt(matches[parsedIndexes.millisecond]);\r\n                if (parsedIndexes.millisecondDigits == 2) {\r\n                    val *= 10;\r\n                }\r\n                else if (parsedIndexes.millisecondDigits == 1) {\r\n                    val *= 100;\r\n                }\r\n                resValues.millisecond = val;\r\n            }\r\n            // Timestamp\r\n            if (parsedIndexes.timestamp > -1) {\r\n                resValues.timestamp = parseInt(matches[parsedIndexes.timestamp]);\r\n            }\r\n            // Adjust time zone\r\n            if (parsedIndexes.zone > -1) {\r\n                var zone = matches[parsedIndexes.zone].replace(/:/, \"\");\r\n                var match = $type.getValue(zone.match(/([+\\-]?)([0-9]{2})([0-9]{2})/));\r\n                var dir = match[1];\r\n                var hour = match[2];\r\n                var minute = match[3];\r\n                var offset = parseInt(hour) * 60 + parseInt(minute);\r\n                // Adjust offset\r\n                // Making it negative does not seem to make sense, but it's right\r\n                // because of how JavaScript calculates GTM offsets\r\n                if (dir == \"+\") {\r\n                    offset *= -1;\r\n                }\r\n                // Check the difference in offset\r\n                var originalOffset = new Date().getTimezoneOffset();\r\n                var diff = offset - originalOffset;\r\n                resValues.offset = diff;\r\n            }\r\n            // ISO\r\n            if (parsedIndexes.iso > -1) {\r\n                if (matches[parsedIndexes.iso + 7] == \"Z\" || matches[parsedIndexes.iso + 7] == \"z\") {\r\n                    resValues.utc = true;\r\n                }\r\n                resValues.year = $type.toNumber(matches[parsedIndexes.iso + 0]);\r\n                resValues.month = $type.toNumber(matches[parsedIndexes.iso + 1]) - 1;\r\n                resValues.day = $type.toNumber(matches[parsedIndexes.iso + 2]);\r\n                resValues.hour = $type.toNumber(matches[parsedIndexes.iso + 3]);\r\n                resValues.minute = $type.toNumber(matches[parsedIndexes.iso + 4]);\r\n                resValues.second = $type.toNumber(matches[parsedIndexes.iso + 5]);\r\n                resValues.millisecond = $type.toNumber(matches[parsedIndexes.iso + 6]);\r\n            }\r\n            // Create Date object\r\n            if (resValues.utc) {\r\n                res = new Date(Date.UTC(resValues.year, resValues.month, resValues.day, resValues.hour, resValues.minute, resValues.second, resValues.millisecond));\r\n            }\r\n            else {\r\n                res = new Date(resValues.year, resValues.month, resValues.day, resValues.hour, resValues.minute, resValues.second, resValues.millisecond);\r\n            }\r\n        }\r\n        else {\r\n            // Didn't match anything\r\n            // Let's try dropping it into Date constructor and hope for the best\r\n            res = new Date(source);\r\n        }\r\n        return res;\r\n    };\r\n    /**\r\n     * Resolves month name (i.e. \"December\") into a month number (11).\r\n     *\r\n     * @param value  Month name\r\n     * @return Month number\r\n     */\r\n    DateFormatter.prototype.resolveMonth = function (value) {\r\n        // Let's try English first\r\n        var month = this._months.indexOf(value);\r\n        if (month > -1) {\r\n            return month;\r\n        }\r\n        // Try the translation\r\n        if (this.language && !this.language.isDefault()) {\r\n            month = this.language.translateAll(this._months).indexOf(value);\r\n            if (month > -1) {\r\n                return month;\r\n            }\r\n        }\r\n        return 0;\r\n    };\r\n    /**\r\n     * Resolves short month name (i.e. \"Dec\") into a month number.\r\n     *\r\n     * @param value  Short month name\r\n     * @return Month number\r\n     */\r\n    DateFormatter.prototype.resolveShortMonth = function (value) {\r\n        // Let's try English first\r\n        var month = this._monthsShort.indexOf(value);\r\n        if (month > -1) {\r\n            return month;\r\n        }\r\n        // Try the translation\r\n        if (this.language && !this.language.isDefault()) {\r\n            month = this.language.translateAll(this._monthsShort).indexOf(value);\r\n            if (month > -1) {\r\n                return month;\r\n            }\r\n        }\r\n        return 0;\r\n    };\r\n    /**\r\n     * Checks if passed in string represents AM/PM notation in many of its\r\n     * versions.\r\n     *\r\n     * @param value  Source string\r\n     * @return Is it AM/PM?\r\n     */\r\n    DateFormatter.prototype.isAm = function (value) {\r\n        var list = this.getStringList([\"AM\", \"A.M.\", \"A\"]);\r\n        return list.indexOf(value.toUpperCase()) > -1;\r\n    };\r\n    /**\r\n     * Invalidates related [[Sprite]] causing it to redraw.\r\n     */\r\n    DateFormatter.prototype.invalidateSprite = function () {\r\n        if (this.sprite) {\r\n            this.sprite.invalidate();\r\n        }\r\n    };\r\n    /**\r\n     * Translates list of strings.\r\n     *\r\n     * @param list  Source strings\r\n     * @return Translated strings\r\n     */\r\n    DateFormatter.prototype.getStringList = function (list) {\r\n        var res = [];\r\n        for (var i = 0; i < list.length; i++) {\r\n            res.push($utils.escapeForRgex(list[i]));\r\n            // translate?\r\n            if (this.language && !this.language.isDefault()) {\r\n                res.push($utils.escapeForRgex(this.language.translate(list[i])));\r\n            }\r\n        }\r\n        return res;\r\n    };\r\n    Object.defineProperty(DateFormatter.prototype, \"dateFormat\", {\r\n        /**\r\n         * @return Date format\r\n         */\r\n        get: function () {\r\n            return this._dateFormat;\r\n        },\r\n        /**\r\n         * Date format to use.\r\n         *\r\n         * If format is not supplied in-line in the string, this setting will be\r\n         * used.\r\n         *\r\n         * @default \"yyyy-MM-dd\"\r\n         * @param value Date format\r\n         */\r\n        set: function (value) {\r\n            this._dateFormat = value;\r\n            this.invalidateSprite();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DateFormatter.prototype, \"inputDateFormat\", {\r\n        /**\r\n         * @return Date format\r\n         */\r\n        get: function () {\r\n            return this._inputDateFormat;\r\n        },\r\n        /**\r\n         * Date format to use when parsing dates.\r\n         *\r\n         * @default \"yyyy-MM-dd\"\r\n         * @param value Date format\r\n         */\r\n        set: function (value) {\r\n            this._inputDateFormat = value;\r\n            this.invalidateSprite();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DateFormatter.prototype, \"intlLocales\", {\r\n        /**\r\n         * @return Date format\r\n         */\r\n        get: function () {\r\n            return this._intlLocales;\r\n        },\r\n        /**\r\n         * Locales if you are using date formats in `Intl.DateTimeFormatOptions` syntax.\r\n         *\r\n         * @param value Locales\r\n         */\r\n        set: function (value) {\r\n            this._intlLocales = value;\r\n            this.invalidateSprite();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DateFormatter.prototype, \"utc\", {\r\n        /**\r\n         * @return Use UTC?\r\n         */\r\n        get: function () {\r\n            return this._utc;\r\n        },\r\n        /**\r\n         * Should formatter use UTC functions?\r\n         *\r\n         * If UTC is used, all date/time values will be independent on client's\r\n         * time zone.\r\n         *\r\n         * @param value Use UTC?\r\n         */\r\n        set: function (value) {\r\n            this._utc = value;\r\n            this.invalidateSprite();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DateFormatter.prototype, \"timezoneOffset\", {\r\n        /**\r\n         * @return Offset (minutes)\r\n         */\r\n        get: function () {\r\n            return this._timezoneOffset;\r\n        },\r\n        /**\r\n         * If set, will format date/time in specific time zone.\r\n         *\r\n         * The value is a number of minutes from target time zone to UTC.\r\n         *\r\n         * E.g. `300` will recalculate Dates in \"GMT-5\" time zone.\r\n         *\r\n         * @param  value  Offset (minutes)\r\n         */\r\n        set: function (value) {\r\n            if (this._timezoneOffset != value) {\r\n                this._timezoneOffset = value;\r\n                this.invalidateSprite();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DateFormatter.prototype, \"firstDayOfWeek\", {\r\n        /**\r\n         * @return First day of week\r\n         */\r\n        get: function () {\r\n            return this._firstDayOfWeek;\r\n        },\r\n        /**\r\n         * First day of the week:\r\n         *\r\n         * * 0 - Sunday\r\n         * * 1 - Monday\r\n         * * 2 - Tuesday\r\n         *\r\n         * Etc.\r\n         *\r\n         * @param value First day of week\r\n         */\r\n        set: function (value) {\r\n            this._firstDayOfWeek = value;\r\n            this.invalidateSprite();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DateFormatter.prototype, \"outputFormat\", {\r\n        /**\r\n         * @ignore Exclude from docs\r\n         * @return Format\r\n         */\r\n        get: function () {\r\n            return this._outputFormat;\r\n        },\r\n        /**\r\n         * Output format for the formatted date.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @param value  Format\r\n         */\r\n        set: function (value) {\r\n            this._outputFormat = value.toLowerCase();\r\n            this.invalidateSprite();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return DateFormatter;\r\n}(BaseObject));\r\nexport { DateFormatter };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"DateFormatter\"] = DateFormatter;\r\n//# sourceMappingURL=DateFormatter.js.map","/**\r\n * Defines functionality for \"Data Item\"\r\n *\r\n * A Data Item can be any object that can hold data. For example [[LineSeries]]\r\n * holds a number of values, that comprise a line graph. Each of those values\r\n * (data points) is a {DataItem}.\r\n *\r\n * Furthermore the [[LineSeries]] itself can be represented as a entry in the\r\n * legend. Since legend needs access to Line Series' value, a DataItem is\r\n * created for the series.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObjectEvents } from \"./Base\";\r\nimport { Adapter } from \"./utils/Adapter\";\r\nimport { Animation, AnimationDisposer } from \"./utils/Animation\";\r\nimport * as $utils from \"./utils/Utils\";\r\nimport * as $array from \"./utils/Array\";\r\n//import * as $object from \"./utils/Object\";\r\nimport * as $type from \"./utils/Type\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * DataItem represents single element in data, for example a data point in a\r\n * Serial Chart Series, e.g. a column.\r\n *\r\n * DataItem defines relationship between structured data, required for specific\r\n * chart type or task, and raw source data.\r\n *\r\n * It also implements required calculations, updates related visual elements,\r\n * etc.\r\n *\r\n * @todo Description\r\n * @important\r\n */\r\nvar DataItem = /** @class */ (function (_super) {\r\n    __extends(DataItem, _super);\r\n    /**\r\n     * Constructor\r\n     * @todo Adding events to disposers produces errors in some cases, which means that chart is using disposed Data Items which is not right\r\n     */\r\n    function DataItem() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * This Data Item is currently disabled.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        _this._disabled = false;\r\n        /**\r\n         * Indicates whether Data Item has any properties set.\r\n         *\r\n         * If it does not have any, the code can use this property to check whether\r\n         * they need to apply costly operation of re-applying properties, whenever\r\n         * Data Item-related element is redrawn, e.g. series.\r\n         */\r\n        _this.hasProperties = false;\r\n        /**\r\n         * An object containing calculated values.\r\n         */\r\n        _this.values = {};\r\n        /**\r\n         * An object container current working values.\r\n         */\r\n        //public readonly workingValues: { [index: string]: { [index: string]: number } } = {};\r\n        /**\r\n         * An object containing categories.\r\n         */\r\n        _this.categories = {};\r\n        /**\r\n         * An object containing dates.\r\n         */\r\n        _this.dates = {};\r\n        /**\r\n         * An object containing locations for the Data Item.\r\n         *\r\n         * A location is a position within date or category, or, in some other cases,\r\n         * where there is no single point but rather some period.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/series/#Data_item_locations} for info how data item locations work\r\n         */\r\n        _this.locations = {};\r\n        /**\r\n         * Current working locations.\r\n         */\r\n        _this.workingLocations = {};\r\n        /**\r\n         * An object containing Data Item specific appearance properties in key-value\r\n         * pairs.\r\n         *\r\n         * Sometimes a single Data Item needs to apply different properties than the\r\n         * rest of the data [[Series]] it is part of. E.g. a single column,\r\n         * represented by a Data Item needs to be filled with a different color than\r\n         * the reset of the [[ColumnSeries]] it belongs to.\r\n         *\r\n         * That's where Data Item's `properties` come into play.\r\n         *\r\n         * Please note that you should set Data Item-specific properties using\r\n         * `setProperty()` method, rather than access `properties` object directly.\r\n         */\r\n        _this.properties = {};\r\n        /**\r\n         * A list of [[Sprite]] elements that are associated with this Data Item.\r\n         *\r\n         * E.g. an [[Axis]] Data Item has several separate elements associated with\r\n         * it, like [[AxisTick]], [[AxisLabel]], and [[Grid]].\r\n         *\r\n         * Data Item keeps track of all of them, so it can toggle all related visual\r\n         * elements when it itself is toggled.\r\n         */\r\n        _this.sprites = [];\r\n        /**\r\n         * Identifies if this object is a \"template\" and should not be treated as\r\n         * real object that is drawn or actually used in the chart.\r\n         */\r\n        _this.isTemplate = false;\r\n        /**\r\n         * The current index within the dataItems\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        _this._index = null;\r\n        /**\r\n         * Is Data Item currently visible?\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        _this._visible = true;\r\n        /**\r\n         * Is Data Item currently hidden?\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        _this._hidden = false;\r\n        /**\r\n         * Should this Data Item be used when calculating data ranges and scales?\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        _this._ignoreMinMax = false;\r\n        /**\r\n         * Some of the Data Item's data fields may contain an array of children. This\r\n         * property contains an object indicating which fields hold an array, so that\r\n         * they can be processed properly.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        _this.hasChildren = {};\r\n        /**\r\n         * Indicates whether Data Item is currently animiting from visible to hidden\r\n         * state.\r\n         */\r\n        _this.isHiding = false;\r\n        /**\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        _this._valueAnimations = {};\r\n        /**\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        _this._locationAnimations = {};\r\n        _this.className = \"DataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(DataItem.prototype, \"adapter\", {\r\n        /**\r\n         * Holds Adapter.\r\n         */\r\n        get: function () {\r\n            if (!this._adapterO) {\r\n                this._adapterO = new Adapter(this);\r\n            }\r\n            return this._adapterO;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DataItem.prototype, \"index\", {\r\n        /**\r\n         * Data Item's position index in Component's data.\r\n         *\r\n         * @return Index\r\n         */\r\n        get: function () {\r\n            if (this.component) {\r\n                if (this._index != null) {\r\n                    return this._index;\r\n                }\r\n                else {\r\n                    return -1;\r\n                }\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DataItem.prototype, \"animations\", {\r\n        /**\r\n         * A list of [[Animations]] objects currently mutating Data Item's values.\r\n         *\r\n         * @return [description]\r\n         */\r\n        get: function () {\r\n            if (!this._animations) {\r\n                this._animations = [];\r\n                this._disposers.push(new AnimationDisposer(this._animations));\r\n            }\r\n            return this._animations;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DataItem.prototype, \"visible\", {\r\n        /**\r\n         * Returns `true` if this Data Item is currently visible.\r\n         *\r\n         * @return Visible?\r\n         */\r\n        get: function () {\r\n            if (this._hidden) {\r\n                return false;\r\n            }\r\n            return this._visible;\r\n        },\r\n        /**\r\n         * Sets visibility of the Data Item.\r\n         *\r\n         * @param value Visible?\r\n         */\r\n        set: function (value) {\r\n            if (value) {\r\n                this.hidden = false;\r\n            }\r\n            if (this._visible != value) {\r\n                this.setVisibility(value);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DataItem.prototype, \"hidden\", {\r\n        /**\r\n         * Returns `true` if this Data Item is currently hidden.\r\n         *\r\n         * @return Hidden?\r\n         */\r\n        get: function () {\r\n            return this._hidden;\r\n        },\r\n        /**\r\n         * Sets hidden flag for data item. Mostly used to initially hide data item.\r\n         *\r\n         * @param value Hidden?\r\n         */\r\n        set: function (value) {\r\n            if (this._hidden != value) {\r\n                this._hidden = value;\r\n                if (value) {\r\n                    this.setVisibility(false);\r\n                }\r\n                else {\r\n                    this.setVisibility(true, true);\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DataItem.prototype, \"__disabled\", {\r\n        /**\r\n         * Is this Data Item currently disabled?\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @param {boolean}\r\n         */\r\n        get: function () {\r\n            return this._disabled;\r\n        },\r\n        /**\r\n         * Disables all Sprites associated with this Data Item.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @param {boolean}\r\n         */\r\n        set: function (value) {\r\n            //\tif (this._disabled != value) { // not good\r\n            this._disabled = value;\r\n            $array.each(this.sprites, function (sprite) {\r\n                sprite.__disabled = value;\r\n            });\r\n            //\t}\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Sets visibility of the Data Item.\r\n     *\r\n     * @param value Data Item\r\n     */\r\n    DataItem.prototype.setVisibility = function (value, noChangeValues) {\r\n        $array.each(this.sprites, function (sprite) {\r\n            if (value) {\r\n                sprite.visible = sprite.defaultState.properties.visible;\r\n            }\r\n            else {\r\n                if (sprite.hiddenState) {\r\n                    sprite.visible = sprite.hiddenState.properties.visible;\r\n                }\r\n                else {\r\n                    sprite.visible = false;\r\n                }\r\n            }\r\n        });\r\n        this._visible = value;\r\n        if (this._eventDispatcher && !this.__disabled) {\r\n            if (this.events.isEnabled(\"visibilitychanged\")) {\r\n                var event_1 = {\r\n                    type: \"visibilitychanged\",\r\n                    target: this,\r\n                    visible: value\r\n                };\r\n                this.events.dispatchImmediately(\"visibilitychanged\", event_1);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Shows the Data Item and related visual elements.\r\n     *\r\n     * @param duration  Animation duration (ms)\r\n     * @param delay     Delay animation (ms)\r\n     * @param fields    A list of fields to set values of\r\n     */\r\n    DataItem.prototype.show = function (duration, delay, fields) {\r\n        var _this = this;\r\n        if (!this.hidden) {\r\n            this.setVisibility(true, true);\r\n            this.isHiding = false;\r\n            if (this._hideDisposer) {\r\n                this.removeDispose(this._hideDisposer);\r\n            }\r\n            var animation_1;\r\n            if (fields) {\r\n                $array.each(fields, function (field) {\r\n                    animation_1 = _this.setWorkingValue(field, _this.values[field].value, duration, delay);\r\n                });\r\n            }\r\n            $array.each(this.sprites, function (sprite) {\r\n                var animation = sprite.show(duration);\r\n                if (animation != null && !animation.isFinished()) {\r\n                    _this._disposers.push(animation);\r\n                    if (delay != null && delay > 0) {\r\n                        animation.delay(delay);\r\n                    }\r\n                }\r\n            });\r\n            return animation_1;\r\n        }\r\n    };\r\n    /**\r\n     * Destroys this object and all related data.\r\n     */\r\n    DataItem.prototype.dispose = function () {\r\n        _super.prototype.dispose.call(this);\r\n        $array.each(this.sprites, function (sprite) {\r\n            sprite.dispose();\r\n        });\r\n        this.sprites = [];\r\n    };\r\n    /**\r\n     * Hides the Data Item and related visual elements.\r\n     *\r\n     * @param duration  Animation duration (ms)\r\n     * @param delay     Delay animation (ms)\r\n     * @param toValue   A value to set to `fields` when hiding\r\n     * @param fields    A list of data fields to set value to `toValue`\r\n     */\r\n    DataItem.prototype.hide = function (duration, delay, toValue, fields) {\r\n        var _this = this;\r\n        this.isHiding = true;\r\n        $array.each(this.sprites, function (sprite) {\r\n            var animation = sprite.hide(duration);\r\n            if (animation != null && !animation.isFinished()) {\r\n                _this._disposers.push(animation);\r\n                if (delay != null && delay > 0) {\r\n                    animation.delay(delay);\r\n                }\r\n            }\r\n        });\r\n        if ($type.isNumber(toValue) && fields) {\r\n            var animation_2;\r\n            $array.each(fields, function (field) {\r\n                var anim = _this.setWorkingValue(field, toValue, duration, delay);\r\n                if (anim) {\r\n                    animation_2 = anim;\r\n                }\r\n            });\r\n            if (animation_2 && !animation_2.isFinished()) {\r\n                this._hideDisposer = animation_2.events.on(\"animationended\", function () {\r\n                    _this.setVisibility(false, true);\r\n                    _this.isHiding = false;\r\n                });\r\n                this._disposers.push(this._hideDisposer);\r\n                return animation_2;\r\n            }\r\n            else {\r\n                this.isHiding = false;\r\n                this.setVisibility(false, true);\r\n            }\r\n        }\r\n        else {\r\n            this.isHiding = false;\r\n            this.setVisibility(false);\r\n        }\r\n    };\r\n    /**\r\n     * Returns a duration (ms) the Data Item should take to animate from one\r\n     * value to another.\r\n     *\r\n     * If the duration is not specified via parameter, this method will try to\r\n     * request a default duration from the related `Component`.\r\n     *\r\n     * @param duration  Default duration (ms)\r\n     * @return Duration (ms)\r\n     */\r\n    DataItem.prototype.getDuration = function (duration) {\r\n        if (!$type.isNumber(duration)) {\r\n            var component = this.component;\r\n            if (component) {\r\n                duration = component.interpolationDuration;\r\n            }\r\n        }\r\n        if (duration != null) {\r\n            if (!this._adapterO) {\r\n                return duration;\r\n            }\r\n            else {\r\n                return this._adapterO.apply(\"duration\", duration);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a numeric value for specific data field.\r\n     *\r\n     * If `calculated` is not set, it will return a raw value, as it is in\r\n     * source data.\r\n     *\r\n     * If `calculated` is set, it will return a pre-calculated specific value.\r\n     *\r\n     * @param name        Data field name\r\n     * @param calculated  A calculated value name\r\n     * @return Value\r\n     */\r\n    DataItem.prototype.getValue = function (name, calculated) {\r\n        if (name && this.component) {\r\n            if (!calculated) {\r\n                calculated = this.component.dataFields[name + \"Show\"];\r\n                if (!calculated) {\r\n                    calculated = \"value\";\r\n                }\r\n            }\r\n            var value = this.values[name][calculated];\r\n            if (this._adapterO && this._adapterO.isEnabled(\"value\")) {\r\n                return this._adapterO.apply(\"value\", {\r\n                    value: value,\r\n                    field: name\r\n                }).value;\r\n            }\r\n            else {\r\n                return value;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a current working value for a specific data field.\r\n     *\r\n     * The actual value may differ from the one returned by `getValue()`. The\r\n     * latter returns static values from the data source.\r\n     *\r\n     * `getWorkingValue()` returns current value, which is usually different if\r\n     * Data Item is animating from one state to another.\r\n     *\r\n     * @param name        Data field name\r\n     * @return Value\r\n     */\r\n    DataItem.prototype.getWorkingValue = function (name) {\r\n        if (name && this.component) {\r\n            var realName = this.component.dataFields[name + \"Show\"];\r\n            if (!realName) {\r\n                realName = \"workingValue\";\r\n            }\r\n            if (this._adapterO) {\r\n                return this._adapterO.apply(\"workingValue\", {\r\n                    workingValue: this.values[name][realName],\r\n                    field: name\r\n                }).workingValue;\r\n            }\r\n            else {\r\n                return this.values[name][realName];\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @ignore\r\n     * @return Value\r\n     */\r\n    DataItem.prototype.getActualWorkingValue = function (name) {\r\n        return this.values[name].workingValue;\r\n    };\r\n    /**\r\n     * Sets a numeric value for specific data field.\r\n     *\r\n     * @param name        Data field name\r\n     * @param value       Value\r\n     * @param calculated  Calculated data field name\r\n     * @param duration    Duration (ms) to animate to new value to\r\n     * @param delay       Delay animation (ms)\r\n     */\r\n    DataItem.prototype.setValue = function (name, value, duration, delay) {\r\n        var currentValue = this.values[name].value;\r\n        var newDuration = this.getDuration(duration);\r\n        value = $type.toNumber(value);\r\n        if (currentValue !== value) {\r\n            this.values[name].value = value;\r\n            if (this._eventDispatcher && !this.__disabled) {\r\n                if (this.events.isEnabled(\"valuechanged\")) {\r\n                    var event_2 = {\r\n                        type: \"valuechanged\",\r\n                        target: this,\r\n                        property: name\r\n                    };\r\n                    this.events.dispatchImmediately(\"valuechanged\", event_2);\r\n                }\r\n            }\r\n            if (this.component) {\r\n                this.component.handleDataItemValueChange(this, name);\r\n            }\r\n        }\r\n        this.setWorkingValue(name, value, newDuration, delay);\r\n    };\r\n    DataItem.prototype.setCalculatedValue = function (name, value, calculated) {\r\n        var currentValue = this.values[name][calculated];\r\n        if (currentValue !== value && $type.isNumber(value)) {\r\n            this.values[name][calculated] = value;\r\n            if (this._eventDispatcher && !this.__disabled) {\r\n                if (this.events.isEnabled(\"calculatedvaluechanged\")) {\r\n                    var event_3 = {\r\n                        type: \"calculatedvaluechanged\",\r\n                        target: this,\r\n                        property: name\r\n                    };\r\n                    this.events.dispatchImmediately(\"calculatedvaluechanged\", event_3);\r\n                }\r\n            }\r\n            if (this.component) {\r\n                this.component.handleDataItemCalculatedValueChange(this, name);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Set current working numeric value for a specific data field.\r\n     *\r\n     * @param name        Data field name\r\n     * @param value       Value\r\n     * @param calculated  Calculated data field name\r\n     * @param duration    Duration (ms) to animate to new value to\r\n     * @param delay       Delay animation (ms)\r\n     * @return An [[Animation]] object used for transition to new values\r\n     */\r\n    DataItem.prototype.setWorkingValue = function (name, value, duration, delay) {\r\n        if ($type.isNumber(this.values[name].value)) {\r\n            var newDuration = this.getDuration(duration);\r\n            var workingValue = this.values[name].workingValue;\r\n            if (newDuration != null && newDuration > 0 && $type.isNumber(workingValue) && this.component) { // sometimes NaN is passed, so only change this to != null if all cases of NaN are handled, otherwise animation won't stop\r\n                if (workingValue != value) {\r\n                    var animation = this.animate({ childObject: this.values[name], property: \"workingValue\", from: workingValue, to: value, dummyData: name }, newDuration, this.component.interpolationEasing);\r\n                    if (delay != null) {\r\n                        animation.delay(delay);\r\n                    }\r\n                    animation.events.on(\"animationstarted\", this.handleInterpolationProgress, this);\r\n                    animation.events.on(\"animationprogress\", this.handleInterpolationProgress, this);\r\n                    animation.events.on(\"animationended\", this.handleInterpolationProgress, this);\r\n                    this._valueAnimations[name] = animation;\r\n                    return animation;\r\n                }\r\n                else {\r\n                    var valueAnimation = this._valueAnimations[name];\r\n                    if (valueAnimation) {\r\n                        valueAnimation.stop();\r\n                    }\r\n                    this.values[name].workingValue = value;\r\n                }\r\n            }\r\n            else {\r\n                var valueAnimation = this._valueAnimations[name];\r\n                if (valueAnimation) {\r\n                    valueAnimation.stop();\r\n                }\r\n                this.values[name].workingValue = value;\r\n                if (this._eventDispatcher && !this.__disabled) {\r\n                    if (this.events.isEnabled(\"workingvaluechanged\")) {\r\n                        var event_4 = {\r\n                            type: \"workingvaluechanged\",\r\n                            target: this,\r\n                            property: name\r\n                        };\r\n                        this.events.dispatchImmediately(\"workingvaluechanged\", event_4);\r\n                    }\r\n                }\r\n                if (this.component) {\r\n                    this.component.handleDataItemWorkingValueChange(this, name);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets a relative location for a data field.\r\n     *\r\n     * A location is always relative on a 0 to 1 scale, with 0 being beginning,\r\n     * 0.5 middle and 1 end.\r\n     *\r\n     * @todo Rewiew description\r\n     * @param name      Data field name\r\n     * @param value     Location (0-1)\r\n     * @param duration  Duration (ms) to animate to new value to\r\n     * @param delay     Delay animation (ms)\r\n     */\r\n    DataItem.prototype.setLocation = function (name, value, duration, delay) {\r\n        var currentLocation = this.locations[name];\r\n        if (currentLocation !== value) {\r\n            this.locations[name] = value;\r\n            if (this._eventDispatcher && !this.__disabled) {\r\n                if (this.events.isEnabled(\"locationchanged\")) {\r\n                    var event_5 = {\r\n                        type: \"locationchanged\",\r\n                        target: this,\r\n                        property: name\r\n                    };\r\n                    this.events.dispatchImmediately(\"locationchanged\", event_5);\r\n                }\r\n            }\r\n            if (this.component) {\r\n                this.component.handleDataItemValueChange(this, name); // correct\r\n            }\r\n            this.setWorkingLocation(name, value, duration, delay);\r\n        }\r\n    };\r\n    /**\r\n     * Sets a current working location for a data field.\r\n     *\r\n     * @todo Rewiew description\r\n     * @param name      Data field name\r\n     * @param value     Location (0-1)\r\n     * @param duration  Duration (ms) to animate to new value to\r\n     * @param delay     Delay animation (ms)\r\n     */\r\n    DataItem.prototype.setWorkingLocation = function (name, value, duration, delay) {\r\n        var newDuration = this.getDuration(duration);\r\n        var workingLocation = this.workingLocations[name];\r\n        if (newDuration != null && newDuration > 0 && $type.isNumber(workingLocation) && this.component) { // sometimes NaN is passed, so only change this to != null if all cases of NaN are handled, otherwise animation won't stop\r\n            if (workingLocation != value) {\r\n                var animation = this.animate({ childObject: this.workingLocations, property: name, from: workingLocation, to: value, dummyData: name }, newDuration, this.component.interpolationEasing);\r\n                if (delay != null) {\r\n                    animation.delay(delay);\r\n                }\r\n                animation.events.on(\"animationstarted\", this.handleInterpolationProgress, this);\r\n                animation.events.on(\"animationprogress\", this.handleInterpolationProgress, this);\r\n                animation.events.on(\"animationended\", this.handleInterpolationProgress, this);\r\n                this._locationAnimations[name] = animation;\r\n                return animation;\r\n            }\r\n            else {\r\n                var locationAnimation = this._locationAnimations[name];\r\n                if (locationAnimation) {\r\n                    locationAnimation.stop();\r\n                }\r\n                this.workingLocations[name] = value;\r\n            }\r\n        }\r\n        else {\r\n            var locationAnimation = this._locationAnimations[name];\r\n            if (locationAnimation) {\r\n                locationAnimation.stop();\r\n            }\r\n            this.workingLocations[name] = value;\r\n            if (this._eventDispatcher && !this.__disabled) {\r\n                if (this.events.isEnabled(\"workinglocationchanged\")) {\r\n                    var event_6 = {\r\n                        type: \"workinglocationchanged\",\r\n                        target: this,\r\n                        property: name\r\n                    };\r\n                    this.events.dispatchImmediately(\"workinglocationchanged\", event_6);\r\n                }\r\n            }\r\n            if (this.component) {\r\n                this.component.handleDataItemWorkingLocationChange(this, name);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets Date value to a data field.\r\n     *\r\n     * @param name      Data field name\r\n     * @param date      Date object\r\n     * @param duration  Duration (ms) to animate to new value to\r\n     */\r\n    DataItem.prototype.setDate = function (name, date, duration) {\r\n        if (!$type.isDate(date) && this.component) {\r\n            date = this.component.dateFormatter.parse(date);\r\n        }\r\n        var currentDate = this.dates[name];\r\n        if (currentDate !== date) {\r\n            this.dates[name] = date;\r\n            this.setValue(name, date.getTime(), duration);\r\n        }\r\n    };\r\n    /**\r\n     * Returns a Date value of the data field.\r\n     *\r\n     * @param name  Data field name\r\n     * @return Date object\r\n     */\r\n    DataItem.prototype.getDate = function (name) {\r\n        if (this._adapterO) {\r\n            return this._adapterO.apply(\"date\", {\r\n                date: this.dates[name],\r\n                field: name\r\n            }).date;\r\n        }\r\n        else {\r\n            return this.dates[name];\r\n        }\r\n    };\r\n    /**\r\n     * Sets a Data Item-specific visual properties to apply to related elements.\r\n     *\r\n     * @param name   Property name\r\n     * @param value  Property value\r\n     */\r\n    DataItem.prototype.setProperty = function (name, value) {\r\n        if (this.properties[name] !== value) {\r\n            this.hasProperties = true;\r\n            this.properties[name] = value;\r\n            if (this._eventDispatcher && !this.__disabled) {\r\n                if (this.events.isEnabled(\"propertychanged\")) {\r\n                    var event_7 = {\r\n                        type: \"propertychanged\",\r\n                        target: this,\r\n                        property: name,\r\n                        value: value\r\n                    };\r\n                    this.events.dispatchImmediately(\"propertychanged\", event_7);\r\n                }\r\n            }\r\n            if (this.component) {\r\n                this.component.handleDataItemPropertyChange(this, name);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets a related category for this Data Item.\r\n     *\r\n     * @todo Review description\r\n     * @param name   Data field name\r\n     * @param value  Category\r\n     */\r\n    DataItem.prototype.setCategory = function (name, value) {\r\n        if (!$type.isString(value)) {\r\n            value = $type.castString(value);\r\n        }\r\n        if (this.categories[name] !== value) {\r\n            this.categories[name] = value;\r\n        }\r\n    };\r\n    /**\r\n     * Clones the Data Item, including all related data.\r\n     *\r\n     * @return New Data Item clone\r\n     */\r\n    //public clone(cloneId?: string): this {\r\n    //\tlet dataItem: this = super.clone(cloneId);\r\n    //\tdataItem.copyFrom(this);\r\n    //\treturn dataItem;\r\n    //}\r\n    /**\r\n     * Copies all properties and related data from different data item.\r\n     *\r\n     * @param object Source data item\r\n     */\r\n    DataItem.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        if (source.dataContext) {\r\n            this.dataContext = $utils.copy(source.dataContext, {});\r\n        }\r\n        $utils.copyProperties(source.locations, this.locations);\r\n        /*\r\n        $utils.copyProperties(source.properties, this.properties);\r\n        $utils.copyProperties(source.categories, this.categories);\r\n        $utils.copyProperties(source.values, this.values);\r\n        $utils.copyProperties(source.dates, this.dates);\r\n\r\n        $object.each(source.values, (name, value) => {\r\n            this.values[name] = $object.copy(value);\r\n        });*/\r\n        if (source._adapterO) {\r\n            this.adapter.copyFrom(source._adapterO);\r\n        }\r\n        //this.events.copyFrom(source.events); // because copied in Base\r\n        this.component = source.component;\r\n    };\r\n    Object.defineProperty(DataItem.prototype, \"opacity\", {\r\n        /**\r\n         * Sets opacity for all Data Item's related elements (Sprites).\r\n         *\r\n         * @param value Opacity (0-1)\r\n         */\r\n        set: function (value) {\r\n            $array.each(this.sprites, function (sprite) {\r\n                sprite.opacity = value;\r\n            });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DataItem.prototype, \"ignoreMinMax\", {\r\n        /**\r\n         * Exclude from min/max calculations?\r\n         * @return Exclude from min/max calculations?\r\n         */\r\n        get: function () {\r\n            return this._ignoreMinMax;\r\n        },\r\n        /**\r\n         * Sets whether this data point should not be included in the scale and\r\n         * minimum/maximum calculations.\r\n         *\r\n         * E.g. some we may want to exclude a particular data point from influencing\r\n         * [[ValueAxis]] scale.\r\n         *\r\n         * @param value  Exclude from min/max calculations?\r\n         */\r\n        set: function (value) {\r\n            this._ignoreMinMax = value;\r\n            if (this._eventDispatcher && !this.__disabled) {\r\n                if (this.events.isEnabled(\"propertychanged\")) {\r\n                    var event_8 = {\r\n                        type: \"propertychanged\",\r\n                        target: this,\r\n                        property: \"ignoreMinMax\",\r\n                        value: value\r\n                    };\r\n                    this.events.dispatchImmediately(\"propertychanged\", event_8);\r\n                }\r\n            }\r\n            if (this.component) {\r\n                this.component.handleDataItemPropertyChange(this, \"ignoreMinMax\");\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates and starts an [[Animation]] to interpolate (morph) Data Item's\r\n     * properties and/or values.\r\n     *\r\n     * @see {@link Animation}\r\n     * @param animationOptions  Animation options\r\n     * @param duration          Animation duration (ms)\r\n     * @param easing            Easing function\r\n     * @return Animation\r\n     */\r\n    DataItem.prototype.animate = function (animationOptions, duration, easing) {\r\n        return new Animation(this, animationOptions, duration, easing).start();\r\n    };\r\n    /**\r\n     * Handles intermediate steps when Data Item is interpolating (morphing) from\r\n     * one value to another.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param event Event object\r\n     */\r\n    DataItem.prototype.handleInterpolationProgress = function (event) {\r\n        var animation = event.target;\r\n        // it's always only one options, no need cycle\r\n        var animationOptions = animation.animationOptions[0];\r\n        if (animationOptions) {\r\n            if (this._eventDispatcher && !this.__disabled) {\r\n                if (this.events.isEnabled(\"workingvaluechanged\")) {\r\n                    var event_9 = {\r\n                        type: \"workingvaluechanged\",\r\n                        target: this,\r\n                        property: animationOptions.dummyData\r\n                    };\r\n                    this.events.dispatchImmediately(\"workingvaluechanged\", event_9);\r\n                }\r\n            }\r\n            if (this.component) {\r\n                this.component.handleDataItemWorkingValueChange(this, animationOptions.dummyData);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Checks whether Data Item has values set for all of the data fields,\r\n     * supplied via argument.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param fields  Field list to check\r\n     * @return Has values for all fields?\r\n     */\r\n    DataItem.prototype.hasValue = function (fields) {\r\n        // todo: what about categories?\r\n        for (var i = 0, len = fields.length; i < len; i++) {\r\n            var values = this.values[fields[i]];\r\n            if (!values || !$type.hasValue(values.value)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    Object.defineProperty(DataItem.prototype, \"depth\", {\r\n        /**\r\n         * Depth of the Data Item.\r\n         *\r\n         * In nested data structures, like TreeMap, this indicates the level this\r\n         * data point is at, in relation to the parent Data Item.\r\n         *\r\n         * @return Depth\r\n         */\r\n        get: function () {\r\n            if (!this.parent) {\r\n                return 0;\r\n            }\r\n            else {\r\n                return this.parent.depth + 1;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DataItem.prototype, \"dataContext\", {\r\n        /**\r\n         * Sets to a reference to an original object from Component's data.\r\n         *\r\n         * @return [description]\r\n         */\r\n        get: function () {\r\n            return this._dataContext;\r\n        },\r\n        /**\r\n         * A reference to an original object in Component's data, that this Data Item\r\n         * is derived from.\r\n         *\r\n         * @param value Original data object\r\n         */\r\n        set: function (value) {\r\n            this._dataContext = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * adds a sprite to dataItem.sprites array\r\n     * @ignore\r\n     */\r\n    DataItem.prototype.addSprite = function (sprite) {\r\n        if (sprite.dataItem && sprite.dataItem != this) {\r\n            $array.remove(sprite.dataItem.sprites, sprite);\r\n        }\r\n        if (!this.visible) {\r\n            sprite.hide(0);\r\n        }\r\n        if (this.isHiding) {\r\n            sprite.hide();\r\n        }\r\n        this.sprites.push(sprite);\r\n        sprite.dataItem = this;\r\n    };\r\n    return DataItem;\r\n}(BaseObjectEvents));\r\nexport { DataItem };\r\n//# sourceMappingURL=DataItem.js.map","/**\r\n * Functionality for drawing simple buttons.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container } from \"../Container\";\r\nimport { Label } from \"./Label\";\r\nimport { RoundedRectangle } from \"../elements/RoundedRectangle\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { registry } from \"../Registry\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Button class is capable of drawing a simple rectangular button with\r\n * optionally rounded corners and an icon in it.\r\n *\r\n * @see {@link IButtonEvents} for a list of available events\r\n * @see {@link IButtonAdapters} for a list of available Adapters\r\n */\r\nvar Button = /** @class */ (function (_super) {\r\n    __extends(Button, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Button() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        _this.className = \"Button\";\r\n        _this.tooltipY = 0;\r\n        // Set defaults\r\n        _this.iconPosition = \"left\";\r\n        _this.layout = \"horizontal\";\r\n        _this.contentAlign = \"center\";\r\n        _this.contentValign = \"middle\";\r\n        _this.padding(8, 16, 8, 16);\r\n        var interfaceColors = new InterfaceColorSet();\r\n        // Create background\r\n        var background = _this.background;\r\n        background.fill = interfaceColors.getFor(\"secondaryButton\");\r\n        background.stroke = interfaceColors.getFor(\"secondaryButtonStroke\");\r\n        background.fillOpacity = 1;\r\n        background.strokeOpacity = 1;\r\n        background.cornerRadius(3, 3, 3, 3);\r\n        // Create the label element\r\n        _this.label = new Label();\r\n        _this.label.fill = interfaceColors.getFor(\"secondaryButtonText\");\r\n        ;\r\n        // Create default states\r\n        var hoverState = background.states.create(\"hover\");\r\n        hoverState.properties.fillOpacity = 1;\r\n        hoverState.properties.fill = interfaceColors.getFor(\"secondaryButtonHover\");\r\n        var downState = background.states.create(\"down\");\r\n        downState.transitionDuration = 100;\r\n        downState.properties.fill = interfaceColors.getFor(\"secondaryButtonDown\");\r\n        downState.properties.fillOpacity = 1;\r\n        // Set up accessibility\r\n        // A button should be always focusable\r\n        _this.role = \"button\";\r\n        _this.focusable = true;\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Button.prototype, \"icon\", {\r\n        /**\r\n         * @return Icon Sprite\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"icon\");\r\n        },\r\n        /**\r\n         * A [[Sprite]] to be used as an icon on button.\r\n         *\r\n         * @param icon Icon Sprite\r\n         */\r\n        set: function (icon) {\r\n            var currentIcon = this.getPropertyValue(\"icon\");\r\n            if (currentIcon) {\r\n                //this._icon.dispose();\r\n                //this.removeDispose(currentIcon);\r\n                currentIcon.parent = undefined;\r\n            }\r\n            if (icon) {\r\n                this.setPropertyValue(\"icon\", icon);\r\n                icon.parent = this;\r\n                icon.interactionsEnabled = false;\r\n                this.iconPosition = this.iconPosition;\r\n                this._disposers.push(icon);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Button.prototype, \"iconPosition\", {\r\n        /**\r\n         * @return Icon position\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"iconPosition\");\r\n        },\r\n        /**\r\n         * Icon position: \"left\" or \"right\".\r\n         *\r\n         * @default \"left\"\r\n         * @param position  Icon position\r\n         */\r\n        set: function (position) {\r\n            this.setPropertyValue(\"iconPosition\", position);\r\n            if (this.icon) {\r\n                if (position == \"left\") {\r\n                    this.icon.toBack();\r\n                }\r\n                else {\r\n                    this.icon.toFront();\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Button.prototype, \"label\", {\r\n        /**\r\n         * @return Label element\r\n         */\r\n        get: function () {\r\n            return this._label;\r\n        },\r\n        /**\r\n         * [[Label]] element to be used for text.\r\n         *\r\n         * @param label element\r\n         */\r\n        set: function (label) {\r\n            if (this._label) {\r\n                //this._label.dispose();\r\n                this.removeDispose(this._label);\r\n            }\r\n            this._label = label;\r\n            if (label) {\r\n                label.parent = this;\r\n                label.interactionsEnabled = false;\r\n                this._disposers.push(this._label);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a background element for the button.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Background element\r\n     */\r\n    Button.prototype.createBackground = function () {\r\n        return new RoundedRectangle();\r\n    };\r\n    return Button;\r\n}(Container));\r\nexport { Button };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Button\"] = Button;\r\n//# sourceMappingURL=Button.js.map","/**\r\n * Contains code and logic for generating radial gradients.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObject } from \"../../Base\";\r\nimport { List } from \"../../utils/List\";\r\nimport { getGhostPaper } from \"../Paper\";\r\nimport { registry } from \"../../Registry\";\r\nimport * as $iter from \"../../utils/Iterator\";\r\nimport * as $type from \"../../utils/Type\";\r\nimport { Percent } from \"../../utils/Percent\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Radial gradient class.\r\n */\r\nvar RadialGradient = /** @class */ (function (_super) {\r\n    __extends(RadialGradient, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function RadialGradient() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * List of colors switch definitions in a gradient.\r\n         */\r\n        _this._stops = new List();\r\n        _this.element = _this.paper.addGroup(\"radialGradient\");\r\n        _this.id = \"gradient-\" + registry.getUniqueId();\r\n        _this.element.attr({ \"id\": _this.id });\r\n        _this._disposers.push(_this.element);\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Draws gradient.\r\n     */\r\n    RadialGradient.prototype.draw = function () {\r\n        var _this = this;\r\n        var gradientElement = this.element;\r\n        if ($type.isNumber(this.cx)) {\r\n            var value = this.cx;\r\n            if (value instanceof Percent) {\r\n                value = value.percent + \"%\";\r\n            }\r\n            gradientElement.attr({ \"cx\": value });\r\n        }\r\n        if ($type.isNumber(this.cy)) {\r\n            var value = this.cy;\r\n            if (value instanceof Percent) {\r\n                value = value.percent + \"%\";\r\n            }\r\n            gradientElement.attr({ \"cy\": value });\r\n        }\r\n        if (this.fx) {\r\n            var value = this.fx;\r\n            if (value instanceof Percent) {\r\n                value = value.percent + \"%\";\r\n            }\r\n            gradientElement.attr({ \"fx\": value });\r\n        }\r\n        if (this.fy) {\r\n            var value = this.fy;\r\n            if (value instanceof Percent) {\r\n                value = value.percent + \"%\";\r\n            }\r\n            gradientElement.attr({ \"fy\": value });\r\n        }\r\n        gradientElement.removeChildNodes();\r\n        $iter.each($iter.indexed(this._stops.iterator()), function (a) {\r\n            var i = a[0];\r\n            var stop = a[1];\r\n            var offset = stop.offset;\r\n            if (!$type.isNumber(offset)) {\r\n                offset = i / (_this._stops.length - 1);\r\n            }\r\n            var gradientStop = _this.paper.add(\"stop\");\r\n            if ($type.hasValue(stop.color)) {\r\n                gradientStop.attr({ \"stop-color\": stop.color.toString() });\r\n            }\r\n            if ($type.isNumber(stop.opacity)) {\r\n                gradientStop.attr({ \"stop-opacity\": stop.opacity });\r\n            }\r\n            if ($type.isNumber(offset)) {\r\n                gradientStop.attr({ \"offset\": offset });\r\n            }\r\n            gradientElement.add(gradientStop);\r\n        });\r\n    };\r\n    /**\r\n     * Adds a color step to the gradient.\r\n     *\r\n     * @param color    Color (hex code or named color)\r\n     * @param opacity  Opacity (value from 0 to 1; 0 completely transaprent, 1 fully opaque)\r\n     * @param offset   Position of color in the gradient (value 0 to 1; 0 meaning start of the gradient and 1 end)\r\n     */\r\n    RadialGradient.prototype.addColor = function (color, opacity, offset) {\r\n        this._stops.push({ color: color, opacity: opacity, offset: offset });\r\n        this.draw();\r\n    };\r\n    Object.defineProperty(RadialGradient.prototype, \"paper\", {\r\n        /**\r\n         * @ignore Exclude from docs\r\n         * @return Paper\r\n         */\r\n        get: function () {\r\n            if (this._paper) {\r\n                return this._paper;\r\n            }\r\n            return getGhostPaper();\r\n        },\r\n        /**\r\n         * A [[Paper]] instace to use for the gradient.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @param paper  Paper\r\n         */\r\n        set: function (paper) {\r\n            if (this._paper != paper) {\r\n                this._paper = paper;\r\n                this.draw();\r\n                paper.appendDef(this.element);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RadialGradient.prototype, \"cx\", {\r\n        get: function () {\r\n            return this._cx;\r\n        },\r\n        /**\r\n         * Center x coordinate of the gradient, can be set as number or Percent\r\n         *\r\n         * @param point  Center point\r\n         */\r\n        set: function (value) {\r\n            this._cx = value;\r\n            this.draw();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RadialGradient.prototype, \"cy\", {\r\n        get: function () {\r\n            return this._cy;\r\n        },\r\n        /**\r\n         * Center y coordinate of the gradient, can be set as number or Percent\r\n         *\r\n         * @param point  Center point\r\n         */\r\n        set: function (value) {\r\n            this._cy = value;\r\n            this.draw();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RadialGradient.prototype, \"fx\", {\r\n        get: function () {\r\n            return this._fx;\r\n        },\r\n        /**\r\n         * y coordinate of the focal point of a gradient, can be set in pixels or as Percent\r\n         *\r\n         * @param point  Center point\r\n         */\r\n        set: function (value) {\r\n            this._fx = value;\r\n            this.draw();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RadialGradient.prototype, \"fy\", {\r\n        get: function () {\r\n            return this._fy;\r\n        },\r\n        /**\r\n         * y coordinate of the focal point of a gradient, can be set in pixels or as Percent\r\n         *\r\n         * @param point  Center point\r\n         */\r\n        set: function (value) {\r\n            this._fy = value;\r\n            this.draw();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    RadialGradient.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        this.stops.copyFrom(source.stops);\r\n        this.cx = source.cx;\r\n        this.cy = source.cy;\r\n        this.fx = source.fx;\r\n        this.fy = source.fy;\r\n    };\r\n    Object.defineProperty(RadialGradient.prototype, \"stops\", {\r\n        /**\r\n         * A list of color stops in the gradient.\r\n         *\r\n         * @return Stops\r\n         */\r\n        get: function () {\r\n            return this._stops;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Clears the gradient.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    RadialGradient.prototype.clear = function () {\r\n        this._stops.clear();\r\n    };\r\n    return RadialGradient;\r\n}(BaseObject));\r\nexport { RadialGradient };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"RadialGradient\"] = RadialGradient;\r\n//# sourceMappingURL=RadialGradient.js.map","/**\r\n * This module contains a base class for an SVG filter.\r\n *\r\n * Filters can be used to decorate, change and transform just about any DOM\r\n * element.\r\n *\r\n * A Filter works by applying one or more effects (primitives) to SVG element.\r\n *\r\n * For more information on how SVG filters work, refer to\r\n * [this MDN tutorial](https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/SVG_Filters_Tutorial).\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObject } from \"../../Base\";\r\nimport { getGhostPaper } from \"../Paper\";\r\nimport { Animation, AnimationDisposer } from \"../../utils/Animation\";\r\nimport { List } from \"../../utils/List\";\r\nimport * as $object from \"../../utils/Object\";\r\nimport * as $iter from \"../../utils/Iterator\";\r\n;\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Base filter class.\r\n *\r\n * This class while can be instantiated will not do anything. It is just a base\r\n * functionality for any other \"real\" filters to extend.\r\n *\r\n * Filters can be used to decorate, change and transform just about any DOM\r\n * element.\r\n *\r\n * A Filter works by applying one or more effects (primitives) to SVG element.\r\n *\r\n * For more information on how SVG filters work, refer to\r\n * [this MDN tutorial](https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/SVG_Filters_Tutorial).\r\n *\r\n * @todo Example\r\n */\r\nvar Filter = /** @class */ (function (_super) {\r\n    __extends(Filter, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Filter() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        /**\r\n         * A storage for Filter property/value pairs.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @see {@link FilterProperties}\r\n         */\r\n        _this.properties = {};\r\n        /**\r\n         * Identifies if this object is a \"template\" and should not be treated as\r\n         * real object that is drawn or actually used in the chart.\r\n         */\r\n        _this.isTemplate = false;\r\n        /**\r\n         * [_scale description]\r\n         *\r\n         * @todo Description\r\n         */\r\n        _this._scale = 1;\r\n        /**\r\n         * [_nonScaling description]\r\n         *\r\n         * @todo Description\r\n         */\r\n        _this._nonScaling = true;\r\n        _this.className = \"Filter\";\r\n        // Create a list to hold primitives (effect elements)\r\n        _this.filterPrimitives = new List();\r\n        // Automatically add added primitives to `_disposers` so they are discarded\r\n        // when Filter object is destroyed (disposed)\r\n        _this.filterPrimitives.events.on(\"inserted\", function (ev) {\r\n            _this._disposers.push(ev.newValue);\r\n        });\r\n        // Set default dimensions\r\n        _this.width = 120;\r\n        _this.height = 120;\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Appends actual filter elements to the filter group.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param filterElement An SVG `<group>` element to add filter element to\r\n     */\r\n    Filter.prototype.appendPrimitives = function (filterElement) {\r\n        $iter.each(this.filterPrimitives.iterator(), function (filterPrimitive) {\r\n            filterElement.add(filterPrimitive);\r\n        });\r\n    };\r\n    /**\r\n     * Uses Transitions filter's values from current to target. This is used to\r\n     * smoothly appear filter, rather than it pop into effect.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param animationOptions  Animation options\r\n     * @param duration          Duration in milliseconds\r\n     * @param easing            Easing function\r\n     * @return Animation instance\r\n     */\r\n    Filter.prototype.animate = function (animationOptions, duration, easing) {\r\n        var animation = new Animation(this, animationOptions, duration, easing).start();\r\n        return animation;\r\n    };\r\n    Object.defineProperty(Filter.prototype, \"width\", {\r\n        /**\r\n         * @return Width (%)\r\n         */\r\n        get: function () {\r\n            return this.properties[\"width\"];\r\n        },\r\n        /**\r\n         * Width of the filter element in percent.\r\n         *\r\n         * If the filter is designed to \"bleed out\" of the original target element,\r\n         * like for example a shadow, you need this bigger than 100, or the\r\n         * non-fitting parts will be clipped.\r\n         *\r\n         * @default 120\r\n         * @param value Width (px)\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"width\"] = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Filter.prototype, \"height\", {\r\n        /**\r\n         * @return Height\r\n         */\r\n        get: function () {\r\n            return this.properties[\"height\"];\r\n        },\r\n        /**\r\n         * Height of the filter element in percent.\r\n         *\r\n         * If the filter is designed to \"bleed out\" of the original target element,\r\n         * like for example a shadow, you need this bigger than 100, or the\r\n         * non-fitting parts will be clipped.\r\n         *\r\n         * @default 120\r\n         * @param value Height (%)\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"height\"] = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Copies properties from another [[Filter]] object.\r\n     *\r\n     * @param filter Source [[Filter]] object\r\n     */\r\n    Filter.prototype.copyFrom = function (filter) {\r\n        var _this = this;\r\n        _super.prototype.copyFrom.call(this, filter);\r\n        $object.each(filter.properties, function (key, value) {\r\n            _this[key] = value;\r\n        });\r\n    };\r\n    Object.defineProperty(Filter.prototype, \"paper\", {\r\n        /**\r\n         * @return Paper\r\n         */\r\n        get: function () {\r\n            if (this._paper) {\r\n                return this._paper;\r\n            }\r\n            return getGhostPaper();\r\n        },\r\n        /**\r\n         * Sets [[Paper]] instance to create filter's elements in.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @param paper  Paper\r\n         */\r\n        set: function (paper) {\r\n            if (this._paper != paper) {\r\n                this._paper = paper;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Filter.prototype, \"animations\", {\r\n        /**\r\n         * All animations currently in play.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return List of animations\r\n         */\r\n        get: function () {\r\n            if (!this._animations) {\r\n                this._animations = [];\r\n                this._disposers.push(new AnimationDisposer(this._animations));\r\n            }\r\n            return this._animations;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Filter.prototype, \"scale\", {\r\n        /**\r\n         * @ignore Exclude from docs\r\n         */\r\n        get: function () {\r\n            return this._scale;\r\n        },\r\n        /**\r\n         * [[Sprite]] uses this method to inform filter about it's scale.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        set: function (value) {\r\n            this._scale = value;\r\n            this.updateScale();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates filter properties which depend on scale.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Filter.prototype.updateScale = function () {\r\n        // Dummy method for extending classes to override.\r\n    };\r\n    Object.defineProperty(Filter.prototype, \"nonScaling\", {\r\n        /**\r\n         * @return Non scaling?\r\n         */\r\n        get: function () {\r\n            return this._nonScaling;\r\n        },\r\n        /**\r\n         * If a filter is non scaling, it will look the same even if the sprite is\r\n         * scaled, otherwise filter will scale together with a [[Sprite]].\r\n         *\r\n         * @default false\r\n         * @param value  Non scaling?\r\n         */\r\n        set: function (value) {\r\n            this._nonScaling = value;\r\n            if (!value) {\r\n                this._scale = 1;\r\n            }\r\n            this.updateScale();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Filter.prototype, \"sprite\", {\r\n        /**\r\n         * A target element this filter is currently attached to.\r\n         *\r\n         * We need to keep track of it because one filter can be used for just one\r\n         * element, so we have to remove it from the old \"parent\" when attaching to\r\n         * the new one.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @param value  Target element\r\n         */\r\n        set: function (value) {\r\n            this.setSprite(value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Sets filter's target element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param value  Element filter is being attached to\r\n     */\r\n    Filter.prototype.setSprite = function (value) {\r\n        if (this._sprite && this._sprite != value) {\r\n            this._sprite.filters.removeValue(this);\r\n        }\r\n        this._sprite = value;\r\n    };\r\n    return Filter;\r\n}(BaseObject));\r\nexport { Filter };\r\n//# sourceMappingURL=Filter.js.map","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Dictionary } from \"./Dictionary\";\r\nimport * as $type from \"./Type\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Represents object cache.\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Better storage\r\n * @todo TTL logging\r\n * @todo Garbage collector\r\n */\r\nvar Cache = /** @class */ (function () {\r\n    function Cache() {\r\n        /**\r\n         * Storage for cache items.\r\n         */\r\n        this._storage = new Dictionary();\r\n        /**\r\n         * Default TTL in milliseconds.\r\n         */\r\n        this.ttl = 1000;\r\n    }\r\n    /**\r\n     * Caches or updates cached value, resets TTL.\r\n     *\r\n     * If `ttl` is set to zero, item will never expire.\r\n     *\r\n     * @param owner  An id of the object that owns this cache\r\n     * @param key    Index key\r\n     * @param value  Value\r\n     * @param ttl    TTL of the cache to live in milliseconds\r\n     */\r\n    Cache.prototype.set = function (owner, key, value, ttl) {\r\n        // Create if storage does not exist for this owner\r\n        var ownerStorage = this._storage.insertKeyIfEmpty(owner, function () { return new Dictionary(); });\r\n        // Create cache item\r\n        var item = {\r\n            \"touched\": new Date().getTime(),\r\n            \"ttl\": $type.isNumber(ttl) ? ttl : this.ttl,\r\n            \"value\": value\r\n        };\r\n        // Set\r\n        ownerStorage.setKey(key, item);\r\n    };\r\n    /**\r\n     * Rerturns cached item, respecting TTL.\r\n     *\r\n     * @param owner  An id of the object that owns this cache\r\n     * @param key    Index key\r\n     * @param value  Value to return if cache not available\r\n     * @return Value, or `undefined` if not set\r\n     */\r\n    Cache.prototype.get = function (owner, key, value) {\r\n        if (value === void 0) { value = undefined; }\r\n        // \t\t || ypeof this._storage[owner][key] === \"undefined\" || this._storage[owner][key].expired === true) {\r\n        if (this._storage.hasKey(owner)) {\r\n            var ownerStorage = this._storage.getKey(owner);\r\n            if (ownerStorage.hasKey(key)) {\r\n                var cacheItem = ownerStorage.getKey(key);\r\n                if (cacheItem.ttl && ((cacheItem.touched + cacheItem.ttl) < new Date().getTime())) {\r\n                    cacheItem.expired = true;\r\n                }\r\n                if (cacheItem.expired) {\r\n                    ownerStorage.removeKey(key);\r\n                    return value;\r\n                }\r\n                return cacheItem.value;\r\n            }\r\n            else {\r\n                return value;\r\n            }\r\n        }\r\n        else {\r\n            return value;\r\n        }\r\n    };\r\n    /**\r\n     * Clears cache for specific owner or everything.\r\n     *\r\n     * @param owner Owner to clear cache for\r\n     */\r\n    Cache.prototype.clear = function (owner) {\r\n        if (owner) {\r\n            this._storage.removeKey(owner);\r\n        }\r\n        else {\r\n            this._storage.clear();\r\n        }\r\n    };\r\n    return Cache;\r\n}());\r\nexport { Cache };\r\n/**\r\n * ============================================================================\r\n * GLOBAL INSTANCE\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * A global instance of cache. Use this instance to cache any values.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport var cache = new Cache();\r\n//# sourceMappingURL=Cache.js.map","/**\r\n * [[AMElement]] represents any SVG element and related functionality.\r\n */\r\nimport * as $dom from \"../utils/DOM\";\r\nimport * as $object from \"../utils/Object\";\r\nimport * as $type from \"../utils/Type\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * A base class for all SVG elements. Provides low-level DOM functionality.\r\n *\r\n * All visual elements extend this class.\r\n */\r\nvar AMElement = /** @class */ (function () {\r\n    /**\r\n     * Constructor creates a new element or uses the one that was passed in.\r\n     *\r\n     * @param element Element reference node type\r\n     */\r\n    function AMElement(element) {\r\n        /**\r\n         * Indicates if the element was already disposed.\r\n         */\r\n        this._isDisposed = false;\r\n        /**\r\n         * Current X coordinate.\r\n         */\r\n        this._x = 0;\r\n        /**\r\n         * Current Y coordinate.\r\n         */\r\n        this._y = 0;\r\n        /**\r\n         *\r\n         */\r\n        this._rotationY = 0;\r\n        /**\r\n         *\r\n         */\r\n        this._rotationX = 0;\r\n        /**\r\n         * Current rotation.\r\n         */\r\n        this._rotation = 0;\r\n        /**\r\n         * Current scale.\r\n         */\r\n        this._scale = 1;\r\n        if (typeof element === \"string\") {\r\n            this.node = document.createElementNS($dom.SVGNS, element);\r\n        }\r\n        else {\r\n            this.node = element;\r\n        }\r\n    }\r\n    /**\r\n     * Removes element's node from DOM.\r\n     */\r\n    AMElement.prototype.removeNode = function () {\r\n        if (this.node) {\r\n            if (this.node.parentNode) {\r\n                this.node.parentNode.removeChild(this.node);\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(AMElement.prototype, \"transformString\", {\r\n        /**\r\n         * Returns `transform` attribute of the element.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return Transform attribute value\r\n         */\r\n        get: function () {\r\n            if (this.node) {\r\n                return this._transformString;\r\n                /*\r\n                const value = this.node.getAttribute(\"transform\");\r\n    \r\n                if (value !== null) {\r\n                    return value;\r\n                }*/\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Appply position, rotation and scale properties via elemen's `transform`\r\n     * property\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    AMElement.prototype.transform = function () {\r\n        var transfromString = \"translate(\" + this._x + \",\" + this._y + \")\";\r\n        if (this._scale != 1) {\r\n            transfromString += ((transfromString ? \" \" : \"\") + \"scale(\" + this._scale + \")\");\r\n        }\r\n        if (this._rotation != 0) {\r\n            var rotateString = \"rotate(\" + this._rotation + \")\";\r\n            if (this._rotationX && this._rotationY) {\r\n                rotateString = \"rotate(\" + this._rotation + \" \" + this._rotationX + \" \" + this._rotationY + \")\";\r\n            }\r\n            transfromString += ((transfromString ? \" \" : \"\") + rotateString);\r\n        }\r\n        this._transformString = transfromString;\r\n        this.node.setAttribute(\"transform\", transfromString);\r\n    };\r\n    /**\r\n     * Returns bounding box of the element.\r\n     *\r\n     * ATTENTION: Bounding box calculations are extremely costly so should be\r\n     * used sparingly and cached whenever possible.\r\n     *\r\n     * @return Bounding rectangle\r\n     */\r\n    AMElement.prototype.getBBox = function () {\r\n        var bbox = {\r\n            width: 0,\r\n            height: 0,\r\n            x: 0,\r\n            y: 0\r\n        };\r\n        // FF would fail if getBBox() is called without node added to parent\r\n        if (this.node && this.node.parentNode) {\r\n            try { // again for ff. TODO: check if this doesn't slow down\r\n                var svgbbox = this.node.getBBox();\r\n                bbox.x = svgbbox.x;\r\n                bbox.y = svgbbox.y;\r\n                bbox.width = svgbbox.width;\r\n                bbox.height = svgbbox.height;\r\n            }\r\n            catch (err) { }\r\n        }\r\n        return bbox;\r\n    };\r\n    /**\r\n     * Moves the element to new coordinates.\r\n     *\r\n     * @param x  Target X\r\n     * @param y  Target Y\r\n     */\r\n    AMElement.prototype.moveTo = function (point) {\r\n        if (point) {\r\n            var x = point.x;\r\n            var y = point.y;\r\n            if (this._x != x || this._y != y) {\r\n                this._x = x;\r\n                this._y = y;\r\n                this.transform();\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(AMElement.prototype, \"content\", {\r\n        /**\r\n         * Returns element's contents as SVG markup.\r\n         *\r\n         * @return Contents\r\n         */\r\n        get: function () {\r\n            // @todo Do not use `innerHTML` as this is not reliable and will not work on all browsers\r\n            return this.node.innerHTML || \"\";\r\n        },\r\n        /**\r\n         * Element's SVG contents.\r\n         *\r\n         * @param value Contents\r\n         */\r\n        set: function (value) {\r\n            // @todo Do not use `innerHTML` as this is not reliable and will not work on all browsers\r\n            this.node.innerHTML = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AMElement.prototype, \"textContent\", {\r\n        /**\r\n         * @return Text contents\r\n         */\r\n        get: function () {\r\n            return this.node.textContent || \"\";\r\n        },\r\n        /**\r\n         * Text contents of the SVG element.\r\n         *\r\n         * @param value Text contents\r\n         */\r\n        set: function (value) {\r\n            this.node.textContent = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AMElement.prototype, \"x\", {\r\n        /**\r\n         * @return X coordinate (px)\r\n         */\r\n        get: function () {\r\n            return this._x;\r\n        },\r\n        /**\r\n         * Element's X position in pixels.\r\n         *\r\n         * @param value  X coordinate (px)\r\n         */\r\n        set: function (value) {\r\n            if (this._x != value) {\r\n                this._x = value;\r\n                this.transform();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AMElement.prototype, \"y\", {\r\n        /**\r\n         * @return Y coordinate (px)\r\n         */\r\n        get: function () {\r\n            return this._y;\r\n        },\r\n        /**\r\n         * Element's Y position in pixels.\r\n         *\r\n         * @param value Y coordinate (px)\r\n         */\r\n        set: function (value) {\r\n            if (this._y != value) {\r\n                this._y = value;\r\n                this.transform();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AMElement.prototype, \"rotation\", {\r\n        /**\r\n         * @return Rotation\r\n         */\r\n        get: function () {\r\n            return this._rotation;\r\n        },\r\n        /**\r\n         * Element's rotation in degrees.\r\n         *\r\n         * @param value Rotation\r\n         */\r\n        set: function (angle) {\r\n            if (this._rotation != angle) {\r\n                this._rotation = angle;\r\n                this.transform();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AMElement.prototype, \"rotationX\", {\r\n        /**\r\n         * @ignore\r\n         */\r\n        get: function () {\r\n            return this._rotationX;\r\n        },\r\n        /**\r\n         * @ignore\r\n         */\r\n        set: function (x) {\r\n            if (this._rotationX != x) {\r\n                this._rotationX = x;\r\n                this.transform();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AMElement.prototype, \"rotationY\", {\r\n        /**\r\n         * @ignore\r\n         */\r\n        get: function () {\r\n            return this._rotationY;\r\n        },\r\n        /**\r\n         * @ignore\r\n         */\r\n        set: function (y) {\r\n            if (this._rotationY != y) {\r\n                this._rotationY = y;\r\n                this.transform();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AMElement.prototype, \"scale\", {\r\n        /**\r\n         * @return Scale\r\n         */\r\n        get: function () {\r\n            return this._scale;\r\n        },\r\n        /**\r\n         * Element's scale where 1 is original size.\r\n         *\r\n         * Setting to 0.5 will reduce element's size by 50%, 2 will make element\r\n         * twice as large, etc.\r\n         *\r\n         * @param value Scale\r\n         */\r\n        set: function (value) {\r\n            if (this._scale != value) {\r\n                this._scale = value;\r\n                this.transform();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Removes an attribute from element.\r\n     *\r\n     * @param attribute  Attribute to remove\r\n     */\r\n    AMElement.prototype.removeAttr = function (attribute) {\r\n        this.node.removeAttribute(attribute);\r\n    };\r\n    /**\r\n     * Sets a set of attributes on a element.\r\n     *\r\n     * @param attributes  An object with attribute names (key) and values\r\n     * @return The same element\r\n     */\r\n    AMElement.prototype.attr = function (attributes) {\r\n        var _this = this;\r\n        $object.each(attributes, function (attributeName, attributeValue) {\r\n            if (!$type.hasValue(attributeValue)) {\r\n                _this.node.removeAttribute(attributeName);\r\n            }\r\n            else {\r\n                // this is for performance testing\r\n                //if(attributeValue == this.node.getAttribute(attributeName)){\r\n                //\tconsole.log(attributeName, attributeValue)\r\n                //}\r\n                _this.node.setAttribute(attributeName, attributeValue);\r\n            }\r\n        });\r\n        return this;\r\n    };\r\n    /**\r\n     * Returns a value of a node attribute.\r\n     *\r\n     * @param attribute  Attribute name\r\n     * @return Attribute value\r\n     */\r\n    AMElement.prototype.getAttr = function (attribute) {\r\n        return this.node.getAttribute(attribute);\r\n    };\r\n    /**\r\n     * Sets a single attribute of the element's node using namesspace.\r\n     *\r\n     * @param ns         Namespace\r\n     * @param attribute  Attribute\r\n     * @param value      Value\r\n     * @return The same element\r\n     */\r\n    AMElement.prototype.attrNS = function (ns, attribute, value) {\r\n        this.node.setAttributeNS(ns, attribute, value);\r\n        return this;\r\n    };\r\n    /**\r\n     * Returns a namespaced attribute value from node.\r\n     *\r\n     * @param ns         Namespace\r\n     * @param attribute  Attribute\r\n     * @return Attribute value\r\n     */\r\n    AMElement.prototype.getAttrNS = function (ns, attribute) {\r\n        return this.node.getAttributeNS(ns, attribute);\r\n    };\r\n    /**\r\n     * Removes `style` attribute from node.\r\n     *\r\n     * @param attribute  Attribute to remove\r\n     */\r\n    AMElement.prototype.removeStyle = function (attribute) {\r\n        // @todo Review because it's a bit messy and maybe not needed (pratically not used)\r\n        delete this.node.style[attribute];\r\n    };\r\n    /**\r\n     * Returns style attribute value.\r\n     *\r\n     * @param attribute  Style attribute value\r\n     * @return Attribute value\r\n     */\r\n    AMElement.prototype.getStyle = function (attribute) {\r\n        // @todo Review because it's a bit messy and maybe not needed (pratically not used)\r\n        return this.node.style[attribute];\r\n    };\r\n    /**\r\n     * Adds style attributes to element's node.\r\n     *\r\n     * @param attributes  Object containing attribute: value pairs\r\n     * @return The same element\r\n     */\r\n    AMElement.prototype.addStyle = function (attributes) {\r\n        var _this = this;\r\n        // @todo Review because it's a bit messy and maybe not needed (pratically not used)\r\n        $object.each(attributes, function (attributeName, attributeValue) {\r\n            if (!$type.hasValue(attributeValue)) {\r\n                _this.removeStyle(attributeName);\r\n            }\r\n            else {\r\n                _this.node.style[attributeName] = attributeValue;\r\n            }\r\n        });\r\n        return this;\r\n    };\r\n    /**\r\n     * Adds a class to element.\r\n     *\r\n     * @param name  Class name\r\n     */\r\n    AMElement.prototype.addClass = function (name) {\r\n        $dom.addClass(this.node, name);\r\n    };\r\n    /**\r\n     * Removes a class from element.\r\n     *\r\n     * @param name Class name\r\n     */\r\n    AMElement.prototype.removeClass = function (name) {\r\n        $dom.removeClass(this.node, name);\r\n    };\r\n    /**\r\n     * Sets a class name on element.\r\n     *\r\n     * @param name  Class name\r\n     */\r\n    AMElement.prototype.setClass = function (name) {\r\n        this.node.setAttribute(\"class\", name);\r\n    };\r\n    /**\r\n     * Removes all element's child nodes, basically leaving it empty.\r\n     */\r\n    AMElement.prototype.removeChildNodes = function () {\r\n        // remove all children\r\n        while (this.node.childNodes.length > 0) {\r\n            this.node.removeChild(this.node.firstChild);\r\n        }\r\n    };\r\n    /**\r\n     * Was this element already been disposed?\r\n     *\r\n     * @return Disposed?\r\n     */\r\n    AMElement.prototype.isDisposed = function () {\r\n        return this._isDisposed;\r\n    };\r\n    /**\r\n     * Disposes element.\r\n     */\r\n    AMElement.prototype.dispose = function () {\r\n        this.removeNode();\r\n    };\r\n    return AMElement;\r\n}());\r\nexport { AMElement };\r\n//# sourceMappingURL=AMElement.js.map","import { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container } from \"./Container\";\r\nimport { List, ListDisposer } from \"./utils/List\";\r\nimport { OrderedListTemplate } from \"./utils/SortedList\";\r\nimport { Dictionary } from \"./utils/Dictionary\";\r\nimport { Disposer, MultiDisposer } from \"./utils/Disposer\";\r\nimport { DataSource } from \"./data/DataSource\";\r\nimport { Responsive } from \"./utils/Responsive\";\r\nimport { system } from \"./System\";\r\nimport { DataItem } from \"./DataItem\";\r\nimport { registry } from \"./Registry\";\r\nimport * as $math from \"./utils/Math\";\r\nimport * as $array from \"./utils/Array\";\r\nimport * as $ease from \"./utils/Ease\";\r\nimport * as $utils from \"./utils/Utils\";\r\nimport * as $iter from \"./utils/Iterator\";\r\nimport * as $object from \"./utils/Object\";\r\nimport * as $type from \"./utils/Type\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * A Component represents an independent functional element or control, that\r\n * can have it's own behavior, children, data, etc.\r\n *\r\n * A few examples of a Component: [[Legend]], [[Series]], [[Scrollbar]].\r\n *\r\n * @see {@link IComponentEvents} for a list of available events\r\n * @see {@link IComponentAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nvar Component = /** @class */ (function (_super) {\r\n    __extends(Component, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Component() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        /**\r\n         * Holds data field names.\r\n         *\r\n         * Data fields define connection beween [[DataItem]] and actual properties\r\n         * in raw data.\r\n         */\r\n        _this.dataFields = {};\r\n        /**\r\n         * A list of [[DataSource]] definitions of external data source.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        _this._dataSources = {};\r\n        /**\r\n         * This is used when only new data is invalidated (if added using `addData`\r\n         * method).\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        _this._parseDataFrom = 0;\r\n        /**\r\n         * Holds the disposers for the dataItems and dataUsers\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        _this._dataDisposers = [];\r\n        /**\r\n         * Currently selected \"data set\".\r\n         *\r\n         * If it's set to `\"\"`, main data set (unaggregated data) is used.\r\n         */\r\n        _this._currentDataSetId = \"\";\r\n        /**\r\n         * [_start description]\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        _this._start = 0;\r\n        /**\r\n         * [_end description]\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        _this._end = 1;\r\n        /**\r\n         * If set to `true`, changing data range in element will not trigger\r\n         * `daterangechanged` event.\r\n         */\r\n        _this.skipRangeEvent = false;\r\n        /**\r\n         * Whenever selected scope changes (chart is zoomed or panned), for example\r\n         * by interaction from a Scrollbar, or API, a chart needs to reposition\r\n         * its contents.\r\n         *\r\n         * `rangeChangeDuration` influences how this is performed.\r\n         *\r\n         * If set to zero (0), the change will happen instantenously.\r\n         *\r\n         * If set to non-zero value, the chart will gradually animate into new\r\n         * position for the set amount of milliseconds.\r\n         *\r\n         * @default 0\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/animations/} for more info about animations\r\n         */\r\n        _this.rangeChangeDuration = 0;\r\n        /**\r\n         * An easing function to use for range change animation.\r\n         *\r\n         * @see {@link Ease}\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/animations/} for more info about animations\r\n         */\r\n        _this.rangeChangeEasing = $ease.cubicOut;\r\n        /**\r\n         * A duration (ms) of each data parsing step. A Component parses its data in\r\n         * chunks in order to avoid completely freezing the machine when large data\r\n         * sets are used. This setting will control how many milliseconds should pass\r\n         * when parsing data until parser stops for a brief moment to let other\r\n         * processes catch up.\r\n         */\r\n        _this.parsingStepDuration = 50;\r\n        /**\r\n         * [dataInvalid description]\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @todo Description\r\n         */\r\n        _this.dataInvalid = false;\r\n        /**\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        _this.rawDataInvalid = false;\r\n        /**\r\n         * [dataRangeInvalid description]\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @todo Description\r\n         */\r\n        _this.dataRangeInvalid = false;\r\n        /**\r\n         * [dataItemsInvalid description]\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @todo Description\r\n         */\r\n        _this.dataItemsInvalid = false;\r\n        /**\r\n         * If set to a non-zero number the element will \"animate\" data values of its\r\n         * children.\r\n         *\r\n         * This will happen on first load and whenever data values change.\r\n         *\r\n         * Enabling interpolation will mean that elements will transit smoothly into\r\n         * new values rather than updating instantly.\r\n         *\r\n         * @default 0\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/animations/} for more info about animations\r\n         */\r\n        _this.interpolationDuration = 0;\r\n        /**\r\n         * An easing function to use for interpolating values when transiting from\r\n         * one source value to another.\r\n         *\r\n         * @default cubicOut\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/animations/} for more info about animations\r\n         * @see {@link Ease}\r\n         */\r\n        _this.interpolationEasing = $ease.cubicOut;\r\n        /**\r\n         * Indicates whether transition between data item's values should start and\r\n         * play out all at once, or with a small delay (as defined by\r\n         * `sequencedInterpolationDelay`) for each subsequent data item.\r\n         *\r\n         * @default true\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/animations/} for more info about animations\r\n         */\r\n        _this.sequencedInterpolation = true;\r\n        /**\r\n         * A delay (ms) to wait between animating each subsequent data item's\r\n         * interpolation animation.\r\n         *\r\n         * Relative only if `sequencedInterpolation = true`.\r\n         *\r\n         * @default 0\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/animations/} for more info about animations\r\n         */\r\n        _this.sequencedInterpolationDelay = 0;\r\n        /**\r\n         * A progress (0-1) for the data validation process.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        _this.dataValidationProgress = 0;\r\n        _this._addAllDataItems = true;\r\n        _this._usesData = true;\r\n        _this.className = \"Component\";\r\n        _this.minZoomCount = 1;\r\n        _this.maxZoomCount = 0;\r\n        _this._dataItems = new OrderedListTemplate(_this.createDataItem());\r\n        _this._dataItems.events.on(\"inserted\", _this.handleDataItemAdded, _this, false);\r\n        _this._dataItems.events.on(\"removed\", _this.handleDataItemRemoved, _this, false);\r\n        _this._disposers.push(new ListDisposer(_this._dataItems));\r\n        _this._disposers.push(_this._dataItems.template);\r\n        _this.invalidateData();\r\n        // TODO what about remove ?\r\n        _this.dataUsers.events.on(\"inserted\", _this.handleDataUserAdded, _this, false);\r\n        // Set up disposers\r\n        _this._disposers.push(new MultiDisposer(_this._dataDisposers));\r\n        _this._start = 0;\r\n        _this._end = 1;\r\n        _this.maxZoomDeclination = 1;\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Returns a new/empty DataItem of the type appropriate for this object.\r\n     *\r\n     * @see {@link DataItem}\r\n     * @return Data Item\r\n     */\r\n    Component.prototype.createDataItem = function () {\r\n        return new DataItem();\r\n    };\r\n    /**\r\n     * [handleDataUserAdded description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param event Event object\r\n     */\r\n    Component.prototype.handleDataUserAdded = function (event) {\r\n        var dataUser = event.newValue;\r\n        dataUser.dataProvider = this;\r\n    };\r\n    /**\r\n     * [handleDataItemValueChange description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     */\r\n    Component.prototype.handleDataItemValueChange = function (dataItem, name) {\r\n        if (!this.dataItemsInvalid) {\r\n            this.invalidateDataItems();\r\n        }\r\n    };\r\n    /**\r\n     * [handleDataItemWorkingValueChange description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Component.prototype.handleDataItemWorkingValueChange = function (dataItem, name) {\r\n    };\r\n    /**\r\n     * [handleDataItemWorkingLocationChange description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Component.prototype.handleDataItemWorkingLocationChange = function (dataItem, name) {\r\n    };\r\n    /**\r\n     * [handleDataItemCalculatedValueChange description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Component.prototype.handleDataItemCalculatedValueChange = function (dataItem, name) {\r\n    };\r\n    /**\r\n     * [handleDataItemPropertyChange description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Component.prototype.handleDataItemPropertyChange = function (dataItem, name) {\r\n    };\r\n    /**\r\n     * Populates a [[DataItem]] width data from data source.\r\n     *\r\n     * Loops through all the fields and if such a field is found in raw data\r\n     * object, a corresponding value on passed in `dataItem` is set.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param item\r\n     */\r\n    Component.prototype.processDataItem = function (dataItem, dataContext) {\r\n        var _this = this;\r\n        if (dataItem) {\r\n            if (!dataContext) {\r\n                dataContext = {};\r\n            }\r\n            // store reference to original data item\r\n            dataItem.dataContext = dataContext;\r\n            var hasSomeValues_1 = false;\r\n            $object.each(this.dataFields, function (key, fieldValue) {\r\n                var fieldName = key;\r\n                var value = dataContext[fieldValue];\r\n                // Apply adapters to a retrieved value\r\n                if (_this._adapterO) {\r\n                    if (_this._adapterO.isEnabled(\"dataContextValue\")) {\r\n                        value = _this._adapterO.apply(\"dataContextValue\", {\r\n                            field: fieldName,\r\n                            value: value,\r\n                            dataItem: dataItem\r\n                        }).value;\r\n                    }\r\n                }\r\n                if (dataItem.hasChildren[fieldName]) {\r\n                    if ($type.hasValue(value)) {\r\n                        hasSomeValues_1 = true;\r\n                        var template = _this.createDataItem();\r\n                        template.copyFrom(_this.mainDataSet.template);\r\n                        var children = new OrderedListTemplate(template);\r\n                        children.events.on(\"inserted\", _this.handleDataItemAdded, _this, false);\r\n                        children.events.on(\"removed\", _this.handleDataItemRemoved, _this, false);\r\n                        _this._dataDisposers.push(new ListDisposer(children));\r\n                        var count = value.length;\r\n                        for (var i = 0; i < count; i++) {\r\n                            var rawDataItem = value[i];\r\n                            var childDataItem = children.create();\r\n                            childDataItem.parent = dataItem;\r\n                            _this.processDataItem(childDataItem, rawDataItem);\r\n                        }\r\n                        var anyDataItem = dataItem;\r\n                        anyDataItem[fieldName] = children;\r\n                    }\r\n                }\r\n                else {\r\n                    // data is converted to numbers/dates in each dataItem\r\n                    if ($type.hasValue(value)) {\r\n                        hasSomeValues_1 = true;\r\n                        dataItem[fieldName] = value;\r\n                    }\r\n                }\r\n            });\r\n            $object.each(this.propertyFields, function (key, fieldValue) {\r\n                var f = key;\r\n                var value = dataContext[fieldValue];\r\n                if ($type.hasValue(value)) {\r\n                    hasSomeValues_1 = true;\r\n                    dataItem.setProperty(f, value);\r\n                }\r\n            });\r\n            // @todo we might need some flag which would tell whether we should create empty data items or not.\r\n            if (!this._addAllDataItems && !hasSomeValues_1) {\r\n                this.mainDataSet.remove(dataItem);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * When validating raw data, instead of processing data item, we update it\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param item\r\n     */\r\n    Component.prototype.updateDataItem = function (dataItem) {\r\n        var _this = this;\r\n        if (dataItem) {\r\n            var dataContext_1 = dataItem.dataContext;\r\n            $object.each(this.dataFields, function (key, fieldValue) {\r\n                var fieldName = key;\r\n                var value = dataContext_1[fieldValue];\r\n                // Apply adapters to a retrieved value\r\n                if (_this._adapterO) {\r\n                    value = _this._adapterO.apply(\"dataContextValue\", {\r\n                        field: fieldName,\r\n                        value: value,\r\n                        dataItem: dataItem\r\n                    }).value;\r\n                }\r\n                if (dataItem.hasChildren[fieldName]) {\r\n                    if (value) {\r\n                        var anyDataItem = dataItem;\r\n                        var children = (anyDataItem[fieldName]);\r\n                        $iter.each(children.iterator(), function (child) {\r\n                            _this.updateDataItem(child);\r\n                        });\r\n                    }\r\n                }\r\n                else {\r\n                    // data is converted to numbers/dates in each dataItem\r\n                    if ($type.hasValue(value)) {\r\n                        dataItem[fieldName] = value;\r\n                    }\r\n                }\r\n            });\r\n            $object.each(this.propertyFields, function (key, fieldValue) {\r\n                var f = key;\r\n                var value = dataContext_1[fieldValue];\r\n                if ($type.hasValue(value)) {\r\n                    dataItem.setProperty(f, value);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * [validateDataElements description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     */\r\n    Component.prototype.validateDataElements = function () {\r\n        var count = this.endIndex;\r\n        for (var i = this.startIndex; i < count; i++) {\r\n            var dataItem = this.dataItems.getIndex(i);\r\n            // TODO is this correct\r\n            if (dataItem) {\r\n                this.validateDataElement(dataItem);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Validates this element and its related elements.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Component.prototype.validate = function () {\r\n        this.validateDataElements();\r\n        _super.prototype.validate.call(this);\r\n    };\r\n    /**\r\n     * [validateDataElement description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem [description]\r\n     */\r\n    Component.prototype.validateDataElement = function (dataItem) {\r\n    };\r\n    /**\r\n     * Adds one or several (array) of data items to the existing data.\r\n     *\r\n     * @param rawDataItem One or many raw data item objects\r\n     */\r\n    Component.prototype.addData = function (rawDataItem, removeCount) {\r\n        var _this = this;\r\n        // need to check if data is invalid, as addData might be called multiple times\r\n        if (!this.dataInvalid && this.inited) {\r\n            this._parseDataFrom = this.data.length; // save length of parsed data\r\n        }\r\n        if (rawDataItem instanceof Array) {\r\n            // can't use concat because new array is returned\r\n            $array.each(rawDataItem, function (dataItem) {\r\n                _this.data.push(dataItem);\r\n            });\r\n        }\r\n        else {\r\n            this.data.push(rawDataItem); // add to raw data array\r\n        }\r\n        if (this.inited) {\r\n            this.removeData(removeCount);\r\n        }\r\n        else {\r\n            if ($type.isNumber(removeCount)) {\r\n                while (removeCount > 0) {\r\n                    this.data.shift();\r\n                    removeCount--;\r\n                }\r\n            }\r\n        }\r\n        this.invalidateData();\r\n    };\r\n    /**\r\n     * Removes elements from the beginning of data\r\n     *\r\n     * @param count number of elements to remove\r\n     */\r\n    Component.prototype.removeData = function (count) {\r\n        if ($type.isNumber(count) && count > 0) {\r\n            while (count > 0) {\r\n                var dataItem = this.mainDataSet.getIndex(0);\r\n                if (dataItem) {\r\n                    this.mainDataSet.remove(dataItem);\r\n                }\r\n                this.dataUsers.each(function (dataUser) {\r\n                    if (!dataUser.data || dataUser.data.length == 0) {\r\n                        var dataItem_1 = dataUser.dataItems.getIndex(0);\r\n                        if (dataItem_1) {\r\n                            dataUser.dataItems.remove(dataItem_1);\r\n                        }\r\n                    }\r\n                });\r\n                this.data.shift();\r\n                if (this._parseDataFrom > 0) {\r\n                    this._parseDataFrom--;\r\n                }\r\n                count--;\r\n            }\r\n            // changed from invalidateData since 4.7.19 to solve #51551\r\n            this.invalidateDataItems();\r\n        }\r\n    };\r\n    /**\r\n     * Triggers a data (re)parsing.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Component.prototype.invalidateData = function () {\r\n        if (this.disabled || this.isTemplate) {\r\n            return;\r\n        }\r\n        //if(!this.dataInvalid){\r\n        registry.addToInvalidComponents(this);\r\n        system.requestFrame();\r\n        this.dataInvalid = true;\r\n        $iter.each(this.dataUsers.iterator(), function (x) {\r\n            x.invalidateDataItems();\r\n        });\r\n        //}\r\n    };\r\n    /**\r\n     * [invalidateDataUsers description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     */\r\n    Component.prototype.invalidateDataUsers = function () {\r\n        $iter.each(this.dataUsers.iterator(), function (x) {\r\n            x.invalidate();\r\n        });\r\n    };\r\n    /**\r\n     * Invalidates data values. When data array is not changed, but values within\r\n     * it changes, we invalidate data so that component would process changes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Component.prototype.invalidateDataItems = function () {\r\n        if (this.disabled || this.isTemplate) {\r\n            return;\r\n        }\r\n        //if(!this.dataItemsInvalid){\r\n        $array.move(registry.invalidDataItems, this);\r\n        system.requestFrame();\r\n        this.dataItemsInvalid = true;\r\n        $iter.each(this.dataUsers.iterator(), function (x) {\r\n            x.invalidateDataItems();\r\n        });\r\n        //}\r\n    };\r\n    /**\r\n     * Invalidates data range. This is done when data which must be shown\r\n     * changes (chart is zoomed for example).\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Component.prototype.invalidateDataRange = function () {\r\n        if (this.disabled || this.isTemplate) {\r\n            return;\r\n        }\r\n        //if(!this.dataRangeInvalid){\r\n        this.dataRangeInvalid = true;\r\n        $array.move(registry.invalidDataRange, this);\r\n        system.requestFrame();\r\n        //}\r\n    };\r\n    /**\r\n     * Processes data range.\r\n     *\r\n     * @todo Description\r\n     * @ignore Exclude from docs\r\n     */\r\n    Component.prototype.validateDataRange = function () {\r\n        $array.remove(registry.invalidDataRange, this);\r\n        this.dataRangeInvalid = false;\r\n        if (this.startIndex != this._prevStartIndex || this.endIndex != this._prevEndIndex) {\r\n            this.rangeChangeUpdate();\r\n            this.appendDataItems();\r\n            this.invalidate();\r\n            this.dispatchImmediately(\"datarangechanged\");\r\n        }\r\n    };\r\n    /**\r\n     * [sliceData description]\r\n     *\r\n     * @todo Description\r\n     * @ignore Exclude from docs\r\n     */\r\n    Component.prototype.sliceData = function () {\r\n        this._workingStartIndex = this.startIndex;\r\n        this._workingEndIndex = this.endIndex;\r\n    };\r\n    /**\r\n     * [rangeChangeUpdate description]\r\n     *\r\n     * @todo Description\r\n     * @ignore Exclude from docs\r\n     */\r\n    Component.prototype.rangeChangeUpdate = function () {\r\n        this.sliceData();\r\n        this._prevStartIndex = this.startIndex;\r\n        this._prevEndIndex = this.endIndex;\r\n    };\r\n    /**\r\n     * [appendDataItems description]\r\n     *\r\n     * @todo Description\r\n     * @ignore Exclude from docs\r\n     */\r\n    Component.prototype.appendDataItems = function () {\r\n        // TODO use an iterator instead\r\n        var count = this.endIndex;\r\n        for (var i = this.startIndex; i < count; i++) {\r\n            // data item\r\n            var dataItem = this.dataItems.getIndex(i);\r\n            if (dataItem) {\r\n                dataItem.__disabled = false;\r\n            }\r\n        }\r\n        for (var i = 0; i < this.startIndex; i++) {\r\n            var dataItem = this.dataItems.getIndex(i);\r\n            dataItem.__disabled = true;\r\n        }\r\n        for (var i = this.endIndex; i < this.dataItems.length; i++) {\r\n            var dataItem = this.dataItems.getIndex(i);\r\n            dataItem.__disabled = true;\r\n        }\r\n    };\r\n    /**\r\n     * If you want to have a smooth transition from one data values to another, you change your raw data and then you must call this method.\r\n     * then instead of redrawing everything, the chart will check raw data and smoothly transit from previous to new data\r\n     */\r\n    Component.prototype.invalidateRawData = function () {\r\n        if (this.disabled || this.isTemplate) {\r\n            return;\r\n        }\r\n        //if(!this.rawDataInvalid){\r\n        $array.move(registry.invalidRawDatas, this);\r\n        system.requestFrame();\r\n        this.rawDataInvalid = true;\r\n        $iter.each(this.dataUsers.iterator(), function (x) {\r\n            x.invalidateRawData();\r\n        });\r\n        //}\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    Component.prototype.validateRawData = function () {\r\n        var _this = this;\r\n        $array.remove(registry.invalidRawDatas, this);\r\n        $iter.each(this.mainDataSet.iterator(), function (dataItem) {\r\n            if (dataItem) {\r\n                _this.updateDataItem(dataItem);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Destroys this object and all related data.\r\n     */\r\n    Component.prototype.dispose = function () {\r\n        var _this = this;\r\n        this.mainDataSet.template.clones.clear();\r\n        $object.each(this._dataSources, function (key, source) {\r\n            _this.removeDispose(source);\r\n        });\r\n        _super.prototype.dispose.call(this);\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    Component.prototype.disposeData = function () {\r\n        this.mainDataSet.template.clones.clear();\r\n        $array.each(this._dataDisposers, function (x) {\r\n            x.dispose();\r\n        });\r\n        // and for all components\r\n        $iter.each(this.dataUsers.iterator(), function (dataUser) {\r\n            dataUser.disposeData();\r\n        });\r\n        this._dataDisposers.length = 0;\r\n        this._startIndex = undefined;\r\n        this._endIndex = undefined;\r\n        // dispose old\r\n        this.mainDataSet.clear();\r\n        this.mainDataSet.template.clones.clear();\r\n        if (this._dataSets) {\r\n            this._dataSets.clear();\r\n        }\r\n    };\r\n    Component.prototype.getDataItem = function (dataContext) {\r\n        return this.mainDataSet.create();\r\n    };\r\n    /**\r\n     * Validates (processes) data.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Component.prototype.validateData = function () {\r\n        this.dispatchImmediately(\"beforedatavalidated\");\r\n        this.dataInvalid = false;\r\n        registry.removeFromInvalidComponents(this);\r\n        if (this.__disabled) {\r\n            return;\r\n        }\r\n        this.dataValidationProgress = 0;\r\n        // need this to slice new data\r\n        this._prevStartIndex = undefined;\r\n        this._prevEndIndex = undefined;\r\n        // todo: this needs some overthinking, maybe some extra settings like zoomOotonDataupdate like in v3 or so. some charts like pie chart probably should act like this always\r\n        this._startIndex = undefined;\r\n        this._endIndex = undefined;\r\n        if (this.dataFields.data && this.dataItem) {\r\n            var dataContext = this.dataItem.dataContext;\r\n            this._data = dataContext[this.dataFields.data];\r\n        }\r\n        // data items array is reset only if all data is validated, if _parseDataFrom is not 0, we append new data only\r\n        // check heatmap demo if uncommented\r\n        // fixed both issues by adding && this.data.length > 0\r\n        // check adding series example if changed\r\n        if (this._parseDataFrom === 0 && this.data.length > 0) {\r\n            this.disposeData();\r\n        }\r\n        if (this.data.length > 0) {\r\n            var preloader = this.preloader;\r\n            // and for all components\r\n            $iter.each(this.dataUsers.iterator(), function (dataUser) {\r\n                // todo: this needs some overthinking, maybe some extra settings like zoomOUtonDataupdate like in v3 or so. some charts like pie chart probably should act like this always\r\n                dataUser._startIndex = undefined;\r\n                dataUser._endIndex = undefined;\r\n            });\r\n            var counter = 0;\r\n            var startTime = Date.now();\r\n            // parse data\r\n            var i = this._parseDataFrom;\r\n            var n = this.data.length;\r\n            var _loop_1 = function () {\r\n                var rawDataItem = this_1.data[i];\r\n                if (this_1._usesData) {\r\n                    var dataItem = this_1.getDataItem(rawDataItem);\r\n                    this_1.processDataItem(dataItem, rawDataItem);\r\n                }\r\n                this_1.dataUsers.each(function (dataUser) {\r\n                    if (dataUser.data.length == 0) { // checking if data is not set directly\r\n                        var dataUserDataItem = dataUser.getDataItem(rawDataItem);\r\n                        dataUser.processDataItem(dataUserDataItem, rawDataItem);\r\n                    }\r\n                });\r\n                counter++;\r\n                // show preloader if this takes too many time\r\n                if (counter == 100) { // no need to check it on each data item\r\n                    counter = 0;\r\n                    var elapsed = Date.now() - startTime;\r\n                    if (elapsed > this_1.parsingStepDuration) {\r\n                        if (i < this_1.data.length - 10) {\r\n                            this_1._parseDataFrom = i + 1;\r\n                            // update preloader\r\n                            if (preloader) {\r\n                                if (i / this_1.data.length > 0.5 && !preloader.visible) {\r\n                                    // do not start showing\r\n                                }\r\n                                else {\r\n                                    preloader.progress = i / this_1.data.length;\r\n                                }\r\n                            }\r\n                            this_1.dataValidationProgress = i / this_1.data.length;\r\n                            i = this_1.data.length; // stops cycle\r\n                            this_1.invalidateData();\r\n                            return { value: void 0 };\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n            var this_1 = this;\r\n            for (i; i < n; i++) {\r\n                var state_1 = _loop_1();\r\n                if (typeof state_1 === \"object\")\r\n                    return state_1.value;\r\n            }\r\n            if (preloader) {\r\n                preloader.progress = 1;\r\n            }\r\n            this.dataUsers.each(function (dataUser) {\r\n                if (dataUser.hidden) {\r\n                    dataUser.hide(0);\r\n                }\r\n            });\r\n        }\r\n        this.dataValidationProgress = 1;\r\n        this._parseDataFrom = 0; // reset this index, it is set to dataItems.length if addData() method was used.\r\n        this.invalidateDataItems();\r\n        if (!this._internalDefaultsApplied) {\r\n            this.applyInternalDefaults();\r\n        }\r\n        this.dispatch(\"datavalidated\"); // can't zoom chart if dispatched immediately\r\n    };\r\n    /**\r\n     * Validates (processes) data items.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Component.prototype.validateDataItems = function () {\r\n        $array.remove(registry.invalidDataItems, this);\r\n        this.dataItemsInvalid = false;\r\n        this.invalidateDataRange();\r\n        this.invalidate();\r\n        this.dispatch(\"dataitemsvalidated\");\r\n    };\r\n    Object.defineProperty(Component.prototype, \"data\", {\r\n        /**\r\n         * Returns element's source (raw) data.\r\n         *\r\n         * @return Data\r\n         */\r\n        get: function () {\r\n            if (!this._data) {\r\n                this._data = [];\r\n            }\r\n            if (!this._adapterO) {\r\n                return this._data;\r\n            }\r\n            else {\r\n                return this._adapterO.apply(\"data\", this._data);\r\n            }\r\n        },\r\n        /**\r\n         * Sets source (raw) data for the element. The \"data\" is always an `Array`\r\n         * of objects.\r\n         *\r\n         * @param value Data\r\n         */\r\n        set: function (value) {\r\n            this.setData(value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Component.prototype.setData = function (value) {\r\n        // array might be the same, but there might be items added\r\n        // todo: check if array changed, toString maybe?\r\n        //if (this._data != value) {\r\n        this._parseDataFrom = 0;\r\n        this.disposeData();\r\n        this._data = value;\r\n        if (value && value.length > 0) {\r\n            this.invalidateData();\r\n        }\r\n        else {\r\n            this.dispatchImmediately(\"beforedatavalidated\");\r\n            this.dispatch(\"datavalidated\");\r\n        }\r\n        //}\r\n    };\r\n    /**\r\n     * Returns (creates if necessary) a [[DataSource]] bound to any specific\r\n     * property.\r\n     *\r\n     * For example if I want to bind `data` to an external JSON file, I'd create\r\n     * a DataSource for it.\r\n     *\r\n     * @param property  Property to bind external data to\r\n     * @return A DataSource for property\r\n     */\r\n    Component.prototype.getDataSource = function (property) {\r\n        var _this = this;\r\n        if (!$type.hasValue(this._dataSources[property])) {\r\n            this._dataSources[property] = new DataSource();\r\n            this._dataSources[property].component = this;\r\n            this.setDataSourceEvents(this._dataSources[property], property);\r\n            this._dataSources[property].adapter.add(\"dateFields\", function (val) {\r\n                return _this.dataSourceDateFields(val);\r\n            });\r\n            this._dataSources[property].adapter.add(\"numberFields\", function (val) {\r\n                return _this.dataSourceNumberFields(val);\r\n            });\r\n            this.events.on(\"inited\", function () {\r\n                _this.loadData(property);\r\n            }, this, false);\r\n        }\r\n        return this._dataSources[property];\r\n    };\r\n    Object.defineProperty(Component.prototype, \"dataSource\", {\r\n        /**\r\n         * @return Data source\r\n         */\r\n        get: function () {\r\n            if (!this._dataSources[\"data\"]) {\r\n                this.getDataSource(\"data\");\r\n            }\r\n            return this._dataSources[\"data\"];\r\n        },\r\n        /**\r\n         *A [[DataSource]] to be used for loading Component's data.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/loading-external-data/} for more on loading external data\r\n         * @param value  Data source\r\n         */\r\n        set: function (value) {\r\n            var _this = this;\r\n            if (this._dataSources[\"data\"]) {\r\n                this.removeDispose(this._dataSources[\"data\"]);\r\n            }\r\n            this._dataSources[\"data\"] = value;\r\n            this._dataSources[\"data\"].component = this;\r\n            this.events.on(\"inited\", function () {\r\n                _this.loadData(\"data\");\r\n            }, this, false);\r\n            this.setDataSourceEvents(value, \"data\");\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Initiates loading of the external data via [[DataSource]].\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Component.prototype.loadData = function (property) {\r\n        this._dataSources[property].load();\r\n    };\r\n    /**\r\n     * This function is called by the [[DataSource]]'s `dateFields` adapater\r\n     * so that particular chart types can popuplate this setting with their\r\n     * own type-specific data fields so they are parsed properly.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param value  Array of date fields\r\n     * @return Array of date fields populated with chart's date fields\r\n     */\r\n    Component.prototype.dataSourceDateFields = function (value) {\r\n        return value;\r\n    };\r\n    /**\r\n     * This function is called by the [[DataSource]]'s `numberFields` adapater\r\n     * so that particular chart types can popuplate this setting with their\r\n     * own type-specific data fields so they are parsed properly.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param value  Array of number fields\r\n     * @return Array of number fields populated with chart's number fields\r\n     */\r\n    Component.prototype.dataSourceNumberFields = function (value) {\r\n        return value;\r\n    };\r\n    /**\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param list        [description]\r\n     * @param dataFields  [description]\r\n     * @param targetList  [description]\r\n     * @return [description]\r\n     */\r\n    Component.prototype.populateDataSourceFields = function (list, dataFields, targetList) {\r\n        $array.each(targetList, function (value) {\r\n            if (dataFields[value] && $array.indexOf(list, dataFields[value]) === -1) {\r\n                list.push(dataFields[value]);\r\n            }\r\n        });\r\n        return list;\r\n    };\r\n    /**\r\n     * Sets events on a [[DataSource]].\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Component.prototype.setDataSourceEvents = function (ds, property) {\r\n        var _this = this;\r\n        ds.events.on(\"started\", function (ev) {\r\n            var preloader = _this.preloader;\r\n            if (preloader) {\r\n                preloader.progress = 0;\r\n                //preloader.label.text = this.language.translate(\"Loading\");\r\n            }\r\n        }, undefined, false);\r\n        ds.events.on(\"loadstarted\", function (ev) {\r\n            var preloader = _this.preloader;\r\n            if (preloader) {\r\n                preloader.progress = 0.25;\r\n            }\r\n        }, undefined, false);\r\n        ds.events.on(\"loadended\", function (ev) {\r\n            var preloader = _this.preloader;\r\n            if (preloader) {\r\n                preloader.progress = 0.5;\r\n            }\r\n        }, undefined, false);\r\n        ds.events.on(\"parseended\", function (ev) {\r\n            var preloader = _this.preloader;\r\n            if (preloader) {\r\n                preloader.progress = 0.75;\r\n            }\r\n        }, undefined, false);\r\n        ds.events.on(\"ended\", function (ev) {\r\n            var preloader = _this.preloader;\r\n            if (preloader) {\r\n                preloader.progress = 1;\r\n            }\r\n        }, undefined, false);\r\n        ds.events.on(\"error\", function (ev) {\r\n            var preloader = _this.preloader;\r\n            if (preloader) {\r\n                preloader.progress = 1;\r\n            }\r\n            _this.openModal(ev.message);\r\n        }, undefined, false);\r\n        if (property) {\r\n            ds.events.on(\"done\", function (ev) {\r\n                var preloader = _this.preloader;\r\n                if (preloader) {\r\n                    preloader.progress = 1;\r\n                }\r\n                if (property == \"data\" && !$type.isArray(ev.data)) {\r\n                    ev.data = [ev.data];\r\n                }\r\n                if (ds.incremental && property == \"data\" && _this.data.length) {\r\n                    _this.addData(ev.data, ds.keepCount ? ev.data.length : 0);\r\n                }\r\n                else if (ds.updateCurrentData && property == \"data\" && _this.data.length) {\r\n                    // cycle through existing data items\r\n                    $array.each(_this.data, function (item, index) {\r\n                        if ($type.hasValue(ev.data[index])) {\r\n                            $object.each(item, function (key, val) {\r\n                                if ($type.hasValue(ev.data[index][key])) {\r\n                                    item[key] = ev.data[index][key];\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                    _this.invalidateRawData();\r\n                }\r\n                else {\r\n                    _this[property] = ev.data;\r\n                }\r\n            });\r\n        }\r\n    };\r\n    Object.defineProperty(Component.prototype, \"responsive\", {\r\n        /**\r\n         * @return Responsive rules handler\r\n         */\r\n        get: function () {\r\n            if (!this._responsive) {\r\n                this._responsive = new Responsive();\r\n                this._responsive.component = this;\r\n            }\r\n            return this._responsive;\r\n        },\r\n        /**\r\n         * A [[Responsive]] instance to be used when applying conditional\r\n         * property values.\r\n         *\r\n         * NOTE: Responsive features are currently in development and may not work\r\n         * as expected, if at all.\r\n         *\r\n         * @param value  Responsive rules handler\r\n         */\r\n        set: function (value) {\r\n            this._responsive = value;\r\n            this._responsive.component = this;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Sets current zoom.\r\n     *\r\n     * The range uses relative values from 0 to 1, with 0 marking beginning and 1\r\n     * marking end of the available data range.\r\n     *\r\n     * This method will not have any effect when called on a chart object.\r\n     * Since the chart can have a number of axes and series, each with its own\r\n     * data, the meaning of \"range\" is very ambiguous.\r\n     *\r\n     * To zoom the chart use `zoom*` methods on its respective axes.\r\n     *\r\n     * @param range          Range\r\n     * @param skipRangeEvent Should rangechanged event not be triggered?\r\n     * @param instantly      Do not animate?\r\n     * @return Actual modidied range (taking `maxZoomFactor` into account)\r\n     */\r\n    Component.prototype.zoom = function (range, skipRangeEvent, instantly, declination) {\r\n        var _this = this;\r\n        if (skipRangeEvent === void 0) { skipRangeEvent = false; }\r\n        if (instantly === void 0) { instantly = false; }\r\n        var start = range.start;\r\n        var end = range.end;\r\n        var priority = range.priority;\r\n        if (range.start == range.end) {\r\n            range.start = range.start - 0.5 / this.maxZoomFactor;\r\n            range.end = range.end + 0.5 / this.maxZoomFactor;\r\n        }\r\n        if (priority == \"end\" && end == 1 && start != 0) {\r\n            if (start < this.start) {\r\n                priority = \"start\";\r\n            }\r\n        }\r\n        if (priority == \"start\" && start == 0) {\r\n            if (end > this.end) {\r\n                priority = \"end\";\r\n            }\r\n        }\r\n        if (!$type.isNumber(declination)) {\r\n            declination = this.maxZoomDeclination;\r\n        }\r\n        if (!$type.isNumber(start) || !$type.isNumber(end)) {\r\n            return { start: this.start, end: this.end };\r\n        }\r\n        if (this._finalStart != start || this._finalEnd != end) {\r\n            var maxZoomFactor = this.maxZoomFactor / this.minZoomCount;\r\n            var minZoomFactor = this.maxZoomFactor / this.maxZoomCount;\r\n            // most likely we are dragging left scrollbar grip here, so we tend to modify end\r\n            if (priority == \"start\") {\r\n                if (this.maxZoomCount > 0) {\r\n                    // add to the end\r\n                    if (1 / (end - start) < minZoomFactor) {\r\n                        end = start + 1 / minZoomFactor;\r\n                    }\r\n                }\r\n                // add to the end\r\n                if (1 / (end - start) > maxZoomFactor) {\r\n                    end = start + 1 / maxZoomFactor;\r\n                }\r\n                //unless end is > 0\r\n                if (end > 1 && end - start < 1 / maxZoomFactor) {\r\n                    //end = 1;\r\n                    start = end - 1 / maxZoomFactor;\r\n                }\r\n            }\r\n            // most likely we are dragging right, so we modify left\r\n            else {\r\n                if (this.maxZoomCount > 0) {\r\n                    // add to the end\r\n                    if (1 / (end - start) < minZoomFactor) {\r\n                        start = end - 1 / minZoomFactor;\r\n                    }\r\n                }\r\n                // remove from start\r\n                if (1 / (end - start) > maxZoomFactor) {\r\n                    start = end - 1 / maxZoomFactor;\r\n                }\r\n                if (start < 0 && end - start < 1 / maxZoomFactor) {\r\n                    //start = 0;\r\n                    end = start + 1 / maxZoomFactor;\r\n                }\r\n            }\r\n            if (start < -declination) {\r\n                start = -declination;\r\n            }\r\n            if (1 / (end - start) > maxZoomFactor) {\r\n                end = start + 1 / maxZoomFactor;\r\n            }\r\n            if (end > 1 + declination) {\r\n                end = 1 + declination;\r\n            }\r\n            if (1 / (end - start) > maxZoomFactor) {\r\n                start = end - 1 / maxZoomFactor;\r\n            }\r\n            this._finalEnd = end;\r\n            this._finalStart = start;\r\n            this.skipRangeEvent = skipRangeEvent;\r\n            this.dispatchImmediately(\"rangechangestarted\");\r\n            if (this.rangeChangeDuration > 0 && !instantly) {\r\n                // todo: maybe move this to Animation\r\n                var rangeChangeAnimation = this.rangeChangeAnimation;\r\n                if (rangeChangeAnimation && rangeChangeAnimation.progress < 1) {\r\n                    var options = rangeChangeAnimation.animationOptions;\r\n                    if (options.length > 1) {\r\n                        if (options[0].to == start && options[1].to == end) {\r\n                            return { start: start, end: end };\r\n                        }\r\n                        else {\r\n                            if (!rangeChangeAnimation.isDisposed()) {\r\n                                rangeChangeAnimation.stop();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (this.rangeChangeAnimation) {\r\n                    this.rangeChangeAnimation.kill();\r\n                }\r\n                rangeChangeAnimation = this.animate([{ property: \"start\", to: start }, { property: \"end\", to: end }], this.rangeChangeDuration, this.rangeChangeEasing);\r\n                this.rangeChangeAnimation = rangeChangeAnimation;\r\n                if (rangeChangeAnimation && !rangeChangeAnimation.isFinished()) {\r\n                    rangeChangeAnimation.events.on(\"animationended\", function () {\r\n                        _this.dispatchImmediately(\"rangechangeended\");\r\n                    });\r\n                }\r\n                else {\r\n                    this.dispatchImmediately(\"rangechangeended\");\r\n                }\r\n            }\r\n            else {\r\n                this.start = start;\r\n                this.end = end;\r\n                this.dispatch(\"rangechangeended\");\r\n            }\r\n        }\r\n        return { start: start, end: end };\r\n    };\r\n    /**\r\n     * Zooms to specific data items using their index in data.\r\n     *\r\n     * This method will not have any effect when called on a chart object.\r\n     * Since the chart can have a number of axes and series, each with its own\r\n     * data, the meaning of \"index\" is very ambiguous.\r\n     *\r\n     * To zoom the chart use `zoom*` methods on its respective axes.\r\n     *\r\n     * @param startIndex     Index of the starting data item\r\n     * @param endIndex       Index of the ending data item\r\n     * @param skipRangeEvent Should rangechanged event not be triggered?\r\n     * @param instantly      Do not animate?\r\n     */\r\n    Component.prototype.zoomToIndexes = function (startIndex, endIndex, skipRangeEvent, instantly) {\r\n        if (!$type.isNumber(startIndex) || !$type.isNumber(endIndex)) {\r\n            return;\r\n        }\r\n        var start = startIndex / this.dataItems.length;\r\n        var end = endIndex / this.dataItems.length;\r\n        this.zoom({ start: start, end: end }, skipRangeEvent, instantly);\r\n    };\r\n    Object.defineProperty(Component.prototype, \"zoomFactor\", {\r\n        /**\r\n         * A current zoom factor (0-1). 1 meaning fully zoomed out. (showing all of\r\n         * the available data)\r\n         *\r\n         * @return Zoom factor\r\n         */\r\n        get: function () {\r\n            return $math.fitToRange(1 / (this.end - this.start), 1, this.maxZoomFactor);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Component.prototype, \"maxZoomFactor\", {\r\n        /**\r\n         * @return Maximum zoomFactor\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"maxZoomFactor\");\r\n        },\r\n        /**\r\n         * Max available `zoomFactor`.\r\n         *\r\n         * The element will not allow zoom to occur beyond this factor.\r\n         *\r\n         * [[DateAxis]] and [[CategoryAxis]] calculate this atutomatically so that\r\n         * category axis could be zoomed to one category and date axis allows to be\r\n         * zoomed up to one base interval.\r\n         *\r\n         * In case you want to restrict category or date axis to be zoomed to more\r\n         * than one category or more than one base interval, use `minZoomCount`\r\n         * property (set it to `> 1`).\r\n         *\r\n         * Default value of [[ValueAxis]]'s `maxZoomFactor` is `1000`.\r\n         *\r\n         * Feel free to modify it to allow bigger zoom or to restrict zooming.\r\n         *\r\n         * @param value  Maximum zoomFactor\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"maxZoomFactor\", value)) {\r\n                if (value == 1) {\r\n                    this.maxZoomDeclination = 0;\r\n                }\r\n                this.invalidateDataRange();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Component.prototype, \"maxZoomDeclination\", {\r\n        /**\r\n         * @ignore\r\n         * @return Maximum zoom declination\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"maxZoomDeclination\");\r\n        },\r\n        /**\r\n         * Max zoom declination.\r\n         *\r\n         * @ignore\r\n         * @default 1\r\n         * @param value  Maximum zoom declination\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"maxZoomDeclination\", value)) {\r\n                this.invalidateDataRange();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Component.prototype, \"startIndex\", {\r\n        /**\r\n         * Current starting index.\r\n         *\r\n         * @return Start index\r\n         */\r\n        get: function () {\r\n            if (!$type.isNumber(this._startIndex)) {\r\n                this._startIndex = 0;\r\n            }\r\n            return this._startIndex;\r\n        },\r\n        /**\r\n         * Sets current starting index.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @param value Start index\r\n         */\r\n        set: function (value) {\r\n            this._startIndex = $math.fitToRange(Math.round(value), 0, this.dataItems.length);\r\n            //this._workingStartIndex = this._startIndex; // not good, breaks adjusted working start index of line series\r\n            this.start = this.indexToPosition(this._startIndex);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @ignore\r\n     * @todo:review description\r\n     * returns item's relative position by the index of the item\r\n     * @param index\r\n     */\r\n    Component.prototype.indexToPosition = function (index) {\r\n        return index / this.dataItems.length;\r\n    };\r\n    Object.defineProperty(Component.prototype, \"endIndex\", {\r\n        /**\r\n         * Current ending index.\r\n         *\r\n         * @return End index\r\n         */\r\n        get: function () {\r\n            var count = this.dataItems.length;\r\n            if (!$type.isNumber(this._endIndex) || this._endIndex > count) {\r\n                this._endIndex = count;\r\n            }\r\n            return this._endIndex;\r\n        },\r\n        /**\r\n         * Sets current ending index.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @param value End index\r\n         */\r\n        set: function (value) {\r\n            this._endIndex = $math.fitToRange(Math.round(value), 0, this.dataItems.length);\r\n            //this._workingEndIndex = this._endIndex; // not good, breaks adjusted workingend index of line series\r\n            this.end = this.indexToPosition(this._endIndex);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Component.prototype, \"start\", {\r\n        /**\r\n         * @return Start (0-1)\r\n         */\r\n        get: function () {\r\n            if (!this._adapterO) {\r\n                return this._start;\r\n            }\r\n            else {\r\n                return this._adapterO.apply(\"start\", this._start);\r\n            }\r\n        },\r\n        /**\r\n         * Start of the current data range (zoom).\r\n         *\r\n         * These are relative values from 0 (beginning) to 1 (end).\r\n         *\r\n         * @param value Start (0-1)\r\n         */\r\n        set: function (value) {\r\n            // value = $math.round(value, 10); not good\r\n            //if (1 / (this.end - value) > this.maxZoomFactor) {\r\n            //\tvalue = this.end - 1 / this.maxZoomFactor;\r\n            //}\r\n            if (this._start != value) {\r\n                this._start = value;\r\n                var startIndex = Math.max(0, Math.floor(this.dataItems.length * value) || 0);\r\n                this._startIndex = Math.min(startIndex, this.dataItems.length);\r\n                this.invalidateDataRange();\r\n                this.invalidate();\r\n                this.dispatchImmediately(\"startchanged\");\r\n                this.dispatch(\"startendchanged\");\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Component.prototype, \"end\", {\r\n        /**\r\n         * @return End (0-1)\r\n         */\r\n        get: function () {\r\n            if (!this._adapterO) {\r\n                return this._end;\r\n            }\r\n            else {\r\n                return this._adapterO.apply(\"end\", this._end);\r\n            }\r\n        },\r\n        /**\r\n         * End of the current data range (zoom).\r\n         *\r\n         * These are relative values from 0 (beginning) to 1 (end).\r\n         *\r\n         * @param value End (0-1)\r\n         */\r\n        set: function (value) {\r\n            // value = $math.round(value, 10); // not good\r\n            //if (1 / (value - this.start) > this.maxZoomFactor) {\r\n            //\tvalue = 1 / this.maxZoomFactor + this.start;\r\n            //}\r\n            if (this._end != value) {\r\n                this._end = value;\r\n                this._endIndex = Math.min(this.dataItems.length, Math.ceil(this.dataItems.length * value) || 0);\r\n                this.invalidateDataRange();\r\n                this.invalidate();\r\n                this.dispatchImmediately(\"endchanged\");\r\n                this.dispatch(\"startendchanged\");\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * [removeFromInvalids description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     */\r\n    Component.prototype.removeFromInvalids = function () {\r\n        _super.prototype.removeFromInvalids.call(this);\r\n        registry.removeFromInvalidComponents(this);\r\n        $array.remove(registry.invalidDataItems, this);\r\n        $array.remove(registry.invalidDataRange, this);\r\n        $array.remove(registry.invalidRawDatas, this);\r\n    };\r\n    Object.defineProperty(Component.prototype, \"dataItems\", {\r\n        /**\r\n         * Returns a list of source [[DataItem]] objects currently used in the chart.\r\n         *\r\n         * @return List of data items\r\n         */\r\n        get: function () {\r\n            if (this._currentDataSetId != \"\") {\r\n                var dataItems = this.dataSets.getKey(this._currentDataSetId);\r\n                if (dataItems) {\r\n                    return dataItems;\r\n                }\r\n            }\r\n            return this._dataItems;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Component.prototype, \"dataSets\", {\r\n        /**\r\n         * Holds data items for data sets (usually aggregated data).\r\n         *\r\n         * @ignore\r\n         * @since 4.7.0\r\n         * @return  Data sets\r\n         */\r\n        get: function () {\r\n            if (!this._dataSets) {\r\n                this._dataSets = new Dictionary();\r\n            }\r\n            return this._dataSets;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Makes the chart use particular data set.\r\n     *\r\n     * If `id` is not provided or there is no such data set, main data will be\r\n     * used.\r\n     *\r\n     * @ignore\r\n     * @since 4.7.0\r\n     * @param  id  Data set id\r\n     */\r\n    Component.prototype.setDataSet = function (id) {\r\n        if (this._currentDataSetId != id) {\r\n            var dataSet = this.dataSets.getKey(id);\r\n            if (!dataSet) {\r\n                if (this._currentDataSetId != \"\") {\r\n                    this.dataItems.each(function (dataItem) {\r\n                        dataItem.__disabled = true;\r\n                    });\r\n                    this._currentDataSetId = \"\";\r\n                    this.invalidateDataRange();\r\n                    this._prevStartIndex = undefined;\r\n                    this.dataItems.each(function (dataItem) {\r\n                        dataItem.__disabled = false;\r\n                    });\r\n                    return true;\r\n                }\r\n            }\r\n            else {\r\n                this.dataItems.each(function (dataItem) {\r\n                    dataItem.__disabled = true;\r\n                });\r\n                this._currentDataSetId = id;\r\n                this.invalidateDataRange();\r\n                this._prevStartIndex = undefined;\r\n                this.dataItems.each(function (dataItem) {\r\n                    dataItem.__disabled = false;\r\n                });\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    Object.defineProperty(Component.prototype, \"currentDataSetId\", {\r\n        /**\r\n         * Returns id of the currently used data set, or `undefined` if main data set\r\n         * is in use.\r\n         *\r\n         * @since 4.7.0\r\n         * @return Current data set id\r\n         */\r\n        get: function () {\r\n            return this._currentDataSetId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Component.prototype, \"mainDataSet\", {\r\n        /**\r\n         * Returns reference to \"main\" data set (unaggregated data as it was supplied\r\n         * in `data`).\r\n         *\r\n         * @since 4.7.0\r\n         * @return Main data set\r\n         */\r\n        get: function () {\r\n            return this._dataItems;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates the indexes for the dataItems\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Component.prototype._updateDataItemIndexes = function (startIndex) {\r\n        var dataItems = this.mainDataSet.values;\r\n        var length = dataItems.length;\r\n        for (var i = startIndex; i < length; ++i) {\r\n            dataItems[i]._index = i;\r\n        }\r\n    };\r\n    /**\r\n     * Processes newly added [[DataItem]] as well as triggers data re-validation.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param event [description]\r\n     */\r\n    Component.prototype.handleDataItemAdded = function (event) {\r\n        event.newValue.component = this;\r\n        this._updateDataItemIndexes(event.index);\r\n        if (!this.dataItemsInvalid) {\r\n            this.invalidateDataItems();\r\n        }\r\n    };\r\n    /**\r\n     * removes [[DataItem]] as well as triggers data re-validation.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param event [description]\r\n     */\r\n    Component.prototype.handleDataItemRemoved = function (event) {\r\n        //\t\tevent.oldValue.component = undefined; // not good, as some items might be not removed from component lists\r\n        this._updateDataItemIndexes(event.index);\r\n        if (!this.dataItemsInvalid) {\r\n            this.invalidateDataItems();\r\n        }\r\n    };\r\n    /**\r\n     * Binds a data element's field to a specific field in raw data.\r\n     * For example, for the very basic column chart you'd want to bind a `value`\r\n     * field to a field in data, such as `price`.\r\n     *\r\n     * Some more advanced Components, like [[CandlestickSeries]] need several\r\n     * data fields bound to data, such as ones for open, high, low and close\r\n     * values.\r\n     *\r\n     * @todo Example\r\n     * @param field  Field name\r\n     * @param value  Field name in data\r\n     */\r\n    Component.prototype.bindDataField = function (field, value) {\r\n        this.dataFields[field] = value;\r\n        this.invalidateDataRange();\r\n    };\r\n    /**\r\n     * Invalidates processed data.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Component.prototype.invalidateProcessedData = function () {\r\n        this.resetProcessedRange();\r\n        this.invalidateDataRange();\r\n    };\r\n    /**\r\n     * [resetProcessedRange description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     */\r\n    Component.prototype.resetProcessedRange = function () {\r\n        this._prevEndIndex = null;\r\n        this._prevStartIndex = null;\r\n    };\r\n    Object.defineProperty(Component.prototype, \"dataUsers\", {\r\n        /**\r\n         * Returns all other [[Component]] objects that are using this element's\r\n         * data.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @todo Description (review)\r\n         * @return [description]\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            if (!this._dataUsers) {\r\n                this._dataUsers = new List();\r\n                //this._disposers.push(new ListDisposer(this._dataUsers));\r\n                // TODO better way of handling this? e.g. move into another module ?\r\n                this._disposers.push(new Disposer(function () {\r\n                    // TODO clear the list ?\r\n                    $iter.each(_this._dataUsers.iterator(), function (x) {\r\n                        x.dispose();\r\n                    });\r\n                }));\r\n            }\r\n            return this._dataUsers;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns a clone of this element.\r\n     *\r\n     * @return Clone\r\n     */\r\n    Component.prototype.clone = function () {\r\n        var component = _super.prototype.clone.call(this);\r\n        component.dataFields = $utils.copyProperties(this.dataFields, {});\r\n        return component;\r\n    };\r\n    /**\r\n     * Copies all parameters from another [[Component]].\r\n     *\r\n     * @param source Source Component\r\n     */\r\n    Component.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        this.data = source.data;\r\n        this.sequencedInterpolation = source.sequencedInterpolation;\r\n        this.sequencedInterpolationDelay = source.sequencedInterpolationDelay;\r\n        this.interpolationDuration = source.interpolationDuration;\r\n        this.interpolationEasing = source.interpolationEasing;\r\n    };\r\n    /**\r\n     * Invalidates the whole element, including all its children, causing\r\n     * complete re-parsing of data and redraw.\r\n     *\r\n     * Use sparingly!\r\n     */\r\n    Component.prototype.reinit = function () {\r\n        this._inited = false;\r\n        this.deepInvalidate();\r\n    };\r\n    /**\r\n     * Add an adapter for data.\r\n     *\r\n     * @return Exporting\r\n     */\r\n    Component.prototype.getExporting = function () {\r\n        var _export = _super.prototype.getExporting.call(this);\r\n        if (!_export.adapter.has(\"data\", this._exportData, -1, this)) {\r\n            _export.adapter.add(\"data\", this._exportData, -1, this);\r\n            this.events.on(\"datavalidated\", function (ev) {\r\n                if (_export.menu) {\r\n                    _export.menu.invalidate();\r\n                }\r\n                _export.handleDataUpdated();\r\n            });\r\n        }\r\n        return _export;\r\n    };\r\n    Component.prototype._exportData = function (arg) {\r\n        arg.data = this.data;\r\n        return arg;\r\n    };\r\n    Component.prototype.setDisabled = function (value) {\r\n        var changed = _super.prototype.setDisabled.call(this, value);\r\n        if (changed) {\r\n            this.invalidateData();\r\n        }\r\n        return changed;\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    Component.prototype.setShowOnInit = function (value) {\r\n        if (value != this.getPropertyValue(\"showOnInit\")) {\r\n            if (value && !this.inited && !this.hidden) {\r\n                this._showOnInitDisposer2 = this.events.once(\"dataitemsvalidated\", this.hideInitially, this, false);\r\n                this._disposers.push(this._showOnInitDisposer2);\r\n            }\r\n            else {\r\n                if (this._showOnInitDisposer2) {\r\n                    this.removeDispose(this._showOnInitDisposer2);\r\n                }\r\n            }\r\n        }\r\n        // important order here\r\n        _super.prototype.setShowOnInit.call(this, value);\r\n    };\r\n    Component.prototype.setBaseId = function (value) {\r\n        if (value != this._baseId) {\r\n            if (this.dataInvalid) {\r\n                this.dataInvalid = false;\r\n                registry.removeFromInvalidComponents(this);\r\n                this._baseId = value;\r\n                this.invalidateData();\r\n            }\r\n        }\r\n        _super.prototype.setBaseId.call(this, value);\r\n    };\r\n    Object.defineProperty(Component.prototype, \"minZoomCount\", {\r\n        /**\r\n         * @return Min zoom count\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"minZoomCount\");\r\n        },\r\n        /**\r\n         * Use this for [[CategoryAxis]] or [[DateAxis]].\r\n         *\r\n         * Allows restricting zoom in beyond certain number of categories or base\r\n         * intervals.\r\n         *\r\n         * @default 1\r\n         * @param value  Min zoom count\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"minZoomCount\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Component.prototype, \"maxZoomCount\", {\r\n        /**\r\n         * @return Max zoom count\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"maxZoomCount\");\r\n        },\r\n        /**\r\n         * Use this for [[CategoryAxis]] or [[DateAxis]].\r\n         *\r\n         * Limits how many categories or base intervals can be shown at the same\r\n         * time.\r\n         *\r\n         * If there are more items in the chart, the chart will auto-zoom.\r\n         *\r\n         * @default 0 (no limit)\r\n         * @since 4.6.2\r\n         * @param value  Max zoom count\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"maxZoomCount\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Called during the System.update method\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Component.prototype._systemCheckIfValidate = function () {\r\n        if (this.dataInvalid || (this.dataProvider && this.dataProvider.dataInvalid)) {\r\n            return false;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    };\r\n    /**\r\n     * Adds easing functions to \"function\" fields.\r\n     *\r\n     * @param field  Field name\r\n     * @return Assign as function?\r\n     */\r\n    Component.prototype.asFunction = function (field) {\r\n        return field == \"interpolationEasing\" || field == \"rangeChangeEasing\" || _super.prototype.asIs.call(this, field);\r\n    };\r\n    return Component;\r\n}(Container));\r\nexport { Component };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Component\"] = Component;\r\n//# sourceMappingURL=Component.js.map","/**\r\n * Functionality for drawing circles.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite } from \"../Sprite\";\r\nimport { percent } from \"../utils/Percent\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $utils from \"../utils/Utils\";\r\nimport * as $math from \"../utils/Math\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Used to create a circle\r\n * @see {@link ICircleEvents} for a list of available events\r\n * @see {@link ICircleAdapters} for a list of available Adapters\r\n */\r\nvar Circle = /** @class */ (function (_super) {\r\n    __extends(Circle, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Circle() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"Circle\";\r\n        _this.element = _this.paper.add(\"circle\");\r\n        _this.setPercentProperty(\"radius\", percent(100));\r\n        _this.setPropertyValue(\"horizontalCenter\", \"middle\");\r\n        _this.setPropertyValue(\"verticalCenter\", \"middle\");\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Draws the circle.\r\n     */\r\n    Circle.prototype.draw = function () {\r\n        _super.prototype.draw.call(this);\r\n        this.element.attr({ \"r\": this.pixelRadius });\r\n    };\r\n    Object.defineProperty(Circle.prototype, \"radius\", {\r\n        /**\r\n         * @return Radius\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"radius\");\r\n        },\r\n        /**\r\n         * Radius of the circle.\r\n         *\r\n         * Can be either absolute (pixels) or relative ([Percent]).\r\n         *\r\n         * @param value  Radius\r\n         */\r\n        set: function (value) {\r\n            this.setPercentProperty(\"radius\", value, true, false, 10, false);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Circle.prototype, \"pixelRadius\", {\r\n        /**\r\n         * Radius of the circle in pixels.\r\n         *\r\n         * This is a read-only property. To set radius in pixels, use `radius`\r\n         * property.\r\n         *\r\n         * @readonly\r\n         * @return Radius (px)\r\n         */\r\n        get: function () {\r\n            return $utils.relativeToValue(this.radius, $math.min(this.innerWidth / 2, this.innerHeight / 2));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates bounding box.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Circle.prototype.measureElement = function () {\r\n        var pixelRadius = this.pixelRadius;\r\n        this._bbox = {\r\n            x: -pixelRadius,\r\n            y: -pixelRadius,\r\n            width: pixelRadius * 2,\r\n            height: pixelRadius * 2\r\n        };\r\n    };\r\n    return Circle;\r\n}(Sprite));\r\nexport { Circle };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Circle\"] = Circle;\r\n//# sourceMappingURL=Circle.js.map","/**\r\n * ============================================================================\r\n * COMPARING FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Comparing function used for ordering.\r\n *\r\n * @ignore Exclude from docs\r\n * @param a  Number 1\r\n * @param b  Number 2\r\n * @return Result\r\n */\r\nexport function order(a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a < b) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n}\r\n//# sourceMappingURL=Number.js.map","/**\r\n * Module that defines everything related to building bullets.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container } from \"../../core/Container\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { defaultRules, ResponsiveBreakpoints } from \"../../core/utils/Responsive\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Class used to creates bullets.\r\n *\r\n * @see {@link IBulletEvents} for a list of available events\r\n * @see {@link IBulletAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nvar Bullet = /** @class */ (function (_super) {\r\n    __extends(Bullet, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Bullet() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"Bullet\";\r\n        _this.isMeasured = false;\r\n        _this.tooltipX = 0;\r\n        _this.tooltipY = 0;\r\n        _this.layout = \"none\";\r\n        _this.applyOnClones = true;\r\n        _this.copyToLegendMarker = true;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Bullet.prototype, \"locationX\", {\r\n        /**\r\n         * @return Location (0-1)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"locationX\");\r\n        },\r\n        /**\r\n         * Relative horizontal location within cell. (0-1)\r\n         *\r\n         * @param value  Location (0-1)\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"locationX\", value)) {\r\n                var dataItem = this.dataItem;\r\n                if (dataItem && dataItem.component) {\r\n                    dataItem.component.invalidate();\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Bullet.prototype, \"locationY\", {\r\n        /**\r\n         * @return Location (0-1)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"locationY\");\r\n        },\r\n        /**\r\n         * Relative vertical location within cell. (0-1)\r\n         *\r\n         * @param value  Location (0-1)\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"locationY\", value)) {\r\n                var dataItem = this.dataItem;\r\n                if (dataItem && dataItem.component) {\r\n                    dataItem.component.invalidate();\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Bullet.prototype, \"xField\", {\r\n        /**\r\n         * @return [description]\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"xField\");\r\n        },\r\n        /**\r\n         * [xField description]\r\n         *\r\n         * @todo Description\r\n         * @param value  [description]\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"xField\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Bullet.prototype, \"yField\", {\r\n        /**\r\n         * @return [description]\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"yField\");\r\n        },\r\n        /**\r\n         * [yField description]\r\n         *\r\n         * Description\r\n         * @param value  [description]\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"yField\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Bullet.prototype, \"isDynamic\", {\r\n        /**\r\n         * @return Redraw on data change?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"isDynamic\");\r\n        },\r\n        /**\r\n         * Indicates if the bullet is \"dynamic\".\r\n         *\r\n         * In most cases the bullets remain the same, even if the underlying data\r\n         * changes.\r\n         *\r\n         * However, in cases where bullet also displays a label, or its size depends\r\n         * on data, it also needs to be redrawn when the underlying data changes.\r\n         *\r\n         * Only those bullets that have set `isDynamic = true` will be redrawn each\r\n         * time data changes. Regular bullets will be reused as they are.\r\n         *\r\n         * @default false\r\n         * @param value  Redraw on data change?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"isDynamic\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Bullet.prototype, \"copyToLegendMarker\", {\r\n        /**\r\n         * @return Redraw on data change?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"copyToLegendMarker\");\r\n        },\r\n        /**\r\n         * Indicates if the bullet should be copied to legend marker\r\n         *\r\n         * @default false\r\n         * @param value  Redraw on data change?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"copyToLegendMarker\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Bullet;\r\n}(Container));\r\nexport { Bullet };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Bullet\"] = Bullet;\r\n/**\r\n * Add default responsive rules\r\n */\r\n/**\r\n * Hide bullets\r\n */\r\ndefaultRules.push({\r\n    relevant: ResponsiveBreakpoints.isXS,\r\n    state: function (target, stateId) {\r\n        if (target instanceof Bullet) {\r\n            var state = target.states.create(stateId);\r\n            state.properties.disabled = true;\r\n            return state;\r\n        }\r\n        return null;\r\n    }\r\n});\r\n//# sourceMappingURL=Bullet.js.map","/**\r\n * Module contains functionality related to [[Sprite]] states.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObject } from \"./Base\";\r\nimport { registry } from \"./Registry\";\r\nimport { Adapter } from \"./utils/Adapter\";\r\nimport { List, ListDisposer } from \"./utils/List\";\r\nimport { toColor } from \"./utils/Color\";\r\nimport { percent } from \"./utils/Percent\";\r\nimport * as $utils from \"./utils/Utils\";\r\nimport * as $ease from \"./utils/Ease\";\r\nimport * as $object from \"./utils/Object\";\r\nimport * as $type from \"./utils/Type\";\r\n/**\r\n * Defines a state for [[Sprite]].\r\n *\r\n * A \"state\" is a special object that has all the same properties as the\r\n * [[Sprite]] of the same type, and which can be used to quickly apply a set\r\n * of property values. (set state)\r\n *\r\n * When [[Sprite]] (or any object that extends Sprite) is created it creates a\r\n * \"default\" state. You can modify the \"default\" state so that when the Sprite\r\n * returns to default state certain properties are added.\r\n *\r\n * Default state can be accessed using Sprite's `defaultState` getter.\r\n *\r\n * ```TypeScript\r\n * sprite.defaultState.properties.fillOpacity = 0.5;\r\n * ```\r\n * ```JavaScript\r\n * sprite.defaultState.properties.fillOpacity = 0.5;\r\n * ```\r\n * ```JSON\r\n * {\r\n *   // ...\r\n *   \"defaultState\": {\r\n *     \"properties\": {\r\n *       \"fillOpacity\": 0.5\r\n *     }\r\n *   }\r\n * }\r\n * ```\r\n *\r\n * If Sprite is \"hoverable\", it automatically adds a \"hover\" state, which is\r\n * applied when it has a cursor over it.\r\n *\r\n * ```TypeScript\r\n * let hoverstate = sprite.states.create(\"hover\");\r\n * hoverstate.properties.fillOpacity = 1;\r\n * ```\r\n * ```JavaScript\r\n * var hoverstate = sprite.states.create(\"hover\");\r\n * hoverstate.properties.fillOpacity = 1;\r\n * ```\r\n * ```JSON\r\n * {\r\n *   // ...\r\n *   \"states\": {\r\n *     \"hover\": {\r\n *       \"properties\": {\r\n *         \"fillOpacity\": 0.5\r\n *       }\r\n *     }\r\n *   }\r\n * }\r\n * ```\r\n *\r\n * The above will automatically apply \"hover\" state when the Sprite is hovered,\r\n * thus will set its `fillOpacity` property to 1, and will reset it to 0.5 when\r\n * it's no longer hovered.\r\n *\r\n * Every object that inherits from [[Sprite]] can and will add their own\r\n * properties to the available list.\r\n *\r\n * User can create their own states, and apply them as needed:\r\n *\r\n * ```TypeScript\r\n * let myCustomState = sprite.states.create(\"mystate\");\r\n * myCustomState.properties.fillOpacity = 0.5;\r\n * myCustomState.properties.strokeOpacity = 0.8;\r\n * sprite.setState(\"mystate\");\r\n * ```\r\n * ```JavaScript\r\n * var myCustomState = sprite.states.create(\"mystate\");\r\n * myCustomState.properties.fillOpacity = 0.5;\r\n * myCustomState.properties.strokeOpacity = 0.8;\r\n * sprite.setState(\"mystate\");\r\n * ```\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/states/}\r\n * @important\r\n */\r\nvar SpriteState = /** @class */ (function (_super) {\r\n    __extends(SpriteState, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function SpriteState() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        /**\r\n         * Duration of the transition to this state. 0 means instantenous transition.\r\n         * Any number means the [[Sprite]] will transit smoothly to this state,\r\n         * animating all animatable properties.\r\n         *\r\n         * @default 0\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/animations/} for more info about animations\r\n         */\r\n        _this.transitionDuration = 0;\r\n        /**\r\n         * Easing function to use when transitioning to this state.\r\n         *\r\n         * @default cubicOut\r\n         * @see {@link Ease}\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/animations/} for more info about animations\r\n         */\r\n        _this.transitionEasing = $ease.cubicOut;\r\n        /**\r\n         * Collection of properties and their values that should be applied to [[Sprite]]\r\n         * when switching to this State.\r\n         *\r\n         * The property values set on a [[SpriteState]] will override the ones set\r\n         * directly on a [[Sprite]].\r\n         */\r\n        _this.properties = {};\r\n        /**\r\n         * A collection of key/value pairs that can be used to bind specific Sprite\r\n         * properties to [[DataItem]].\r\n         *\r\n         * For example: `fill` property can be bound to `myCustomColor` field in\r\n         * DataItem. The Sprite will automatically get the value for `fill` from its\r\n         * DataItem.\r\n         *\r\n         * SpriteState-specific binding will override binding set directly on\r\n         * [[Sprite]]. I.e. you can make Sprite use different fill color on hover by\r\n         * adding a `fill` binding to a different DataItem key for Sprite's \"hover\"\r\n         * state object.\r\n         *\r\n         * @see {@link Sprite}\r\n         */\r\n        _this.propertyFields = {};\r\n        //public propertyFields: Dictionary<keyof this[\"_properties\"], string> = new Dictionary<keyof this[\"_properties\"], string>();;\r\n        /**\r\n         * A list of [[Filter]] elements to be applied to the relative [[Sprite]]\r\n         * when switching to this State.\r\n         *\r\n         * @param {List}\r\n         */\r\n        _this.filters = new List();\r\n        /**\r\n         * Identifies if this object is a \"template\" and should not be treated as\r\n         * real object that is drawn or actually used in the chart.\r\n         */\r\n        _this.isTemplate = false;\r\n        _this.className = \"SpriteState\";\r\n        // Make filter list disposable\r\n        _this._disposers.push(new ListDisposer(_this.filters));\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(SpriteState.prototype, \"adapter\", {\r\n        /**\r\n         * Holds Adapter.\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            if (!this._adapterO) {\r\n                this._adapterO = new Adapter(this);\r\n                // Decorate adapter with events so that we can apply its settings whenever\r\n                // it is modified\r\n                this._adapterO.events.on(\"inserted\", function (ev) {\r\n                    _this[ev.newValue.key] = _this[ev.newValue.key];\r\n                }, undefined, false);\r\n                this._adapterO.events.on(\"removed\", function (ev) {\r\n                    _this[ev.newValue.key] = _this[ev.newValue.key];\r\n                }, undefined, false);\r\n            }\r\n            return this._adapterO;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns [[Sprite]] element's property value.\r\n     *\r\n     * Will check if there are any bindings with [[DataItem]] and if there are\r\n     * any method callbacks set up for the specific property.\r\n     *\r\n     * @param propertyName  Property name\r\n     * @return Property value\r\n     */\r\n    SpriteState.prototype.getPropertyValue = function (propertyName) {\r\n        var propValue = this.properties[propertyName];\r\n        var sprite = this.sprite;\r\n        if (sprite) {\r\n            var fieldName = this.propertyFields[propertyName];\r\n            if ($type.hasValue(fieldName)) {\r\n                if (sprite.dataItem) {\r\n                    propValue = sprite.dataItem.dataContext[fieldName];\r\n                }\r\n                if (propValue == undefined) {\r\n                    propValue = \"__unset\";\r\n                }\r\n            }\r\n            // Apply adapters\r\n            // If the value itself is undefined, we're going to pass in Sprite's\r\n            // value to adapters\r\n            // @todo get rid of <any>\r\n            if (!$type.hasValue(propValue)) {\r\n                var spriteValue = sprite.getPropertyValue(propertyName);\r\n                if (this._adapterO) {\r\n                    propValue = this._adapterO.apply(propertyName, spriteValue);\r\n                }\r\n                else {\r\n                    propValue = spriteValue;\r\n                }\r\n                if (propValue == spriteValue) {\r\n                    propValue = undefined;\r\n                }\r\n            }\r\n            else {\r\n                if (this._adapterO) {\r\n                    propValue = this._adapterO.apply(propertyName, propValue);\r\n                }\r\n            }\r\n            /*let method = this.propertyMethods.getKey(propertyName);\r\n            if (method) {\r\n                propValue = method(sprite, propertyName);\r\n            }*/\r\n        }\r\n        return propValue;\r\n    };\r\n    /**\r\n     * Copies all property and style values from another [[SpriteState]] object.\r\n     *\r\n     * @param source  Source [[SpriteState]]\r\n     */\r\n    SpriteState.prototype.copyFrom = function (source) {\r\n        if (source && source != this) {\r\n            this.transitionDuration = source.transitionDuration;\r\n            this.transitionEasing = source.transitionEasing;\r\n            $utils.copyProperties(source.properties, this.properties);\r\n            $utils.copyProperties(source.propertyFields, this.propertyFields);\r\n            this.filters.copyFrom(source.filters);\r\n            if (source._adapterO) {\r\n                this.adapter.copyFrom(source._adapterO);\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(SpriteState.prototype, \"allValues\", {\r\n        /**\r\n         * Returns all values that should be applied by the SpriteState.\r\n         *\r\n         * It takes adapters into account.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return Properties\r\n         * @todo Add adapter values\r\n         * @todo proper type this[\"_properties\"]\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            // Init return value\r\n            var res = {};\r\n            // Apply adapters to all values\r\n            $object.each(this.properties, function (prop, value) {\r\n                res[prop] = _this.getPropertyValue(prop);\r\n            });\r\n            // Cycle through all adapters and add values for missing properties\r\n            if (this._adapterO) {\r\n                var keys = this._adapterO.keys();\r\n                $object.each(keys, function (_x, prop) {\r\n                    var value = _this.getPropertyValue(prop);\r\n                    res[prop] = value;\r\n                });\r\n            }\r\n            // Cycle through all property fileds and add values for missing properties\r\n            var propertyFields = this.propertyFields;\r\n            $object.each(propertyFields, function (prop) {\r\n                var value = _this.getPropertyValue(prop);\r\n                res[prop] = value;\r\n            });\r\n            return res;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Resets the State to initial state - no values or Filters applied.\r\n     */\r\n    SpriteState.prototype.reset = function () {\r\n        this.properties = {};\r\n        this.filters.clear();\r\n    };\r\n    /**\r\n     * Processes JSON-based config before it is applied to the object.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param config  Config\r\n     */\r\n    SpriteState.prototype.processConfig = function (config) {\r\n        if ($type.hasValue(config) && $type.hasValue(config[\"properties\"])) {\r\n            $object.each(config[\"properties\"], function (key, value) {\r\n                if ($type.isString(value)) {\r\n                    if (value.match(/^[0-9.\\-]+\\%$/)) {\r\n                        config[\"properties\"][key] = percent($type.toNumber(value));\r\n                    }\r\n                    else if (value.match(/^\\#[0-9abcdef]{3,}$/i)) {\r\n                        config[\"properties\"][key] = toColor(value);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        _super.prototype.processConfig.call(this, config);\r\n    };\r\n    /**\r\n     * Adds easing functions to \"function\" fields.\r\n     *\r\n     * @param field  Field name\r\n     * @return Assign as function?\r\n     */\r\n    SpriteState.prototype.asFunction = function (field) {\r\n        return field == \"transitionEasing\" || _super.prototype.asIs.call(this, field);\r\n    };\r\n    return SpriteState;\r\n}(BaseObject));\r\nexport { SpriteState };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"SpriteState\"] = SpriteState;\r\n//# sourceMappingURL=SpriteState.js.map","/**\r\n * A collection of functions for ordering.\r\n */\r\n/**\r\n * [reverse description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param a  [description]\r\n * @return [description]\r\n */\r\nexport function reverse(a) {\r\n    switch (a) {\r\n        case 0:\r\n            return 0;\r\n        case -1:\r\n            return 1;\r\n        case 1:\r\n            return -1;\r\n    }\r\n}\r\n/**\r\n * [or description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param a  Item 1\r\n * @param b  Item 2\r\n * @return [description]\r\n */\r\nexport function or(a, b) {\r\n    if (a === 0) {\r\n        return b;\r\n    }\r\n    else {\r\n        return a;\r\n    }\r\n}\r\n//# sourceMappingURL=Order.js.map","import { __extends } from \"tslib\";\r\nimport { Dictionary } from \"./utils/Dictionary\";\r\nimport { TargetedEventDispatcher } from \"./utils/EventDispatcher\";\r\nimport { MultiDisposer, CounterDisposer } from \"./utils/Disposer\";\r\nimport * as $utils from \"./utils/Utils\";\r\nimport * as $object from \"./utils/Object\";\r\n/**\r\n * An [[EventDispatcher]] for [[Sprite]].\r\n *\r\n * @important\r\n */\r\nvar SpriteEventDispatcher = /** @class */ (function (_super) {\r\n    __extends(SpriteEventDispatcher, _super);\r\n    function SpriteEventDispatcher() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * [_interactionEvents description]\r\n         *\r\n         * @todo Description\r\n         */\r\n        _this._interactionEvents = new Dictionary();\r\n        return _this;\r\n    }\r\n    /**\r\n     * [_dispatchSpriteEvent description]\r\n     *\r\n     * @todo Description\r\n     */\r\n    SpriteEventDispatcher.prototype._dispatchSpriteEvent = function (ev) {\r\n        if (this.target.disabled || this.target.isTemplate) {\r\n            return;\r\n        }\r\n        // TODO remove this <any> later\r\n        if (this.target.events.isEnabled(ev.type)) {\r\n            var imev = $object.merge(ev, {\r\n                target: this.target\r\n            });\r\n            this.target.events.dispatchImmediately(imev.type, imev);\r\n        }\r\n    };\r\n    /**\r\n     * [_dispatchSpritePointEvent description]\r\n     *\r\n     * @todo Description\r\n     */\r\n    SpriteEventDispatcher.prototype._dispatchSpritePointEvent = function (ev) {\r\n        if (this.target.disabled || this.target.isTemplate) {\r\n            return;\r\n        }\r\n        // TODO remove this <any> later\r\n        if (this.target.events.isEnabled(ev.type)) {\r\n            var imev = $object.merge(ev, {\r\n                target: this.target,\r\n                spritePoint: $utils.documentPointToSprite(ev.point, this.target),\r\n                svgPoint: this.target.getSvgPoint(ev.point)\r\n            });\r\n            this.target.events.dispatchImmediately(imev.type, imev);\r\n        }\r\n    };\r\n    /**\r\n     * [_addInteractionObjectEvent description]\r\n     *\r\n     * @todo Description\r\n     */\r\n    SpriteEventDispatcher.prototype._addInteractionObjectEvent = function (type, callback, context, shouldClone) {\r\n        var _this = this;\r\n        var counter = this._interactionEvents.insertKeyIfEmpty(type, function () {\r\n            var disposer = _this.target.interactions.events.on(type, callback, context, shouldClone);\r\n            return new CounterDisposer(function () {\r\n                _this._interactionEvents.removeKey(type);\r\n                disposer.dispose();\r\n            });\r\n        });\r\n        return counter.increment();\r\n    };\r\n    /**\r\n     * [_on description]\r\n     *\r\n     * @todo Description\r\n     */\r\n    SpriteEventDispatcher.prototype._on = function (once, type, callback, context, shouldClone, dispatch) {\r\n        var info = _super.prototype._on.call(this, once, type, callback, context, shouldClone, dispatch);\r\n        var disposers = [info.disposer];\r\n        /**\r\n         * Catching Sprite-related events, converting them to [[SpriteEvent]] and\r\n         * triggering them on sprite\r\n         */\r\n        switch (type) {\r\n            case \"hit\":\r\n            case \"track\":\r\n            case \"doublehit\":\r\n            case \"wheel\":\r\n            case \"wheelup\":\r\n            case \"wheeldown\":\r\n            case \"wheelleft\":\r\n            case \"wheelright\":\r\n                disposers.push(this._addInteractionObjectEvent(type, this._dispatchSpritePointEvent, this, shouldClone));\r\n                break;\r\n            case \"rightclick\":\r\n            case \"down\":\r\n            //case \"hold\":\r\n            case \"up\":\r\n            case \"drag\":\r\n            case \"dragged\":\r\n            case \"dragstart\":\r\n            case \"dragstop\":\r\n            case \"over\":\r\n            case \"out\":\r\n            case \"swipe\":\r\n            case \"swipeleft\":\r\n            case \"swiperight\":\r\n            case \"resize\":\r\n            //case \"rotate\":\r\n            case \"focus\":\r\n            case \"blur\":\r\n            case \"toggled\":\r\n                disposers.push(this._addInteractionObjectEvent(type, this._dispatchSpriteEvent, this, shouldClone));\r\n                break;\r\n        }\r\n        /**\r\n         * Set functional properties based on events. For example if we add a\r\n         * \"drag\" event handler, we want to make the Sprite draggable, even if we\r\n         * don't explicitly set \"draggable\"\r\n         */\r\n        switch (type) {\r\n            case \"hit\":\r\n            case \"doublehit\":\r\n            case \"rightclick\":\r\n            case \"down\":\r\n            case \"up\":\r\n                this.target.clickable = true;\r\n                break;\r\n            case \"toggled\":\r\n                this.target.togglable = true;\r\n                break;\r\n            case \"drag\":\r\n            case \"dragstart\":\r\n            case \"dragstop\":\r\n                this.target.draggable = true;\r\n                break;\r\n            case \"track\":\r\n                this.target.trackable = true;\r\n                break;\r\n            case \"resize\":\r\n                this.target.resizable = true;\r\n                break;\r\n            case \"swipe\":\r\n            case \"swipeleft\":\r\n            case \"swiperight\":\r\n                this.target.swipeable = true;\r\n                break;\r\n            case \"wheel\":\r\n            case \"wheelup\":\r\n            case \"wheeldown\":\r\n            case \"wheelleft\":\r\n            case \"wheelright\":\r\n                this.target.wheelable = true;\r\n                break;\r\n            case \"over\":\r\n                this.target.hoverable = true;\r\n            case \"out\":\r\n                this.target.hoverable = true;\r\n                break;\r\n            case \"focus\":\r\n            case \"blur\":\r\n                this.target.focusable = true;\r\n                break;\r\n        }\r\n        info.disposer = new MultiDisposer(disposers);\r\n        return info;\r\n    };\r\n    return SpriteEventDispatcher;\r\n}(TargetedEventDispatcher));\r\nexport { SpriteEventDispatcher };\r\n//# sourceMappingURL=SpriteEvents.js.map","import { __extends } from \"tslib\";\r\nimport { TargetedEventDispatcher } from \"../utils/EventDispatcher\";\r\nimport { MultiDisposer, CounterDisposer } from \"../utils/Disposer\";\r\n/**\r\n * Represents an Event Dispatcher for [[InteractionObject]].\r\n *\r\n * Besides regular [[EventDispatcher]] functionality it adds new events with\r\n * direct application to DOM nodes. Primarily used to handle keyboard events,\r\n * but can turn into something else moving forward.\r\n */\r\nvar InteractionObjectEventDispatcher = /** @class */ (function (_super) {\r\n    __extends(InteractionObjectEventDispatcher, _super);\r\n    function InteractionObjectEventDispatcher() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Holds a list of Disposers for DOM events added.\r\n         */\r\n        _this._domEvents = {};\r\n        return _this;\r\n    }\r\n    /**\r\n     * Adds a DOM event and returns Disposer.\r\n     *\r\n     * @return Disposer\r\n     */\r\n    InteractionObjectEventDispatcher.prototype._addDOMEvent = function (type, key, listener, context) {\r\n        var _this = this;\r\n        if (!this._domEvents[type]) {\r\n            var callback_1 = function (e) {\r\n                listener.call(context, key, e);\r\n            };\r\n            this.target.element.addEventListener(type, callback_1, false);\r\n            this._domEvents[type] = new CounterDisposer(function () {\r\n                delete _this._domEvents[type];\r\n                _this.target.element.removeEventListener(type, callback_1, false);\r\n            });\r\n        }\r\n        return this._domEvents[type].increment();\r\n    };\r\n    InteractionObjectEventDispatcher.prototype._dispatchKeyboardEvent = function (key, ev) {\r\n        // TODO use this.dispatchImmediately ?\r\n        if (this.target.events.isEnabled(key)) {\r\n            this.target.events.dispatchImmediately(key, {\r\n                type: key,\r\n                target: this.target,\r\n                event: ev\r\n            });\r\n        }\r\n    };\r\n    InteractionObjectEventDispatcher.prototype._on = function (once, type, callback, context, shouldClone, dispatch) {\r\n        var info = _super.prototype._on.call(this, once, type, callback, context, shouldClone, dispatch);\r\n        var disposers = [info.disposer];\r\n        switch (type) {\r\n            case \"hit\":\r\n            case \"doublehit\":\r\n            case \"rightclick\":\r\n            case \"down\":\r\n            case \"up\":\r\n                this.target.clickable = true;\r\n                break;\r\n            case \"drag\":\r\n            case \"dragstart\":\r\n            case \"dragstop\":\r\n                this.target.draggable = true;\r\n                break;\r\n            case \"track\":\r\n                this.target.trackable = true;\r\n                break;\r\n            case \"resize\":\r\n                this.target.resizable = true;\r\n                break;\r\n            case \"swipe\":\r\n            case \"swipeleft\":\r\n            case \"swiperight\":\r\n                this.target.swipeable = true;\r\n                break;\r\n            case \"wheel\":\r\n            case \"wheelup\":\r\n            case \"wheeldown\":\r\n            case \"wheelleft\":\r\n            case \"wheelright\":\r\n                this.target.wheelable = true;\r\n                break;\r\n            case \"over\":\r\n            case \"out\":\r\n                this.target.hoverable = true;\r\n                break;\r\n            case \"focus\":\r\n            case \"blur\":\r\n            case \"focusin\":\r\n            case \"focusout\":\r\n                this.target.focusable = true;\r\n                break;\r\n            case \"keydown\":\r\n                disposers.push(this._addDOMEvent(type, type, this._dispatchKeyboardEvent, this));\r\n                break;\r\n            case \"keyup\":\r\n                disposers.push(this._addDOMEvent(type, type, this._dispatchKeyboardEvent, this));\r\n                break;\r\n            case \"keypress\":\r\n                disposers.push(this._addDOMEvent(type, type, this._dispatchKeyboardEvent, this));\r\n                break;\r\n            case \"input\":\r\n                disposers.push(this._addDOMEvent(type, type, this._dispatchKeyboardEvent, this));\r\n                break;\r\n        }\r\n        info.disposer = new MultiDisposer(disposers);\r\n        return info;\r\n    };\r\n    return InteractionObjectEventDispatcher;\r\n}(TargetedEventDispatcher));\r\nexport { InteractionObjectEventDispatcher };\r\n//# sourceMappingURL=InteractionObjectEvents.js.map","/**\r\n * Modal class is used to display information over chart area.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Popup } from \"./Popup\";\r\nimport { Adapter } from \"../utils/Adapter\";\r\n/**\r\n * Shows an HTML modal which covers window or a chart area.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/popups-and-modals/} For examples and docs on Popups and Modals.\r\n */\r\nvar Modal = /** @class */ (function (_super) {\r\n    __extends(Modal, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Modal() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * Adapter.\r\n         */\r\n        _this.adapter = new Adapter(_this);\r\n        _this.className = \"Modal\";\r\n        _this.showCurtain = true;\r\n        _this.draggable = false;\r\n        return _this;\r\n    }\r\n    return Modal;\r\n}(Popup));\r\nexport { Modal };\r\n//# sourceMappingURL=Modal.js.map","/**\r\n * Pattern module.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObject } from \"../../Base\";\r\nimport { getGhostPaper } from \"../Paper\";\r\nimport { List, ListDisposer } from \"../../utils/List\";\r\nimport { Animation, AnimationDisposer } from \"../../utils/Animation\";\r\nimport { registry } from \"../../Registry\";\r\nimport { InterfaceColorSet } from \"../../utils/InterfaceColorSet\";\r\nimport * as $iter from \"../../utils/Iterator\";\r\nimport * as $object from \"../../utils/Object\";\r\nimport * as $type from \"../../utils/Type\";\r\n;\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Base class to define patterns.\r\n */\r\nvar Pattern = /** @class */ (function (_super) {\r\n    __extends(Pattern, _super);\r\n    //public propertyValues = new Dictionary<PatternProperties, any>();\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Pattern() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        /**\r\n         * List of elements the pattern consists of.\r\n         */\r\n        _this._elements = new List();\r\n        /**\r\n         * A storage for Filter property/value pairs.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @see {@link PatternProperties}\r\n         */\r\n        _this.properties = {};\r\n        _this.className = \"Pattern\";\r\n        // Set defaults\r\n        _this.width = 10;\r\n        _this.height = 10;\r\n        _this.x = 0;\r\n        _this.y = 0;\r\n        _this.patternUnits = \"userSpaceOnUse\";\r\n        var interfaceColors = new InterfaceColorSet();\r\n        _this.backgroundFill = interfaceColors.getFor(\"background\");\r\n        _this.backgroundOpacity = 0;\r\n        _this.fillOpacity = 1;\r\n        _this.fill = interfaceColors.getFor(\"alternativeBackground\");\r\n        _this.stroke = interfaceColors.getFor(\"alternativeBackground\");\r\n        _this.strokeOpacity = 1;\r\n        _this.strokeWidth = 1;\r\n        _this.shapeRendering = \"crispEdges\";\r\n        _this.rotation = 0;\r\n        // Create main group to store pattern elements inelements\r\n        _this.element = _this.paper.addGroup(\"pattern\");\r\n        _this.id = \"pattern-\" + registry.getUniqueId();\r\n        _this.element.attr({ \"id\": _this.id });\r\n        _this._disposers.push(_this.element);\r\n        // Make elements disposable\r\n        _this._disposers.push(new ListDisposer(_this._elements));\r\n        // Request again to trigger getter/setter code\r\n        _this.patternUnits = _this.patternUnits;\r\n        _this.width = _this.width;\r\n        _this.height = _this.height;\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Draws the pattern.\r\n     */\r\n    Pattern.prototype.draw = function () {\r\n        var _this = this;\r\n        var patternElement = this.element;\r\n        if (patternElement) {\r\n            patternElement.removeChildNodes();\r\n            var background = this.paper.add(\"rect\");\r\n            background.attr({ \"width\": this.width, \"height\": this.height, \"shape-rendering\": \"crispEdges\", \"fill\": this.backgroundFill.hex, \"fill-opacity\": this.backgroundOpacity, \"stroke\": this.backgroundFill.hex, \"stroke-opacity\": this.backgroundOpacity });\r\n            patternElement.add(background);\r\n            patternElement.attr({ \"x\": this.x, \"y\": this.y, \"width\": this.width, \"height\": this.height, \"stroke\": this.stroke.hex, \"fill\": this.fill.hex, \"fill-opacity\": this.fillOpacity, \"stroke-opacity\": this.strokeOpacity, \"stroke-width\": this.strokeWidth, \"shape-rendering\": this.shapeRendering, \"patternUnits\": this.patternUnits, \"stroke-dasharray\": this.strokeDasharray });\r\n            $iter.each(this._elements.iterator(), function (element) {\r\n                element.rotation = _this.rotation;\r\n                element.rotationX = _this.properties[\"rotationX\"];\r\n                element.rotationY = _this.properties[\"rotationY\"];\r\n                _this.element.add(element);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Animate pattern properties.\r\n     *\r\n     * @see {@link Animation}\r\n     * @param animationOptions  Animation options\r\n     * @param duration          Duration (ms)\r\n     * @param easing            Easing function\r\n     * @return Animation instance\r\n     */\r\n    Pattern.prototype.animate = function (animationOptions, duration, easing) {\r\n        return new Animation(this, animationOptions, duration, easing).start();\r\n    };\r\n    /**\r\n     * Adds an element to the pattern.\r\n     *\r\n     * @param element  Element\r\n     */\r\n    Pattern.prototype.addElement = function (element) {\r\n        this._elements.push(element);\r\n        this._disposers.push(element);\r\n    };\r\n    /**\r\n     * Remove an element from the pattern.\r\n     *\r\n     * @param element  Element\r\n     */\r\n    Pattern.prototype.removeElement = function (element) {\r\n        this._elements.removeValue(element);\r\n        this.removeDispose(element);\r\n    };\r\n    Object.defineProperty(Pattern.prototype, \"elements\", {\r\n        /**\r\n         * Returns the list of SVG elements comprising the pattern.\r\n         *\r\n         * @return Pattern elements\r\n         */\r\n        get: function () {\r\n            return this._elements;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Pattern.prototype, \"fillOpacity\", {\r\n        /**\r\n         * @return Opacity (0-1)\r\n         */\r\n        get: function () {\r\n            return this.properties[\"fillOpacity\"];\r\n        },\r\n        /**\r\n         * Pattern fill opacity. (0-1)\r\n         *\r\n         * @param value  Opacity (0-1)\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"fillOpacity\"] = value;\r\n            this.draw();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Pattern.prototype, \"fill\", {\r\n        /**\r\n         * @return Fill color\r\n         */\r\n        get: function () {\r\n            return this.properties[\"fill\"];\r\n        },\r\n        /**\r\n         * Fill color of the pattern.\r\n         *\r\n         * @param value  Fill color\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"fill\"] = value;\r\n            this.draw();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Pattern.prototype, \"backgroundFill\", {\r\n        /**\r\n         * @return Background color\r\n         */\r\n        get: function () {\r\n            return this.properties[\"backgroundFill\"];\r\n        },\r\n        /**\r\n         * Pattern background fill color.\r\n         *\r\n         * @param value  Background color\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"backgroundFill\"] = value;\r\n            this.draw();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Pattern.prototype, \"backgroundOpacity\", {\r\n        /**\r\n         * @return Background opacity (0-1)\r\n         */\r\n        get: function () {\r\n            return this.properties[\"backgroundOpacity\"];\r\n        },\r\n        /**\r\n         * Pattern backgorund opacity. (0-1)\r\n         *\r\n         * @param value  Background opacity (0-1)\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"backgroundOpacity\"] = value;\r\n            this.draw();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Pattern.prototype, \"stroke\", {\r\n        /**\r\n         * @return Color\r\n         */\r\n        get: function () {\r\n            return this.properties[\"stroke\"];\r\n        },\r\n        /**\r\n         * Pattern stroke (border) color.\r\n         *\r\n         * @param value  Color\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"stroke\"] = value;\r\n            this.draw();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Pattern.prototype, \"strokeOpacity\", {\r\n        /**\r\n         * @return Opacity (0-1)\r\n         */\r\n        get: function () {\r\n            return this.properties[\"strokeOpacity\"];\r\n        },\r\n        /**\r\n         * Pattern stroke opacity. (0-1)\r\n         *\r\n         * @param value  Opacity (0-1)\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"strokeOpacity\"] = value;\r\n            this.draw();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Pattern.prototype, \"strokeWidth\", {\r\n        /**\r\n         * @return Stroke thickness (px)\r\n         */\r\n        get: function () {\r\n            return this.properties[\"strokeWidth\"];\r\n        },\r\n        /**\r\n         * Pattern stroke thickness in pixels.\r\n         *\r\n         * @param value  Stroke thickness (px)\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"strokeWidth\"] = value;\r\n            this.draw();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Pattern.prototype, \"shapeRendering\", {\r\n        get: function () {\r\n            return this.properties[\"shapeRendering\"];\r\n        },\r\n        /**\r\n         * Shape rendering\r\n         * @param value [description]\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"shapeRendering\"] = value;\r\n            this.draw();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Pattern.prototype, \"rotation\", {\r\n        /**\r\n         * @return Rotation\r\n         */\r\n        get: function () {\r\n            return this.properties[\"rotation\"];\r\n        },\r\n        /**\r\n         * Pattern rotation in degrees.\r\n         *\r\n         * @param value  Rotation\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"rotation\"] = value;\r\n            this.draw();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Pattern.prototype, \"patternUnits\", {\r\n        /**\r\n         * @return Units\r\n         */\r\n        get: function () {\r\n            return this.properties[\"patternUnits\"];\r\n        },\r\n        /**\r\n         * Pattern measuring units.\r\n         *\r\n         * Available options: \"userSpaceOnUse\" | \"objectBoundingBox\".\r\n         *\r\n         * @param value  Units\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"patternUnits\"] = value;\r\n            this.draw();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Pattern.prototype, \"width\", {\r\n        /**\r\n         * @return Width (px)\r\n         */\r\n        get: function () {\r\n            return this.properties[\"width\"];\r\n        },\r\n        /**\r\n         * Pattern width in pixels.\r\n         *\r\n         * @param value  Width (px)\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"width\"] = value;\r\n            this.draw();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Pattern.prototype, \"height\", {\r\n        /**\r\n         * @return Height (px)\r\n         */\r\n        get: function () {\r\n            return this.properties[\"height\"];\r\n        },\r\n        /**\r\n         * Pattern height in pixels.\r\n         *\r\n         * @param value Height (px)\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"height\"] = value;\r\n            this.draw();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Pattern.prototype, \"x\", {\r\n        /**\r\n         * @return X (px)\r\n         */\r\n        get: function () {\r\n            return this.properties[\"x\"];\r\n        },\r\n        /**\r\n         * X position. (pixels)\r\n         *\r\n         * @param value X (px)\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"x\"] = value;\r\n            this.draw();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Pattern.prototype, \"y\", {\r\n        /**\r\n         * @return Y (px)\r\n         */\r\n        get: function () {\r\n            return this.properties[\"y\"];\r\n        },\r\n        /**\r\n         * Y position (px).\r\n         *\r\n         * @param value Y (px)\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"y\"] = value;\r\n            this.draw();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Pattern.prototype, \"paper\", {\r\n        /**\r\n         * @ignore Exclude from docs\r\n         * @return Paper\r\n         */\r\n        get: function () {\r\n            if (this._paper) {\r\n                return this._paper;\r\n            }\r\n            return getGhostPaper();\r\n        },\r\n        /**\r\n         * [[Paper]] instance to draw pattern in.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @param paper  Paper\r\n         */\r\n        set: function (paper) {\r\n            if (this._paper != paper) {\r\n                this._paper = paper;\r\n                this.draw();\r\n                paper.appendDef(this.element);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Copies properties from another Pattern instance.\r\n     *\r\n     * @param source  Source pattern\r\n     */\r\n    Pattern.prototype.copyFrom = function (source) {\r\n        var _this = this;\r\n        _super.prototype.copyFrom.call(this, source);\r\n        $object.each(source.properties, function (key, value) {\r\n            _this[key] = value;\r\n        });\r\n    };\r\n    Object.defineProperty(Pattern.prototype, \"animations\", {\r\n        /**\r\n         * A list of animations currently running on the patter.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return Animation list\r\n         */\r\n        get: function () {\r\n            if (!this._animations) {\r\n                this._animations = [];\r\n                this._disposers.push(new AnimationDisposer(this._animations));\r\n            }\r\n            return this._animations;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Pattern.prototype, \"strokeDasharray\", {\r\n        /**\r\n         * @return `stroke-dasharray`\r\n         */\r\n        get: function () {\r\n            return this.properties[\"strokeDashArray\"];\r\n        },\r\n        /**\r\n         * A `stroke-dasharray` for the stroke (outline).\r\n         *\r\n         * \"Dasharray\" allows setting rules to make lines dashed, dotted, etc.\r\n         *\r\n         * @see {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray} for more info on `stroke-dasharray`\r\n         * @param value  `stroke-dasharray`\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"strokeDashArray\"] = value;\r\n            this.draw();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Processes JSON-based config before it is applied to the object.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param config  Config\r\n     */\r\n    Pattern.prototype.processConfig = function (config) {\r\n        if (config) {\r\n            // Set up series\r\n            if ($type.hasValue(config.elements) && $type.isArray(config.elements)) {\r\n                for (var i = 0, len = config.elements.length; i < len; i++) {\r\n                    var element = config.elements[i];\r\n                    if ($type.hasValue(element[\"type\"])) {\r\n                        var sprite = this.createEntryInstance(element);\r\n                        if (sprite instanceof BaseObject) {\r\n                            sprite.config = element;\r\n                        }\r\n                        this.addElement($type.hasValue(element[\"typeProperty\"])\r\n                            ? sprite[element[\"typeProperty\"]]\r\n                            : sprite.element);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        _super.prototype.processConfig.call(this, config);\r\n    };\r\n    return Pattern;\r\n}(BaseObject));\r\nexport { Pattern };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Pattern\"] = Pattern;\r\n//# sourceMappingURL=Pattern.js.map","/**\r\n * Number formatting-related functionality.\r\n */\r\nimport { __extends } from \"tslib\";\r\nimport { Language } from \"../utils/Language\";\r\nimport { BaseObject } from \"../Base\";\r\nimport { getTextFormatter } from \"../formatters/TextFormatter\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $strings from \"../utils/Strings\";\r\nimport * as $object from \"../utils/Object\";\r\nimport * as $utils from \"../utils/Utils\";\r\nimport * as $type from \"../utils/Type\";\r\n/**\r\n * NumberFormatter class. Formats numbers according to specified formats.\r\n *\r\n * @todo Apply translations to suffixes/prefixes\r\n */\r\nvar NumberFormatter = /** @class */ (function (_super) {\r\n    __extends(NumberFormatter, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function NumberFormatter() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * A base value for negative numbers. Will treat all numbers below this value\r\n         * as negative numbers.\r\n         */\r\n        _this._negativeBase = 0;\r\n        /**\r\n         * Holds number format.\r\n         *\r\n         * @default #,###.#####\r\n         */\r\n        _this._numberFormat = \"#,###.#####\";\r\n        /**\r\n         * Output format to produce. If the format calls for applying color to the\r\n         * formatted value, this setting will determine what markup to use: SVG or\r\n         * HTML.\r\n         *\r\n         * Available options: svg, html.\r\n         *\r\n         * @default \"svg\"\r\n         */\r\n        _this._outputFormat = \"svg\";\r\n        /**\r\n         * Any number smaller than this will be considered \"small\" number, which will\r\n         * trigger special formatting if \"a\" format modifier is used.\r\n         */\r\n        _this._smallNumberThreshold = 1.00;\r\n        _this.className = \"NumberFormatter\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    NumberFormatter.prototype.dispose = function () {\r\n        _super.prototype.dispose.call(this);\r\n        if (this.language) {\r\n            this.language.dispose();\r\n        }\r\n    };\r\n    Object.defineProperty(NumberFormatter.prototype, \"language\", {\r\n        /**\r\n         * @return Language\r\n         */\r\n        get: function () {\r\n            if (!this._language) {\r\n                if (this.sprite) {\r\n                    this._language = this.sprite.language;\r\n                }\r\n                else {\r\n                    this._language = new Language;\r\n                }\r\n            }\r\n            return this._language;\r\n        },\r\n        /**\r\n         * A reference to [[Language]] instance.\r\n         *\r\n         * Formatter will use language to translate various items, like number\r\n         * suffixes, etc.\r\n         *\r\n         * @param value  Language\r\n         */\r\n        set: function (value) {\r\n            this._language = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Formats the number according to specific format.\r\n     *\r\n     * @param value   Value to format\r\n     * @param format  Format to apply\r\n     * @return Formatted number\r\n     */\r\n    NumberFormatter.prototype.format = function (value, format) {\r\n        // no format passed in or \"Number\"\r\n        if (typeof format === \"undefined\" || ($type.isString(format) && format.toLowerCase() === \"number\")) {\r\n            format = this._numberFormat;\r\n        }\r\n        // Init return value\r\n        var formatted;\r\n        // Cast to number just in case\r\n        // TODO: maybe use better casting\r\n        var source = Number(value);\r\n        // Is it a built-in format or Intl.NumberFormatOptions\r\n        if (format instanceof Object) {\r\n            if (this.intlLocales) {\r\n                return new Intl.NumberFormat(this.intlLocales, format).format(source);\r\n            }\r\n            else {\r\n                return new Intl.NumberFormat(undefined, format).format(source);\r\n            }\r\n        }\r\n        else {\r\n            // Clean format\r\n            format = $utils.cleanFormat(format);\r\n            // Get format info (it will also deal with parser caching)\r\n            var info = this.parseFormat(format, this.language);\r\n            // format and replace the number\r\n            var details = void 0;\r\n            if (source > this._negativeBase) {\r\n                details = info.positive;\r\n            }\r\n            else if (source < this._negativeBase) {\r\n                details = info.negative;\r\n            }\r\n            else {\r\n                details = info.zero;\r\n            }\r\n            // Format\r\n            formatted = details.template.split($strings.PLACEHOLDER).join(this.applyFormat(source, details));\r\n        }\r\n        return formatted;\r\n    };\r\n    /**\r\n     * Parses supplied format into structured object which can be used to format\r\n     * the number.\r\n     *\r\n     * @param format Format string, i.e. \"#,###.00\"\r\n     * @param language Language\r\n     */\r\n    NumberFormatter.prototype.parseFormat = function (format, language) {\r\n        var _this = this;\r\n        // Check cache\r\n        var cached = this.getCache(format);\r\n        if ($type.hasValue(cached)) {\r\n            return cached;\r\n        }\r\n        // init format parse info holder\r\n        var info = {\r\n            \"positive\": {\r\n                \"thousands\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"interval\": -1,\r\n                    \"separator\": language.translateEmpty(\"_thousandSeparator\")\r\n                },\r\n                \"decimals\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"separator\": language.translateEmpty(\"_decimalSeparator\")\r\n                },\r\n                \"template\": \"\",\r\n                \"source\": \"\",\r\n                \"parsed\": false\r\n            },\r\n            \"negative\": {\r\n                \"thousands\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"interval\": -1,\r\n                    \"separator\": language.translateEmpty(\"_thousandSeparator\")\r\n                },\r\n                \"decimals\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"separator\": language.translateEmpty(\"_decimalSeparator\")\r\n                },\r\n                \"template\": \"\",\r\n                \"source\": \"\",\r\n                \"parsed\": false\r\n            },\r\n            \"zero\": {\r\n                \"thousands\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"interval\": -1,\r\n                    \"separator\": language.translateEmpty(\"_thousandSeparator\")\r\n                },\r\n                \"decimals\": {\r\n                    \"active\": -1,\r\n                    \"passive\": -1,\r\n                    \"separator\": language.translateEmpty(\"_decimalSeparator\")\r\n                },\r\n                \"template\": \"\",\r\n                \"source\": \"\",\r\n                \"parsed\": false\r\n            }\r\n        };\r\n        // Escape double vertical bars (that mean display one vertical bar)\r\n        format = format.replace(\"||\", $strings.PLACEHOLDER2);\r\n        // Split it up and deal with different formats\r\n        var parts = format.split(\"|\");\r\n        info.positive.source = parts[0];\r\n        if (typeof parts[2] === \"undefined\") {\r\n            info.zero = info.positive;\r\n        }\r\n        else {\r\n            info.zero.source = parts[2];\r\n        }\r\n        if (typeof parts[1] === \"undefined\") {\r\n            info.negative = info.positive;\r\n        }\r\n        else {\r\n            info.negative.source = parts[1];\r\n        }\r\n        // Parse each\r\n        $object.each(info, function (part, item) {\r\n            // Already parsed\r\n            if (item.parsed) {\r\n                return;\r\n            }\r\n            // Check cached\r\n            if (typeof _this.getCache(item.source) !== \"undefined\") {\r\n                info[part] = _this.getCache(item.source);\r\n                return;\r\n            }\r\n            // Begin parsing\r\n            var partFormat = item.source;\r\n            // Just \"Number\"?\r\n            if (partFormat.toLowerCase() === \"number\") {\r\n                partFormat = $type.isString(_this._numberFormat) ? _this._numberFormat : \"#,###.#####\";\r\n            }\r\n            // Let TextFormatter split into chunks\r\n            var chunks = getTextFormatter().chunk(partFormat, true);\r\n            for (var i = 0; i < chunks.length; i++) {\r\n                var chunk = chunks[i];\r\n                // replace back double vertical bar\r\n                chunk.text = chunk.text.replace($strings.PLACEHOLDER2, \"|\");\r\n                if (chunk.type === \"value\") {\r\n                    // Parse format\r\n                    // Look for codes\r\n                    var matches = chunk.text.match(/[#0.,]+[ ]?[abesABES%!]?[abesABES‰!]?/);\r\n                    if (matches) {\r\n                        if (matches === null || matches[0] === \"\") {\r\n                            // no codes here - assume string\r\n                            // nothing to do here\r\n                            item.template += chunk.text;\r\n                        }\r\n                        else {\r\n                            // look for the format modifiers at the end\r\n                            var mods = matches[0].match(/[abesABES%‰!]{2}|[abesABES%‰]{1}$/);\r\n                            if (mods) {\r\n                                item.mod = mods[0].toLowerCase();\r\n                                item.modSpacing = matches[0].match(/[ ]{1}[abesABES%‰!]{1}$/) ? true : false;\r\n                            }\r\n                            // break the format up\r\n                            var a = matches[0].split(\".\");\r\n                            // Deal with thousands\r\n                            if (a[0] === \"\") {\r\n                                // No directives for thousands\r\n                                // Leave default settings (no formatting)\r\n                            }\r\n                            else {\r\n                                // Counts\r\n                                item.thousands.active = (a[0].match(/0/g) || []).length;\r\n                                item.thousands.passive = (a[0].match(/\\#/g) || []).length + item.thousands.active;\r\n                                // Separator interval\r\n                                var b = a[0].split(\",\");\r\n                                if (b.length === 1) {\r\n                                    // No thousands separators\r\n                                    // Do nothing\r\n                                }\r\n                                else {\r\n                                    // Use length fo the last chunk as thousands length\r\n                                    item.thousands.interval = $type.getValue(b.pop()).length;\r\n                                    if (item.thousands.interval === 0) {\r\n                                        item.thousands.interval = -1;\r\n                                    }\r\n                                }\r\n                            }\r\n                            // Deal with decimals\r\n                            if (typeof (a[1]) === \"undefined\") {\r\n                                // No directives for decimals\r\n                                // Leave at defaults (no formatting)\r\n                            }\r\n                            else {\r\n                                // Counts\r\n                                item.decimals.active = (a[1].match(/0/g) || []).length;\r\n                                item.decimals.passive = (a[1].match(/\\#/g) || []).length + item.decimals.active;\r\n                            }\r\n                            // Add special code to template\r\n                            item.template += chunk.text.split(matches[0]).join($strings.PLACEHOLDER);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    // Quoted string - take it as it is\r\n                    item.template += chunk.text;\r\n                }\r\n            }\r\n            // Apply style formatting\r\n            //item.template = getTextFormatter().format(item.template, this.outputFormat);\r\n            // Save cache\r\n            _this.setCache(item.source, item);\r\n            // Mark this as parsed\r\n            item.parsed = true;\r\n        });\r\n        // Save cache (the whole thing)\r\n        this.setCache(format, info);\r\n        return info;\r\n    };\r\n    /**\r\n     * Applies parsed format to a numeric value.\r\n     *\r\n     * @param value    Value\r\n     * @param details  Parsed format as returned by parseFormat()\r\n     * @return Formatted number\r\n     */\r\n    NumberFormatter.prototype.applyFormat = function (value, details) {\r\n        // Use absolute values\r\n        var negative = value < 0;\r\n        value = Math.abs(value);\r\n        // Recalculate according to modifier\r\n        var prefix = \"\", suffix = \"\";\r\n        var mods = details.mod ? details.mod.split(\"\") : [];\r\n        if (mods.indexOf(\"b\") !== -1) {\r\n            var a_1 = this.applyPrefix(value, this.bytePrefixes, mods.indexOf(\"!\") !== -1);\r\n            value = a_1[0];\r\n            prefix = a_1[1];\r\n            suffix = a_1[2];\r\n            if (details.modSpacing) {\r\n                suffix = \" \" + suffix;\r\n            }\r\n        }\r\n        else if (mods.indexOf(\"a\") !== -1) {\r\n            var a_2 = this.applyPrefix(value, value < this.smallNumberThreshold ? this.smallNumberPrefixes : this.bigNumberPrefixes, mods.indexOf(\"!\") !== -1);\r\n            value = a_2[0];\r\n            prefix = a_2[1];\r\n            suffix = a_2[2];\r\n            if (details.modSpacing) {\r\n                suffix = \" \" + suffix;\r\n            }\r\n        }\r\n        else if (mods.indexOf(\"%\") !== -1) {\r\n            var ol = value.toString().length;\r\n            value *= 100;\r\n            value = parseFloat(value.toPrecision(ol + 2));\r\n            suffix = \"%\";\r\n        }\r\n        else if (mods.indexOf(\"‰\") !== -1) {\r\n            var ol = value.toString().length;\r\n            value *= 1000;\r\n            value = parseFloat(value.toPrecision(ol + 3));\r\n            suffix = \"‰\";\r\n        }\r\n        // Round to passive\r\n        if (mods.indexOf(\"e\") !== -1) {\r\n            // convert the value to exponential\r\n            var exp = void 0;\r\n            if (details.decimals.passive >= 0) {\r\n                exp = value.toExponential(details.decimals.passive).split(\"e\");\r\n            }\r\n            else {\r\n                exp = value.toExponential().split(\"e\");\r\n            }\r\n            value = Number(exp[0]);\r\n            suffix = \"e\" + exp[1];\r\n            if (details.modSpacing) {\r\n                suffix = \" \" + suffix;\r\n            }\r\n        }\r\n        else if (details.decimals.passive === 0) {\r\n            value = Math.round(value);\r\n        }\r\n        else if (details.decimals.passive > 0) {\r\n            var d = Math.pow(10, details.decimals.passive);\r\n            value = Math.round(value * d) / d;\r\n        }\r\n        // Init return value\r\n        var res = \"\";\r\n        // Calc integer and decimal parts\r\n        var a = $utils.numberToString(value).split(\".\");\r\n        // Format integers\r\n        var ints = a[0];\r\n        // Pad integers to active length\r\n        if (ints.length < details.thousands.active) {\r\n            ints = Array(details.thousands.active - ints.length + 1).join(\"0\") + ints;\r\n        }\r\n        // Insert thousands separators\r\n        if (details.thousands.interval > 0) {\r\n            var ip = [];\r\n            var intsr = ints.split(\"\").reverse().join(\"\");\r\n            for (var i = 0, len = ints.length; i <= len; i += details.thousands.interval) {\r\n                var c = intsr.substr(i, details.thousands.interval).split(\"\").reverse().join(\"\");\r\n                if (c !== \"\") {\r\n                    ip.unshift(c);\r\n                }\r\n            }\r\n            ints = ip.join(details.thousands.separator);\r\n        }\r\n        // Add integers\r\n        res += ints;\r\n        // Add decimals\r\n        if (a.length === 1) {\r\n            a.push(\"\");\r\n        }\r\n        var decs = a[1];\r\n        // Fill zeros?\r\n        if (decs.length < details.decimals.active) {\r\n            decs += Array(details.decimals.active - decs.length + 1).join(\"0\");\r\n        }\r\n        if (decs !== \"\") {\r\n            res += details.decimals.separator + decs;\r\n        }\r\n        // Can't have empty return value\r\n        if (res === \"\") {\r\n            res = \"0\";\r\n        }\r\n        // Add minus sign back\r\n        if (value !== 0 && negative && (mods.indexOf(\"s\") === -1)) {\r\n            res = \"-\" + res;\r\n        }\r\n        // Add suffixes/prefixes\r\n        if (prefix) {\r\n            res = prefix + res;\r\n        }\r\n        if (suffix) {\r\n            res += suffix;\r\n        }\r\n        return res;\r\n    };\r\n    /**\r\n     * Chooses appropriate prefix and suffix based on the passed in rules.\r\n     *\r\n     * @param  value     Value\r\n     * @param  prefixes  Prefix array\r\n     * @param  force     Force application of a first prefix (@sice 4.5.4)\r\n     * @return Result\r\n     */\r\n    NumberFormatter.prototype.applyPrefix = function (value, prefixes, force) {\r\n        if (force === void 0) { force = false; }\r\n        var newvalue = value;\r\n        var prefix = \"\";\r\n        var suffix = \"\";\r\n        var applied = false;\r\n        var k = 1;\r\n        for (var i = 0, len = prefixes.length; i < len; i++) {\r\n            if (prefixes[i].number <= value) {\r\n                if (prefixes[i].number === 0) {\r\n                    newvalue = 0;\r\n                }\r\n                else {\r\n                    newvalue = value / prefixes[i].number;\r\n                    k = prefixes[i].number;\r\n                }\r\n                prefix = prefixes[i].prefix;\r\n                suffix = prefixes[i].suffix;\r\n                applied = true;\r\n            }\r\n        }\r\n        if (!applied && force && prefixes.length && value != 0) {\r\n            // Prefix was not applied. Use the first prefix.\r\n            newvalue = value / prefixes[0].number;\r\n            prefix = prefixes[0].prefix;\r\n            suffix = prefixes[0].suffix;\r\n            applied = true;\r\n        }\r\n        if (applied) {\r\n            newvalue = parseFloat(newvalue.toPrecision(k.toString().length + Math.floor(newvalue).toString().replace(/[^0-9]*/g, \"\").length));\r\n        }\r\n        return [newvalue, prefix, suffix];\r\n    };\r\n    /**\r\n     * Invalidates the parent [[Sprite]] object.\r\n     */\r\n    NumberFormatter.prototype.invalidateSprite = function () {\r\n        if (this.sprite) {\r\n            this.sprite.invalidate();\r\n        }\r\n    };\r\n    Object.defineProperty(NumberFormatter.prototype, \"numberFormat\", {\r\n        /**\r\n         * @return A format to use for number formatting\r\n         */\r\n        get: function () {\r\n            return this._numberFormat;\r\n        },\r\n        /**\r\n         * Number format.\r\n         *\r\n         * @default \"#,###.#####\"\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-numbers/} Tutorial on number formatting\r\n         * @param format  A format to use for number formatting\r\n         */\r\n        set: function (format) {\r\n            this._numberFormat = format;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(NumberFormatter.prototype, \"intlLocales\", {\r\n        /**\r\n         * @return Date format\r\n         */\r\n        get: function () {\r\n            return this._intlLocales;\r\n        },\r\n        /**\r\n         * Locales if you are using date formats in `Intl.NumberFormatOptions` syntax.\r\n         *\r\n         * @see (@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NumberFormat) about using Intl for number formatting\r\n         * @param value Locales\r\n         */\r\n        set: function (value) {\r\n            this._intlLocales = value;\r\n            this.invalidateSprite();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(NumberFormatter.prototype, \"negativeBase\", {\r\n        /**\r\n         * @return A format to use for number formatting\r\n         */\r\n        get: function () {\r\n            return this._negativeBase;\r\n        },\r\n        /**\r\n         * Negative base for negative numbers.\r\n         *\r\n         * @default 0\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-numbers/} Tutorial on number formatting\r\n         * @param format  A format to use for number formatting\r\n         */\r\n        set: function (value) {\r\n            this._negativeBase = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(NumberFormatter.prototype, \"bigNumberPrefixes\", {\r\n        /**\r\n         * @return Prefixes for big numbers\r\n         */\r\n        get: function () {\r\n            if (!$type.hasValue(this._bigNumberPrefixes)) {\r\n                this._bigNumberPrefixes = [\r\n                    { \"number\": 1e+3, \"suffix\": this.language.translate(\"_big_number_suffix_3\") },\r\n                    { \"number\": 1e+6, \"suffix\": this.language.translate(\"_big_number_suffix_6\") },\r\n                    { \"number\": 1e+9, \"suffix\": this.language.translate(\"_big_number_suffix_9\") },\r\n                    { \"number\": 1e+12, \"suffix\": this.language.translate(\"_big_number_suffix_12\") },\r\n                    { \"number\": 1e+15, \"suffix\": this.language.translate(\"_big_number_suffix_15\") },\r\n                    { \"number\": 1e+18, \"suffix\": this.language.translate(\"_big_number_suffix_18\") },\r\n                    { \"number\": 1e+21, \"suffix\": this.language.translate(\"_big_number_suffix_21\") },\r\n                    { \"number\": 1e+24, \"suffix\": this.language.translate(\"_big_number_suffix_24\") }\r\n                ];\r\n            }\r\n            return this._bigNumberPrefixes;\r\n        },\r\n        /**\r\n         * Prefixes for big numbers.\r\n         *\r\n         * It's an array of objects of number/prefix pairs.\r\n         *\r\n         * ```JSON\r\n         * [\r\n         *   { \"number\": 1e+3, \"suffix\": \"K\" },\r\n         *   { \"number\": 1e+6, \"suffix\": \"M\" },\r\n         *   { \"number\": 1e+9, \"suffix\": \"G\" },\r\n         *   { \"number\": 1e+12, \"suffix\": \"T\" },\r\n         *   { \"number\": 1e+15, \"suffix\": \"P\" },\r\n         *   { \"number\": 1e+18, \"suffix\": \"E\" },\r\n         *   { \"number\": 1e+21, \"suffix\": \"Z\" },\r\n         *   { \"number\": 1e+24, \"suffix\": \"Y\" }\r\n         * ]\r\n         * ```\r\n         *\r\n         * If the number is bigger than the `number` ir will be converted to the\r\n         * appropriate bigger number with prefix.\r\n         *\r\n         * E.g. as per above `1500` will be converted to `1.5K`.\r\n         *\r\n         * Please note that for this transformation to be enabled, you need to\r\n         * enable it specific modifier in your format setting.\r\n         *\r\n         * The modifier for big/small number modification is \"a\":\r\n         *\r\n         * ```Text\r\n         * {myfield.formatNumber(\"#,###.00a\")}\r\n         * ```\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-numbers/} Tutorial on number formatting\r\n         * @param prefixes  Prefixes for big numbers\r\n         */\r\n        set: function (prefixes) {\r\n            this._bigNumberPrefixes = prefixes;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(NumberFormatter.prototype, \"smallNumberPrefixes\", {\r\n        /**\r\n         * @return Prefixes for small numbers\r\n         */\r\n        get: function () {\r\n            if (!$type.hasValue(this._smallNumberPrefixes)) {\r\n                this._smallNumberPrefixes = [\r\n                    { \"number\": 1e-24, \"suffix\": this.language.translate(\"_small_number_suffix_24\") },\r\n                    { \"number\": 1e-21, \"suffix\": this.language.translate(\"_small_number_suffix_21\") },\r\n                    { \"number\": 1e-18, \"suffix\": this.language.translate(\"_small_number_suffix_18\") },\r\n                    { \"number\": 1e-15, \"suffix\": this.language.translate(\"_small_number_suffix_15\") },\r\n                    { \"number\": 1e-12, \"suffix\": this.language.translate(\"_small_number_suffix_12\") },\r\n                    { \"number\": 1e-9, \"suffix\": this.language.translate(\"_small_number_suffix_9\") },\r\n                    { \"number\": 1e-6, \"suffix\": this.language.translate(\"_small_number_suffix_6\") },\r\n                    { \"number\": 1e-3, \"suffix\": this.language.translate(\"_small_number_suffix_3\") }\r\n                ];\r\n            }\r\n            return this._smallNumberPrefixes;\r\n        },\r\n        /**\r\n         * Prefixes for big numbers.\r\n         *\r\n         * It's an array of objects of number/prefix pairs.\r\n         *\r\n         * ```JSON\r\n         * [\r\n         *   { \"number\": 1e-24, \"suffix\": \"y\" },\r\n         *   { \"number\": 1e-21, \"suffix\": \"z\" },\r\n         *   { \"number\": 1e-18, \"suffix\": \"a\" },\r\n         *   { \"number\": 1e-15, \"suffix\": \"f\" },\r\n         *   { \"number\": 1e-12, \"suffix\": \"p\" },\r\n         *   { \"number\": 1e-9, \"suffix\": \"n\" },\r\n         *   { \"number\": 1e-6, \"suffix\": \"μ\" },\r\n         *   { \"number\": 1e-3, \"suffix\": \"m\" }\r\n         * ]\r\n         * ```\r\n         *\r\n         * If the number is smaller than the `number` ir will be converted to the\r\n         * appropriate smaller number with prefix.\r\n         *\r\n         * E.g. as per above `0.0015` will be converted to `1.5m`.\r\n         *\r\n         * Please note that for this transformation to be enabled, you need to\r\n         * enable it specific modifier in your format setting.\r\n         *\r\n         * The modifier for big/small number modification is \"a\":\r\n         *\r\n         * ```Text\r\n         * {myfield.formatNumber(\"#,###.00a\")}\r\n         * ```\r\n         *\r\n         * IMPORTANT: The order of the suffixes is important. The list must start\r\n         * from the smallest number and work towards bigger ones.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-numbers/} Tutorial on number formatting\r\n         * @param prefixes  Prefixes for small numbers\r\n         */\r\n        set: function (prefixes) {\r\n            this._smallNumberPrefixes = prefixes;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(NumberFormatter.prototype, \"smallNumberThreshold\", {\r\n        /**\r\n         * @return Small number threshold\r\n         */\r\n        get: function () {\r\n            return this._smallNumberThreshold;\r\n        },\r\n        /**\r\n         * Any number smaller than this will be considered \"small\" number, which will\r\n         * trigger special formatting if \"a\" format modifier is used.\r\n         *\r\n         * @since 4.6.8\r\n         * @param  value  Small number threshold\r\n         */\r\n        set: function (value) {\r\n            this._smallNumberThreshold = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(NumberFormatter.prototype, \"bytePrefixes\", {\r\n        /**\r\n         * @return Prefixes for byte-size formatting\r\n         */\r\n        get: function () {\r\n            if (!$type.hasValue(this._bytePrefixes)) {\r\n                this._bytePrefixes = [\r\n                    { \"number\": 1, suffix: this.language.translate(\"_byte_suffix_B\") },\r\n                    { \"number\": 1024, suffix: this.language.translate(\"_byte_suffix_KB\") },\r\n                    { \"number\": 1048576, suffix: this.language.translate(\"_byte_suffix_MB\") },\r\n                    { \"number\": 1073741824, suffix: this.language.translate(\"_byte_suffix_GB\") },\r\n                    { \"number\": 1099511627776, suffix: this.language.translate(\"_byte_suffix_TB\") },\r\n                    { \"number\": 1125899906842624, suffix: this.language.translate(\"_byte_suffix_PB\") }\r\n                ];\r\n            }\r\n            return this._bytePrefixes;\r\n        },\r\n        /**\r\n         * Basically the same as `bigNumberPrefixes`, except base for calculation\r\n         * is not thousand but byte (1024).\r\n         *\r\n         * The modifier is \"b\".\r\n         *\r\n         *  ```Text\r\n         * {myfield.formatNumber(\"#,###.00b\")}\r\n         * ```\r\n         *\r\n         * The above `2048` will change to `2K`.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-numbers/} Tutorial on number formatting\r\n         * @param prefixes  Prefixes for byte-size formatting\r\n         */\r\n        set: function (prefixes) {\r\n            this._bytePrefixes = prefixes;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(NumberFormatter.prototype, \"outputFormat\", {\r\n        /**\r\n         * @ignore Exclude from docs\r\n         * @return Output format\r\n         */\r\n        get: function () {\r\n            return this._outputFormat;\r\n        },\r\n        /**\r\n         * Ooutput format: \"svg\" or \"html\".\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @param value  Output format\r\n         */\r\n        set: function (outputFormat) {\r\n            this._outputFormat = outputFormat.toLowerCase();\r\n            this.invalidateSprite();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Replaces brackets with temporary placeholders.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Input text\r\n     * @return Escaped text\r\n     */\r\n    NumberFormatter.prototype.escape = function (text) {\r\n        return text.replace(\"||\", $strings.PLACEHOLDER2);\r\n    };\r\n    /**\r\n     * Replaces placeholders back to brackets.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text  Escaped text\r\n     * @return Unescaped text\r\n     */\r\n    NumberFormatter.prototype.unescape = function (text) {\r\n        return text.replace($strings.PLACEHOLDER2, \"|\");\r\n    };\r\n    return NumberFormatter;\r\n}(BaseObject));\r\nexport { NumberFormatter };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"NumberFormatter\"] = NumberFormatter;\r\n//# sourceMappingURL=NumberFormatter.js.map","/**\r\n * Duration formatting functionality.\r\n */\r\nimport { __extends } from \"tslib\";\r\nimport { Language } from \"../utils/Language\";\r\nimport { BaseObject } from \"../Base\";\r\nimport { getTextFormatter } from \"../formatters/TextFormatter\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $strings from \"../utils/Strings\";\r\nimport * as $object from \"../utils/Object\";\r\nimport * as $utils from \"../utils/Utils\";\r\nimport * as $type from \"../utils/Type\";\r\nimport * as $math from \"../utils/Math\";\r\n/**\r\n * DurationFormatter class. Formats numbers as durations.\r\n *\r\n * `1000` as `16:40`\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-duration/} Tutorial on duration formatting\r\n */\r\nvar DurationFormatter = /** @class */ (function (_super) {\r\n    __extends(DurationFormatter, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function DurationFormatter() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * A base value for negative numbers. Will treat all numbers below this value\r\n         * as negative numbers.\r\n         */\r\n        _this._negativeBase = 0;\r\n        /**\r\n         * A base unit to consider values are in.\r\n         *\r\n         * @default \"s\"\r\n         */\r\n        _this._baseUnit = \"second\";\r\n        /**\r\n         * Output format to produce. If the format calls for applying color to the\r\n         * formatted value, this setting will determine what markup to use: SVG or\r\n         * HTML.\r\n         *\r\n         * Available options: svg, html.\r\n         *\r\n         * @default \"svg\"\r\n         */\r\n        _this._outputFormat = \"svg\";\r\n        /**\r\n         * How many milliseconds each unit represents.\r\n         */\r\n        _this._unitValues = {\r\n            \"millisecond\": 1,\r\n            \"second\": 1000,\r\n            \"minute\": 60000,\r\n            \"hour\": 3600000,\r\n            \"day\": 86400000,\r\n            \"week\": 604800000,\r\n            \"month\": 2592000000,\r\n            \"year\": 31536000000,\r\n        };\r\n        /**\r\n         * Collection of aliases for units.\r\n         */\r\n        _this._unitAliases = {\r\n            \"Y\": \"y\",\r\n            \"D\": \"d\",\r\n            \"H\": \"h\",\r\n            \"K\": \"h\",\r\n            \"k\": \"h\",\r\n            \"n\": \"S\"\r\n        };\r\n        _this.className = \"DurationFormatter\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Formats the number according as duration.\r\n     *\r\n     * For example `1000` (base unit seconds) would be converted to `16:40` as in\r\n     * 16 minutes and 40 seconds.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-duration/} Tutorial on duration formatting\r\n     * @param value   Value to format\r\n     * @param format  Format to apply\r\n     * @param base    Override base unit\r\n     * @return Formatted number\r\n     */\r\n    DurationFormatter.prototype.format = function (value, format, base) {\r\n        // no language?\r\n        if (!this.language) {\r\n            if (this.sprite) {\r\n                this.language = this.sprite.language;\r\n            }\r\n            else {\r\n                this.language = new Language;\r\n            }\r\n        }\r\n        // no base unit?\r\n        var baseUnit = base || this._baseUnit;\r\n        // no format passed in or empty\r\n        if (typeof format === \"undefined\" || format === \"\") {\r\n            if ($type.hasValue(this.durationFormat)) {\r\n                format = this.durationFormat;\r\n            }\r\n            else {\r\n                format = this.getFormat($type.toNumber(value), null, baseUnit);\r\n            }\r\n        }\r\n        // Clean format\r\n        format = $utils.cleanFormat(format);\r\n        // get format info (it will also deal with parser caching)\r\n        var info = this.parseFormat(format, baseUnit);\r\n        // cast to number just in case\r\n        // TODO: maybe use better casting\r\n        var source = Number(value);\r\n        // format and replace the number\r\n        var details;\r\n        if (source > this._negativeBase) {\r\n            details = info.positive;\r\n        }\r\n        else if (source < this._negativeBase) {\r\n            details = info.negative;\r\n        }\r\n        else {\r\n            details = info.zero;\r\n        }\r\n        // Format\r\n        var formatted = this.applyFormat(source, details);\r\n        // Apply color?\r\n        if (details.color !== \"\") {\r\n            if (this._outputFormat === \"svg\") {\r\n                formatted = \"<tspan fill='\" + details.color + \"'>\" + formatted + \"</tspan>\";\r\n            }\r\n            else if (this._outputFormat === \"html\") {\r\n                formatted = \"<span style='color: \" + details.color + \";'>\" + formatted + \"</span>\";\r\n            }\r\n        }\r\n        return formatted;\r\n    };\r\n    /**\r\n     * Parses supplied format into structured object which can be used to format\r\n     * the number.\r\n     *\r\n     * @param format  Format string, i.e. \"#,###.00\"\r\n     * @param base    Override base unit\r\n     * @return Parsed information\r\n     */\r\n    DurationFormatter.prototype.parseFormat = function (format, base) {\r\n        var _this = this;\r\n        // Check cache\r\n        var cached = this.getCache(format);\r\n        if ($type.hasValue(cached)) {\r\n            return cached;\r\n        }\r\n        // no base unit?\r\n        var baseUnit = base || this._baseUnit;\r\n        // Initialize duration parsing info\r\n        var info = {\r\n            \"positive\": {\r\n                \"color\": \"\",\r\n                \"template\": \"\",\r\n                \"parts\": [],\r\n                \"source\": \"\",\r\n                \"baseUnit\": baseUnit,\r\n                \"parsed\": false,\r\n                \"absolute\": false\r\n            },\r\n            \"negative\": {\r\n                \"color\": \"\",\r\n                \"template\": \"\",\r\n                \"parts\": [],\r\n                \"source\": \"\",\r\n                \"baseUnit\": baseUnit,\r\n                \"parsed\": false,\r\n                \"absolute\": false\r\n            },\r\n            \"zero\": {\r\n                \"color\": \"\",\r\n                \"template\": \"\",\r\n                \"parts\": [],\r\n                \"source\": \"\",\r\n                \"baseUnit\": baseUnit,\r\n                \"parsed\": false,\r\n                \"absolute\": false\r\n            }\r\n        };\r\n        // Escape double vertical bars (that mean display one vertical bar)\r\n        format = format.replace(\"||\", $strings.PLACEHOLDER2);\r\n        // Split it up and deal with different formats\r\n        var parts = format.split(\"|\");\r\n        info.positive.source = parts[0];\r\n        if (typeof parts[2] === \"undefined\") {\r\n            info.zero = info.positive;\r\n        }\r\n        else {\r\n            info.zero.source = parts[2];\r\n        }\r\n        if (typeof parts[1] === \"undefined\") {\r\n            info.negative = info.positive;\r\n        }\r\n        else {\r\n            info.negative.source = parts[1];\r\n        }\r\n        // Parse each\r\n        $object.each(info, function (part, item) {\r\n            // Already parsed\r\n            if (item.parsed) {\r\n                return;\r\n            }\r\n            // Check cached\r\n            if (typeof _this.getCache(item.source) !== \"undefined\") {\r\n                info[part] = _this.getCache(item.source);\r\n                return;\r\n            }\r\n            // Begin parsing\r\n            var partFormat = item.source;\r\n            // Check for [] directives\r\n            var dirs = [];\r\n            dirs = item.source.match(/^\\[([^\\]]*)\\]/);\r\n            if (dirs && dirs.length && dirs[0] !== \"\") {\r\n                partFormat = item.source.substr(dirs[0].length);\r\n                item.color = dirs[1];\r\n            }\r\n            // Let TextFormatter split into chunks\r\n            var chunks = getTextFormatter().chunk(partFormat, true);\r\n            for (var i = 0; i < chunks.length; i++) {\r\n                var chunk = chunks[i];\r\n                // replace back double vertical bar\r\n                chunk.text = chunk.text.replace($strings.PLACEHOLDER2, \"|\");\r\n                if (chunk.type === \"value\") {\r\n                    // Just \"Duration\"?\r\n                    // if (chunk.text.toLowerCase() === \"duration\") {\r\n                    // \tchunk.text = durationFormat;\r\n                    // }\r\n                    // Check for \"a\" (absolute) modifier\r\n                    if (chunk.text.match(/[yYMdDwhHKkmsSn]+a/)) {\r\n                        item.absolute = true;\r\n                        chunk.text = chunk.text.replace(/([yYMdDwhHKkmsSn]+)a/, \"$1\");\r\n                    }\r\n                    // Find all possible parts\r\n                    var matches = chunk.text.match(/y+|Y+|M+|d+|D+|w+|h+|H+|K+|k+|m+|s+|S+|n+/g);\r\n                    if (matches) {\r\n                        // Populate template\r\n                        for (var x = 0; x < matches.length; x++) {\r\n                            // Is it an alias?\r\n                            if (!$type.hasValue(matches[x])) {\r\n                                matches[x] = _this._unitAliases[matches[x]];\r\n                            }\r\n                            item.parts.push(matches[x]);\r\n                            chunk.text = chunk.text.replace(matches[x], $strings.PLACEHOLDER);\r\n                        }\r\n                    }\r\n                }\r\n                // Apply to template\r\n                item.template += chunk.text;\r\n            }\r\n            // Apply style formatting\r\n            //item.template = getTextFormatter().format(item.template, this.outputFormat);\r\n            // Save cache\r\n            _this.setCache(item.source, item);\r\n            // Mark this as parsed\r\n            item.parsed = true;\r\n        });\r\n        // Save cache (the whole thing)\r\n        this.setCache(format, info);\r\n        return info;\r\n    };\r\n    /**\r\n     * Applies parsed format to a numeric value.\r\n     *\r\n     * @param value    Value\r\n     * @param details  Parsed format as returned by {parseFormat}\r\n     * @return Formatted duration\r\n     */\r\n    DurationFormatter.prototype.applyFormat = function (value, details) {\r\n        // Use absolute values\r\n        var negative = !details.absolute && (value < this._negativeBase);\r\n        value = Math.abs(value);\r\n        // Recalculate to milliseconds\r\n        var tstamp = this.toTimeStamp(value, details.baseUnit);\r\n        // Init return value\r\n        var res = details.template;\r\n        // Iterate through duration parts\r\n        for (var i = 0, len = details.parts.length; i < len; i++) {\r\n            // Gather the part\r\n            var part = details.parts[i];\r\n            var unit = this.toTimeUnit(part.substr(0, 1));\r\n            var digits = part.length;\r\n            // Calculate current unit value\r\n            var ints = Math.floor(tstamp / this._unitValues[unit]);\r\n            res = res.replace($strings.PLACEHOLDER, $utils.padString(ints, digits, \"0\"));\r\n            // Reduce timestamp\r\n            tstamp -= ints * this._unitValues[unit];\r\n        }\r\n        // Reapply negative sign\r\n        if (negative) {\r\n            res = \"-\" + res;\r\n        }\r\n        return res;\r\n    };\r\n    /**\r\n     * Converts numeric value to timestamp in milliseconds.\r\n     *\r\n     * @param value     A source value\r\n     * @param baseUnit  Base unit the source value is in: \"q\", \"s\", \"i\", \"h\", \"d\", \"w\", \"m\", \"y\"\r\n     * @return Value representation as a timestamp in milliseconds\r\n     */\r\n    DurationFormatter.prototype.toTimeStamp = function (value, baseUnit) {\r\n        return value * this._unitValues[baseUnit];\r\n    };\r\n    DurationFormatter.prototype.toTimeUnit = function (code) {\r\n        switch (code) {\r\n            case \"S\":\r\n                return \"millisecond\";\r\n            case \"s\":\r\n                return \"second\";\r\n            case \"m\":\r\n                return \"minute\";\r\n            case \"h\":\r\n                return \"hour\";\r\n            case \"d\":\r\n                return \"day\";\r\n            case \"w\":\r\n                return \"week\";\r\n            case \"M\":\r\n                return \"month\";\r\n            case \"y\":\r\n                return \"year\";\r\n        }\r\n        ;\r\n    };\r\n    /**\r\n     * Invalidates the parent [[Sprite]] object.\r\n     */\r\n    DurationFormatter.prototype.invalidateSprite = function () {\r\n        if (this.sprite) {\r\n            this.sprite.invalidate();\r\n        }\r\n    };\r\n    Object.defineProperty(DurationFormatter.prototype, \"baseUnit\", {\r\n        /**\r\n         * @return Base unit\r\n         */\r\n        get: function () {\r\n            return this._baseUnit;\r\n        },\r\n        /**\r\n         * Base unit the values are in.\r\n         *\r\n         * A base unit will be used to recalculate the numeric value to millisecond\r\n         * timestamps.\r\n         *\r\n         * Available options:\r\n         *\r\n         * * \"millisecond\"\r\n         * * \"second\"\r\n         * * \"minute\"\r\n         * * \"hour\"\r\n         * * \"day\"\r\n         * * \"week\"\r\n         * * \"month\"\r\n         * * \"year\"\r\n         *\r\n         * @default \"s\"\r\n         * @param baseUnit  A base unit\r\n         */\r\n        set: function (baseUnit) {\r\n            this._baseUnit = baseUnit;\r\n            this.invalidateSprite();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DurationFormatter.prototype, \"outputFormat\", {\r\n        /**\r\n         * Getter for output format.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return Output format\r\n         */\r\n        get: function () {\r\n            return this._outputFormat;\r\n        },\r\n        /**\r\n         * Setter for output format: \"svg\" or \"html.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @param value  Output format\r\n         */\r\n        set: function (outputFormat) {\r\n            this._outputFormat = outputFormat.toLowerCase();\r\n            this.invalidateSprite();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns appropriate default format for the value.\r\n     *\r\n     * If `maxValue` is sepcified, it will use that value to determine the time\r\n     * unit for the format.\r\n     *\r\n     * For example if your `baseUnit` is `\"second\"` and you pass in `10`, you\r\n     * will get `\"10\"`.\r\n     *\r\n     * However, you might want it to be formatted in the context of bigger scale,\r\n     * say 10 minutes (600 seconds). If you pass in `600` as `maxValue`, all\r\n     * values, including small ones will use format with minutes, e.g.:\r\n     * `00:10`, `00:50`, `12: 30`, etc.\r\n     *\r\n     * @param value     Value to format\r\n     * @param maxValue  Maximum value to be used to determine format\r\n     * @param baseUnit  Base unit of the value\r\n     * @return Format\r\n     */\r\n    DurationFormatter.prototype.getFormat = function (value, maxValue, baseUnit) {\r\n        // Is format override set?\r\n        if ($type.hasValue(this.durationFormat)) {\r\n            return this.durationFormat;\r\n        }\r\n        // Get base unit\r\n        if (!baseUnit) {\r\n            baseUnit = this.baseUnit;\r\n        }\r\n        if ($type.hasValue(maxValue) && value != maxValue) {\r\n            value = Math.abs(value);\r\n            maxValue = Math.abs(maxValue);\r\n            var maxUnit = this.getValueUnit($math.max(value, maxValue), baseUnit);\r\n            //let diffUnit = this.getValueUnit(Math.abs(maxValue - value), baseUnit);\r\n            //console.log(maxUnit, diffUnit);\r\n            return this.durationFormats[baseUnit][maxUnit];\r\n        }\r\n        else {\r\n            var unit = this.getValueUnit(value, baseUnit);\r\n            return this.durationFormats[baseUnit][unit];\r\n        }\r\n    };\r\n    /**\r\n     * Returns value's closest denominator time unit, e.g 100 seconds is\r\n     * `\"minute\"`, while 59 seconds would still be `second`.\r\n     *\r\n     * @param value     Source duration value\r\n     * @param baseUnit  Base unit\r\n     * @return Denominator\r\n     */\r\n    DurationFormatter.prototype.getValueUnit = function (value, baseUnit) {\r\n        // Get base unit\r\n        if (!baseUnit) {\r\n            baseUnit = this.baseUnit;\r\n        }\r\n        // Convert to milliseconds\r\n        var currentUnit;\r\n        var ms = this.getMilliseconds(value, baseUnit);\r\n        $object.eachContinue(this._unitValues, function (key, val) {\r\n            if (key == baseUnit || currentUnit) {\r\n                var num = ms / val;\r\n                if (num <= 1) {\r\n                    if (!currentUnit) {\r\n                        currentUnit = key;\r\n                    }\r\n                    return false;\r\n                }\r\n                currentUnit = key;\r\n            }\r\n            return true;\r\n        });\r\n        return currentUnit;\r\n    };\r\n    /**\r\n     * Converts value to milliseconds according to `baseUnit`.\r\n     *\r\n     * @param value     Source duration value\r\n     * @param baseUnit  Base unit\r\n     * @return Value in milliseconds\r\n     */\r\n    DurationFormatter.prototype.getMilliseconds = function (value, baseUnit) {\r\n        // Get base unit\r\n        if (!baseUnit) {\r\n            baseUnit = this.baseUnit;\r\n        }\r\n        return value * this._unitValues[baseUnit];\r\n    };\r\n    Object.defineProperty(DurationFormatter.prototype, \"durationFormat\", {\r\n        /**\r\n         * @return Format\r\n         */\r\n        get: function () {\r\n            return this._durationFormat;\r\n        },\r\n        /**\r\n         * If set, this format will be used instead of the one determined dynamically\r\n         * based on the basedUnit and range of values.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-duration/} Available fomatting codes\r\n         * @param value  Format\r\n         */\r\n        set: function (value) {\r\n            if (this._durationFormat != value) {\r\n                this._durationFormat = value;\r\n                this.invalidateSprite();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DurationFormatter.prototype, \"durationFormats\", {\r\n        /**\r\n         * @return Formats\r\n         */\r\n        get: function () {\r\n            if (!this._durationFormats) {\r\n                this._durationFormats = {\r\n                    \"millisecond\": {\r\n                        \"millisecond\": this.language.translate(\"_duration_millisecond\"),\r\n                        \"second\": this.language.translate(\"_duration_millisecond_second\"),\r\n                        \"minute\": this.language.translate(\"_duration_millisecond_minute\"),\r\n                        \"hour\": this.language.translate(\"_duration_millisecond_hour\"),\r\n                        \"day\": this.language.translate(\"_duration_millisecond_day\"),\r\n                        \"week\": this.language.translate(\"_duration_millisecond_week\"),\r\n                        \"month\": this.language.translate(\"_duration_millisecond_month\"),\r\n                        \"year\": this.language.translate(\"_duration_millisecond_year\")\r\n                    },\r\n                    \"second\": {\r\n                        \"second\": this.language.translate(\"_duration_second\"),\r\n                        \"minute\": this.language.translate(\"_duration_second_minute\"),\r\n                        \"hour\": this.language.translate(\"_duration_second_hour\"),\r\n                        \"day\": this.language.translate(\"_duration_second_day\"),\r\n                        \"week\": this.language.translate(\"_duration_second_week\"),\r\n                        \"month\": this.language.translate(\"_duration_second_month\"),\r\n                        \"year\": this.language.translate(\"_duration_second_year\")\r\n                    },\r\n                    \"minute\": {\r\n                        \"minute\": this.language.translate(\"_duration_minute\"),\r\n                        \"hour\": this.language.translate(\"_duration_minute_hour\"),\r\n                        \"day\": this.language.translate(\"_duration_minute_day\"),\r\n                        \"week\": this.language.translate(\"_duration_minute_week\"),\r\n                        \"month\": this.language.translate(\"_duration_minute_month\"),\r\n                        \"year\": this.language.translate(\"_duration_minute_year\")\r\n                    },\r\n                    \"hour\": {\r\n                        \"hour\": this.language.translate(\"_duration_hour\"),\r\n                        \"day\": this.language.translate(\"_duration_hour_day\"),\r\n                        \"week\": this.language.translate(\"_duration_hour_week\"),\r\n                        \"month\": this.language.translate(\"_duration_hour_month\"),\r\n                        \"year\": this.language.translate(\"_duration_hour_year\")\r\n                    },\r\n                    \"day\": {\r\n                        \"day\": this.language.translate(\"_duration_day\"),\r\n                        \"week\": this.language.translate(\"_duration_day_week\"),\r\n                        \"month\": this.language.translate(\"_duration_day_month\"),\r\n                        \"year\": this.language.translate(\"_duration_day_year\")\r\n                    },\r\n                    \"week\": {\r\n                        \"week\": this.language.translate(\"_duration_week\"),\r\n                        \"month\": this.language.translate(\"_duration_week_month\"),\r\n                        \"year\": this.language.translate(\"_duration_week_year\")\r\n                    },\r\n                    \"month\": {\r\n                        \"month\": this.language.translate(\"_duration_month\"),\r\n                        \"year\": this.language.translate(\"_duration_month_year\")\r\n                    },\r\n                    \"year\": {\r\n                        \"year\": this.language.translate(\"_duration_year\")\r\n                    }\r\n                };\r\n            }\r\n            return this._durationFormats;\r\n        },\r\n        /**\r\n         * Duration formats for various combination of base units.\r\n         *\r\n         * @param value  Formats\r\n         */\r\n        set: function (value) {\r\n            this._durationFormats = value;\r\n            this.invalidateSprite();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return DurationFormatter;\r\n}(BaseObject));\r\nexport { DurationFormatter };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"DurationFormatter\"] = DurationFormatter;\r\n//# sourceMappingURL=DurationFormatter.js.map","/**\r\n * This module defines a [[Validatable]] class which can be used by all\r\n * non-[[Sprite]] classes to use system beats to revalidate themselves.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObjectEvents } from \"../Base\";\r\nimport { registry } from \"../Registry\";\r\n/**\r\n * This module defines a [[Validatable]] class which can be used by all\r\n * non-[[Sprite]] classes to use system update cycle to revalidate themselves.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nvar Validatable = /** @class */ (function (_super) {\r\n    __extends(Validatable, _super);\r\n    function Validatable() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Is invalid and should be revalidated?\r\n         */\r\n        _this._validateDisposer = null;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Invalidates the element, so that it can re-validate/redraw itself in the\r\n     * next cycle.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Validatable.prototype.invalidate = function () {\r\n        if (this._validateDisposer === null) {\r\n            this._validateDisposer = registry.events.on(\"exitframe\", this.validate, this);\r\n        }\r\n    };\r\n    /**\r\n     * Validates itself.\r\n     *\r\n     * Most probably the extending class will have an overriding `validate()`\r\n     * method which will do actual work, as well as call this method using\r\n     * `super.validate()`.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Validatable.prototype.validate = function () {\r\n        if (this._validateDisposer !== null) {\r\n            this._validateDisposer.dispose();\r\n            this._validateDisposer = null;\r\n        }\r\n    };\r\n    Validatable.prototype.dispose = function () {\r\n        if (this._validateDisposer !== null) {\r\n            this._validateDisposer.dispose();\r\n            this._validateDisposer = null;\r\n        }\r\n        _super.prototype.dispose.call(this);\r\n    };\r\n    return Validatable;\r\n}(BaseObjectEvents));\r\nexport { Validatable };\r\n//# sourceMappingURL=Validatable.js.map","/**\r\n * Functionality for drawing rectangles.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite } from \"../Sprite\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $math from \"../utils/Math\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Used to draw a rectangle.\r\n *\r\n * @see {@link IRectangleEvents} for a list of available events\r\n * @see {@link IRectangleAdapters} for a list of available Adapters\r\n */\r\nvar Rectangle = /** @class */ (function (_super) {\r\n    __extends(Rectangle, _super);\r\n    /**\r\n     * Constructor\r\n     * * Creates a `<rect>` element\r\n     * * Creates default state\r\n     */\r\n    function Rectangle() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"Rectangle\";\r\n        _this.element = _this.paper.add(\"rect\");\r\n        //this.pixelPerfect = false;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Draws the element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Rectangle.prototype.draw = function () {\r\n        _super.prototype.draw.call(this);\r\n        var precision = this._positionPrecision;\r\n        if (this.pixelPerfect) {\r\n            precision = 0;\r\n        }\r\n        var w = $math.round(this.innerWidth, precision);\r\n        var h = $math.round(this.innerHeight, precision);\r\n        this.element.attr({\r\n            \"width\": w,\r\n            \"height\": h\r\n        });\r\n    };\r\n    /**\r\n     * Measures the element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Rectangle.prototype.measureElement = function () {\r\n    };\r\n    Object.defineProperty(Rectangle.prototype, \"bbox\", {\r\n        /**\r\n         * Returns bounding box (square) for this element.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        get: function () {\r\n            if (this.definedBBox) {\r\n                return this.definedBBox;\r\n            }\r\n            if (this.isMeasured) {\r\n                return {\r\n                    x: 0,\r\n                    y: 0,\r\n                    width: this.innerWidth,\r\n                    height: this.innerHeight\r\n                };\r\n            }\r\n            else {\r\n                return { x: 0, y: 0, width: 0, height: 0 };\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Rectangle;\r\n}(Sprite));\r\nexport { Rectangle };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Rectangle\"] = Rectangle;\r\n//# sourceMappingURL=Rectangle.js.map","/**\r\n * CSV parser.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { DataParser } from \"./DataParser\";\r\nimport * as $type from \"../utils/Type\";\r\nimport * as $array from \"../utils/Array\";\r\n/**\r\n * Define possible separators.\r\n */\r\nvar separators = [\",\", \";\", \"\\t\"];\r\n/**\r\n * A parser for CSV format.\r\n *\r\n * @important\r\n */\r\nvar CSVParser = /** @class */ (function (_super) {\r\n    __extends(CSVParser, _super);\r\n    function CSVParser() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Content-type suitable for CSV format.\r\n         */\r\n        _this.contentType = \"text/csv\";\r\n        /**\r\n         * Parser options.\r\n         *\r\n         * @see {@link ICSVOptions} for description of each option\r\n         */\r\n        _this.options = {\r\n            delimiter: \"\",\r\n            reverse: false,\r\n            skipRows: 0,\r\n            skipEmpty: true,\r\n            useColumnNames: false\r\n        };\r\n        return _this;\r\n    }\r\n    /**\r\n     * Tests if the format is CSV.\r\n     *\r\n     * @param data  Source data\r\n     * @return Is it CSV?\r\n     */\r\n    CSVParser.isCSV = function (data) {\r\n        return CSVParser.getDelimiterFromData(data) ? true : false;\r\n    };\r\n    /**\r\n     * Tries to determine a column separator.\r\n     *\r\n     * @param data  Source data\r\n     * @return Separator\r\n     */\r\n    CSVParser.getDelimiterFromData = function (data) {\r\n        // We're going to take first few lines of the CSV with different\r\n        // possible separators and check if it results in same number of columns.\r\n        // If it does, we're going to assume it's a CSV\r\n        var lines = data.split(\"\\n\");\r\n        var len = lines.length;\r\n        var separator;\r\n        $array.each(separators, function (sep) {\r\n            var columns = 0, lineColums = 0;\r\n            // TODO replace with iterators\r\n            for (var i = 0; i < len; ++i) {\r\n                // Get number of columns in a line\r\n                columns = lines[i].split(sep).length;\r\n                if (columns > 1) {\r\n                    // More than one column - possible candidate\r\n                    if (lineColums === 0) {\r\n                        // First line\r\n                        lineColums = columns;\r\n                    }\r\n                    else if (columns != lineColums) {\r\n                        // Incorrect number of columns, give up on this separator\r\n                        lineColums = 0;\r\n                        break;\r\n                    }\r\n                }\r\n                else {\r\n                    // Not this separator\r\n                    // Not point in continuing\r\n                    lineColums = 0;\r\n                    break;\r\n                }\r\n            }\r\n            // Check if we have a winner\r\n            if (lineColums) {\r\n                separator = sep;\r\n            }\r\n        });\r\n        return separator;\r\n    };\r\n    /**\r\n     * Parses and returns data.\r\n     *\r\n     * @param data  Unparsed data\r\n     * @return Parsed data\r\n     */\r\n    CSVParser.prototype.parse = function (csv) {\r\n        // Check if we have delimiter set\r\n        if (!this.options.delimiter) {\r\n            this.options.delimiter = CSVParser.getDelimiterFromData(csv);\r\n        }\r\n        // Get CSV data as array\r\n        var data = this.CSVToArray(csv, this.options.delimiter);\r\n        // Do we need to cast some fields to numbers?\r\n        var empty = $type.hasValue(this.options.emptyAs);\r\n        var numbers = this.parsableNumbers;\r\n        var dates = this.parsableDates;\r\n        // Init resuling array\r\n        var res = [], cols = [], col, i;\r\n        // Skip rows\r\n        for (i = 0; i < this.options.skipRows; i++) {\r\n            data.shift();\r\n        }\r\n        // First row holds column names?\r\n        if (this.options.useColumnNames) {\r\n            cols = data.shift();\r\n            // Normalize column names\r\n            for (var x = 0; x < cols.length; x++) {\r\n                // trim\r\n                col = $type.hasValue(cols[x]) ? cols[x].replace(/^\\s+|\\s+$/gm, \"\") : \"\";\r\n                // Check for empty\r\n                if (\"\" === col) {\r\n                    col = \"col\" + x;\r\n                }\r\n                cols[x] = col;\r\n            }\r\n        }\r\n        // Iterate through the result set\r\n        var row;\r\n        while (true) {\r\n            row = this.options.reverse ? data.pop() : data.shift();\r\n            if (!row) {\r\n                break;\r\n            }\r\n            if (this.options.skipEmpty && row.length === 1 && row[0] === \"\") {\r\n                continue;\r\n            }\r\n            var dataPoint = {};\r\n            for (i = 0; i < row.length; i++) {\r\n                col = undefined === cols[i] ? \"col\" + i : cols[i];\r\n                dataPoint[col] = row[i] === \"\" ? this.options.emptyAs : row[i];\r\n                // Convert\r\n                if (empty) {\r\n                    dataPoint[col] = this.maybeToEmpty(dataPoint[col]);\r\n                }\r\n                if (numbers) {\r\n                    dataPoint[col] = this.maybeToNumber(col, dataPoint[col]);\r\n                }\r\n                if (dates) {\r\n                    dataPoint[col] = this.maybeToDate(col, dataPoint[col]);\r\n                }\r\n            }\r\n            res.push(dataPoint);\r\n        }\r\n        return res;\r\n    };\r\n    /**\r\n     * Converts CSV into array.\r\n     *\r\n     * The functionality of this function is taken from here:\r\n     * http://www.bennadel.com/blog/1504-ask-ben-parsing-csv-strings-with-javascript-exec-regular-expression-command.htm\r\n     *\r\n     * @param data       Source data\r\n     * @param delimiter  Column delimiter\r\n     * @return Parsed array\r\n     */\r\n    CSVParser.prototype.CSVToArray = function (data, delimiter) {\r\n        // Check to see if the delimiter is defined. If not,\r\n        // then default to comma.\r\n        delimiter = (delimiter || ',');\r\n        // Create a regular expression to parse the CSV values.\r\n        var objPattern = new RegExp((\r\n        // Delimiters.\r\n        \"(\\\\\" + delimiter + \"|\\\\r?\\\\n|\\\\r|^)\" +\r\n            // Quoted fields.\r\n            \"(?:\\\"([^\\\"]*(?:\\\"\\\"[^\\\"]*)*)\\\"|\" +\r\n            // Standard fields.\r\n            \"([^\\\"\\\\\" + delimiter + \"\\\\r\\\\n]*))\"), \"gi\");\r\n        // Create an array to hold our data. Give the array\r\n        // a default empty first row.\r\n        var arrData = [\r\n            []\r\n        ];\r\n        // Create an array to hold our individual pattern\r\n        // matching groups.\r\n        var arrMatches = null;\r\n        // Keep looping over the regular expression matches\r\n        // until we can no longer find a match.\r\n        while (true) {\r\n            arrMatches = objPattern.exec(data);\r\n            if (!arrMatches) {\r\n                break;\r\n            }\r\n            // Get the delimiter that was found.\r\n            var strMatchedDelimiter = arrMatches[1];\r\n            // Check to see if the given delimiter has a length\r\n            // (is not the start of string) and if it matches\r\n            // field delimiter. If id does not, then we know\r\n            // that this delimiter is a row delimiter.\r\n            if (strMatchedDelimiter.length &&\r\n                (strMatchedDelimiter !== delimiter)) {\r\n                // Since we have reached a new row of data,\r\n                // add an empty row to our data array.\r\n                arrData.push([]);\r\n            }\r\n            // Now that we have our delimiter out of the way,\r\n            // let's check to see which kind of value we\r\n            // captured (quoted or unquoted).\r\n            var strMatchedValue = void 0;\r\n            if (arrMatches[2]) {\r\n                // We found a quoted value. When we capture\r\n                // this value, unescape any double quotes.\r\n                strMatchedValue = arrMatches[2].replace(new RegExp(\"\\\"\\\"\", \"g\"), \"\\\"\");\r\n            }\r\n            else {\r\n                // We found a non-quoted value.\r\n                strMatchedValue = arrMatches[3];\r\n            }\r\n            // Now that we have our value string, let's add\r\n            // it to the data array.\r\n            arrData[arrData.length - 1].push(strMatchedValue);\r\n        }\r\n        // Return the parsed data.\r\n        return (arrData);\r\n    };\r\n    return CSVParser;\r\n}(DataParser));\r\nexport { CSVParser };\r\n//# sourceMappingURL=CSVParser.js.map","/**\r\n * Data parser module.\r\n */\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { DateFormatter } from \"../formatters/DateFormatter\";\r\nimport * as $utils from \"../utils/Utils\";\r\nimport * as $type from \"../utils/Type\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Base class for the data parsers.\r\n */\r\nvar DataParser = /** @class */ (function () {\r\n    function DataParser() {\r\n    }\r\n    /**\r\n     * A \"placeholder\" function for real parsers to override.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param data  Source data\r\n     * @return Parsed data (empty)\r\n     */\r\n    DataParser.prototype.parse = function (data) {\r\n        return [];\r\n    };\r\n    ;\r\n    Object.defineProperty(DataParser.prototype, \"parsableNumbers\", {\r\n        /**\r\n         * Checks if there are any numeric fields that need to be converted to\r\n         * numbers.\r\n         *\r\n         * @return Numeric fields?\r\n         */\r\n        get: function () {\r\n            return this.options.numberFields && (this.options.numberFields.length > 0);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Converts a value to 'number' if it is in `numberFields`.\r\n     *\r\n     * @param field  Field name\r\n     * @param value  Value\r\n     * @return Parsed or original value\r\n     */\r\n    DataParser.prototype.maybeToNumber = function (field, value) {\r\n        if (this.options.numberFields.indexOf(field) !== -1) {\r\n            return $utils.anyToNumber(value);\r\n        }\r\n        return value;\r\n    };\r\n    Object.defineProperty(DataParser.prototype, \"parsableDates\", {\r\n        /**\r\n         * Checks if there are any date fields that need to be converted to `Date`\r\n         * objects.\r\n         *\r\n         * @return Date fields?\r\n         */\r\n        get: function () {\r\n            return this.options.dateFields && (this.options.dateFields.length > 0);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Converts a value to `Date` if it is in `dateFields`.\r\n     *\r\n     * @param field  Field name\r\n     * @param value  Value\r\n     * @return Parsed or original value\r\n     */\r\n    DataParser.prototype.maybeToDate = function (field, value) {\r\n        if (this.options.dateFields.indexOf(field) !== -1) {\r\n            return this.options.dateFormatter.parse(value, this.dateFormat);\r\n        }\r\n        return value;\r\n    };\r\n    /**\r\n     * Replaces empty value with something else.\r\n     *\r\n     * @param value  Source value\r\n     * @return Source value or replacement\r\n     */\r\n    DataParser.prototype.maybeToEmpty = function (value) {\r\n        if ((!$type.hasValue(value) || value == \"\") && $type.hasValue(this.options.emptyAs)) {\r\n            return this.options.emptyAs;\r\n        }\r\n        return value;\r\n    };\r\n    Object.defineProperty(DataParser.prototype, \"dateFormatter\", {\r\n        /**\r\n         * [[DateFormatter]] object for date parsing.\r\n         *\r\n         * If there was not [[DateFormatter]] supplied in parser options, a new one\r\n         * is created.\r\n         *\r\n         * @return Date formatter\r\n         * @see {@link DateFormatter}\r\n         */\r\n        get: function () {\r\n            if (!this.options.dateFormatter) {\r\n                this.options.dateFormatter = new DateFormatter;\r\n                if (this.options.dateFormat) {\r\n                    this.options.dateFormat = this.options.dateFormat;\r\n                }\r\n            }\r\n            return this.options.dateFormatter;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DataParser.prototype, \"dateFormat\", {\r\n        /**\r\n         * A date format to use when parsing dates.\r\n         *\r\n         * @return Date format\r\n         * @see {@link DateFormatter}\r\n         */\r\n        get: function () {\r\n            return this.options.dateFormat || this.dateFormatter.inputDateFormat;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return DataParser;\r\n}());\r\nexport { DataParser };\r\n//# sourceMappingURL=DataParser.js.map","/**\r\n * JSON parser.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { DataParser } from \"./DataParser\";\r\nimport * as $object from \"../utils/Object\";\r\nimport * as $type from \"../utils/Type\";\r\n/**\r\n * A parser for JSON.\r\n *\r\n * @important\r\n */\r\nvar JSONParser = /** @class */ (function (_super) {\r\n    __extends(JSONParser, _super);\r\n    function JSONParser() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Content-type suitable for JSON format.\r\n         */\r\n        _this.contentType = \"application/json\";\r\n        /**\r\n         * Parser options.\r\n         *\r\n         * @see {@link IJSONOptions} for description of each option\r\n         */\r\n        _this.options = {};\r\n        return _this;\r\n    }\r\n    /**\r\n     * Tests if the data is valid JSON.\r\n     *\r\n     * @param data  Source data\r\n     * @return Is it JSON?\r\n     */\r\n    JSONParser.isJSON = function (data) {\r\n        try {\r\n            // Try parsing JSON\r\n            JSON.parse(data);\r\n            // If we got to this point it means it's a valid JSON\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Parses and returns data.\r\n     *\r\n     * @param data  Unparsed data\r\n     * @return Parsed data\r\n     */\r\n    JSONParser.prototype.parse = function (data) {\r\n        var _this = this;\r\n        // Init return\r\n        var res;\r\n        // Try parsing\r\n        try {\r\n            if ($type.hasValue(JSON)) {\r\n                res = JSON.parse(data);\r\n            }\r\n        }\r\n        catch (e) {\r\n            return undefined;\r\n        }\r\n        // Do we need to cast some fields to numbers or dates?\r\n        var empty = $type.hasValue(this.options.emptyAs);\r\n        var numbers = this.parsableNumbers;\r\n        var dates = this.parsableDates;\r\n        if (Array.isArray(res) && (numbers || dates || empty)) {\r\n            var _loop_1 = function (i, len) {\r\n                var row = res[i];\r\n                $object.each(row, function (key, value) {\r\n                    if (empty) {\r\n                        row[key] = _this.maybeToEmpty(row[key]);\r\n                    }\r\n                    if (numbers) {\r\n                        row[key] = _this.maybeToNumber(key, row[key]);\r\n                    }\r\n                    if (dates) {\r\n                        row[key] = _this.maybeToDate(key, row[key]);\r\n                    }\r\n                });\r\n            };\r\n            // Iterate through the data and check if it needs to be converted\r\n            for (var i = 0, len = res.length; i < len; i++) {\r\n                _loop_1(i, len);\r\n            }\r\n        }\r\n        // Convert to array\r\n        //return Array.isArray(res) ? res : [res];\r\n        return res;\r\n    };\r\n    return JSONParser;\r\n}(DataParser));\r\nexport { JSONParser };\r\n//# sourceMappingURL=JSONParser.js.map","/**\r\n * This module contains ColorSet object definition\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObject } from \"../Base\";\r\nimport { Color, color } from \"./Color\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $colors from \"./Colors\";\r\nimport * as $type from \"./Type\";\r\nimport * as $utils from \"./Utils\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Represents a set of colors. Can also generate colors according to set rules.\r\n *\r\n * @important\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/colors/} for color-related info\r\n */\r\nvar ColorSet = /** @class */ (function (_super) {\r\n    __extends(ColorSet, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ColorSet() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * Holds the list of the colors in this set. (preset or auto-generated)\r\n         */\r\n        _this._list = [];\r\n        /**\r\n         * Current step in a color generator's cycle.\r\n         */\r\n        _this._currentStep = 0;\r\n        /**\r\n         * If set to non-zero value, the ColorSet will start iterating colors from\r\n         * that particular index, not the first color in the list.\r\n         */\r\n        _this._startIndex = 0;\r\n        /**\r\n         * Current pass in the color generator's cycle. Normally a generator would\r\n         * cycle through all available hue range, then repeat it, alternating other\r\n         * color properties, to generate distinctive colors.\r\n         */\r\n        _this._currentPass = 0;\r\n        /**\r\n         * A base color. If there are no colors pre-set in the color list, ColorSet\r\n         * will use this color as a base when generating new ones, applying\r\n         * `stepOptions` and `passOptions` to this base color.\r\n         */\r\n        _this.baseColor = new Color({\r\n            r: 103,\r\n            g: 183,\r\n            b: 220\r\n        });\r\n        /**\r\n         * Modifications to apply with each new generated color.\r\n         */\r\n        _this.stepOptions = {};\r\n        /**\r\n         * Modifications to apply on top of `stepOptions` for each \"pass\" of the\r\n         * color generation.\r\n         *\r\n         * A \"pass\" is when ColorSet generates `minColors` number of colors.\r\n         */\r\n        _this.passOptions = {\r\n            brighten: -0.2\r\n        };\r\n        /**\r\n         * An index increment to use when iterating through color list.\r\n         *\r\n         * Default is 1, which means returning each and every color.\r\n         *\r\n         * Setting it to a bigger number will make ColorSet `next()` iterator skip\r\n         * some colors.\r\n         *\r\n         * E.g. setting to 2, will return every second color in the list.\r\n         *\r\n         * This is useful, when the color list has colors that are too close each\r\n         * other for contrast.\r\n         *\r\n         * However, having bigger number will mean that `next()` iterator will go\r\n         * through the list quicker, and the generator will kick sooner.\r\n         */\r\n        _this.step = 1;\r\n        /**\r\n         * A number of colors to generate in one \"pass\".\r\n         *\r\n         * This setting can be automatically overridden, if ColorSet has a list of\r\n         * pre-set colors. In such case ColorSet will generate exactly the same\r\n         * number of colors with each pass as there were colors in original set.\r\n         */\r\n        _this.minColors = 20;\r\n        /**\r\n         * Do not let the \"lightness\" of generated color to fall below this\r\n         * threshold.\r\n         */\r\n        _this.minLightness = 0.2;\r\n        /**\r\n         * Do not let the \"lightness\" of generated color to get above this threshold.\r\n         */\r\n        _this.maxLightness = 0.9;\r\n        /**\r\n         * Randomly shuffle generated colors.\r\n         */\r\n        _this.shuffle = false;\r\n        /**\r\n         * When colors are generated, based on `stepOptions`, each generated color\r\n         * gets either lighter or darker.\r\n         *\r\n         * If this is set to `true`, color generator will switch to opposing spectrum\r\n         * when reaching `minLightness` or `maxLightness`.\r\n         *\r\n         * E.g. if we start off with a red color, then gradually generate lighter\r\n         * colors through rose shades, then switch back to dark red and gradually\r\n         * increase the lightness of it until it reaches the starting red.\r\n         *\r\n         * If set to `false` it will stop there and cap lightness at whatever level\r\n         * we hit `minLightness` or `maxLightness`, which may result in a number of\r\n         * the same colors.\r\n         */\r\n        _this.wrap = true;\r\n        /**\r\n         * Re-use same colors in the pre-set list, when ColorSet runs out of colors,\r\n         * rather than start generating new ones.\r\n         */\r\n        _this.reuse = false;\r\n        /**\r\n         * Saturation of colors. This will change saturation of all colors of color\r\n         * set.\r\n         *\r\n         * It is recommended to set this in theme, as changing it at run time won't\r\n         * make the items to redraw and change color.\r\n         */\r\n        _this.saturation = 1;\r\n        _this.className = \"ColorSet\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ColorSet.prototype, \"list\", {\r\n        /**\r\n         * Returns current list of colors.\r\n         *\r\n         * If there are none, a new list of colors is generated, based on various\r\n         * ColorSet settings.\r\n         *\r\n         * @return Color list\r\n         */\r\n        get: function () {\r\n            if (!this._list) {\r\n                this.generate(this.minColors);\r\n            }\r\n            return this._list;\r\n        },\r\n        /**\r\n         * Sets a list of pre-defined colors to use for the iterator.\r\n         *\r\n         * @param value Color list\r\n         */\r\n        set: function (value) {\r\n            this._list = value;\r\n            this.reset();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Gets reusable color.\r\n     *\r\n     * @param   index  Index of color\r\n     * @return         Color\r\n     */\r\n    ColorSet.prototype.getReusableColor = function (index) {\r\n        if (this._list.length == 0) {\r\n            this.generate(1);\r\n            return this.list[0];\r\n        }\r\n        else {\r\n            var tmpstep = index - (Math.floor(index / this._list.length) * this.list.length);\r\n            return this.list[tmpstep];\r\n        }\r\n    };\r\n    /**\r\n     * Returns next color in the list using internal iterator counter.\r\n     *\r\n     * If `step` is set to something other than 1, it may return other color than\r\n     * exact next one in the list.\r\n     *\r\n     * @return Color\r\n     */\r\n    ColorSet.prototype.next = function () {\r\n        var color;\r\n        if (this.list.length <= this._currentStep) {\r\n            if (this.reuse) {\r\n                color = this.getReusableColor(this._currentStep);\r\n            }\r\n            else {\r\n                this.generate(this.minColors);\r\n                color = this.list[this._currentStep];\r\n            }\r\n        }\r\n        else {\r\n            color = this.list[this._currentStep];\r\n        }\r\n        this._currentStep += this.step;\r\n        return color.saturate(this.saturation);\r\n    };\r\n    /**\r\n     * Returns a color at specific index in the list.\r\n     *\r\n     * @param i  Index\r\n     * @return Color\r\n     */\r\n    ColorSet.prototype.getIndex = function (i) {\r\n        var color;\r\n        if (this.list.length <= i) {\r\n            if (this.reuse) {\r\n                color = this.getReusableColor(i);\r\n            }\r\n            else {\r\n                this.generate(this.minColors);\r\n                color = this.getIndex(i);\r\n            }\r\n        }\r\n        else {\r\n            color = this.list[i];\r\n        }\r\n        return color.saturate(this.saturation);\r\n    };\r\n    /**\r\n     * Resets internal iterator.\r\n     *\r\n     * Calling `next()` after this will return the very first color in the color\r\n     * list, even if it was already returned before.\r\n     */\r\n    ColorSet.prototype.reset = function () {\r\n        this._currentStep = this._startIndex;\r\n    };\r\n    Object.defineProperty(ColorSet.prototype, \"currentStep\", {\r\n        /**\r\n         * @return Step\r\n         */\r\n        get: function () {\r\n            return this._currentStep;\r\n        },\r\n        /**\r\n         * Sets current color iteration. You can use this property to skip some\r\n         * colors from iteration. E.g. setting it to `10` will skip first ten\r\n         * colors.\r\n         *\r\n         * Please note that the number is zero-based.\r\n         *\r\n         * @param value  Step\r\n         */\r\n        set: function (value) {\r\n            this._currentStep = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ColorSet.prototype, \"startIndex\", {\r\n        /**\r\n         * @return Index\r\n         */\r\n        get: function () {\r\n            return this._startIndex;\r\n        },\r\n        /**\r\n         * If set to non-zero value, the ColorSet will start iterating colors from\r\n         * that particular index, not the first color in the list.\r\n         *\r\n         * @default 0\r\n         * @since 4.4.9\r\n         * @param  value  Index\r\n         */\r\n        set: function (value) {\r\n            this._startIndex = value;\r\n            this.reset();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Generates colors based on the various ColorSet settings.\r\n     *\r\n     * @param count Number of colors to generate\r\n     */\r\n    ColorSet.prototype.generate = function (count) {\r\n        // Init\r\n        var curColor = this.currentColor;\r\n        var hsl = $colors.rgbToHsl($type.getValue(curColor.rgb));\r\n        var hueStep = $type.hasValue(this.stepOptions.hue) ? this.stepOptions.hue : 1 / count;\r\n        var mods = {\r\n            brighten: 0,\r\n            lighten: 0,\r\n            hue: hsl.h,\r\n            lightness: hsl.l,\r\n            saturation: hsl.s\r\n        };\r\n        // Generate list of hues, and shuffle them\r\n        var hues = [];\r\n        var startIndex = this.list.length == 0 ? 0 : 1;\r\n        if (this.reuse) {\r\n            for (var i = startIndex; i <= count; i++) {\r\n                hues.push($colors.rgbToHsl($type.getValue(this._list[i].rgb)).h);\r\n            }\r\n        }\r\n        else {\r\n            for (var i = startIndex; i <= count; i++) {\r\n                var h = hsl.h + hueStep * i;\r\n                if (this.wrap && (h > 1)) {\r\n                    h -= 1;\r\n                }\r\n                hues.push(h);\r\n            }\r\n        }\r\n        // Shuffle colors randomly\r\n        if (this.shuffle) {\r\n            hues.sort(function (a, b) {\r\n                return Math.random() - 0.5;\r\n            });\r\n        }\r\n        // Generate colors by rotating hue\r\n        for (var i = 0; i < count; i++) {\r\n            // Update hue\r\n            if (this.reuse) {\r\n                hsl = $colors.rgbToHsl($type.getValue(this._list[i].rgb));\r\n            }\r\n            else {\r\n                hsl.h = hues.shift();\r\n            }\r\n            // Apply HSL mods\r\n            this.applyStepOptions(hsl, mods, i, this._currentPass);\r\n            // Convert back to Color\r\n            var c = color($colors.hslToRgb(hsl));\r\n            // Apply regular color mods\r\n            var brighten = (this.stepOptions.brighten || 0) * i + (this.passOptions.brighten || 0) * this._currentPass;\r\n            if (brighten != 0) {\r\n                if (this.wrap) {\r\n                    brighten = $utils.fitNumberRelative(brighten, this.minLightness, this.maxLightness);\r\n                }\r\n                else {\r\n                    brighten = $utils.fitNumber(brighten, this.minLightness, this.maxLightness);\r\n                }\r\n                c = c.brighten(brighten);\r\n            }\r\n            var lighten = (this.stepOptions.lighten || 0) * i + (this.passOptions.lighten || 0) * this._currentPass;\r\n            if (lighten != 0) {\r\n                if (this.wrap) {\r\n                    lighten = $utils.fitNumberRelative(lighten, this.minLightness, this.maxLightness);\r\n                }\r\n                else {\r\n                    lighten = $utils.fitNumber(lighten, this.minLightness, this.maxLightness);\r\n                }\r\n                c = c.lighten(lighten);\r\n            }\r\n            this._list.push(c);\r\n        }\r\n        this._currentPass++;\r\n    };\r\n    Object.defineProperty(ColorSet.prototype, \"currentColor\", {\r\n        /**\r\n         * Returns current last color. It's either the last color in the list of\r\n         * colors, or `baseColor` if list is empty.\r\n         *\r\n         * @return Color\r\n         */\r\n        get: function () {\r\n            if (this._list.length == 0) {\r\n                return this.baseColor.saturate(this.saturation);\r\n            }\r\n            else {\r\n                return this._list[this._list.length - 1].saturate(this.saturation);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Generates modifiers for color, based on what step and pass.\r\n     *\r\n     * @param hsl   Curren HSL value of the color to modify\r\n     * @param base  The modifiers that were before modification to use as a base\r\n     * @param step  Current step\r\n     * @param pass  Current pass\r\n     */\r\n    ColorSet.prototype.applyStepOptions = function (hsl, base, step, pass) {\r\n        // Process lightness\r\n        hsl.l = base.lightness + (this.stepOptions.lightness || 0) * step + (this.passOptions.lightness || 0) * pass;\r\n        if (this.wrap) {\r\n            if (hsl.l > 1) {\r\n                hsl.l = hsl.l - Math.floor(hsl.l);\r\n            }\r\n            else if (hsl.l < 0) {\r\n                hsl.l = -(hsl.l - Math.floor(hsl.l));\r\n            }\r\n            hsl.l = $utils.fitNumberRelative(hsl.l, this.minLightness, this.maxLightness);\r\n        }\r\n        else {\r\n            if (hsl.l > 1) {\r\n                hsl.l = 1;\r\n            }\r\n            else if (hsl.l < 0) {\r\n                hsl.l = 0;\r\n            }\r\n            hsl.l = $utils.fitNumber(hsl.l, this.minLightness, this.maxLightness);\r\n        }\r\n    };\r\n    /**\r\n     * Processes JSON-based config before it is applied to the object.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param config  Config\r\n     */\r\n    ColorSet.prototype.processConfig = function (config) {\r\n        if (config) {\r\n            // Set up axis ranges\r\n            if ($type.hasValue(config.list) && $type.isArray(config.list)) {\r\n                for (var i = 0, len = config.list.length; i < len; i++) {\r\n                    if (!(config.list[i] instanceof Color)) {\r\n                        config.list[i] = color(config.list[i]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        _super.prototype.processConfig.call(this, config);\r\n    };\r\n    return ColorSet;\r\n}(BaseObject));\r\nexport { ColorSet };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ColorSet\"] = ColorSet;\r\n//# sourceMappingURL=ColorSet.js.map","import { StyleRule } from \"../utils/DOM\";\r\nimport { Dictionary } from \"../utils/Dictionary\";\r\nimport { MultiDisposer, CounterDisposer } from \"../utils/Disposer\";\r\nimport { InterfaceColorSet } from \"../utils/InterfaceColorSet\";\r\nvar rules = new Dictionary();\r\n/**\r\n * Default CSS for Popup.\r\n *\r\n * @ignore Exclude from docs\r\n * @param prefix  Prefix for CSS classes\r\n * @return Disposer for the CSS definition\r\n */\r\nexport default function (prefix) {\r\n    if (!prefix) {\r\n        prefix = \"ampopup\";\r\n    }\r\n    var cs = new InterfaceColorSet();\r\n    var fg = cs.getFor(\"text\");\r\n    var bg = cs.getFor(\"background\");\r\n    bg.alpha = 0.8;\r\n    var abg = cs.getFor(\"alternativeBackground\");\r\n    abg.alpha = 0.05;\r\n    var counter = rules.insertKeyIfEmpty(prefix, function () {\r\n        var disposer = new MultiDisposer([\r\n            new StyleRule(\".\" + prefix, {\r\n                //\"width\": \"100%\",\r\n                //\"height\": \"100%\",\r\n                \"overflow\": \"visible\",\r\n                \"position\": \"absolute\",\r\n                \"top\": \"0\",\r\n                \"left\": \"0\",\r\n                \"z-index\": \"2000\"\r\n            }),\r\n            new StyleRule(\".\" + prefix + \"-curtain\", {\r\n                \"width\": \"100%\",\r\n                \"height\": \"100%\",\r\n                \"position\": \"absolute\",\r\n                \"top\": \"0\",\r\n                \"left\": \"0\",\r\n                \"z-index\": \"2001\",\r\n                \"background-color\": bg.hex,\r\n                \"opacity\": \"0.5\"\r\n            }),\r\n            new StyleRule(\".\" + prefix + \"-header\", {\r\n                \"display\": \"block\",\r\n                \"width\": \"100%\",\r\n                \"min-height\": \"1.8em\",\r\n                \"background\": abg.rgba\r\n            }),\r\n            new StyleRule(\".\" + prefix + \"-title\", {\r\n                \"font-weight\": \"bold\",\r\n                \"font-size\": \"110%\",\r\n                \"padding\": \"0.5em 1.2em 0.5em 1em\"\r\n            }),\r\n            new StyleRule(\".\" + prefix + \"-content\", {\r\n                /*\"width\": \"100%\",\r\n                \"height\": \"100%\",*/\r\n                // \"padding\": \"2em 1em 1em 1em\",\r\n                \"background\": bg.hex,\r\n                \"background-color\": bg.rgba,\r\n                \"color\": fg.hex,\r\n                \"display\": \"inline-block\",\r\n                \"position\": \"absolute\",\r\n                \"top\": \"0\",\r\n                \"left\": \"0\",\r\n                \"max-width\": \"90%\",\r\n                \"max-height\": \"90%\",\r\n                \"overflow\": \"auto\",\r\n                \"z-index\": \"2002\"\r\n            }),\r\n            new StyleRule(\".\" + prefix + \"-inside\", {\r\n                \"padding\": \"1em\"\r\n            }),\r\n            new StyleRule(\".\" + prefix + \"-close\", {\r\n                \"display\": \"block\",\r\n                \"position\": \"absolute\",\r\n                \"top\": \"0.3em\",\r\n                \"right\": \"0.3em\",\r\n                \"background-color\": \"rgb(100, 100, 100)\",\r\n                \"background\": \"rgba(100, 100, 100, 0.1) url(data:image/svg+xml;charset=utf-8;base64,PHN2ZyBoZWlnaHQ9IjUxMiIgdmVyc2lvbj0iMSIgdmlld0JveD0iMCAwIDUxMiA1MTIiIHdpZHRoPSI1MTIiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyI+PHBhdGggZD0iTTQ0NS4yIDEwOS4ybC00Mi40LTQyLjRMMjU2IDIxMy42IDEwOS4yIDY2LjhsLTQyLjQgNDIuNEwyMTMuNiAyNTYgNjYuOCA0MDIuOGw0Mi40IDQyLjRMMjU2IDI5OC40bDE0Ni44IDE0Ni44IDQyLjQtNDIuNEwyOTguNCAyNTYiLz48L3N2Zz4=) no-repeat center\",\r\n                \"background-size\": \"80%\",\r\n                \"width\": \"1.2em\",\r\n                \"height\": \"1.2em\",\r\n                \"cursor\": \"pointer\"\r\n            }),\r\n        ]);\r\n        return new CounterDisposer(function () {\r\n            rules.removeKey(prefix);\r\n            disposer.dispose();\r\n        });\r\n    });\r\n    return counter.increment();\r\n}\r\n//# sourceMappingURL=PopupCSS.js.map","/**\r\n * Popup class is used to display information over chart area.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport popupCSS from \"./PopupCSS\";\r\nimport { Adapter } from \"../utils/Adapter\";\r\nimport { BaseObjectEvents } from \"../Base\";\r\nimport { getInteraction } from \"../interaction/Interaction\";\r\nimport { keyboard } from \"../utils/Keyboard\";\r\nimport { MultiDisposer } from \"../utils/Disposer\";\r\nimport * as $type from \"../utils/Type\";\r\nimport * as $object from \"../utils/Object\";\r\n/**\r\n * Shows an HTML popup which covers window or a chart area.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/popups-and-modals/} For examples and docs on Popups and Modals.\r\n * @todo Positioning over whole window\r\n */\r\nvar Popup = /** @class */ (function (_super) {\r\n    __extends(Popup, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Popup() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * Adapter.\r\n         */\r\n        _this.adapter = new Adapter(_this);\r\n        /**\r\n         * Holds references to various HTML elements, Popup consists of.\r\n         */\r\n        _this._elements = {};\r\n        /**\r\n         * Holdes Interaction objects for various Popup's elements.\r\n         */\r\n        _this._IOs = {};\r\n        /**\r\n         * Contents of popup window.\r\n         */\r\n        _this._content = \"\";\r\n        /**\r\n         * Title of the popup window.\r\n         */\r\n        _this._title = \"\";\r\n        /**\r\n         * Prefix to apply to class names for popup elements.\r\n         */\r\n        _this._classPrefix = \"ampopup\";\r\n        /**\r\n         * If set to `true` [[Popup]] will use default styles.\r\n         */\r\n        _this._defaultStyles = true;\r\n        /**\r\n         * If set to `true` [[Popup]] will dim out all chart content behind it by\r\n         * showing a semi-transparent fill. (curtain)\r\n         */\r\n        _this._showCurtain = false;\r\n        /**\r\n         * Indicates whether popup can be dragged.\r\n         */\r\n        _this._draggable = true;\r\n        /**\r\n         * Horizontal position of the content window.\r\n         */\r\n        _this._align = \"center\";\r\n        /**\r\n         * Vertical position of the content window.\r\n         */\r\n        _this._verticalAlign = \"middle\";\r\n        /**\r\n         * Shift in position of the element. (used for dragging)\r\n         */\r\n        _this._shift = {\r\n            x: 0,\r\n            y: 0\r\n        };\r\n        /**\r\n         * Temporary shift in position of the element. (used for dragging)\r\n         */\r\n        _this._tempShift = {\r\n            x: 0,\r\n            y: 0\r\n        };\r\n        /**\r\n         * A title for screen readers. It is very highly recommended to set that title\r\n         * so that people using screen reader tools can get an immediate summary of\r\n         * the information in the popup.\r\n         */\r\n        _this._readerTitle = \"\";\r\n        /**\r\n         * Is popup closable?\r\n         */\r\n        _this._closable = true;\r\n        /**\r\n         * Was CSS already loaded?\r\n         */\r\n        _this._cssLoaded = false;\r\n        /**\r\n         * If set to other than \"none\" will try to re-adjust the position of the\r\n         * popop to fit within chart container or browser window.\r\n         *\r\n         * @ignore Feature not yet implemented\r\n         * @todo Implement\r\n         */\r\n        _this._fitTo = \"window\";\r\n        /**\r\n         * Identifies if this object is a \"template\" and should not be treated as\r\n         * real object that is drawn or actually used in the chart.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        _this.isTemplate = false;\r\n        /**\r\n         * Indicates if the element was already sized and should not be measured for\r\n         * sized again, saving some precious resources.\r\n         */\r\n        _this._sized = false;\r\n        _this.className = \"Popup\";\r\n        return _this;\r\n    }\r\n    /**\r\n     * Shows popup window.\r\n     */\r\n    Popup.prototype.open = function () {\r\n        if (this.container) {\r\n            if (this._elements.wrapper) {\r\n                this.container.appendChild(this._elements.wrapper);\r\n            }\r\n            if (this._elements.curtain) {\r\n                this.container.appendChild(this._elements.curtain);\r\n                this.showCurtain = this.showCurtain;\r\n            }\r\n            this.positionElement();\r\n            this.dispatchImmediately(\"opened\");\r\n        }\r\n    };\r\n    /**\r\n     * Hides popup window.\r\n     */\r\n    Popup.prototype.close = function () {\r\n        if (this._elements.wrapper) {\r\n            if (this._elements.wrapper.parentElement) {\r\n                this._elements.wrapper.parentElement.removeChild(this._elements.wrapper);\r\n            }\r\n        }\r\n        if (this._elements.curtain) {\r\n            if (this._elements.curtain.parentElement) {\r\n                this._elements.curtain.parentElement.removeChild(this._elements.curtain);\r\n            }\r\n        }\r\n        this.dispatchImmediately(\"closed\");\r\n        this.releasePointers();\r\n    };\r\n    /**\r\n     * Destroy (dispose) popup.\r\n     */\r\n    Popup.prototype.dispose = function () {\r\n        this.close();\r\n        _super.prototype.dispose.call(this);\r\n    };\r\n    /**\r\n     * Positions content element in the center of popup based on its actual size.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Popup.prototype.positionElement = function (forceResize) {\r\n        var _this = this;\r\n        if (forceResize === void 0) { forceResize = true; }\r\n        if (!this._elements.wrapper) {\r\n            return;\r\n        }\r\n        setTimeout(function () {\r\n            if (!_this._elements.wrapper) {\r\n                return;\r\n            }\r\n            if (forceResize || !_this._sized) {\r\n                _this._elements.wrapper.style.opacity = \"0.01\";\r\n                _this._elements.wrapper.style.left = \"0\";\r\n                _this._elements.wrapper.style.top = \"0\";\r\n                _this._elements.wrapper.style.margin = \"0 0 0 0\";\r\n                // Size the element, but only for the first time\r\n                if (!_this._elements.wrapper.style.width) {\r\n                    var bbox = _this._elements.wrapper.getBoundingClientRect();\r\n                    _this._elements.wrapper.style.width = bbox.width + \"px\";\r\n                    _this._elements.wrapper.style.height = bbox.height + \"px\";\r\n                }\r\n                _this._sized = true;\r\n            }\r\n            setTimeout(function () {\r\n                if (!_this._elements.wrapper) {\r\n                    return;\r\n                }\r\n                var bbox;\r\n                if ((forceResize || !_this._sized) && _this._bbox) {\r\n                    bbox = _this._bbox;\r\n                }\r\n                else {\r\n                    bbox = _this._elements.wrapper.getBoundingClientRect();\r\n                    _this._elements.wrapper.style.opacity = \"\";\r\n                }\r\n                // Set horizontal positioning\r\n                switch (_this.align) {\r\n                    case \"left\":\r\n                        _this._elements.wrapper.style.left = \"0\";\r\n                        _this._elements.wrapper.style.right = \"auto\";\r\n                        _this._elements.wrapper.style.marginLeft = _this.toStyle(_this._shift.x + _this._tempShift.x);\r\n                        break;\r\n                    case \"center\":\r\n                        _this._elements.wrapper.style.left = \"50%\";\r\n                        _this._elements.wrapper.style.right = \"auto\";\r\n                        _this._elements.wrapper.style.marginLeft = _this.toStyle(Math.round(-bbox.width / 2) + (_this._shift.x + _this._tempShift.x));\r\n                        break;\r\n                    case \"right\":\r\n                        _this._elements.wrapper.style.left = \"auto\";\r\n                        _this._elements.wrapper.style.right = \"0\";\r\n                        _this._elements.wrapper.style.marginLeft = _this.toStyle(_this._shift.x + _this._tempShift.x);\r\n                        break;\r\n                    default:\r\n                        _this._elements.wrapper.style.left = _this.toStyle(_this.left) || \"auto\";\r\n                        _this._elements.wrapper.style.right = _this.toStyle(_this.right) || \"auto\";\r\n                        _this._elements.wrapper.style.marginLeft = _this.toStyle(_this._shift.x + _this._tempShift.x);\r\n                        break;\r\n                }\r\n                // Set vertical positioning\r\n                switch (_this.verticalAlign) {\r\n                    case \"top\":\r\n                        _this._elements.wrapper.style.top = \"0\";\r\n                        _this._elements.wrapper.style.bottom = \"auto\";\r\n                        _this._elements.wrapper.style.marginTop = _this.toStyle(_this._shift.y + _this._tempShift.y);\r\n                        break;\r\n                    case \"middle\":\r\n                        _this._elements.wrapper.style.top = \"50%\";\r\n                        _this._elements.wrapper.style.bottom = \"auto\";\r\n                        _this._elements.wrapper.style.marginTop = _this.toStyle(Math.round(-bbox.height / 2) + (_this._shift.y + _this._tempShift.y));\r\n                        break;\r\n                    case \"bottom\":\r\n                        _this._elements.wrapper.style.top = \"auto\";\r\n                        _this._elements.wrapper.style.bottom = \"0\";\r\n                        _this._elements.wrapper.style.marginTop = _this.toStyle(_this._shift.y + _this._tempShift.y);\r\n                        break;\r\n                    default:\r\n                        _this._elements.wrapper.style.top = _this.toStyle(_this.top) || \"auto\";\r\n                        _this._elements.wrapper.style.bottom = _this.toStyle(_this.bottom) || \"auto\";\r\n                        _this._elements.wrapper.style.marginTop = _this.toStyle(_this._shift.y + _this._tempShift.y);\r\n                        break;\r\n                }\r\n            }, 1);\r\n        }, 1);\r\n    };\r\n    Popup.prototype.setupDragging = function () {\r\n        var _this = this;\r\n        if (this.draggable) {\r\n            if (!this._IOs.header.events.has(\"drag\")) {\r\n                this._IOs.header.events.on(\"drag\", function (ev) {\r\n                    _this._tempShift.x = ev.shift.x;\r\n                    _this._tempShift.y = ev.shift.y;\r\n                    _this.positionElement(false);\r\n                });\r\n            }\r\n            if (!this._IOs.header.events.has(\"dragstop\")) {\r\n                this._IOs.header.events.on(\"dragstop\", function (ev) {\r\n                    _this._shift.x += _this._tempShift.x;\r\n                    _this._shift.y += _this._tempShift.y;\r\n                    _this._tempShift.x = 0;\r\n                    _this._tempShift.y = 0;\r\n                    _this.positionElement(false);\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            if (this._IOs.header) {\r\n                getInteraction().unprepElement(this._IOs.header);\r\n                if (this._IOs.header.events.has(\"drag\")) {\r\n                    this._IOs.header.events.off(\"drag\");\r\n                }\r\n                if (this._IOs.header.events.has(\"dragstop\")) {\r\n                    this._IOs.header.events.off(\"dragstop\");\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Popup.prototype.toStyle = function (value) {\r\n        if (!$type.hasValue(value)) {\r\n            return null;\r\n        }\r\n        else if ($type.isNumber(value)) {\r\n            return \"\" + value + \"px\";\r\n        }\r\n        else {\r\n            return value.toString();\r\n        }\r\n    };\r\n    Object.defineProperty(Popup.prototype, \"classPrefix\", {\r\n        /**\r\n         * A prefix that is applied to class names of various popup elements.\r\n         *\r\n         * @return Class name prefix\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"classPrefix\", this._classPrefix);\r\n        },\r\n        /**\r\n         * @param value Class name prefix\r\n         */\r\n        set: function (value) {\r\n            this._classPrefix = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Popup.prototype, \"classPrefixRaw\", {\r\n        /**\r\n         * Returns raw prefix (without adapters applied).\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return Class name prefix\r\n         */\r\n        get: function () {\r\n            return this._classPrefix;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Popup.prototype, \"content\", {\r\n        /**\r\n         * @return Popup content\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"content\", this._content);\r\n        },\r\n        /**\r\n         * Popup content.\r\n         *\r\n         * Popup content can be any valid HTML, including CSS.\r\n         *\r\n         * @param value Popup content\r\n         */\r\n        set: function (value) {\r\n            if (this._content != value) {\r\n                this._content = value;\r\n                if (!this._elements.content) {\r\n                    this.createContentElement();\r\n                }\r\n                this._elements.content.innerHTML = value;\r\n                this.positionElement();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Popup.prototype.getClassNames = function () {\r\n        return this.adapter.apply(\"classNames\", {\r\n            wrapperClass: this.classPrefix + \"\",\r\n            headerClass: this.classPrefix + \"-header\",\r\n            titleClass: this.classPrefix + \"-title\",\r\n            contentClass: this.classPrefix + \"-content\",\r\n            insideClass: this.classPrefix + \"-inside\",\r\n            curtainClass: this.classPrefix + \"-curtain\",\r\n            closeClass: this.classPrefix + \"-close\"\r\n        });\r\n    };\r\n    /**\r\n     * Creates content element.\r\n     */\r\n    Popup.prototype.createContentElement = function () {\r\n        // Check if it's created already\r\n        if (this._elements.wrapper) {\r\n            return;\r\n        }\r\n        // Get class names for popup elements\r\n        var classNames = this.getClassNames();\r\n        // Create content element\r\n        var wrapper = document.createElement(\"div\");\r\n        wrapper.className = classNames.contentClass;\r\n        wrapper.style.opacity = \"0.01\";\r\n        // Create close button\r\n        var close = document.createElement(\"a\");\r\n        close.className = classNames.closeClass;\r\n        // header title\r\n        var header = document.createElement(\"div\");\r\n        header.className = classNames.headerClass;\r\n        // Content title\r\n        var title = document.createElement(\"div\");\r\n        title.innerHTML = this.title;\r\n        title.className = classNames.titleClass;\r\n        if (!this.title) {\r\n            title.style.display = \"none\";\r\n        }\r\n        // Content div\r\n        var content = document.createElement(\"div\");\r\n        content.className = classNames.insideClass;\r\n        content.innerHTML = this.content;\r\n        // Set up events for content\r\n        this._IOs.wrapper = getInteraction().getInteraction(wrapper);\r\n        this._IOs.header = getInteraction().getInteraction(header);\r\n        this._disposers.push(this._IOs.wrapper);\r\n        // Set hover/out events\r\n        this._IOs.wrapper.events.on(\"over\", this.disablePointers, this);\r\n        this._IOs.wrapper.events.on(\"out\", this.releasePointers, this);\r\n        // Create an InteractionObject for close\r\n        this._IOs.close = getInteraction().getInteraction(close);\r\n        this._disposers.push(this._IOs.close);\r\n        // Hide close for now\r\n        close.style.visibility = \"hidden\";\r\n        // Add accessible stuff\r\n        wrapper.setAttribute(\"role\", \"dialog\");\r\n        // Add to wrapper\r\n        header.appendChild(close);\r\n        header.appendChild(title);\r\n        wrapper.appendChild(header);\r\n        wrapper.appendChild(content);\r\n        this.container.appendChild(wrapper);\r\n        // Save for later access\r\n        this._elements.wrapper = wrapper;\r\n        this._elements.header = header;\r\n        this._elements.content = content;\r\n        this._elements.title = title;\r\n        this._elements.close = close;\r\n        // Load CSS\r\n        if (this.defaultStyles) {\r\n            this.loadDefaultCSS();\r\n        }\r\n        // Create curtain as well\r\n        this.createCurtainElement();\r\n        // Apply events\r\n        this.applyEvents();\r\n        this.applyReaderSettings();\r\n        // Draggable?\r\n        this.setupDragging();\r\n    };\r\n    Object.defineProperty(Popup.prototype, \"title\", {\r\n        /**\r\n         * @return Popup title\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"title\", this._title);\r\n        },\r\n        /**\r\n         * Popup title.\r\n         *\r\n         * Popup title can be any valid HTML, including CSS.\r\n         *\r\n         * @param value  Popup title\r\n         */\r\n        set: function (value) {\r\n            if (this._title != value) {\r\n                this._title = value;\r\n                if (!this._elements.content) {\r\n                    this.createContentElement();\r\n                }\r\n                this._elements.title.innerHTML = value;\r\n                this.positionElement();\r\n                this.applyReaderSettings();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Popup.prototype, \"readerTitle\", {\r\n        /**\r\n         * @return Popup content\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"readerTitle\", this._readerTitle != \"\" ? this._readerTitle : this.title);\r\n        },\r\n        /**\r\n         * A title for screen readers. It is very highly recommended to set that title\r\n         * so that people using screen reader tools can get an immediate summary of\r\n         * the information in the popup.\r\n         *\r\n         * @param value  Reader title\r\n         */\r\n        set: function (value) {\r\n            if (this._readerTitle != value) {\r\n                this._readerTitle = value;\r\n                this.applyReaderSettings();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Popup.prototype, \"closable\", {\r\n        /**\r\n         * @return Closable?\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"closable\", this._closable);\r\n        },\r\n        /**\r\n         * Is popup closable?\r\n         *\r\n         * If it is, it can be closed in a number of ways, e.g. by hitting ESC key,\r\n         * clicking curtain, or clicking the close button.\r\n         *\r\n         * If it is not closable, the only way to close it is via `close()` call.\r\n         *\r\n         * @param value Closable?\r\n         */\r\n        set: function (value) {\r\n            if (value !== this._closable) {\r\n                this._closable = value;\r\n                this.applyEvents();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Popup.prototype, \"fitTo\", {\r\n        /**\r\n         * @ignore\r\n         * @todo Implement\r\n         * @return Fit option\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"fitTo\", this._fitTo);\r\n        },\r\n        /**\r\n         * If set to other than \"none\" will try to re-adjust the position of the\r\n         * popop to fit within chart container or browser window.\r\n         *\r\n         * @ignore\r\n         * @todo Implement\r\n         * @default \"window\"\r\n         * @param value  Fit option\r\n         */\r\n        set: function (value) {\r\n            if (value != this._fitTo) {\r\n                this._fitTo = value;\r\n                this.positionElement();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Popup.prototype, \"defaultStyles\", {\r\n        /**\r\n         * @return Use default CSS?\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"defaultStyles\", this._defaultStyles);\r\n        },\r\n        /**\r\n         * Should popup use default CSS?\r\n         *\r\n         * If default CSS is disabled, an external CSS should handle the look of the\r\n         * popup, since it will look quite out of place otherwise.\r\n         *\r\n         * @default true\r\n         * @param Use default CSS?\r\n         */\r\n        set: function (value) {\r\n            if (this._defaultStyles != value) {\r\n                this._defaultStyles = value;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Popup.prototype, \"showCurtain\", {\r\n        /**\r\n         * @return Show curtain?\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"showCurtain\", this._showCurtain);\r\n        },\r\n        /**\r\n         * Should popup use dim out all content behind it?\r\n         *\r\n         * @default false\r\n         * @param Show curtain?\r\n         */\r\n        set: function (value) {\r\n            if (this._showCurtain != value) {\r\n                this._showCurtain = value;\r\n                if (this._elements.curtain) {\r\n                    this._elements.curtain.style.display = value ? \"block\" : \"none\";\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates curtain element.\r\n     */\r\n    Popup.prototype.createCurtainElement = function () {\r\n        // Get class names for popup elements\r\n        var classNames = this.getClassNames();\r\n        // Create the curtain\r\n        var curtain = document.createElement(\"div\");\r\n        curtain.className = classNames.curtainClass;\r\n        // Append curtain to wrapper\r\n        this.container.appendChild(curtain);\r\n        // Create an InteractionObject for curtain because we might need to\r\n        // set interactions on it\r\n        this._IOs.curtain = getInteraction().getInteraction(curtain);\r\n        // Add Curtain IO to disposers\r\n        this._disposers.push(this._IOs.curtain);\r\n        // Set events to disable underlying interactivity\r\n        this._IOs.curtain.events.on(\"over\", this.disablePointers, this);\r\n        this._IOs.curtain.events.on(\"out\", this.releasePointers, this);\r\n        // Hide it?\r\n        curtain.style.display = this.showCurtain ? \"block\" : \"none\";\r\n        // Save for later\r\n        this._elements.curtain = curtain;\r\n    };\r\n    Object.defineProperty(Popup.prototype, \"draggable\", {\r\n        /**\r\n         * @return Show curtain?\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"draggable\", this._draggable);\r\n        },\r\n        /**\r\n         * Can the popup be dragged with a pointer?\r\n         *\r\n         * @default false\r\n         * @param Show curtain?\r\n         */\r\n        set: function (value) {\r\n            if (this._draggable != value) {\r\n                this._draggable = value;\r\n                this.setupDragging();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Popup.prototype, \"align\", {\r\n        /**\r\n         * @return Horizontal position\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"align\", this._align);\r\n        },\r\n        /**\r\n         * Horizontal positioning of the content window.\r\n         *\r\n         * Available options: \"left\", \"center\" (default), \"right\", and \"none\".\r\n         *\r\n         * @default \"center\"\r\n         * @param Horizontal position\r\n         */\r\n        set: function (value) {\r\n            if (this._align != value) {\r\n                this._align = value;\r\n                this.positionElement();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Popup.prototype, \"verticalAlign\", {\r\n        /**\r\n         * @return Vertical position\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"verticalAlign\", this._verticalAlign);\r\n        },\r\n        /**\r\n         * Vertical positioning of the content window.\r\n         *\r\n         * Available options: \"top\", \"middle\" (default), \"bottom\", and \"none\".\r\n         *\r\n         * @default \"middle\"\r\n         * @param Vertical position\r\n         */\r\n        set: function (value) {\r\n            if (this._verticalAlign != value) {\r\n                this._verticalAlign = value;\r\n                this.positionElement();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Popup.prototype, \"left\", {\r\n        /**\r\n         * @return Left\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"left\", this._left);\r\n        },\r\n        /**\r\n         * \"left\" coordinate of a non-aligned (`align = \"none\"`) popup.\r\n         *\r\n         * Can be either absolute pixel value, or relative (`Percent`).\r\n         *\r\n         * Setting this property will automatically set `align` to \"none\".\r\n         *\r\n         * NOTE: The position is relative to the chart container.\r\n         *\r\n         * @param Left\r\n         */\r\n        set: function (value) {\r\n            if (this.left != value) {\r\n                this._left = value;\r\n                this._align = \"none\";\r\n                this.positionElement();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Popup.prototype, \"right\", {\r\n        /**\r\n         * @return Right\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"right\", this._right);\r\n        },\r\n        /**\r\n         * \"right\" coordinate of a non-aligned (`align = \"none\"`) popup.\r\n         *\r\n         * Can be either absolute pixel value, or relative (`Percent`).\r\n         *\r\n         * Setting this property will automatically set `align` to \"none\".\r\n         *\r\n         * NOTE: The position is relative to the chart container.\r\n         *\r\n         * @param Right\r\n         */\r\n        set: function (value) {\r\n            if (this.right != value) {\r\n                this._right = value;\r\n                this._align = \"none\";\r\n                this.positionElement();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Popup.prototype, \"top\", {\r\n        /**\r\n         * @return Top\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"top\", this._top);\r\n        },\r\n        /**\r\n         * \"top\" coordinate of a non-aligned (`verticalAlign = \"none\"`) popup.\r\n         *\r\n         * Can be either absolute pixel value, or relative (`Percent`).\r\n         *\r\n         * Setting this property will automatically set `verticalAlign` to \"none\".\r\n         *\r\n         * NOTE: The position is relative to the chart container.\r\n         *\r\n         * @param Top\r\n         */\r\n        set: function (value) {\r\n            if (this.top != value) {\r\n                this._top = value;\r\n                this._verticalAlign = \"none\";\r\n                this.positionElement();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Popup.prototype, \"bottom\", {\r\n        /**\r\n         * @return Bottom\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"bottom\", this._bottom);\r\n        },\r\n        /**\r\n         * \"bottom\" coordinate of a non-aligned (`verticalAlign = \"none\"`) popup.\r\n         *\r\n         * Can be either absolute pixel value, or relative (`Percent`).\r\n         *\r\n         * Setting this property will automatically set `verticalAlign` to \"none\".\r\n         *\r\n         * NOTE: The position is relative to the chart container.\r\n         *\r\n         * @param Bottom\r\n         */\r\n        set: function (value) {\r\n            if (this.bottom != value) {\r\n                this._bottom = value;\r\n                this._verticalAlign = \"none\";\r\n                this.positionElement();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Popup.prototype, \"elements\", {\r\n        /**\r\n         * Returns an object with references to various elements of the Popup.\r\n         *\r\n         * * `wrapper`\r\n         * * `title`\r\n         * * `content`\r\n         * * `close`\r\n         * * `curtain`\r\n         */\r\n        get: function () {\r\n            return this._elements;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Loads popup CSS.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Popup.prototype.loadDefaultCSS = function () {\r\n        if (!this._cssLoaded) {\r\n            this._disposers.push(popupCSS(this.classPrefix));\r\n            $object.each(this._elements, function (key, el) {\r\n                el.style.display = \"\";\r\n            });\r\n            this._cssLoaded = true;\r\n        }\r\n    };\r\n    /**\r\n     * If popup is closable, this method adds various events to popup elements.\r\n     */\r\n    Popup.prototype.applyEvents = function () {\r\n        var _this = this;\r\n        if (this._IOs.close) {\r\n            if (this.closable) {\r\n                this._IOs.close.element.style.visibility = \"visible\";\r\n                var disposers = [\r\n                    getInteraction().body.events.on(\"keyup\", function (ev) {\r\n                        if (keyboard.isKey(ev.event, \"esc\") && _this.closable) {\r\n                            _this.close();\r\n                        }\r\n                    }),\r\n                    this._IOs.close.events.on(\"hit\", function (ev) {\r\n                        _this.close();\r\n                    })\r\n                ];\r\n                disposers.push(this._IOs.curtain.events.on(\"hit\", function (ev) {\r\n                    if (_this.showCurtain) {\r\n                        _this.close();\r\n                    }\r\n                }));\r\n                this._disposers.push(new MultiDisposer(disposers));\r\n            }\r\n            else {\r\n                this._IOs.close.element.style.visibility = \"hidden\";\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Disables interactivity on parent chart.\r\n     */\r\n    Popup.prototype.disablePointers = function () {\r\n        if (this.sprite) {\r\n            this._spriteInteractionsEnabled = this.sprite.interactionsEnabled;\r\n            this.sprite.interactionsEnabled = false;\r\n        }\r\n    };\r\n    /**\r\n     * Releases temporarily disabled pointers on parent chart.\r\n     */\r\n    Popup.prototype.releasePointers = function () {\r\n        if ($type.hasValue(this._spriteInteractionsEnabled)) {\r\n            this.sprite.interactionsEnabled = this._spriteInteractionsEnabled;\r\n            this._spriteInteractionsEnabled = undefined;\r\n        }\r\n    };\r\n    /**\r\n     * Sets screen reader related settings.\r\n     */\r\n    Popup.prototype.applyReaderSettings = function () {\r\n        this.elements.wrapper.setAttribute(\"aria-label\", this.readerTitle);\r\n    };\r\n    /**\r\n     * Copies all properties and related data from different element.\r\n     *\r\n     * @param object Source element\r\n     */\r\n    Popup.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        this.container = source.container;\r\n        this.sprite = source.sprite;\r\n        this.classPrefix = source.classPrefixRaw;\r\n        this.content = source.content;\r\n        this.title = source.title;\r\n        this.readerTitle = source.readerTitle;\r\n        this.defaultStyles = source.defaultStyles;\r\n        this.showCurtain = source.showCurtain;\r\n        this.align = source.align;\r\n        this.verticalAlign = source.verticalAlign;\r\n        this.left = source.left;\r\n        this.right = source.right;\r\n        this.top = source.top;\r\n        this.bottom = source.bottom;\r\n        this.adapter.copyFrom(source.adapter);\r\n    };\r\n    return Popup;\r\n}(BaseObjectEvents));\r\nexport { Popup };\r\n//# sourceMappingURL=Popup.js.map","import * as $type from \"../utils/Type\";\r\n/**\r\n * Maps time period names to their numeric representations in milliseconds.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport var timeUnitDurations = {\r\n    millisecond: 1,\r\n    second: 1000,\r\n    minute: 60000,\r\n    hour: 3600000,\r\n    day: 86400000,\r\n    week: 604800000,\r\n    month: 2592000000,\r\n    year: 31536000000\r\n};\r\n/**\r\n * Returns the next time unit that goes after source `unit`.\r\n *\r\n * E.g. \"hour\" is the next unit after \"minute\", etc.\r\n *\r\n * @ignore Exclude from docs\r\n * @param unit  Source time unit\r\n * @return Next time unit\r\n */\r\nexport function getNextUnit(unit) {\r\n    switch (unit) {\r\n        case \"year\":\r\n            return;\r\n        case \"month\":\r\n            return \"year\";\r\n        case \"week\":\r\n            return \"month\";\r\n        case \"day\":\r\n            return \"month\"; // not a mistake\r\n        case \"hour\":\r\n            return \"day\";\r\n        case \"minute\":\r\n            return \"hour\";\r\n        case \"second\":\r\n            return \"minute\";\r\n        case \"millisecond\":\r\n            return \"second\";\r\n    }\r\n}\r\n/**\r\n * Returns number of milliseconds in the `count` of time `unit`.\r\n *\r\n * Available units: \"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"week\",\r\n * \"month\", and \"year\".\r\n *\r\n * @ignore Exclude from docs\r\n * @param unit   Time unit\r\n * @param count  Number of units\r\n * @return Milliseconds\r\n */\r\nexport function getDuration(unit, count) {\r\n    if (!$type.hasValue(count)) {\r\n        count = 1;\r\n    }\r\n    return timeUnitDurations[unit] * count;\r\n}\r\n/**\r\n * Returns current `Date` object.\r\n *\r\n * @return Current date\r\n */\r\nexport function now() {\r\n    return new Date();\r\n}\r\n/**\r\n * Returns current timestamp.\r\n *\r\n * @return Current timestamp\r\n */\r\nexport function getTime() {\r\n    return now().getTime();\r\n}\r\n/**\r\n * Returns a copy of the `Date` object.\r\n *\r\n * @ignore Exclude from docs\r\n * @param date  Source date\r\n * @return Copy\r\n */\r\nexport function copy(date) {\r\n    return new Date(date.getTime()); // todo: check if this is ok. new Date(date) used to strip milliseconds on FF in v3\r\n}\r\n/**\r\n * Checks if the `unit` part of two `Date` objects do not match. Two dates\r\n * represent a \"range\" of time, rather the same time date.\r\n *\r\n * @ignore Exclude from docs\r\n * @param dateOne  Date 1\r\n * @param dateTwo  Date 2\r\n * @param unit     Time unit to check\r\n * @return Range?\r\n */\r\nexport function checkChange(dateOne, dateTwo, unit, utc) {\r\n    dateOne = new Date(dateOne.getTime());\r\n    dateTwo = new Date(dateTwo.getTime());\r\n    var timeZoneOffset1 = 0;\r\n    var timeZoneOffset2 = 0;\r\n    if (!utc && unit != \"millisecond\") {\r\n        timeZoneOffset1 = dateOne.getTimezoneOffset();\r\n        dateOne.setUTCMinutes(dateOne.getUTCMinutes() - timeZoneOffset1);\r\n        timeZoneOffset2 = dateTwo.getTimezoneOffset();\r\n        dateTwo.setUTCMinutes(dateTwo.getUTCMinutes() - timeZoneOffset2);\r\n    }\r\n    var changed = false;\r\n    switch (unit) {\r\n        case \"year\":\r\n            if (dateOne.getUTCFullYear() != dateTwo.getUTCFullYear()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"month\":\r\n            if (dateOne.getUTCFullYear() != dateTwo.getUTCFullYear()) {\r\n                changed = true;\r\n            }\r\n            else if (dateOne.getUTCMonth() != dateTwo.getUTCMonth()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"day\":\r\n            if (dateOne.getUTCMonth() != dateTwo.getUTCMonth()) {\r\n                changed = true;\r\n            }\r\n            else if (dateOne.getUTCDate() != dateTwo.getUTCDate()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"hour\":\r\n            if (dateOne.getUTCHours() != dateTwo.getUTCHours()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"minute\":\r\n            if (dateOne.getUTCMinutes() != dateTwo.getUTCMinutes()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"second\":\r\n            if (dateOne.getUTCSeconds() != dateTwo.getUTCSeconds()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n        case \"millisecond\":\r\n            if (dateOne.getTime() != dateTwo.getTime()) {\r\n                changed = true;\r\n            }\r\n            break;\r\n    }\r\n    if (changed) {\r\n        return true;\r\n    }\r\n    var nextUnit = getNextUnit(unit);\r\n    if (nextUnit) {\r\n        dateOne.setUTCMinutes(dateOne.getUTCMinutes() + timeZoneOffset1);\r\n        dateTwo.setUTCMinutes(dateTwo.getUTCMinutes() + timeZoneOffset2);\r\n        return checkChange(dateOne, dateTwo, nextUnit, utc);\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Adds `count` of time `unit` to the source date. Returns a modified `Date` object.\r\n *\r\n * @ignore Exclude from docs\r\n * @param date   Source date\r\n * @param unit   Time unit\r\n * @param count  Number of units to add\r\n * @return Modified date\r\n */\r\nexport function add(date, unit, count, utc) {\r\n    var timeZoneOffset = 0;\r\n    if (!utc && unit != \"millisecond\") {\r\n        timeZoneOffset = date.getTimezoneOffset();\r\n        date.setUTCMinutes(date.getUTCMinutes() - timeZoneOffset);\r\n    }\r\n    switch (unit) {\r\n        case \"day\":\r\n            var day = date.getUTCDate();\r\n            date.setUTCDate(day + count);\r\n            break;\r\n        case \"second\":\r\n            var seconds = date.getUTCSeconds();\r\n            date.setUTCSeconds(seconds + count);\r\n            break;\r\n        case \"millisecond\":\r\n            var milliseconds = date.getUTCMilliseconds();\r\n            date.setUTCMilliseconds(milliseconds + count);\r\n            break;\r\n        case \"hour\":\r\n            var hours = date.getUTCHours();\r\n            date.setUTCHours(hours + count);\r\n            break;\r\n        case \"minute\":\r\n            var minutes = date.getUTCMinutes();\r\n            date.setUTCMinutes(minutes + count);\r\n            break;\r\n        case \"year\":\r\n            var year = date.getUTCFullYear();\r\n            date.setUTCFullYear(year + count);\r\n            break;\r\n        case \"month\":\r\n            var month = date.getUTCMonth();\r\n            date.setUTCMonth(month + count);\r\n            break;\r\n        case \"week\":\r\n            var wday = date.getUTCDate();\r\n            date.setUTCDate(wday + count * 7);\r\n            break;\r\n    }\r\n    if (!utc && unit != \"millisecond\") {\r\n        date.setUTCMinutes(date.getUTCMinutes() + timeZoneOffset);\r\n        if (unit == \"day\" || unit == \"week\" || unit == \"month\" || unit == \"year\") {\r\n            var newTimeZoneOffset = date.getTimezoneOffset();\r\n            if (newTimeZoneOffset != timeZoneOffset) {\r\n                var diff = newTimeZoneOffset - timeZoneOffset;\r\n                date.setUTCMinutes(date.getUTCMinutes() + diff);\r\n                // solves issues if newe time falls back to old time zone\r\n                if (date.getTimezoneOffset() != newTimeZoneOffset) {\r\n                    date.setUTCMinutes(date.getUTCMinutes() - diff);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return date;\r\n}\r\n/**\r\n * \"Rounds\" the date to specific time unit.\r\n *\r\n * @ignore Exclude from docs\r\n * @param date             Source date\r\n * @param unit             Time unit\r\n * @param count            Number of units to round to\r\n * @param firstDateOfWeek  First day of week\r\n * @return New date\r\n */\r\nexport function round(date, unit, count, firstDateOfWeek, utc, firstDate) {\r\n    if (!$type.isNumber(count)) {\r\n        count = 1;\r\n    }\r\n    var timeZoneOffset = 0;\r\n    if (!utc && unit != \"millisecond\") {\r\n        timeZoneOffset = date.getTimezoneOffset();\r\n        date.setUTCMinutes(date.getUTCMinutes() - timeZoneOffset);\r\n    }\r\n    switch (unit) {\r\n        case \"day\":\r\n            var day = date.getUTCDate();\r\n            if (count > 1) {\r\n                //\tday = Math.floor(day / count) * count;\r\n                if (firstDate) {\r\n                    firstDate = round(firstDate, \"day\", 1);\r\n                    var difference = date.getTime() - firstDate.getTime();\r\n                    var unitCount = Math.floor(difference / getDuration(\"day\") / count);\r\n                    var duration = getDuration(\"day\", unitCount * count);\r\n                    date.setTime(firstDate.getTime() + duration - timeZoneOffset * getDuration(\"minute\"));\r\n                }\r\n            }\r\n            else {\r\n                date.setUTCDate(day);\r\n            }\r\n            date.setUTCHours(0, 0, 0, 0);\r\n            break;\r\n        case \"second\":\r\n            var seconds = date.getUTCSeconds();\r\n            if (count > 1) {\r\n                seconds = Math.floor(seconds / count) * count;\r\n            }\r\n            date.setUTCSeconds(seconds, 0);\r\n            break;\r\n        case \"millisecond\":\r\n            if (count == 1) {\r\n                return date; // much better for perf!\r\n            }\r\n            var milliseconds = date.getUTCMilliseconds();\r\n            milliseconds = Math.floor(milliseconds / count) * count;\r\n            date.setUTCMilliseconds(milliseconds);\r\n            break;\r\n        case \"hour\":\r\n            var hours = date.getUTCHours();\r\n            if (count > 1) {\r\n                hours = Math.floor(hours / count) * count;\r\n            }\r\n            date.setUTCHours(hours, 0, 0, 0);\r\n            break;\r\n        case \"minute\":\r\n            var minutes = date.getUTCMinutes();\r\n            milliseconds = date.getUTCMilliseconds();\r\n            if (count > 1) {\r\n                minutes = Math.floor(minutes / count) * count;\r\n            }\r\n            date.setUTCMinutes(minutes, 0, 0);\r\n            break;\r\n        case \"month\":\r\n            var month = date.getUTCMonth();\r\n            if (count > 1) {\r\n                month = Math.floor(month / count) * count;\r\n            }\r\n            date.setUTCMonth(month, 1);\r\n            date.setUTCHours(0, 0, 0, 0);\r\n            break;\r\n        case \"year\":\r\n            var year = date.getUTCFullYear();\r\n            if (count > 1) {\r\n                year = Math.floor(year / count) * count;\r\n            }\r\n            date.setUTCFullYear(year, 0, 1);\r\n            date.setUTCHours(0, 0, 0, 0);\r\n            //let nonUTCDateY = new Date(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());\r\n            //timeZoneOffset = nonUTCDateY.getTimezoneOffset();\r\n            break;\r\n        case \"week\":\r\n            var wday = date.getUTCDate();\r\n            var weekDay = date.getUTCDay();\r\n            if (!$type.isNumber(firstDateOfWeek)) {\r\n                firstDateOfWeek = 1;\r\n            }\r\n            // todo: rounding when count is not 1\r\n            if (weekDay >= firstDateOfWeek) {\r\n                wday = wday - weekDay + firstDateOfWeek;\r\n            }\r\n            else {\r\n                wday = wday - (7 + weekDay) + firstDateOfWeek;\r\n            }\r\n            date.setUTCDate(wday);\r\n            date.setUTCHours(0, 0, 0, 0);\r\n            break;\r\n    }\r\n    if (!utc && unit != \"millisecond\") {\r\n        date.setUTCMinutes(date.getUTCMinutes() + timeZoneOffset);\r\n        if (unit == \"day\" || unit == \"week\" || unit == \"month\" || unit == \"year\") {\r\n            var newTimeZoneOffset = date.getTimezoneOffset();\r\n            if (newTimeZoneOffset != timeZoneOffset) {\r\n                var diff = newTimeZoneOffset - timeZoneOffset;\r\n                date.setUTCMinutes(date.getUTCMinutes() + diff);\r\n            }\r\n        }\r\n    }\r\n    return date;\r\n}\r\n//# sourceMappingURL=Time.js.map","/**\r\n * Functionality for any series-based elements, like Line Series (graphs),\r\n * Pie slice lists, etc.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Component } from \"../../core/Component\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { List, ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { Dictionary, DictionaryDisposer } from \"../../core/utils/Dictionary\";\r\nimport { DataItem } from \"../../core/DataItem\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { Tooltip } from \"../../core/elements/Tooltip\";\r\nimport { Bullet } from \"../elements/Bullet\";\r\nimport { LegendSettings } from \"../Legend\";\r\nimport { options } from \"../../core/Options\";\r\nimport { Color } from \"../../core/utils/Color\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $ease from \"../../core/utils/Ease\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $object from \"../../core/utils/Object\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport * as $colors from \"../../core/utils/Colors\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[Series]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar SeriesDataItem = /** @class */ (function (_super) {\r\n    __extends(SeriesDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function SeriesDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"SeriesDataItem\";\r\n        //@todo Should we make `bullets` list disposable?\r\n        //this._disposers.push(new DictionaryDisposer(this.bullets));\r\n        _this.values.value = {};\r\n        _this.values.value = {};\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(SeriesDataItem.prototype, \"bullets\", {\r\n        /**\r\n         * A dictionary of data items bullets, where key is uid of a bullet template.\r\n         */\r\n        get: function () {\r\n            if (!this._bullets) {\r\n                this._bullets = new Dictionary();\r\n                this._disposers.push(new DictionaryDisposer(this._bullets));\r\n            }\r\n            return this._bullets;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Destroys this object and all related data.\r\n     */\r\n    SeriesDataItem.prototype.dispose = function () {\r\n        this.bullets.clear();\r\n        _super.prototype.dispose.call(this);\r\n    };\r\n    Object.defineProperty(SeriesDataItem.prototype, \"value\", {\r\n        /**\r\n         * @return Value\r\n         */\r\n        get: function () {\r\n            return this.values.value.value;\r\n        },\r\n        /**\r\n         * data items's numeric value.\r\n         *\r\n         * @param value  Value\r\n         */\r\n        set: function (value) {\r\n            this.setValue(\"value\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return SeriesDataItem;\r\n}(DataItem));\r\nexport { SeriesDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines base class for any kind of serial data.\r\n *\r\n * @see {@link ISeriesEvents} for a list of available Events\r\n * @see {@link ISeriesAdapters} for a list of available Adapters\r\n * @todo Separate axis-related stuff to some other class so that MapSeries would not have unrelated stuff\r\n */\r\nvar Series = /** @class */ (function (_super) {\r\n    __extends(Series, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Series() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * Should this series excluded from the axis scale calculations?\r\n         *\r\n         * @default false\r\n         */\r\n        _this._ignoreMinMax = false;\r\n        /**\r\n         * Should series' bullets?\r\n         *\r\n         * @default true\r\n         */\r\n        _this._showBullets = true;\r\n        /**\r\n         * Settings for the appearance of the related legend items.\r\n         */\r\n        _this.legendSettings = new LegendSettings();\r\n        /**\r\n         * Lowest overal values by type.\r\n         */\r\n        _this._tmin = new Dictionary();\r\n        /**\r\n         * Highest overal values by type.\r\n         */\r\n        _this._tmax = new Dictionary();\r\n        /**\r\n         * Lowest values in current selection by type.\r\n         */\r\n        _this._smin = new Dictionary();\r\n        /**\r\n         * Highest values in current selection by type.\r\n         */\r\n        _this._smax = new Dictionary();\r\n        /**\r\n         * [dataItemsByAxis description]\r\n         *\r\n         * Both by category and date.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @todo Description\r\n         */\r\n        _this.dataItemsByAxis = new Dictionary();\r\n        /**\r\n         * Normally series items are focusable using keyboard, so that people can\r\n         * select them with a TAB key. However, if there are a lot of data points on\r\n         * screen it might be long and useless to tab through all o fthem.\r\n         *\r\n         * This is where `skipFocusThreshold` comes in. If there are more items than\r\n         * the value set here, we will not make those focusable and rather let screen\r\n         * reader software rely on the series summary, or authors provide alternative\r\n         * detailed information display, such as HTML table.\r\n         *\r\n         * Different series might have different threshold defaults.\r\n         */\r\n        _this.skipFocusThreshold = 20;\r\n        /**\r\n         * Used to indicate if `itemReaderText` was changed \"from the outside\".\r\n         */\r\n        _this._itemReaderTextChanged = false;\r\n        /**\r\n         * Most of the series use absolute values. However sometimes various\r\n         * calculated percent values are need, e.g. item's percent representation\r\n         * across all values in series, etc.\r\n         *\r\n         * It's a resource-intensive operation, so it is disabled by default.\r\n         *\r\n         * If you need percents to be calculated, e.g. for showing them in tooltips,\r\n         * or creating 100% stacks, this setting needs to be set to `true`.\r\n         *\r\n         * NOTE: `PieChart`, which relies on slice percentages, has this\r\n         * automatically set to `true`.\r\n         *\r\n         * @default false\r\n         */\r\n        _this.calculatePercent = false;\r\n        /**\r\n         * Specifies if series should be automatically disposed when removing from\r\n         * chart's `series` list.\r\n         *\r\n         * @default true\r\n         */\r\n        _this.autoDispose = true;\r\n        /**\r\n         * When chart/series' data is processed, all kinds of derivative values are\r\n         * calculated. E.g. sum, min, max, change, etc. This is a potentially\r\n         * time-consuming operation, especially prominent in data-heavy charts.\r\n         *\r\n         * If your chart does not need those values, and you have a lot of data,\r\n         * setting this to `true` might give a dramatic increase in initial chart\r\n         * load speed.\r\n         *\r\n         * Please note, regular column and line series usage scenarios do not\r\n         * require derivative values. Those come into play only when you do advanced\r\n         * functionality like coloring segments of charts in different colors\r\n         * depending on change between open and close values, have stacked series, or\r\n         * display any of the derived values, like percent, in tooltips or bullets.\r\n         *\r\n         * @default false\r\n         */\r\n        _this.simplifiedProcessing = false;\r\n        if (_this.constructor === Series) {\r\n            throw new Error(\"'Series' cannot be instantiated directly. Please use a specific series type.\");\r\n        }\r\n        _this.className = \"Series\";\r\n        _this.isMeasured = false;\r\n        _this.layout = \"none\";\r\n        _this.shouldClone = false;\r\n        _this.setPropertyValue(\"hidden\", false);\r\n        _this.axisRanges = new List();\r\n        _this.axisRanges.events.on(\"inserted\", _this.processAxisRange, _this, false);\r\n        _this.minBulletDistance = 0; // otherwise we'll have a lot of cases when people won't see bullets and think it's a bug\r\n        _this.mainContainer = _this.createChild(Container);\r\n        _this.mainContainer.shouldClone = false;\r\n        _this.mainContainer.mask = _this.createChild(Sprite);\r\n        _this._disposers.push(_this.mainContainer);\r\n        // all bullets should go on top of lines/fills. So we add a separate container for bullets and later set it's parent to chart.bulletsContainer\r\n        var bulletsContainer = _this.mainContainer.createChild(Container);\r\n        _this._shouldBeReady.push(bulletsContainer);\r\n        bulletsContainer.shouldClone = false;\r\n        bulletsContainer.layout = \"none\";\r\n        bulletsContainer.virtualParent = _this;\r\n        _this._disposers.push(bulletsContainer);\r\n        _this.bulletsContainer = bulletsContainer;\r\n        _this.tooltip = new Tooltip();\r\n        _this.tooltip.virtualParent = _this;\r\n        _this._disposers.push(_this.tooltip);\r\n        _this.hiddenState.transitionEasing = $ease.cubicIn;\r\n        // this data item holds sums, averages, etc\r\n        _this.dataItem = _this.createDataItem();\r\n        _this._disposers.push(_this.dataItem);\r\n        _this.dataItem.component = _this;\r\n        // Apply accessibility\r\n        _this.role = \"group\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * We need this here so that class names can be applied to bullets container.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Series.prototype.applyTheme = function () {\r\n        _super.prototype.applyTheme.call(this);\r\n        if (options.autoSetClassName && this.bulletsContainer) {\r\n            this.bulletsContainer.className = this.className + \"-bullets\";\r\n            this.bulletsContainer.setClassName();\r\n        }\r\n    };\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    Series.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        if (!$type.hasValue(this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"Series\");\r\n        }\r\n    };\r\n    /**\r\n     * Returns a new/empty DataItem of the type appropriate for this object.\r\n     *\r\n     * @see {@link DataItem}\r\n     * @return Data Item\r\n     */\r\n    Series.prototype.createDataItem = function () {\r\n        return new SeriesDataItem();\r\n    };\r\n    Object.defineProperty(Series.prototype, \"chart\", {\r\n        /**\r\n         * @return Chart\r\n         */\r\n        get: function () {\r\n            return this._chart;\r\n        },\r\n        /**\r\n         * Chart series is used on.\r\n         *\r\n         * @param value  Chart\r\n         */\r\n        set: function (value) {\r\n            this._chart = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Positions bullet.\r\n     *\r\n     * @param bullet  Sprite\r\n     */\r\n    Series.prototype.positionBullet = function (bullet) {\r\n        // Placeholder method for extending classes to override.\r\n    };\r\n    /**\r\n     * Decorates newly created bullet after it has been instert into the list.\r\n     *\r\n     * @param event  List event\r\n     * @todo investigate why itemReaderText is undefined\r\n     */\r\n    Series.prototype.processBullet = function (event) {\r\n        var _this = this;\r\n        var bullet = event.newValue;\r\n        bullet.isTemplate = true;\r\n        // Add accessibility options to bullet\r\n        // If there are relatively few bullets, make them focusable\r\n        this.events.once(\"datavalidated\", function (ev) {\r\n            if (_this.itemsFocusable()) {\r\n                bullet.focusable = true;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * removes bullets\r\n     *\r\n     * @param event  List event\r\n     */\r\n    Series.prototype.removeBullet = function (event) {\r\n        var bullet = event.oldValue;\r\n        this.dataItems.each(function (dataItem) {\r\n            var eachBullet = dataItem.bullets.getKey(bullet.uid);\r\n            if (eachBullet) {\r\n                eachBullet.dispose();\r\n            }\r\n        });\r\n        this.invalidate();\r\n    };\r\n    /**\r\n     * Validates data items.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Series.prototype.validateDataItems = function () {\r\n        _super.prototype.validateDataItems.call(this);\r\n        this.processValues(false);\r\n    };\r\n    /**\r\n     * Returns first value for the specific key in the series.\r\n     *\r\n     * @param key  Key\r\n     * @return Value\r\n     * @todo Description\r\n     * @todo Convert to propert object property iterator\r\n     */\r\n    Series.prototype.getFirstValue = function (key, startIndex) {\r\n        // find first\r\n        /*\r\n        return $iter.findMap(this.dataItems.iterator(), (dataItem) => {\r\n            for (let key in dataItem.values) {\r\n                if ($object.hasKey(dataItem.values, key)) {\r\n                    let value: number = dataItem.values[key].workingValue;\r\n                    if ($type.isNumber(value)) {\r\n                        return value;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return null;\r\n        });*/\r\n        if (startIndex > 0 && startIndex < this.dataItems.length - 1) {\r\n            startIndex++;\r\n        }\r\n        for (var i = startIndex; i >= 0; i--) {\r\n            var dataItem = this.dataItems.getIndex(i);\r\n            var value = dataItem.getActualWorkingValue(key);\r\n            if ($type.isNumber(value)) {\r\n                return value;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Returns first value for the specific key in the series.\r\n     *\r\n     * @param key  Key\r\n     * @return Value\r\n     * @todo Description\r\n     * @todo Convert to propert object property iterator\r\n     */\r\n    Series.prototype.getAbsoluteFirstValue = function (key) {\r\n        for (var i = 0; i < this.dataItems.length; i++) {\r\n            var dataItem = this.dataItems.getIndex(i);\r\n            var value = dataItem.values[key].value;\r\n            if ($type.isNumber(value)) {\r\n                return value;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * [rangeChangeUpdate description]\r\n     *\r\n     * @todo Description\r\n     */\r\n    Series.prototype.rangeChangeUpdate = function () {\r\n        _super.prototype.rangeChangeUpdate.call(this);\r\n        this.processValues(true);\r\n    };\r\n    /**\r\n     * [processValues description]\r\n     *\r\n     * @todo Description\r\n     * @todo Convert to propert object property iterator\r\n     * @param dataItems [description]\r\n     */\r\n    Series.prototype.processValues = function (working) {\r\n        var _this = this;\r\n        if (!this.simplifiedProcessing) {\r\n            var dataItems = this.dataItems;\r\n            var count_1 = {};\r\n            var sum_1 = {};\r\n            var absoluteSum_1 = {};\r\n            var low_1 = {};\r\n            var high_1 = {};\r\n            var open_1 = {};\r\n            var close_1 = {};\r\n            var previous_1 = {};\r\n            var first_1 = {};\r\n            var absoluteFirst_1 = {};\r\n            //let duration: number = 0; // todo: check if series uses selection.change or selection.change.percent and set duration to interpolationduration\r\n            var startIndex_1 = $math.max(0, this._workingStartIndex);\r\n            startIndex_1 = $math.min(startIndex_1, this.dataItems.length);\r\n            var endIndex = $math.min(this._workingEndIndex, this.dataItems.length);\r\n            if (!$type.isNumber(startIndex_1)) {\r\n                startIndex_1 = 0;\r\n            }\r\n            if (!$type.isNumber(endIndex)) {\r\n                endIndex = this.dataItems.length;\r\n            }\r\n            if (startIndex_1 > 0) {\r\n                var dataItem_1 = dataItems.getIndex(startIndex_1 - 1);\r\n                $object.each(dataItem_1.values, function (key, values) {\r\n                    var value = dataItem_1.getActualWorkingValue(key);\r\n                    if ($type.isNumber(value)) {\r\n                        // save previous\r\n                        previous_1[key] = value;\r\n                    }\r\n                });\r\n            }\r\n            var _loop_1 = function (i) {\r\n                var dataItem_2 = dataItems.getIndex(i);\r\n                $object.each(dataItem_2.values, function (key, values) {\r\n                    var value = dataItem_2.getActualWorkingValue(key);\r\n                    //if (i >= startIndex && i <= endIndex) { // do not add to count, sum etc if it is not within start/end index\r\n                    if ($type.isNumber(value)) {\r\n                        // count values\r\n                        if (!$type.isNumber(count_1[key])) {\r\n                            count_1[key] = 0;\r\n                        }\r\n                        count_1[key]++;\r\n                        // sum values\r\n                        if (!$type.isNumber(sum_1[key])) {\r\n                            sum_1[key] = 0;\r\n                        }\r\n                        sum_1[key] += value;\r\n                        // absolute sum values\r\n                        if (!$type.isNumber(absoluteSum_1[key])) {\r\n                            absoluteSum_1[key] = 0;\r\n                        }\r\n                        absoluteSum_1[key] += Math.abs(value);\r\n                        // open\r\n                        if (!$type.isNumber(open_1[key])) {\r\n                            open_1[key] = value;\r\n                        }\r\n                        // close\r\n                        close_1[key] = value;\r\n                        // low\r\n                        if (!$type.isNumber(low_1[key])) {\r\n                            low_1[key] = value;\r\n                        }\r\n                        else {\r\n                            if (low_1[key] > value) {\r\n                                low_1[key] = value;\r\n                            }\r\n                        }\r\n                        // high\r\n                        if (!$type.isNumber(high_1[key])) {\r\n                            high_1[key] = value;\r\n                        }\r\n                        else {\r\n                            if (high_1[key] < value) {\r\n                                high_1[key] = value;\r\n                            }\r\n                        }\r\n                        if (!$type.isNumber(first_1[key])) {\r\n                            first_1[key] = _this.getFirstValue(key, startIndex_1);\r\n                        }\r\n                        if (!$type.isNumber(absoluteFirst_1[key])) {\r\n                            absoluteFirst_1[key] = _this.getAbsoluteFirstValue(key);\r\n                        }\r\n                        // change\r\n                        dataItem_2.setCalculatedValue(key, value - first_1[key], \"change\");\r\n                        // change from start percent\r\n                        // will fail if first value is 0\r\n                        dataItem_2.setCalculatedValue(key, (value - first_1[key]) / first_1[key] * 100, \"changePercent\");\r\n                        dataItem_2.setCalculatedValue(key, (value - absoluteFirst_1[key]), \"startChange\");\r\n                        dataItem_2.setCalculatedValue(key, (value - absoluteFirst_1[key]) / absoluteFirst_1[key] * 100, \"startChangePercent\");\r\n                        // previous change\r\n                        var prevValue = previous_1[key];\r\n                        if (!$type.isNumber(prevValue)) {\r\n                            prevValue = value;\r\n                        }\r\n                        dataItem_2.setCalculatedValue(key, value - prevValue, \"previousChange\");\r\n                        // previous change percent\r\n                        dataItem_2.setCalculatedValue(key, (value - prevValue) / prevValue * 100, \"previousChangePercent\");\r\n                        // save previous\r\n                        previous_1[key] = value;\r\n                    }\r\n                });\r\n            };\r\n            for (var i = startIndex_1; i < endIndex; i++) {\r\n                _loop_1(i);\r\n            }\r\n            if (this.calculatePercent) {\r\n                var _loop_2 = function (i) {\r\n                    var dataItem_3 = dataItems.getIndex(i);\r\n                    $object.each(dataItem_3.values, function (key) {\r\n                        var ksum = absoluteSum_1[key];\r\n                        var value = dataItem_3.getActualWorkingValue(key);\r\n                        if ($type.isNumber(value)) {\r\n                            if (ksum > 0) {\r\n                                // this hack is made in order to make it possible to animate single slice to 0\r\n                                // if there is only one slice left, percent value is always 100%, so it won't animate\r\n                                // so we use real value of a slice instead of current value\r\n                                if (value == ksum) {\r\n                                    ksum = dataItem_3.values[key].value;\r\n                                }\r\n                                var percent = value / ksum * 100;\r\n                                dataItem_3.setCalculatedValue(key, percent, \"percent\");\r\n                            }\r\n                            else {\r\n                                dataItem_3.setCalculatedValue(key, 0, \"percent\");\r\n                            }\r\n                        }\r\n                    });\r\n                };\r\n                for (var i = startIndex_1; i < endIndex; i++) {\r\n                    _loop_2(i);\r\n                }\r\n            }\r\n            // calculate one before first (cant do that in cycle, as we don't know open yet\r\n            // when drawing line chart we should draw line to the invisible data point to the left, otherwise the line will always look like it starts from the selected point\r\n            // so we do startIndex - 1\r\n            if (startIndex_1 > 0) {\r\n                var zeroItem_1 = dataItems.getIndex(startIndex_1 - 1);\r\n                $object.each(zeroItem_1.values, function (key) {\r\n                    var value = zeroItem_1.values[key].value;\r\n                    // change\r\n                    zeroItem_1.setCalculatedValue(key, value - open_1[key], \"change\");\r\n                    // change percent\r\n                    zeroItem_1.setCalculatedValue(key, (value - open_1[key]) / open_1[key] * 100, \"changePercent\");\r\n                });\r\n            }\r\n            // we save various data like sum, average to dataPoint of the series\r\n            var dataItem_4 = this.dataItem;\r\n            $object.each(dataItem_4.values, function (key) {\r\n                dataItem_4.setCalculatedValue(key, sum_1[key], \"sum\");\r\n                dataItem_4.setCalculatedValue(key, absoluteSum_1[key], \"absoluteSum\");\r\n                dataItem_4.setCalculatedValue(key, sum_1[key] / count_1[key], \"average\");\r\n                dataItem_4.setCalculatedValue(key, open_1[key], \"open\");\r\n                dataItem_4.setCalculatedValue(key, close_1[key], \"close\");\r\n                dataItem_4.setCalculatedValue(key, low_1[key], \"low\");\r\n                dataItem_4.setCalculatedValue(key, high_1[key], \"high\");\r\n                dataItem_4.setCalculatedValue(key, count_1[key], \"count\");\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * (Re)validates the whole series, effectively causing it to redraw.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Series.prototype.validate = function () {\r\n        $iter.each(this.axisRanges.iterator(), function (axisRange) {\r\n            //axisRange.contents.disposeChildren(); // not good for columns, as they are reused\r\n            //\t\t\taxisRange.appendChildren();\r\n            axisRange.validate();\r\n        });\r\n        _super.prototype.validate.call(this);\r\n        var bulletsContainer = this.bulletsContainer;\r\n        bulletsContainer.fill = this.fill;\r\n        bulletsContainer.stroke = this.stroke;\r\n        bulletsContainer.x = this.pixelX;\r\n        bulletsContainer.y = this.pixelY;\r\n        if (this.bulletsContainer.children.length > 0) {\r\n            if (this._showBullets) {\r\n                for (var i = 0; i < this.startIndex; i++) {\r\n                    var dataItem = this.dataItems.getIndex(i);\r\n                    if (dataItem) {\r\n                        dataItem.bullets.each(function (key, bullet) {\r\n                            bullet.__disabled = true;\r\n                        });\r\n                    }\r\n                }\r\n                for (var i = this.dataItems.length - 1; i > this.endIndex; i--) {\r\n                    var dataItem = this.dataItems.getIndex(i);\r\n                    if (dataItem) {\r\n                        dataItem.bullets.each(function (key, bullet) {\r\n                            bullet.__disabled = true;\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                this.bulletsContainer.children.each(function (bullet) {\r\n                    bullet.__disabled = true;\r\n                });\r\n            }\r\n        }\r\n        this.updateTooltipBounds();\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    Series.prototype.updateTooltipBounds = function () {\r\n        if (this.topParent) {\r\n            var x = 0;\r\n            var y = 0;\r\n            var w = this.topParent.maxWidth;\r\n            var h = this.topParent.maxHeight;\r\n            var rect = { x: x, y: y, width: w, height: h };\r\n            this.tooltip.setBounds(rect);\r\n        }\r\n    };\r\n    Series.prototype.shouldCreateBullet = function (dataItem, bulletTemplate) {\r\n        return true;\r\n    };\r\n    /**\r\n     * Validates data item's element, effectively redrawing it.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem  Data item\r\n     */\r\n    Series.prototype.validateDataElement = function (dataItem) {\r\n        var _this = this;\r\n        _super.prototype.validateDataElement.call(this, dataItem);\r\n        if (this._showBullets) {\r\n            if (!this.isHidden) {\r\n                this.bulletsContainer.visible = true;\r\n            }\r\n            this.bullets.each(function (bulletTemplate) {\r\n                // always better to use the same, this helps to avoid redrawing\r\n                var bullet = dataItem.bullets.getKey(bulletTemplate.uid);\r\n                if (_this.shouldCreateBullet(dataItem, bulletTemplate)) {\r\n                    if (!bullet) {\r\n                        var disabledField = bulletTemplate.propertyFields.disabled;\r\n                        var dataContext = dataItem.dataContext;\r\n                        if (disabledField && dataContext && dataContext[disabledField] === false) {\r\n                            bulletTemplate.applyOnClones = false;\r\n                            bulletTemplate.disabled = false;\r\n                            bullet = bulletTemplate.clone();\r\n                            bulletTemplate.disabled = true;\r\n                            bulletTemplate.applyOnClones = true;\r\n                        }\r\n                        else {\r\n                            bullet = bulletTemplate.clone();\r\n                        }\r\n                        bullet.shouldClone = false;\r\n                        dataItem.addSprite(bullet);\r\n                        if (!_this.visible || _this.isHiding) {\r\n                            bullet.hide(0);\r\n                        }\r\n                    }\r\n                    var currentDataItem = bullet.dataItem;\r\n                    if (currentDataItem != dataItem) {\r\n                        // set to undefined in order not to reuse\r\n                        if (currentDataItem) {\r\n                            currentDataItem.bullets.setKey(bulletTemplate.uid, undefined);\r\n                        }\r\n                        var readerText_1 = _this.itemReaderText;\r\n                        if (bullet instanceof Bullet) {\r\n                            if (!readerText_1) {\r\n                                readerText_1 = (\"{\" + bullet.xField + \"}: {\" + bullet.yField + \"}\");\r\n                            }\r\n                            if (bullet.isDynamic) {\r\n                                dataItem.events.on(\"workingvaluechanged\", bullet.deepInvalidate, bullet, false);\r\n                                //dataItem.events.on(\"calculatedvaluechanged\", bullet.deepInvalidate, bullet, false);\r\n                                _this.dataItem.events.on(\"workingvaluechanged\", bullet.deepInvalidate, bullet, false);\r\n                            }\r\n                            bullet.deepInvalidate();\r\n                        }\r\n                        // Add accessibility to bullet\r\n                        if (bullet.focusable) {\r\n                            bullet.events.on(\"focus\", function (ev) {\r\n                                bullet.readerTitle = _this.populateString(readerText_1, bullet.dataItem);\r\n                            }, undefined, false);\r\n                            bullet.events.on(\"blur\", function (ev) {\r\n                                bullet.readerTitle = \"\";\r\n                            }, undefined, false);\r\n                        }\r\n                        if (bullet.hoverable) {\r\n                            bullet.events.on(\"over\", function (ev) {\r\n                                bullet.readerTitle = _this.populateString(readerText_1, bullet.dataItem);\r\n                            }, undefined, false);\r\n                            bullet.events.on(\"out\", function (ev) {\r\n                                bullet.readerTitle = \"\";\r\n                            }, undefined, false);\r\n                        }\r\n                    }\r\n                    bullet.parent = _this.bulletsContainer;\r\n                    dataItem.bullets.setKey(bulletTemplate.uid, bullet);\r\n                    // pass max w/h so we'd know if we should show/hide somethings\r\n                    bullet.maxWidth = dataItem.itemWidth;\r\n                    bullet.maxHeight = dataItem.itemHeight;\r\n                    bullet.__disabled = false;\r\n                    _this.positionBullet(bullet);\r\n                }\r\n                else {\r\n                    if (bullet) {\r\n                        bullet.__disabled = true;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            this.bulletsContainer.visible = false;\r\n        }\r\n    };\r\n    /**\r\n     * [handleDataItemWorkingValueChange description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Series.prototype.handleDataItemWorkingValueChange = function (dataItem, name) {\r\n        if (!this.dataRangeInvalid) {\r\n            this.invalidateProcessedData();\r\n        }\r\n    };\r\n    Object.defineProperty(Series.prototype, \"ignoreMinMax\", {\r\n        /**\r\n         * @return Exclude from calculations?\r\n         */\r\n        get: function () {\r\n            return this._ignoreMinMax;\r\n        },\r\n        /**\r\n         * Should this series excluded from the axis scale calculations?\r\n         *\r\n         * @default false\r\n         * @param value  Exclude from calculations?\r\n         */\r\n        set: function (value) {\r\n            this._ignoreMinMax = value;\r\n            this.invalidateDataItems();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Create a mask for the series.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Series.prototype.createMask = function () {\r\n        // A placeholder method for extending classes to override.\r\n    };\r\n    /**\r\n     * Process axis range after it has been added to the list.\r\n     *\r\n     * @param event  Event\r\n     */\r\n    Series.prototype.processAxisRange = function (event) {\r\n        // create container if not existing\r\n        if (!this.rangesContainer) {\r\n            this.rangesContainer = this.createChild(Container);\r\n            this.rangesContainer.shouldClone = false;\r\n            this.rangesContainer.isMeasured = false;\r\n        }\r\n        var axisRange = event.newValue;\r\n        if (axisRange) {\r\n            axisRange.contents.parent = this.rangesContainer;\r\n            axisRange.isRange = true;\r\n            axisRange.events.on(\"valuechanged\", this.invalidateDataItems, this, false);\r\n        }\r\n    };\r\n    /**\r\n     * [getAxisField description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param axis  [description]\r\n     * @return [description]\r\n     */\r\n    Series.prototype.getAxisField = function (axis) {\r\n        return;\r\n    };\r\n    /**\r\n     * Shows the tooltip at specific position.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param xPosition  X\r\n     * @param yPosition  Y\r\n     */\r\n    Series.prototype.showTooltipAtPosition = function (xPosition, yPosition) {\r\n        // Placeholder method for extending classes to override.\r\n    };\r\n    Object.defineProperty(Series.prototype, \"minBulletDistance\", {\r\n        /**\r\n         * @return Distance (px)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"minBulletDistance\");\r\n        },\r\n        /**\r\n         * Minimal distance between data points in pixels.\r\n         *\r\n         * If distance gets smaller than this, bullets are turned off to avoid\r\n         * overlapping.\r\n         *\r\n         * `0` (zero) disables this behavior.\r\n         *\r\n         * IMPORTANT: This setting will work only when Series' base axis\r\n         * is [[CategoryAxis]] or [[DateAxis]]. If base axis is [[ValueAxis]] the\r\n         * setting will be ignored, because it would be a huge overhead to measure\r\n         * distance between each and every bullet.\r\n         *\r\n         * @default 0\r\n         * @param value  Distance (px)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"minBulletDistance\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Series.prototype, \"bullets\", {\r\n        /**\r\n         * A list of bullets that will be added to each and every items in the\r\n         * series.\r\n         *\r\n         * You can push any object that is a descendant of a [[Sprite]] here. All\r\n         * items added to this list will be copied and used as a bullet on all data\r\n         * items, including their properties, events, etc.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/bullets/} for more info about the concept of Bullets\r\n         * @return List of bullets.\r\n         */\r\n        get: function () {\r\n            if (!this._bullets) {\r\n                this._bullets = new ListTemplate(new Bullet());\r\n                this._bullets.template.virtualParent = this;\r\n                this._bullets.events.on(\"inserted\", this.processBullet, this, false);\r\n                this._bullets.events.on(\"removed\", this.removeBullet, this, false);\r\n                this._disposers.push(new ListDisposer(this._bullets));\r\n                this._disposers.push(this._bullets.template);\r\n            }\r\n            return this._bullets;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Binds related legend data item's visual settings to this series' visual\r\n     * settings.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param marker  Legend item container\r\n     */\r\n    Series.prototype.createLegendMarker = function (marker) {\r\n        // This is a placeholder method for extending classes to override.\r\n    };\r\n    Object.defineProperty(Series.prototype, \"hiddenInLegend\", {\r\n        /**\r\n         * @return Hidden in legend?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"hiddenInLegend\");\r\n        },\r\n        /**\r\n         * Should the series be hidden in legend?\r\n         *\r\n         * @param value Hidden in legend?\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"hiddenInLegend\", value)) {\r\n                if (this.chart) {\r\n                    this.chart.feedLegend();\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Series.prototype, \"name\", {\r\n        /**\r\n         * @return Name\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"name\");\r\n        },\r\n        /**\r\n         * Series' name.\r\n         *\r\n         * @param value  Name\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"name\", value);\r\n            var legendDataItem = this.legendDataItem;\r\n            if (legendDataItem) {\r\n                legendDataItem.component.invalidate();\r\n                legendDataItem.component.invalidateRawData();\r\n            }\r\n            this.readerTitle = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Series.prototype, \"itemReaderText\", {\r\n        /**\r\n         * @return Screen reader text template\r\n         */\r\n        get: function () {\r\n            // Get explicitly set reader text\r\n            var readerText = this._itemReaderText;\r\n            // Not set? Let's try something else\r\n            if (!readerText) {\r\n                // Tooltip text?\r\n                if (this.tooltipText) {\r\n                    readerText = $utils.plainText(this.tooltipText);\r\n                }\r\n                else if (this.tooltipHTML) {\r\n                    readerText = $utils.plainText(this.tooltipHTML);\r\n                }\r\n            }\r\n            if (!this._adapterO) {\r\n                return readerText;\r\n            }\r\n            else {\r\n                return this._adapterO.apply(\"itemReaderText\", readerText);\r\n            }\r\n        },\r\n        /**\r\n         * Screen reader text to be applied to each individual data item, such\r\n         * as bullets, columns or slices.\r\n         *\r\n         * The template can contain field reference meta codes, i.e. `{dateX}`,\r\n         * `{valueY}`, etc.\r\n         *\r\n         * Any text formatting options, e.g. `[bold]` will be ignored.\r\n         *\r\n         * @param value Screen reader text template\r\n         */\r\n        set: function (value) {\r\n            this._itemReaderText = value;\r\n            this._itemReaderTextChanged = true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns if number of data items in the series are beyond non-focusable\r\n     * count and should not be available for TAB-through.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Items focusable?\r\n     */\r\n    Series.prototype.itemsFocusable = function () {\r\n        return this.dataItems.length >= this.skipFocusThreshold ? false : true;\r\n    };\r\n    Object.defineProperty(Series.prototype, \"legendDataItem\", {\r\n        /**\r\n         * @return Data item\r\n         */\r\n        get: function () {\r\n            return this._legendDataItem;\r\n        },\r\n        /**\r\n         * Legend data item that corresponds to this series.\r\n         *\r\n         * @param value  Data item\r\n         */\r\n        set: function (value) {\r\n            this._legendDataItem = value;\r\n            this._legendDataItem.itemContainer.deepInvalidate();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates corresponding legend data item with current values.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem  Data item\r\n     */\r\n    Series.prototype.updateLegendValue = function (dataItem, notRange) {\r\n        // if this series has legend item\r\n        if (this.legendDataItem) {\r\n            var legendSettings = this.legendSettings;\r\n            var legendDataItem = this.legendDataItem;\r\n            var label = legendDataItem.label;\r\n            var valueLabel = legendDataItem.valueLabel;\r\n            // update legend\r\n            if (dataItem || notRange) {\r\n                if (valueLabel) {\r\n                    if (legendSettings.itemValueText) {\r\n                        valueLabel.text = legendSettings.itemValueText;\r\n                    }\r\n                    valueLabel.dataItem = dataItem;\r\n                }\r\n                if (label) {\r\n                    if (legendSettings.itemLabelText) {\r\n                        label.text = legendSettings.itemLabelText;\r\n                    }\r\n                    label.dataItem = dataItem;\r\n                }\r\n            }\r\n            else {\r\n                if (label) {\r\n                    // if itemLabelText is set, means we have to reset label even if labelText is not set\r\n                    if (legendSettings.labelText || legendSettings.itemLabelText != undefined) {\r\n                        label.text = legendSettings.labelText;\r\n                    }\r\n                    label.dataItem = this.dataItem;\r\n                }\r\n                if (valueLabel) {\r\n                    if (legendSettings.valueText || legendSettings.itemValueText != undefined) {\r\n                        valueLabel.text = legendSettings.valueText;\r\n                    }\r\n                    valueLabel.dataItem = this.dataItem;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Copies all properties from another instance of [[Series]].\r\n     *\r\n     * @param source  Source series\r\n     */\r\n    Series.prototype.copyFrom = function (source) {\r\n        this.bullets.copyFrom(source.bullets);\r\n        this.bulletsContainer.copyFrom(source.bulletsContainer);\r\n        this.calculatePercent = source.calculatePercent;\r\n        this.simplifiedProcessing = source.simplifiedProcessing;\r\n        _super.prototype.copyFrom.call(this, source);\r\n    };\r\n    /**\r\n     * Displays a modal or console message with error, and halts any further\r\n     * processing of this element.\r\n     *\r\n     * @param e Error\r\n     */\r\n    Series.prototype.raiseCriticalError = function (e) {\r\n        if (this._chart && this._chart.modal) {\r\n            this._chart.modal.content = this._chart.adapter.apply(\"criticalError\", e).message;\r\n            this._chart.modal.closable = false;\r\n            this._chart.modal.open();\r\n            this._chart.disabled = true;\r\n        }\r\n        if (options.verbose) {\r\n            console.log(e);\r\n        }\r\n    };\r\n    /**\r\n     * Applies filters to the element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Series.prototype.applyFilters = function () {\r\n        var _this = this;\r\n        _super.prototype.applyFilters.call(this);\r\n        this.bulletsContainer.filters.clear();\r\n        // copyFrom of a list copies, does not clone\r\n        $iter.each(this.filters.iterator(), function (filter) {\r\n            _this.bulletsContainer.filters.push(filter.clone());\r\n        });\r\n    };\r\n    Object.defineProperty(Series.prototype, \"heatRules\", {\r\n        /**\r\n         * A list of heat rules to apply to series' elements based on the value\r\n         * of the data item.\r\n         *\r\n         * Heat rules can be any \"numeric\" (including `Color`) property, and can also\r\n         * be applied to child objects of series, like columns, bullets, etc.\r\n         *\r\n         * E.g.:\r\n         *\r\n         * ```TypeScript\r\n         * series.heatRules.push({\r\n         *  \"target\": series.columns.template,\r\n         *  \"property\": \"fill\",\r\n         *  \"min\": am4core.color(\"#F5DBCB\"),\r\n         *  \"max\": am4core.color(\"#ED7B84\"),\r\n         *  \"dataField\": \"valueY\"\r\n         *});\r\n         *```\r\n         * ```Javacript\r\n         * series.heatRules.push({\r\n         *  \"target\": series.columns.template,\r\n         *  \"property\": \"fill\",\r\n         *  \"min\": am4core.color(\"#F5DBCB\"),\r\n         *  \"max\": am4core.color(\"#ED7B84\"),\r\n         *  \"dataField\": \"valueY\"\r\n         *});\r\n         *```\r\n         *```JSON\r\n         *{\r\n         *  // ...\r\n         *  \"series\": [{\r\n         *    \"type\": \"ColumnSeries\",\r\n         *    \"heatRules\": [{\r\n         *      \"target\": \"columns.template\",\r\n         *      \"property\": \"fill\",\r\n         *      \"min\": \"#F5DBCB\",\r\n         *      \"max\": \"#ED7B84\",\r\n         *      \"dataField\": \"valueY\"\r\n         *    }]\r\n         *  }]\r\n         *}\r\n         *```\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/series/#Heat_maps} for more about heat rules\r\n         * @return  Heat rules\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            if (!this._heatRules) {\r\n                this._heatRules = new List();\r\n                this._heatRules.events.on(\"inserted\", function (event) {\r\n                    var heatRule = event.newValue;\r\n                    var target = heatRule.target;\r\n                    if (target) {\r\n                        var dataField_1 = heatRule.dataField;\r\n                        if (!$type.hasValue(dataField_1)) {\r\n                            dataField_1 = \"value\";\r\n                        }\r\n                        var min_1 = heatRule.min;\r\n                        var max_1 = heatRule.max;\r\n                        var seriesDataItem_1 = _this.dataItem;\r\n                        var property_1 = heatRule.property;\r\n                        var minValue = $type.toNumber(heatRule.minValue);\r\n                        var maxValue = $type.toNumber(heatRule.maxValue);\r\n                        if (!$type.isNumber(minValue) && !$type.isNumber(maxValue)) {\r\n                            _this.dataItem.events.on(\"calculatedvaluechanged\", function (event) {\r\n                                if (event.property == dataField_1) {\r\n                                    $iter.each(_this.dataItems.iterator(), function (dataItem) {\r\n                                        var foundSprite = false;\r\n                                        $array.each(dataItem.sprites, function (sprite) {\r\n                                            if (sprite.clonedFrom == target) {\r\n                                                var anySprite = sprite;\r\n                                                anySprite[property_1] = anySprite[property_1];\r\n                                                foundSprite = true;\r\n                                            }\r\n                                        });\r\n                                        if (!foundSprite) {\r\n                                            $array.each(dataItem.sprites, function (sprite) {\r\n                                                if (sprite instanceof Container) {\r\n                                                    $iter.each(sprite.children.iterator(), function (child) {\r\n                                                        if (child.className == target.className) {\r\n                                                            var anyChild = child;\r\n                                                            anyChild[property_1] = anyChild[property_1];\r\n                                                        }\r\n                                                        // giveup here\r\n                                                        else if (child instanceof Container) {\r\n                                                            child.deepInvalidate();\r\n                                                        }\r\n                                                    });\r\n                                                }\r\n                                            });\r\n                                        }\r\n                                    });\r\n                                }\r\n                            });\r\n                        }\r\n                        _this.dataItems.template.events.on(\"workingvaluechanged\", function (event) {\r\n                            if (event.property == dataField_1) {\r\n                                var dataItem = event.target;\r\n                                var foundSprite_1 = false;\r\n                                $array.each(dataItem.sprites, function (sprite) {\r\n                                    if (sprite.clonedFrom == target) {\r\n                                        var anySprite = sprite;\r\n                                        anySprite[property_1] = anySprite[property_1];\r\n                                        foundSprite_1 = true;\r\n                                    }\r\n                                });\r\n                                if (!foundSprite_1) {\r\n                                    $array.each(dataItem.sprites, function (sprite) {\r\n                                        if (sprite instanceof Container) {\r\n                                            $iter.each(sprite.children.iterator(), function (child) {\r\n                                                if (child.className == target.className) {\r\n                                                    var anyChild = child;\r\n                                                    anyChild[property_1] = anyChild[property_1];\r\n                                                }\r\n                                                // givup here\r\n                                                else if (child instanceof Container) {\r\n                                                    child.deepInvalidate();\r\n                                                }\r\n                                            });\r\n                                        }\r\n                                    });\r\n                                }\r\n                            }\r\n                        });\r\n                        target.adapter.add(property_1, function (value, ruleTarget, property) {\r\n                            var minValue = $type.toNumber(heatRule.minValue);\r\n                            var maxValue = $type.toNumber(heatRule.maxValue);\r\n                            if (ruleTarget instanceof Sprite) {\r\n                                var anySprite = ruleTarget;\r\n                                var propertyField = anySprite.propertyFields[property];\r\n                                if (propertyField && ruleTarget.dataItem) {\r\n                                    var dataContext = ruleTarget.dataItem.dataContext;\r\n                                    if (dataContext && $type.hasValue(dataContext[propertyField])) {\r\n                                        return value;\r\n                                    }\r\n                                }\r\n                            }\r\n                            var dataItem = ruleTarget.dataItem;\r\n                            if (!$type.isNumber(minValue)) {\r\n                                minValue = seriesDataItem_1.values[dataField_1].low;\r\n                            }\r\n                            if (!$type.isNumber(maxValue)) {\r\n                                maxValue = seriesDataItem_1.values[dataField_1].high;\r\n                            }\r\n                            if (dataItem) {\r\n                                var fieldValues = dataItem.values[dataField_1];\r\n                                if (fieldValues) {\r\n                                    var workingValue = dataItem.getActualWorkingValue(dataField_1);\r\n                                    if ($type.hasValue(min_1) && $type.hasValue(max_1) && $type.isNumber(minValue) && $type.isNumber(maxValue) && $type.isNumber(workingValue)) {\r\n                                        var percent = (workingValue - minValue) / (maxValue - minValue);\r\n                                        if ($type.isNumber(workingValue) && !$type.isNumber(percent)) {\r\n                                            percent = 0.5;\r\n                                        }\r\n                                        // fixes problems if all values are the same\r\n                                        if ($type.isNumber(min_1)) {\r\n                                            return min_1 + (max_1 - min_1) * percent;\r\n                                        }\r\n                                        else if (min_1 instanceof Color) {\r\n                                            return new Color($colors.interpolate(min_1.rgb, max_1.rgb, percent));\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                            return value;\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n            return this._heatRules;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Processes JSON-based config before it is applied to the object.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param config  Config\r\n     */\r\n    Series.prototype.processConfig = function (config) {\r\n        var heatRules;\r\n        if (config) {\r\n            // Set up bullets\r\n            if ($type.hasValue(config.bullets) && $type.isArray(config.bullets)) {\r\n                for (var i = 0, len = config.bullets.length; i < len; i++) {\r\n                    var bullets = config.bullets[i];\r\n                    if (!$type.hasValue(bullets.type)) {\r\n                        bullets.type = \"Bullet\";\r\n                    }\r\n                }\r\n            }\r\n            // Let's take heatRules out of the config, so that we can process\r\n            // them later, when bullets are already there\r\n            if ($type.hasValue(config.heatRules) && $type.isArray(config.heatRules)) {\r\n                heatRules = config.heatRules;\r\n                delete config.heatRules;\r\n            }\r\n        }\r\n        _super.prototype.processConfig.call(this, config);\r\n        // Process heat rules again, when all other elements are ready\r\n        if (heatRules) {\r\n            for (var i = 0, len = heatRules.length; i < len; i++) {\r\n                var rule = heatRules[i];\r\n                // Resolve target\r\n                var target = this;\r\n                if ($type.hasValue(rule.target) && $type.isString(rule.target)) {\r\n                    // Check if we can find this element by id\r\n                    if (this.map.hasKey(rule.target)) {\r\n                        target = this.map.getKey(rule.target);\r\n                    }\r\n                    else {\r\n                        var parts = rule.target.split(\".\");\r\n                        for (var x = 0; x < parts.length; x++) {\r\n                            if (target instanceof List) {\r\n                                var listitem = target.getIndex($type.toNumber(parts[x]));\r\n                                if (!listitem) {\r\n                                    target = target[parts[x]];\r\n                                }\r\n                                else {\r\n                                    target = listitem;\r\n                                }\r\n                            }\r\n                            else {\r\n                                target = target[parts[x]];\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                rule.target = target;\r\n                // Resolve colors and percents\r\n                if ($type.hasValue(rule.min)) {\r\n                    rule.min = this.maybeColorOrPercent(rule.min);\r\n                }\r\n                if ($type.hasValue(rule.max)) {\r\n                    rule.max = this.maybeColorOrPercent(rule.max);\r\n                }\r\n            }\r\n            _super.prototype.processConfig.call(this, {\r\n                heatRules: heatRules\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Returns visibility value\r\n     * @ignore\r\n     */\r\n    /*\r\n        protected getVisibility(): boolean {\r\n            let hidden = this.getPropertyValue(\"hidden\");\r\n            if (hidden) {\r\n                return false;\r\n            }\r\n            else {\r\n                return super.getVisibility();\r\n            }\r\n        }*/\r\n    /**\r\n     * This function is used to sort element's JSON config properties, so that\r\n     * some properties that absolutely need to be processed last, can be put at\r\n     * the end.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param a  Element 1\r\n     * @param b  Element 2\r\n     * @return Sorting number\r\n     */\r\n    Series.prototype.configOrder = function (a, b) {\r\n        if (a == b) {\r\n            return 0;\r\n        }\r\n        // Must come last\r\n        else if (a == \"heatRules\") {\r\n            return 1;\r\n        }\r\n        else if (b == \"heatRules\") {\r\n            return -1;\r\n        }\r\n        else {\r\n            return _super.prototype.configOrder.call(this, a, b);\r\n        }\r\n    };\r\n    /**\r\n     * Sets `visibility` property:\r\n     *\r\n     * * `true` - visible\r\n     * * `false` - hidden\r\n     *\r\n     * @param value  true - visible, false - hidden\r\n     * @return Current visibility\r\n     */\r\n    Series.prototype.setVisibility = function (value) {\r\n        _super.prototype.setVisibility.call(this, value);\r\n        this.bulletsContainer.visible = value;\r\n    };\r\n    return Series;\r\n}(Component));\r\nexport { Series };\r\n/**\r\n * Register class, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Series\"] = Series;\r\nregistry.registeredClasses[\"SeriesDataItem\"] = SeriesDataItem;\r\n//# sourceMappingURL=Series.js.map","// Also detects iOS\r\nexport function isSafari() {\r\n    return /apple/i.test(navigator.vendor);\r\n}\r\nexport function isInternetExplorer() {\r\n    return /MSIE |Trident\\//.test(navigator.userAgent);\r\n}\r\n//# sourceMappingURL=Browser.js.map","/**\r\n * This functionality is related to the HTML wrapper that houses `<svg>` tag.\r\n */\r\nimport { Disposer } from \"../utils/Disposer\";\r\nimport { Popup } from \"../elements/Popup\";\r\nimport { Modal } from \"../elements/Modal\";\r\nimport { ListTemplate, ListDisposer } from \"../utils/List\";\r\nimport * as $utils from \"../utils/Utils\";\r\nimport * as $dom from \"../utils/DOM\";\r\nimport * as $array from \"../utils/Array\";\r\nimport * as $type from \"../utils/Type\";\r\nimport ResizeSensor from \"css-element-queries/src/ResizeSensor\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * A array of all SVG Containers (one SVG container per chart instance).\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport var svgContainers = [];\r\n/**\r\n * A class used to create an HTML wrapper for the SVG contents.\r\n */\r\nvar SVGContainer = /** @class */ (function () {\r\n    /**\r\n     * Constructor\r\n     *\r\n     * * Creates an HTML wrapper for SVG\r\n     */\r\n    function SVGContainer(htmlElement, ghost) {\r\n        var _this = this;\r\n        /**\r\n         * Indicates if this object has already been deleted. Any\r\n         * destruction/disposal code should take this into account when deciding\r\n         * wheter to run potentially costly disposal operations if they already have\r\n         * been run.\r\n         */\r\n        this._disposed = false;\r\n        /**\r\n         * If this component is in a separate HTML container, `autoResize` means the\r\n         * module will constantly measure container's size and adopt contents to it.\r\n         */\r\n        this.autoResize = true;\r\n        /**\r\n         * Holds list of references to [[Sprite]] objects that should not be exported\r\n         * when exporting chart to an image.\r\n         *\r\n         * @ignore\r\n         */\r\n        this.nonExportableSprites = [];\r\n        /**\r\n         * List of objects that need to be disposed when this one is disposed.\r\n         */\r\n        this._disposers = [];\r\n        this.cssScale = 1;\r\n        // Log parent HTML element\r\n        this.htmlElement = htmlElement;\r\n        if (!ghost) {\r\n            var callback_1 = function () {\r\n                if (_this.autoResize) {\r\n                    _this.measure();\r\n                }\r\n            };\r\n            this.resizeSensor = new ResizeSensor(htmlElement, callback_1);\r\n            this._disposers.push(new Disposer(function () {\r\n                _this.resizeSensor.detach(callback_1);\r\n            }));\r\n        }\r\n        // Adds to containers array\r\n        svgContainers.push(this);\r\n        /**\r\n         * Create child div for the container - it will have svg node\r\n         * It might seem that this container is not necessay, however having it solves\r\n         * a problems with mouse position detection and some other.\r\n         */\r\n        var svgContainer = document.createElement(\"div\");\r\n        var style = svgContainer.style;\r\n        style.width = \"100%\";\r\n        style.height = \"100%\";\r\n        style.position = \"relative\";\r\n        htmlElement.appendChild(svgContainer);\r\n        this.SVGContainer = svgContainer;\r\n    }\r\n    /**\r\n     * Measures size of parent HTML element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    SVGContainer.prototype.measure = function () {\r\n        var width = $utils.width(this.htmlElement);\r\n        var height = $utils.height(this.htmlElement);\r\n        var container = this.container;\r\n        if (container) {\r\n            if (this.width != width || this.height != height) {\r\n                this.width = width;\r\n                this.height = height;\r\n                if (width > 0) {\r\n                    container.maxWidth = width;\r\n                }\r\n                if (height > 0) {\r\n                    container.maxHeight = height;\r\n                }\r\n                $dom.fixPixelPerfect(this.SVGContainer);\r\n            }\r\n            if (!container.maxWidth) {\r\n                container.maxWidth = 0;\r\n            }\r\n            if (!container.maxHeight) {\r\n                container.maxHeight = 0;\r\n            }\r\n            this.cssScale = 1;\r\n            this.checkTransform(this.htmlElement);\r\n        }\r\n    };\r\n    Object.defineProperty(SVGContainer.prototype, \"container\", {\r\n        /**\r\n         * @return Container\r\n         */\r\n        get: function () {\r\n            return this._container;\r\n        },\r\n        /**\r\n         * A [[Container]] element which is placed into container.\r\n         *\r\n         * @param container  Container\r\n         */\r\n        set: function (container) {\r\n            this._container = container;\r\n            this.measure();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns if this object has been already been disposed.\r\n     *\r\n     * @return Is disposed?\r\n     */\r\n    SVGContainer.prototype.isDisposed = function () {\r\n        return this._disposed;\r\n    };\r\n    /**\r\n     * Removes this container from SVG container list in system, which\r\n     * effectively disables size change monitoring for it.\r\n     */\r\n    SVGContainer.prototype.dispose = function () {\r\n        if (!this._disposed) {\r\n            $array.remove(svgContainers, this);\r\n        }\r\n        $array.each(this._disposers, function (item) {\r\n            item.dispose();\r\n        });\r\n    };\r\n    Object.defineProperty(SVGContainer.prototype, \"hideOverflow\", {\r\n        /**\r\n         * Indicates if chart container should have its style set\r\n         * to `overflow: hidden`.\r\n         *\r\n         * Normally, we don't want that, so that certain elements, such as tooltips,\r\n         * would be able to go outside chart area.\r\n         *\r\n         * There is one issue though. Some browsers ignore SVG masks and would\r\n         * display scrollbars if chart elements, that go outside chart area extend\r\n         * outside window.\r\n         *\r\n         * This is especially true for [[MapChart]], which can have its elements\r\n         * extend very widely when zoomed in. Even if those parts are not visible\r\n         * because of SVG masks, some browsers might still display window scrollbars.\r\n         *\r\n         * This is why we set this setting to `true` in [[MapChart]].\r\n         *\r\n         * Other charts use default of `false`.\r\n         */\r\n        set: function (value) {\r\n            if (value) {\r\n                this.SVGContainer.style.overflow = \"hidden\";\r\n            }\r\n            else {\r\n                this.SVGContainer.style.overflow = \"\";\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SVGContainer.prototype, \"modal\", {\r\n        /**\r\n         * ==========================================================================\r\n         * MODAL/POPUP RELATED STUFF\r\n         * ==========================================================================\r\n         * @hidden\r\n         */\r\n        /**\r\n         * Returns a [[Modal]] instance, associated with this chart.\r\n         * (elements top parent)\r\n         *\r\n         * Accessing modal does not make it appear. To make a modal appear, use\r\n         * `showModal()` method.\r\n         *\r\n         * @see {@link Modal} for more information about using Modal windows\r\n         * @return Modal instance\r\n         */\r\n        get: function () {\r\n            if (!$type.hasValue(this._modal)) {\r\n                // Create new modal\r\n                this._modal = new Modal();\r\n                this._modal.container = this.SVGContainer;\r\n                // Add to disposers\r\n                this._disposers.push(this._modal);\r\n            }\r\n            return this._modal;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Opens a modal window with specific content (`text` parameter) and,\r\n     * optionally, `title`.\r\n     *\r\n     * The `text` parameter can contain HTML content.\r\n     *\r\n     * @see {@link Modal} for more information about using Modal windows\r\n     * @param text   Modal contents\r\n     * @param title  Title for the modal window\r\n     */\r\n    SVGContainer.prototype.openModal = function (text, title) {\r\n        // Hide previous modal\r\n        this.closeModal();\r\n        // Create modal\r\n        var modal = this.modal;\r\n        modal.content = text;\r\n        modal.readerTitle = title;\r\n        modal.open();\r\n        return modal;\r\n    };\r\n    /**\r\n     * Hides modal window if there is one currently open.\r\n     */\r\n    SVGContainer.prototype.closeModal = function () {\r\n        if (this._modal) {\r\n            this.modal.close();\r\n        }\r\n    };\r\n    Object.defineProperty(SVGContainer.prototype, \"popups\", {\r\n        /**\r\n         * A list of popups for this chart.\r\n         *\r\n         * @return Popups\r\n         */\r\n        get: function () {\r\n            if (!$type.hasValue(this._popups)) {\r\n                // Create popup template\r\n                var popupTemplate = new Popup();\r\n                popupTemplate.container = this.SVGContainer;\r\n                // Create the list\r\n                this._popups = new ListTemplate(popupTemplate);\r\n                // Add to disposers\r\n                this._disposers.push(new ListDisposer(this._popups));\r\n                this._disposers.push(this._popups.template);\r\n            }\r\n            return this._popups;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates, opens, and returns a new [[Popup]] window.\r\n     *\r\n     * `text` can be any valid HTML.\r\n     *\r\n     * `title` is currently not supported.\r\n     *\r\n     * @param text   Popup contents\r\n     * @param title  Popup title\r\n     * @return Popup instance\r\n     */\r\n    SVGContainer.prototype.openPopup = function (text, title) {\r\n        var popup = this.popups.create();\r\n        popup.content = text;\r\n        if ($type.hasValue(title)) {\r\n            popup.title = title;\r\n        }\r\n        popup.open();\r\n        return popup;\r\n    };\r\n    /**\r\n     * Closes all currently open popup windows\r\n     */\r\n    SVGContainer.prototype.closeAllPopups = function () {\r\n        this.popups.each(function (popup) {\r\n            popup.close();\r\n        });\r\n    };\r\n    SVGContainer.prototype.checkTransform = function (div) {\r\n        if (window.getComputedStyle) {\r\n            if (div && div.style) {\r\n                var style = window.getComputedStyle(div, null);\r\n                if (style) {\r\n                    var matrix = style.getPropertyValue(\"-webkit-transform\") ||\r\n                        style.getPropertyValue(\"-moz-transform\") ||\r\n                        style.getPropertyValue(\"-ms-transform\") ||\r\n                        style.getPropertyValue(\"-o-transform\") ||\r\n                        style.getPropertyValue(\"transform\");\r\n                    if (matrix && matrix !== \"none\") {\r\n                        var values = matrix.split('(')[1].split(')')[0].split(',');\r\n                        var a = Number(values[0]);\r\n                        var b = Number(values[1]);\r\n                        var scale = Math.sqrt(a * a + b * b);\r\n                        if (!isNaN(scale)) {\r\n                            this.cssScale *= scale;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (div.parentNode && div.parentNode instanceof HTMLElement) {\r\n                this.checkTransform(div.parentNode);\r\n            }\r\n        }\r\n    };\r\n    return SVGContainer;\r\n}());\r\nexport { SVGContainer };\r\n//# sourceMappingURL=SVGContainer.js.map","/**\r\n * A collection of network-related functions\r\n */\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport * as $type from \"./Type\";\r\n/**\r\n * Loads an external file via its URL.\r\n *\r\n * Please note that this is an asynchronous function.\r\n *\r\n * It will not return the result, but rather a `Promise`.\r\n *\r\n * You can use the `await` notion, or `then()`.\r\n *\r\n * ```TypeScript\r\n * // Using await\r\n * let response = await Net.load( \"http://www.my.com/data.json\" );\r\n * console.log( response.response );\r\n *\r\n * // Using then()\r\n * Net.load( \"http://www.my.com/data.json\" ).then( ( response ) => {\r\n *   console.log( response.response );\r\n * } );\r\n * ```\r\n * ```JavaScript\r\n * // Using then()\r\n * Net.load( \"http://www.my.com/data.json\" ).then( function( response ) {\r\n *   console.log( response.response );\r\n * } );\r\n * ```\r\n *\r\n * @async\r\n * @param url      URL for the file to load\r\n * @param target   A target element that is requesting the net load\r\n * @param options  Request options\r\n * @return Result (Promise)\r\n */\r\nexport function load(url, target, options) {\r\n    return new Promise(function (success, error) {\r\n        // Is return type Blob?\r\n        var isBlob = $type.hasValue(options) && options.responseType == \"blob\";\r\n        // Create request and set up handlers\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.onload = function () {\r\n            if (xhr.status === 200) {\r\n                var response = void 0;\r\n                var blob_1;\r\n                if (isBlob) {\r\n                    blob_1 = xhr.response;\r\n                    readBlob(blob_1).then(function (response) {\r\n                        var output = {\r\n                            xhr: xhr,\r\n                            error: false,\r\n                            response: response,\r\n                            blob: blob_1,\r\n                            type: xhr.getResponseHeader(\"Content-Type\"),\r\n                            target: target\r\n                        };\r\n                        success(output);\r\n                    });\r\n                    return;\r\n                }\r\n                else {\r\n                    response = xhr.responseText || xhr.response;\r\n                }\r\n                var output = {\r\n                    xhr: xhr,\r\n                    error: false,\r\n                    response: response,\r\n                    blob: blob_1,\r\n                    type: xhr.getResponseHeader(\"Content-Type\"),\r\n                    target: target\r\n                };\r\n                success(output);\r\n            }\r\n            else {\r\n                error({\r\n                    xhr: xhr,\r\n                    error: true,\r\n                    type: xhr.getResponseHeader(\"Content-Type\"),\r\n                    target: target\r\n                });\r\n            }\r\n        };\r\n        xhr.onerror = function () {\r\n            error({\r\n                xhr: xhr,\r\n                error: true,\r\n                type: xhr.getResponseHeader(\"Content-Type\"),\r\n                target: target\r\n            });\r\n        };\r\n        // Open request\r\n        xhr.open(\"GET\", url, true);\r\n        if (options && options.withCredentials) {\r\n            xhr.withCredentials = true;\r\n        }\r\n        // Process options\r\n        if ($type.hasValue(options)) {\r\n            if ($type.hasValue(options.requestHeaders)) {\r\n                for (var i = 0; i < options.requestHeaders.length; i++) {\r\n                    var header = options.requestHeaders[i];\r\n                    xhr.setRequestHeader(header.key, header.value);\r\n                }\r\n            }\r\n            if ($type.hasValue(options.responseType)) {\r\n                xhr.responseType = options.responseType;\r\n            }\r\n        }\r\n        // Send request\r\n        xhr.send();\r\n    });\r\n}\r\n/**\r\n * Returns textual representation of a Blob object.\r\n *\r\n * @param   blob  Target blob\r\n * @return        Text promise\r\n */\r\nexport function readBlob(blob) {\r\n    return new Promise(function (success, error) {\r\n        var reader = new FileReader();\r\n        reader.onload = function (event) {\r\n            success(reader.result);\r\n        };\r\n        reader.onerror = function (e) {\r\n            error(e);\r\n        };\r\n        reader.readAsText(blob);\r\n    });\r\n}\r\n//# sourceMappingURL=Net.js.map","/**\r\n * Data Loader is responsible for loading and parsing external data\r\n */\r\nimport { CSVParser } from \"./CSVParser\";\r\nimport { JSONParser } from \"./JSONParser\";\r\nimport { Adapter } from \"../utils/Adapter\";\r\nimport * as $net from \"../utils/Net\";\r\nimport * as $array from \"../utils/Array\";\r\n;\r\n/**\r\n * Data Loader is responsible for loading and parsing external data.\r\n *\r\n * There is just one instance of DataLoader per system. Unless you have a\r\n * speicific reason, do not instantiate additional instances.\r\n *\r\n * The global instance of Data Loader is accessible via:\r\n *\r\n * ```TypeScript\r\n * am4core.dataLoader;\r\n * ```\r\n * ```JavaScript\r\n * am4core.dataLoader;\r\n * ```\r\n *\r\n * A loading of specific data source is done via [[DataSource]].\r\n *\r\n     Please refer to [[DataSource]] for information how to use it.\r\n *\r\n * @see {@link IDataLoaderAdapters} for a list of available Adapters\r\n */\r\nvar DataLoader = /** @class */ (function () {\r\n    function DataLoader() {\r\n        /**\r\n         * Adapter.\r\n         */\r\n        this.adapter = new Adapter(this);\r\n    }\r\n    /**\r\n     * Loads a supplied [[DataSource]] or an array of data sources, then calls\r\n     * their respective `parse` methods.\r\n     *\r\n     * @param source  A single data source or an array of multiple of data sources\r\n     */\r\n    DataLoader.prototype.load = function (source) {\r\n        var sources = Array.isArray(source) ? source : [source];\r\n        // Add each Source to the list to be loaded simultaneously\r\n        var promises = $array.map(sources, function (x) {\r\n            // Dispatch events\r\n            x.dispatchImmediately(\"started\");\r\n            x.dispatchImmediately(\"loadstarted\");\r\n            return $net.load(x.url, x, x.requestOptions);\r\n        });\r\n        // Run all promises in parallel\r\n        Promise.all(promises).then(function (res) {\r\n            // Process each loaded source\r\n            $array.each(res, function (result) {\r\n                // Get Source\r\n                var source = result.target;\r\n                // Dispatch events\r\n                source.dispatchImmediately(\"loadended\");\r\n                if (result.error) {\r\n                    if (source.events.isEnabled(\"error\")) {\r\n                        source.events.dispatchImmediately(\"error\", {\r\n                            type: \"error\",\r\n                            code: result.xhr.status,\r\n                            message: source.language.translate(\"Unable to load file: %1\", null, source.url),\r\n                            target: source\r\n                        });\r\n                    }\r\n                }\r\n                else {\r\n                    // Initiate parsing of the loaded data\r\n                    source.processData(result.response, result.type);\r\n                }\r\n                source.dispatchImmediately(\"ended\");\r\n            });\r\n        }).catch(function (res) {\r\n            if (res.target) {\r\n                res.target.dispatchImmediately(\"loadended\");\r\n                if (res.target.events.isEnabled(\"error\")) {\r\n                    res.target.events.dispatchImmediately(\"error\", {\r\n                        type: \"error\",\r\n                        code: res.xhr.status,\r\n                        message: res.target.language.translate(\"Unable to load file: %1\", null, res.target.url),\r\n                        target: res.target\r\n                    });\r\n                }\r\n                res.target.dispatchImmediately(\"ended\");\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Instantiates a [[DataParser]] object based on the data type.\r\n     * Built-in parser types are as follows:\r\n     *\r\n     * * \"csv\" or \"text/csv\"\r\n     * * \"json\" or \"application/json\"\r\n     *\r\n     * @param contentType  A format type\r\n     * @return A parser object\r\n     */\r\n    DataLoader.prototype.getParserByType = function (contentType) {\r\n        // Let some plugin decide\r\n        var parser = this.adapter.apply(\"getParserByType\", {\r\n            parser: null,\r\n            type: contentType\r\n        }).parser;\r\n        if (parser) {\r\n            return parser;\r\n        }\r\n        if (contentType == \"csv\" || contentType == \"text/csv\" || contentType == \"application/vnd.ms-excel\") {\r\n            return new CSVParser();\r\n        }\r\n        if (contentType == \"json\" || contentType == \"application/json\") {\r\n            return new JSONParser();\r\n        }\r\n        return;\r\n    };\r\n    /**\r\n     * Tries to determine a parser out of content type and/or actual data.\r\n     *\r\n     * @param data         Data\r\n     * @param contentType  Content-type\r\n     * @return Parser instance\r\n     */\r\n    DataLoader.prototype.getParserByData = function (data, contentType) {\r\n        // Let some plugin decide\r\n        var parser = this.adapter.apply(\"getParserByData\", {\r\n            parser: null,\r\n            data: data,\r\n            type: contentType\r\n        }).parser;\r\n        // Check if we have parser from outside code\r\n        if (!parser) {\r\n            // No, let's try to figure it out\r\n            parser = this.getParserByType(contentType);\r\n            if (parser) {\r\n                // We're able to figure out parser by content-type\r\n                return parser;\r\n            }\r\n            else if (JSONParser.isJSON(data)) {\r\n                return this.getParserByType(\"json\");\r\n            }\r\n            else if (CSVParser.isCSV(data)) {\r\n                return this.getParserByType(\"csv\");\r\n            }\r\n        }\r\n        return parser;\r\n    };\r\n    return DataLoader;\r\n}());\r\nexport { DataLoader };\r\n/**\r\n * Create instance of Data Loader\r\n */\r\nexport var dataLoader = new DataLoader();\r\n//# sourceMappingURL=DataLoader.js.map","/**\r\n * Provides functionality used to build scrollbars.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container } from \"../Container\";\r\nimport { ResizeButton } from \"../elements/ResizeButton\";\r\nimport { Button } from \"../elements/Button\";\r\nimport { getInteraction } from \"../interaction/Interaction\";\r\nimport { MouseCursorStyle } from \"../interaction/Mouse\";\r\nimport { RoundedRectangle } from \"../elements/RoundedRectangle\";\r\nimport { registry } from \"../Registry\";\r\nimport { keyboard } from \"../utils/Keyboard\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { percent, Percent } from \"../utils/Percent\";\r\nimport * as $math from \"../utils/Math\";\r\nimport * as $ease from \"../utils/Ease\";\r\nimport * as $type from \"../utils/Type\";\r\nimport * as $utils from \"../utils/Utils\";\r\n;\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Scrollbar is a generic control allowing to select a range of values or pan\r\n * the selection.\r\n *\r\n * @see {@link IScrollbarEvents} for a list of available events\r\n * @see {@link IScrollbarAdapters} for a list of available Adapters\r\n */\r\nvar Scrollbar = /** @class */ (function (_super) {\r\n    __extends(Scrollbar, _super);\r\n    /**\r\n     * Construtor\r\n     */\r\n    function Scrollbar() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * Previously selected lower (start) value.\r\n         */\r\n        _this._previousStart = 0;\r\n        /**\r\n         * Previously selected upper (end) value.\r\n         */\r\n        _this._previousEnd = 1;\r\n        /**\r\n         * A value of previously selected lower value, used for doubleclick function.\r\n         */\r\n        _this._prevStart = 0;\r\n        /**\r\n         * A value of previously selected upper value, used for doubleclick function.\r\n         */\r\n        _this._prevEnd = 1;\r\n        /**\r\n         * Indicates if the Scrollbar is currently \"busy\" (animating and or\r\n         * performing zoom by user interaction).\r\n         */\r\n        _this._isBusy = false;\r\n        /**\r\n         * [_skipRangeEvents description]\r\n         *\r\n         * @todo Description\r\n         */\r\n        _this._skipRangeEvents = false;\r\n        /**\r\n         * Update the selection when dragging the grips.\r\n         *\r\n         * If set to `false` selection will be updated only when the grip is\r\n         * released.\r\n         *\r\n         * @default true\r\n         */\r\n        _this.updateWhileMoving = true;\r\n        _this.className = \"Scrollbar\";\r\n        _this.minHeight = 12;\r\n        _this.minWidth = 12;\r\n        _this.animationDuration = 0;\r\n        _this.animationEasing = $ease.cubicOut;\r\n        _this.margin(10, 10, 10, 10);\r\n        var interfaceColors = new InterfaceColorSet();\r\n        // background is also container as it might contain graphs, grid, etc\r\n        var background = _this.background;\r\n        background.cornerRadius(10, 10, 10, 10);\r\n        background.fill = interfaceColors.getFor(\"fill\");\r\n        background.fillOpacity = 0.5;\r\n        // Make system tooltips appear by default\r\n        _this.showSystemTooltip = true;\r\n        _this.startGrip = new ResizeButton();\r\n        _this.endGrip = new ResizeButton();\r\n        // Default orientation...\r\n        // ... is set in `applyInternalDefaults()` because it accesses `language`\r\n        // and should only be started to access when parent is set\r\n        // Set events\r\n        _this.events.on(\"transformed\", _this.updateThumb, _this, false);\r\n        // Initial positions\r\n        _this.start = 0;\r\n        _this.end = 1;\r\n        // Set roles\r\n        _this.role = \"scrollbar\";\r\n        _this.thumb.role = \"slider\";\r\n        _this.thumb.readerLive = \"polite\";\r\n        _this.startGrip.role = \"slider\";\r\n        _this.endGrip.role = \"slider\";\r\n        // otherwise range changed wont' be registered\r\n        _this.events.once(\"inited\", function () {\r\n            _this._previousStart = undefined;\r\n            _this.dispatchRangeChange();\r\n        }, undefined, false);\r\n        _this.hideGrips = false;\r\n        _this.orientation = \"horizontal\";\r\n        // Min/max values for accessibility\r\n        _this.setSVGAttribute({ \"aria-valuemin\": \"0\" });\r\n        _this.setSVGAttribute({ \"aria-valuemax\": \"100\" });\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    Scrollbar.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        // Set screen reader tetxt accordingly\r\n        if (this.orientation === \"horizontal\") {\r\n            if (!$type.hasValue(this.readerTitle)) {\r\n                this.readerTitle = this.language.translate(\"Use TAB to select grip buttons or left and right arrows to change selection\");\r\n            }\r\n            if (!$type.hasValue(this.thumb.readerDescription)) {\r\n                this.thumb.readerDescription = this.language.translate(\"Use left and right arrows to move selection\");\r\n            }\r\n            if (!$type.hasValue(this.startGrip.readerDescription)) {\r\n                this.startGrip.readerDescription = this.language.translate(\"Use left and right arrows to move left selection\");\r\n            }\r\n            if (!$type.hasValue(this.endGrip.readerDescription)) {\r\n                this.endGrip.readerDescription = this.language.translate(\"Use left and right arrows to move right selection\");\r\n            }\r\n            this.readerOrientation = \"horizontal\";\r\n        }\r\n        else {\r\n            if (!$type.hasValue(this.readerTitle)) {\r\n                this.readerTitle = this.language.translate(\"Use TAB select grip buttons or up and down arrows to change selection\");\r\n            }\r\n            if (!$type.hasValue(this.thumb.readerDescription)) {\r\n                this.thumb.readerDescription = this.language.translate(\"Use up and down arrows to move selection\");\r\n            }\r\n            if (!$type.hasValue(this.startGrip.readerDescription)) {\r\n                this.startGrip.readerDescription = this.language.translate(\"Use up and down arrows to move upper selection\");\r\n            }\r\n            if (!$type.hasValue(this.endGrip.readerDescription)) {\r\n                this.endGrip.readerDescription = this.language.translate(\"Use up and down arrows to move lower selection\");\r\n            }\r\n            this.readerOrientation = \"vertical\";\r\n        }\r\n        this.readerControls = this.baseSprite.uidAttr();\r\n    };\r\n    /**\r\n     * Validates the layout of the scrollbar's elements.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Scrollbar.prototype.validateLayout = function () {\r\n        this.updateSize();\r\n        _super.prototype.validateLayout.call(this);\r\n        // when size changes, need to update extremes\r\n        this.updateExtremes();\r\n    };\r\n    /**\r\n     * Update background for the scrollbar.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Scrollbar.prototype.processBackground = function () {\r\n        _super.prototype.processBackground.call(this);\r\n        var background = this.background;\r\n        background.clickable = true;\r\n        background.events.on(\"hit\", this.handleBgHit, this, undefined);\r\n    };\r\n    /**\r\n     * Zooms to the particular place when clicked/tapped on the scrollbar\r\n     * background.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param event  Event\r\n     */\r\n    Scrollbar.prototype.handleBgHit = function (event) {\r\n        this.makeBusy();\r\n        var point = event.spritePoint;\r\n        point = $utils.spritePointToSprite(point, this.background, this);\r\n        var thumb = this.thumb;\r\n        if (this.orientation == \"horizontal\") {\r\n            var thumbX = point.x - thumb.pixelWidth / 2;\r\n            thumbX = $math.fitToRange(thumbX, 0, this.innerWidth - thumb.pixelWidth);\r\n            this._thumbAnimation = thumb.animate({ property: \"x\", to: thumbX }, this.animationDuration, this.animationEasing);\r\n        }\r\n        else {\r\n            var thumbY = point.y - thumb.pixelHeight / 2;\r\n            thumbY = $math.fitToRange(thumbY, 0, this.innerHeight - thumb.pixelHeight);\r\n            this._thumbAnimation = thumb.animate({ property: \"y\", to: thumbY }, this.animationDuration, this.animationEasing);\r\n        }\r\n        if (this.animationDuration > 0) {\r\n            this._thumbAnimation.events.on(\"animationended\", this.makeUnbusy, this, false);\r\n        }\r\n        else {\r\n            this._thumb.validate();\r\n            this.makeUnbusy();\r\n        }\r\n    };\r\n    /**\r\n     * Set scrollbar as busy. (currently zooming)\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Scrollbar.prototype.makeBusy = function () {\r\n        this._isBusy = true;\r\n        this._skipRangeEvents = false;\r\n        if (this._unbusyTimeout) {\r\n            this.removeDispose(this._unbusyTimeout);\r\n        }\r\n        this._unbusyTimeout = undefined;\r\n        this.stopAnimations();\r\n    };\r\n    /**\r\n     * Stops all animations, currently playing for the scrollbar.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Scrollbar.prototype.stopAnimations = function () {\r\n        if (this._thumbAnimation) {\r\n            this._thumbAnimation.stop(true);\r\n        }\r\n        if (this._zoomAnimation) {\r\n            this._zoomAnimation.stop(true);\r\n        }\r\n    };\r\n    /**\r\n     * Cancels \"busy\" status of the Scrollbar.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Scrollbar.prototype.makeUnbusy = function () {\r\n        /**\r\n         * We cannot make Scrollbar not busy right after release, because then axes\r\n         * will take over controll and Scrollbar will start to animate.\r\n         * Theorethically, it's not right to set timeout by `animationDuration`,\r\n         * however we can not know all the durations of elements we scroll, so we\r\n         * assume that animation duration will be the same as\r\n         * `interpolationDuration` or `rangeChange` duration.\r\n         */\r\n        this._unbusyTimeout = this.setTimeout(this.makeUnbusyReal.bind(this), this.animationDuration * 1.1);\r\n    };\r\n    /**\r\n     * [makeUnbusyReal description]\r\n     *\r\n     * @todo Description\r\n     * @ignore Exclude from docs\r\n     */\r\n    Scrollbar.prototype.makeUnbusyReal = function () {\r\n        this._usingGrip = undefined;\r\n        this._isBusy = false;\r\n        if (!this.updateWhileMoving) {\r\n            this.dispatchRangeChange();\r\n        }\r\n    };\r\n    /**\r\n     * Disptatches rangechanged event if it really changed\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Scrollbar.prototype.dispatchRangeChange = function () {\r\n        if (this._previousEnd != this.end || this._previousStart != this.start) {\r\n            this._previousStart = this.start;\r\n            this._previousEnd = this.end;\r\n            this.dispatch(\"rangechanged\");\r\n        }\r\n    };\r\n    /**\r\n     * Updates the \"thumb\" element. A draggable element between the grips.\r\n     */\r\n    Scrollbar.prototype.updateThumb = function () {\r\n        if (!this.parent) {\r\n            return;\r\n        }\r\n        var thumb = this.thumb;\r\n        var start = this.start;\r\n        var end = this.end;\r\n        var startGrip = this.startGrip;\r\n        var endGrip = this.endGrip;\r\n        if (this.orientation == \"horizontal\") {\r\n            var innerWidth_1 = this.innerWidth;\r\n            thumb.width = innerWidth_1 * (end - start);\r\n            thumb.maxX = innerWidth_1 - thumb.pixelWidth;\r\n            thumb.x = start * innerWidth_1;\r\n            startGrip.moveTo({ x: thumb.pixelX, y: 0 }, undefined, undefined, true); // overrides dragging\r\n            endGrip.moveTo({ x: thumb.pixelX + thumb.pixelWidth, y: 0 }, undefined, undefined, true);\r\n            startGrip.readerTitle = this.language.translate(\"From %1\", undefined, this.adapter.apply(\"positionValue\", {\r\n                value: Math.round(start * 100) + \"%\",\r\n                position: start\r\n            }).value);\r\n            startGrip.readerValueNow = \"\" + Math.round(start * 100);\r\n            startGrip.readerValueText = startGrip.readerTitle;\r\n            endGrip.readerTitle = this.language.translate(\"To %1\", undefined, this.adapter.apply(\"positionValue\", {\r\n                value: Math.round(end * 100) + \"%\",\r\n                position: end\r\n            }).value);\r\n            endGrip.readerValueNow = \"\" + Math.round(end * 100);\r\n            endGrip.readerValueText = endGrip.readerTitle;\r\n        }\r\n        else {\r\n            var innerHeight_1 = this.innerHeight;\r\n            thumb.height = innerHeight_1 * (end - start);\r\n            thumb.maxY = innerHeight_1 - thumb.pixelHeight;\r\n            thumb.y = (1 - end) * innerHeight_1;\r\n            startGrip.moveTo({ x: 0, y: thumb.pixelY + thumb.pixelHeight }, undefined, undefined, true);\r\n            endGrip.moveTo({ x: 0, y: thumb.pixelY }, undefined, undefined, true);\r\n            startGrip.readerTitle = this.language.translate(\"To %1\", undefined, this.adapter.apply(\"positionValue\", {\r\n                value: Math.round((1 - start) * 100) + \"%\",\r\n                position: (1 - start)\r\n            }).value);\r\n            startGrip.readerValueNow = \"\" + Math.round(start * 100);\r\n            startGrip.readerValueText = startGrip.readerTitle;\r\n            endGrip.readerTitle = this.language.translate(\"From %1\", undefined, this.adapter.apply(\"positionValue\", {\r\n                value: Math.round((1 - end) * 100) + \"%\",\r\n                position: (1 - end)\r\n            }).value);\r\n            endGrip.readerValueNow = \"\" + Math.round(end * 100);\r\n            endGrip.readerValueText = endGrip.readerTitle;\r\n        }\r\n        // Add accessibility\r\n        thumb.readerTitle = this.language.translate(\"From %1 to %2\", undefined, this.adapter.apply(\"positionValue\", {\r\n            value: Math.round(start * 100) + \"%\",\r\n            position: start\r\n        }).value, this.adapter.apply(\"positionValue\", {\r\n            value: Math.round(end * 100) + \"%\",\r\n            position: end\r\n        }).value);\r\n        thumb.readerValueNow = \"\" + Math.round(start * 100);\r\n        thumb.readerValueText = thumb.readerTitle;\r\n        this.readerValueNow = \"\" + Math.round(start * 100);\r\n        this.readerValueText = thumb.readerTitle;\r\n        if (!this._skipRangeEvents && this.updateWhileMoving) {\r\n            this.dispatchRangeChange();\r\n        }\r\n    };\r\n    /**\r\n     * Updates extremes of the scrollbar.\r\n     */\r\n    Scrollbar.prototype.updateExtremes = function () {\r\n        var orientation = this.orientation;\r\n        var minX = 0;\r\n        var minY = 0;\r\n        var maxX = 0;\r\n        var maxY = 0;\r\n        if (orientation == \"horizontal\") {\r\n            maxX = this.innerWidth;\r\n            minY = maxY = this.innerHeight / 2;\r\n        }\r\n        else {\r\n            maxY = this.innerHeight;\r\n            minX = maxX = this.innerWidth / 2;\r\n        }\r\n        var startGrip = this.startGrip;\r\n        startGrip.minX = minX;\r\n        startGrip.maxX = maxX;\r\n        startGrip.minY = minY;\r\n        startGrip.maxY = maxY;\r\n        var endGrip = this.endGrip;\r\n        endGrip.minX = minX;\r\n        endGrip.maxX = maxX;\r\n        endGrip.minY = minY;\r\n        endGrip.maxY = maxY;\r\n        var thumb = this.thumb;\r\n        thumb.minX = minX;\r\n        thumb.maxX = maxX;\r\n        thumb.minY = minY;\r\n        thumb.maxY = maxY;\r\n    };\r\n    /**\r\n     * Updates size of the scrollbar.\r\n     */\r\n    Scrollbar.prototype.updateSize = function () {\r\n        var orientation = this.orientation;\r\n        var startGrip = this.startGrip;\r\n        if (startGrip) {\r\n            startGrip.orientation = orientation;\r\n        }\r\n        if (this.endGrip) {\r\n            this.endGrip.orientation = orientation;\r\n        }\r\n        var thumb = this.thumb;\r\n        if (thumb) {\r\n            if (orientation == \"horizontal\") {\r\n                if (!$type.isNumber(this._pixelWidth)) {\r\n                    if (!(this.width instanceof Percent)) {\r\n                        this.width = percent(100);\r\n                    }\r\n                }\r\n                // this teorethically might be wrong, if user indeed sets height of a horizontal scrollbar in percent\r\n                // however without this height might be equal to 100% if previous orientation was set to horizontal\r\n                // so this is ok solution, in case user really wants to have scrollbar height set in percent,\r\n                // he should do this after orientation.\r\n                if ($type.hasValue(this.percentHeight)) {\r\n                    this.height = this.minHeight;\r\n                }\r\n                thumb.height = this.innerHeight;\r\n                thumb.verticalCenter = \"middle\";\r\n                thumb.horizontalCenter = \"left\";\r\n            }\r\n            else {\r\n                if (!$type.isNumber(this._pixelHeight)) {\r\n                    if (!(this.height instanceof Percent)) {\r\n                        this.height = percent(100);\r\n                    }\r\n                }\r\n                // same as above with percentHeight\r\n                if ($type.hasValue(this.percentWidth)) {\r\n                    this.width = this.minWidth;\r\n                }\r\n                thumb.width = this.innerWidth;\r\n                thumb.verticalCenter = \"top\";\r\n                thumb.horizontalCenter = \"middle\";\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(Scrollbar.prototype, \"isBusy\", {\r\n        /**\r\n         * Indicates if the Scrollbar is currently \"busy\" (animating and or\r\n         * performing zoom by user interaction).\r\n         * @return boolean\r\n         */\r\n        get: function () {\r\n            return this._isBusy;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Scrollbar.prototype, \"start\", {\r\n        /**\r\n         * @return Position (0-1)\r\n         */\r\n        get: function () {\r\n            return Math.min(this.getPosition(this._start), this.getPosition(this._end));\r\n        },\r\n        /**\r\n         * ==========================================================================\r\n         * POSITIONS\r\n         * ==========================================================================\r\n         * @hidden\r\n         */\r\n        /**\r\n         * Relative position (0-1) of the start grip.\r\n         *\r\n         * @param position  Position (0-1)\r\n         */\r\n        set: function (position) {\r\n            if (!this._isBusy) {\r\n                this.__start = position;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Scrollbar.prototype, \"__start\", {\r\n        /**\r\n         * @return [description]\r\n         */\r\n        get: function () {\r\n            return this._start;\r\n        },\r\n        /**\r\n         * [__start description]\r\n         *\r\n         * @todo Description\r\n         * @param position [description]\r\n         */\r\n        set: function (position) {\r\n            this._start = this.getPosition(position);\r\n            this.updateThumb();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Scrollbar.prototype, \"end\", {\r\n        /**\r\n         * @return Position (0-1)\r\n         */\r\n        get: function () {\r\n            return Math.max(this.getPosition(this._start), this.getPosition(this._end));\r\n        },\r\n        /**\r\n         * Relative position (0-1) of the end grip.\r\n         *\r\n         * @param position  Position (0-1)\r\n         */\r\n        set: function (position) {\r\n            if (!this._isBusy) {\r\n                this.__end = position;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Scrollbar.prototype, \"__end\", {\r\n        /**\r\n         * @return [description]\r\n         */\r\n        get: function () {\r\n            return this._end;\r\n        },\r\n        /**\r\n         * [__end description]\r\n         *\r\n         * @todo Description\r\n         * @param position [description]\r\n         */\r\n        set: function (position) {\r\n            this._end = this.getPosition(position);\r\n            this.updateThumb();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Scrollbar.prototype, \"range\", {\r\n        /**\r\n         * Current selection range.\r\n         *\r\n         * @readonly\r\n         * @return Range\r\n         */\r\n        get: function () {\r\n            return { start: this.start, end: this.end, priority: this._usingGrip };\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Disables range change events.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Scrollbar.prototype.skipRangeEvents = function () {\r\n        if (!this._isBusy) {\r\n            this._skipRangeEvents = true;\r\n        }\r\n    };\r\n    /**\r\n     * [fixRange description]\r\n     *\r\n     * @todo Description\r\n     * @ignore Exclude from docs\r\n     * @param range  Range\r\n     */\r\n    Scrollbar.prototype.fixRange = function (range) {\r\n        if (range.start != $math.round(this._start, 2) || range.end != $math.round(this._end, 2)) {\r\n            this._start = range.start;\r\n            this._end = range.end;\r\n            this._skipRangeEvents = true;\r\n            this.updateThumb();\r\n            this._skipRangeEvents = false;\r\n            this.thumb.validate();\r\n            this.thumb.background.validate();\r\n        }\r\n    };\r\n    /**\r\n     * [getPosition description]\r\n     *\r\n     * @todo Description\r\n     * @param position  [description]\r\n     * @return [description]\r\n     */\r\n    Scrollbar.prototype.getPosition = function (position) {\r\n        return $math.fitToRange($math.round(position, 4), 0, 1);\r\n    };\r\n    Object.defineProperty(Scrollbar.prototype, \"orientation\", {\r\n        /**\r\n         * @return Orientation\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"orientation\");\r\n        },\r\n        /**\r\n         * ==========================================================================\r\n         * MISC\r\n         * ==========================================================================\r\n         * @hidden\r\n         */\r\n        /**\r\n         * Orientation of the scrollbar.\r\n         *\r\n         * Available options: \"horizontal\" (default) and \"vertical\".\r\n         *\r\n         * @default \"horizontal\"\r\n         * @param value  Orientation\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"orientation\", value)) {\r\n                // Set mouse cursors and screen reader tetxt accordingly\r\n                if (value === \"horizontal\") {\r\n                    // Mouse styles\r\n                    this.startGrip.cursorOverStyle = MouseCursorStyle.horizontalResize;\r\n                    this.endGrip.cursorOverStyle = MouseCursorStyle.horizontalResize;\r\n                    // Reader text\r\n                    /*this.readerTitle = this.language.translate(\"Use TAB to select grip buttons or left and right arrows to change selection\");\r\n                    this.thumb.readerDescription = this.language.translate(\"Use left and right arrows to move selection\");\r\n                    this.startGrip.readerDescription = this.language.translate(\"Use left and right arrows to move left selection\");\r\n                    this.endGrip.readerDescription = this.language.translate(\"Use left and right arrows to move right selection\");*/\r\n                }\r\n                else {\r\n                    // Mouse styles\r\n                    this.startGrip.cursorOverStyle = MouseCursorStyle.verticalResize;\r\n                    this.endGrip.cursorOverStyle = MouseCursorStyle.verticalResize;\r\n                    // Reader text\r\n                    /*this.readerTitle = this.language.translate(\"Use TAB select grip buttons or up and down arrows to change selection\");\r\n                    this.thumb.readerDescription = this.language.translate(\"Use up and down arrows to move selection\");\r\n                    this.startGrip.readerDescription = this.language.translate(\"Use up and down arrows to move upper selection\");\r\n                    this.endGrip.readerDescription = this.language.translate(\"Use up and down arrows to move lower selection\");*/\r\n                }\r\n                this.updateByOrientation();\r\n                this.invalidate();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    Scrollbar.prototype.updateByOrientation = function () {\r\n    };\r\n    Object.defineProperty(Scrollbar.prototype, \"startGrip\", {\r\n        /**\r\n         * @return Grip element\r\n         */\r\n        get: function () {\r\n            return this._startGrip;\r\n        },\r\n        /**\r\n         * ==========================================================================\r\n         * GRIPS\r\n         * ==========================================================================\r\n         * @hidden\r\n         */\r\n        /**\r\n         * Start grip element. (button)\r\n         *\r\n         * @param button  Grip element\r\n         */\r\n        set: function (button) {\r\n            if (this._startGrip) {\r\n                this.removeDispose(this._startGrip);\r\n            }\r\n            this._startGrip = button;\r\n            this.processGrip(button);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Scrollbar.prototype, \"endGrip\", {\r\n        /**\r\n         * @return Grip element\r\n         */\r\n        get: function () {\r\n            return this._endGrip;\r\n        },\r\n        /**\r\n         * End grip element. (button)\r\n         *\r\n         * @param button  Grip element\r\n         */\r\n        set: function (button) {\r\n            if (this._endGrip) {\r\n                this.removeDispose(this._endGrip);\r\n            }\r\n            this._endGrip = button;\r\n            this.processGrip(button);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Decorates the grip button with properties and events.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param button Grip button\r\n     */\r\n    Scrollbar.prototype.processGrip = function (button) {\r\n        button.parent = this;\r\n        button.isMeasured = false;\r\n        button.focusable = true;\r\n        button.shouldClone = false;\r\n        // Set button defaults\r\n        //button.showSystemTooltip = true; // setting this here is not right because we break inheritance\r\n        button.zIndex = 100;\r\n        button.events.on(\"drag\", this.handleGripDrag, this, false);\r\n        button.events.on(\"dragstop\", this.makeUnbusy, this, false);\r\n        button.events.on(\"down\", this.makeBusy, this, false);\r\n        this._disposers.push(button);\r\n    };\r\n    /**\r\n     * Updates positions of related elements after grip element is dragged.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param event  Event\r\n     */\r\n    Scrollbar.prototype.handleGripDrag = function (event) {\r\n        this.makeBusy();\r\n        if (event.target === this._startGrip) {\r\n            this._usingGrip = \"start\";\r\n        }\r\n        else {\r\n            this._usingGrip = \"end\";\r\n        }\r\n        if (this.orientation == \"horizontal\") {\r\n            this._start = this.startGrip.pixelX / this.innerWidth;\r\n            this._end = this.endGrip.pixelX / this.innerWidth;\r\n        }\r\n        else {\r\n            this._start = 1 - this.startGrip.pixelY / this.innerHeight;\r\n            this._end = 1 - this.endGrip.pixelY / this.innerHeight;\r\n        }\r\n        this.updateThumb();\r\n    };\r\n    Object.defineProperty(Scrollbar.prototype, \"thumb\", {\r\n        /**\r\n         * @return Thumb element\r\n         */\r\n        get: function () {\r\n            if (!this._thumb) {\r\n                // Create scrollbar controls (setters will handle adding disposers)\r\n                var thumb = new Button();\r\n                thumb.background.cornerRadius(10, 10, 10, 10);\r\n                thumb.padding(0, 0, 0, 0);\r\n                this.thumb = thumb;\r\n            }\r\n            return this._thumb;\r\n        },\r\n        /**\r\n         * A \"thumb\" element.\r\n         *\r\n         * It's a draggable square space between the grips, that can be used to\r\n         * pan the selection.\r\n         *\r\n         * @param thumb  Thumb element\r\n         */\r\n        set: function (thumb) {\r\n            var _this = this;\r\n            if (thumb) {\r\n                if (this._thumb) {\r\n                    this.removeDispose(this._thumb);\r\n                }\r\n                this._thumb = thumb;\r\n                thumb.parent = this;\r\n                thumb.isMeasured = false;\r\n                thumb.inert = true;\r\n                thumb.draggable = true;\r\n                thumb.clickable = true;\r\n                thumb.hoverable = true;\r\n                thumb.focusable = true;\r\n                thumb.shouldClone = false;\r\n                thumb.zIndex = 0;\r\n                // TODO remove closures ?\r\n                // Add events\r\n                // Add cursor styles to thumb\r\n                thumb.cursorOverStyle = MouseCursorStyle.grab;\r\n                thumb.cursorDownStyle = MouseCursorStyle.grabbing;\r\n                thumb.events.on(\"dragstart\", this.makeBusy, this, false);\r\n                thumb.events.on(\"dragstop\", this.makeUnbusy, this, false);\r\n                thumb.events.on(\"positionchanged\", this.handleThumbPosition, this, false);\r\n                thumb.events.on(\"sizechanged\", this.handleThumbPosition, this, false);\r\n                thumb.events.on(\"doublehit\", this.handleDoubleClick, this, false);\r\n                // Add event for space and ENTER to toggle full zoom out and back\r\n                // (same as doubleclick)\r\n                this._disposers.push(getInteraction().body.events.on(\"keyup\", function (ev) {\r\n                    if (keyboard.isKey(ev.event, [\"space\", \"enter\"]) && _this.thumb.isFocused) {\r\n                        ev.event.preventDefault();\r\n                        _this.handleDoubleClick();\r\n                    }\r\n                }));\r\n                this._disposers.push(this._thumb);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Zooms-in and out the selection on double-click of the thumb.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Scrollbar.prototype.handleDoubleClick = function () {\r\n        this.makeBusy();\r\n        var newStart = 0;\r\n        var newEnd = 1;\r\n        if (this.start != 0 || this.end != 1) {\r\n            this._prevStart = this.start;\r\n            this._prevEnd = this.end;\r\n        }\r\n        else {\r\n            newStart = this._prevStart;\r\n            newEnd = this._prevEnd;\r\n        }\r\n        var zoomAnimation = this.animate([{ property: \"__start\", to: newStart }, { property: \"__end\", to: newEnd }], this.animationDuration, this.animationEasing);\r\n        if (zoomAnimation && !zoomAnimation.isFinished()) {\r\n            zoomAnimation.events.on(\"animationended\", this.makeUnbusy, this, false);\r\n            this._zoomAnimation = zoomAnimation;\r\n        }\r\n        else {\r\n            this.makeUnbusy();\r\n        }\r\n    };\r\n    /**\r\n     * Updates positions of other elements when thumb is moved.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Scrollbar.prototype.handleThumbPosition = function () {\r\n        var thumb = this.thumb;\r\n        if (this.orientation == \"horizontal\") {\r\n            var innerWidth_2 = this.innerWidth;\r\n            var w = thumb.innerWidth;\r\n            var x = thumb.pixelX;\r\n            this._start = x / innerWidth_2;\r\n            this._end = (x + w) / innerWidth_2;\r\n            this.updateThumb();\r\n        }\r\n        else {\r\n            var innerHeight_2 = this.innerHeight;\r\n            var h = thumb.innerHeight;\r\n            var y = thumb.pixelY;\r\n            this._start = 1 - (y + h) / innerHeight_2;\r\n            this._end = 1 - y / innerHeight_2;\r\n            this.updateThumb();\r\n        }\r\n    };\r\n    /**\r\n     * Creates a background element for the scrollbar.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Background\r\n     */\r\n    Scrollbar.prototype.createBackground = function () {\r\n        return new RoundedRectangle();\r\n    };\r\n    Object.defineProperty(Scrollbar.prototype, \"hideGrips\", {\r\n        /**\r\n         * @return Show only on hover?\r\n         */\r\n        get: function () {\r\n            return this._hideGrips;\r\n        },\r\n        /**\r\n         * Use this property to set whether grips should be always visible (`false`),\r\n         * or they should just appear on scrollbar hover (`true`).\r\n         *\r\n         * @param value  Show only on hover?\r\n         */\r\n        set: function (value) {\r\n            var _this = this;\r\n            this._hideGrips = value;\r\n            if (this._overDisposer) {\r\n                this.removeDispose(this._overDisposer);\r\n            }\r\n            if (this._outDisposer) {\r\n                this.removeDispose(this._outDisposer);\r\n            }\r\n            if (value) {\r\n                this._overDisposer = this.events.on(\"over\", function () {\r\n                    _this.startGrip.show();\r\n                    _this.endGrip.show();\r\n                }, undefined, false);\r\n                this._outDisposer = this.events.on(\"out\", function () {\r\n                    _this.startGrip.hide();\r\n                    _this.endGrip.hide();\r\n                }, undefined, false);\r\n                this.startGrip.hide();\r\n                this.endGrip.hide();\r\n            }\r\n            else {\r\n                this.startGrip.show();\r\n                this.endGrip.show();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Scrollbar.prototype, \"animationDuration\", {\r\n        /**\r\n         * @return Orientation\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"animationDuration\");\r\n        },\r\n        /**\r\n         * Duration in milliseconds of scrollbar animation (happens when user clicks on a background of a scrollbar)\r\n         * @default 0\r\n         * @param value number\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"animationDuration\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Scrollbar.prototype, \"animationEasing\", {\r\n        /**\r\n         * @return {Function}\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"animationEasing\");\r\n        },\r\n        /**\r\n         * Animation easing function.\r\n         * @todo: review description and default\r\n         * @default $ease.cubicOut\r\n         * @param value (value: number) => number\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"animationEasing\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds easing functions to \"function\" fields.\r\n     *\r\n     * @param field  Field name\r\n     * @return Assign as function?\r\n     */\r\n    Scrollbar.prototype.asFunction = function (field) {\r\n        return field == \"animationEasing\" || _super.prototype.asIs.call(this, field);\r\n    };\r\n    return Scrollbar;\r\n}(Container));\r\nexport { Scrollbar };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Scrollbar\"] = Scrollbar;\r\n//# sourceMappingURL=Scrollbar.js.map","/**\r\n * Provides functionality used to creating and showing tooltips (balloons).\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container } from \"../Container\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { PointedRectangle } from \"./PointedRectangle\";\r\nimport { Label } from \"../elements/Label\";\r\nimport { Animation } from \"../utils/Animation\";\r\nimport { color } from \"../utils/Color\";\r\nimport { DropShadowFilter } from \"../rendering/filters/DropShadowFilter\";\r\nimport * as $math from \"../utils/Math\";\r\nimport * as $ease from \"../utils/Ease\";\r\nimport * as $utils from \"../utils/Utils\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Tooltip displays text and/or multimedia information in a balloon over chart\r\n * area.\r\n * @see {@link ITooltipEvents} for a list of available events\r\n * @see {@link ITooltipAdapters} for a list of available Adapters\r\n */\r\nvar Tooltip = /** @class */ (function (_super) {\r\n    __extends(Tooltip, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Tooltip() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        /**\r\n         * Holds numeric boundary values. Calculated from the `boundingContainer`.\r\n         * @ignore\r\n         */\r\n        _this._boundingRect = { x: -40000, y: -40000, width: 80000, height: 80000 };\r\n        /**\r\n         * Coordinates tooltip's pointer (stem) should point to.\r\n         */\r\n        _this._pointTo = { x: 0, y: 0 };\r\n        /**\r\n         * If set to `true` the pointer/stem of the Tooltip will not go outside\r\n         * Tooltip's width or height depending on pointer's orientation.\r\n         *\r\n         * @default false\r\n         */\r\n        _this.fitPointerToBounds = false;\r\n        /**\r\n         * If `tooltipOrientation` is vertical, it can be drawn below or above point\r\n         * We need to know this when solving overlapping.\r\n         */\r\n        _this._verticalOrientation = \"up\";\r\n        _this.className = \"Tooltip\";\r\n        _this.isMeasured = false;\r\n        _this.getFillFromObject = true;\r\n        _this.margin(5, 5, 5, 5);\r\n        _this.defaultState.transitionDuration = 1;\r\n        _this.hiddenState.transitionDuration = 1;\r\n        // Create chrome/background\r\n        var background = _this.background;\r\n        background.interactionsEnabled = false;\r\n        background.fillOpacity = 0.9;\r\n        background.strokeWidth = 1;\r\n        background.strokeOpacity = 1;\r\n        background.stroke = color(\"#ffffff\");\r\n        background.cornerRadius = 3;\r\n        background.pointerLength = 6;\r\n        background.pointerBaseWidth = 10;\r\n        var dropShadow = new DropShadowFilter();\r\n        dropShadow.dy = 1;\r\n        dropShadow.dx = 1;\r\n        dropShadow.opacity = 0.5;\r\n        background.filters.push(dropShadow);\r\n        _this.autoTextColor = true;\r\n        // Create text element\r\n        var label = _this.createChild(Label);\r\n        label.shouldClone = false;\r\n        _this.label = label;\r\n        label.padding(7, 12, 4, 12);\r\n        label.interactionsEnabled = false;\r\n        label.horizontalCenter = \"middle\";\r\n        label.fill = color(\"#ffffff\");\r\n        _this._disposers.push(label);\r\n        _this.label.events.on(\"sizechanged\", _this.drawBackground, _this);\r\n        _this.label.zIndex = 1; // @todo remove this line when bg sorting is solved\r\n        // Set defaults\r\n        _this.pointerOrientation = \"vertical\";\r\n        _this.animationDuration = 0;\r\n        _this.animationEasing = $ease.cubicOut;\r\n        _this.setPropertyValue(\"showInViewport\", false);\r\n        // Set accessibility options\r\n        _this.role = \"tooltip\";\r\n        _this.visible = false;\r\n        _this.opacity = 0;\r\n        _this.x = 0;\r\n        _this.y = 0;\r\n        _this.events.on(\"visibilitychanged\", _this.handleVisibility, _this);\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Tooltip.prototype.handleVisibility = function () {\r\n        if (this.visible) {\r\n            this.label.invalidate();\r\n        }\r\n    };\r\n    Object.defineProperty(Tooltip.prototype, \"getStrokeFromObject\", {\r\n        /**\r\n         * Specifies if tooltip background should get stroke color from the sprite it is pointing to.\r\n         *\r\n         * @return {boolean}\r\n         * @default false\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"getStrokeFromObject\");\r\n        },\r\n        /**\r\n         * Specifies if tooltip background should get stroke color from the sprite it is pointing to.\r\n         *\r\n         * @param value boolean\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"getStrokeFromObject\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Tooltip.prototype, \"autoTextColor\", {\r\n        /**\r\n         * @return {boolean}\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"autoTextColor\");\r\n        },\r\n        /**\r\n         * Specifies if text color should be chosen automatically for a better\r\n         * readability.\r\n         *\r\n         * IMPORTANT: this feature is generally ignored, if `getFillFromObject = false`.\r\n         *\r\n         * If inheriting of `fill` color from object tooltip is displayed for is\r\n         * disabled, this feature will not work. If you are explicitly setting a\r\n         * color for tooltip background, you may set a color for its label as well\r\n         * using `tooltip.label.fill` property.\r\n         *\r\n         *\r\n         * @param value boolean\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"autoTextColor\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Tooltip.prototype, \"keepTargetHover\", {\r\n        /**\r\n         * @return Keep target hovered?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"keepTargetHover\");\r\n        },\r\n        /**\r\n         * If this tooltip is displayed on hover on some other object, keep that\r\n         * element hovered if hovering on the tooltip.\r\n         *\r\n         * @default false\r\n         * @since 4.1.13\r\n         * @param  value  Keep target hovered?\r\n         */\r\n        set: function (value) {\r\n            var _this = this;\r\n            if (this.setPropertyValue(\"keepTargetHover\", value, true)) {\r\n                if (value) {\r\n                    this.hoverable = true;\r\n                    this.background.interactionsEnabled = true;\r\n                    this._disposers.push(this.events.on(\"over\", function (ev) {\r\n                        if (_this.targetSprite && _this.targetSprite.hoverable) {\r\n                            _this.targetSprite.isHover = true;\r\n                        }\r\n                    }));\r\n                    this._disposers.push(this.events.on(\"out\", function (ev) {\r\n                        if (_this.targetSprite && _this.targetSprite.hoverable) {\r\n                            //this.hideTooltip();\r\n                            //this.targetSprite.handleOut();\r\n                            _this.targetSprite.isHover = false;\r\n                        }\r\n                    }));\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Tooltip.prototype, \"showInViewport\", {\r\n        /**\r\n         * @return Force showing tooltip?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"showInViewport\");\r\n        },\r\n        /**\r\n         * Normally, a tooltip will hide itself if it is pointing to a coordinate\r\n         * that is outside viewport.\r\n         *\r\n         * Setting this setting to `true` will override that and make tooltip\r\n         * appear next to the viewport edge closest to the target point.\r\n         *\r\n         * @default false\r\n         * @since 4.5.7\r\n         * @param  value  Force showing tooltip?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"showInViewport\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Tooltip.prototype, \"getFillFromObject\", {\r\n        /**\r\n         * Specifies if tooltip background should get fill color from the sprite it is pointing to.\r\n         *\r\n         * @return {boolean}\r\n         * @default true\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"getFillFromObject\");\r\n        },\r\n        /**\r\n         * @param value boolean\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"getFillFromObject\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates and returns a background element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Background\r\n     */\r\n    Tooltip.prototype.createBackground = function () {\r\n        return new PointedRectangle();\r\n    };\r\n    Object.defineProperty(Tooltip.prototype, \"pointerOrientation\", {\r\n        /**\r\n         * @return Orientation\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"pointerOrientation\");\r\n        },\r\n        /**\r\n         * Pointer orientation: `\"horizontal\"`, `\"vertical\"`, `\"up\"`, `\"down\"`,\r\n         * `\"right\"`, or `\"left\"`.\r\n         *\r\n         * Options`\"horizontal\"` or `\"vertical\"` are location-aware, meaning they\r\n         * will change position of the Tooltip based on the target point's position\r\n         * in relation to chart center.\r\n         *\r\n         * Options `\"up\"`, `\"down\"`, `\"right\"`, `\"left\"` are static and will point\r\n         * in the specified direction regardless of the position, even if that means\r\n         * going out of chart/screen bounds.\r\n         *\r\n         * IMPORTANT: in some situations, like having multiple tooltips stacked for\r\n         * multiple series, the `\"up\"` and `\"down\"` values might be ignored in order\r\n         * to make tooltip overlap algorithm work.\r\n         *\r\n         * @default \"vertical\"\r\n         * @param  value  Orientation\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"pointerOrientation\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Tooltip.prototype, \"animationDuration\", {\r\n        /**\r\n         * @return Orientation\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"animationDuration\");\r\n        },\r\n        /**\r\n         * Duration in milliseconds for the animation to take place when the tooltip\r\n         * is moving from one place to another.\r\n         *\r\n         * @default 0\r\n         * @param value  number\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"animationDuration\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Tooltip.prototype, \"animationEasing\", {\r\n        /**\r\n         * @return {Function}\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"animationEasing\");\r\n        },\r\n        /**\r\n         * Tooltip animation (moving from one place to another) easing function.\r\n         *\r\n         * @default $ease.cubicOut\r\n         * @param value (value: number) => number\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"animationEasing\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Tooltip.prototype, \"html\", {\r\n        /**\r\n         * @return HTML content\r\n         */\r\n        get: function () {\r\n            return this.label.html;\r\n        },\r\n        /**\r\n         * HTML content for the Tooltip.\r\n         *\r\n         * Provided value will be used as is, without applying any further\r\n         * formatting to it.\r\n         *\r\n         * @param value  HTML content\r\n         */\r\n        set: function (value) {\r\n            if (this.label.html != value) {\r\n                this.label.html = value;\r\n                this.invalidate();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Tooltip.prototype, \"text\", {\r\n        /**\r\n         * @return SVG text\r\n         */\r\n        get: function () {\r\n            return this.label.text;\r\n        },\r\n        /**\r\n         * SVG text content for the Tooltip.\r\n         *\r\n         * Text can have a number of formatting options supported by\r\n         * [[TextFormatter]].\r\n         *\r\n         * @param value  SVG text\r\n         */\r\n        set: function (value) {\r\n            if (this.label.text != value) {\r\n                this.label.text = value;\r\n                this.invalidate();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates the Tooltip.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Tooltip.prototype.draw = function () {\r\n        _super.prototype.draw.call(this);\r\n        var label = this.label;\r\n        if (label.invalid) {\r\n            label.validate();\r\n        }\r\n        var x = this._pointTo.x;\r\n        var y = this._pointTo.y;\r\n        var boundingRect = this._boundingRect;\r\n        var textW = label.measuredWidth;\r\n        var textH = label.measuredHeight;\r\n        var pointerLength = this.background.pointerLength;\r\n        var textX;\r\n        var textY;\r\n        // try to handle if text is wider than br\r\n        if (textW > boundingRect.width) {\r\n            // TODO maybe this isn't needed ?\r\n            $utils.spritePointToDocument({ x: boundingRect.x, y: boundingRect.y }, this.parent);\r\n            var p1 = $utils.spritePointToDocument({ x: boundingRect.x + boundingRect.width, y: boundingRect.y + boundingRect.height }, this.parent);\r\n            var documentWidth = document.body.offsetWidth;\r\n            // TODO maybe this isn't needed ?\r\n            $utils.used(document.body.offsetHeight);\r\n            if (p1.x > documentWidth / 2) {\r\n                boundingRect.x = boundingRect.width - textW;\r\n            }\r\n            else {\r\n                boundingRect.width = boundingRect.x + textW;\r\n            }\r\n        }\r\n        var pointerOrientation = this.pointerOrientation;\r\n        // horizontal\r\n        if (pointerOrientation == \"horizontal\" || pointerOrientation == \"left\" || pointerOrientation == \"right\") {\r\n            textY = -textH / 2;\r\n            if (pointerOrientation == \"horizontal\") {\r\n                if (x > boundingRect.x + boundingRect.width / 2) {\r\n                    textX = -textW / 2 - pointerLength;\r\n                }\r\n                else {\r\n                    textX = textW / 2 + pointerLength;\r\n                }\r\n            }\r\n            else if (pointerOrientation == \"left\") {\r\n                textX = textW / 2 + pointerLength;\r\n            }\r\n            else {\r\n                textX = -textW / 2 - pointerLength;\r\n            }\r\n        }\r\n        // vertical pointer\r\n        else {\r\n            textX = $math.fitToRange(0, boundingRect.x - x + textW / 2, boundingRect.x - x + boundingRect.width - textW / 2);\r\n            if (pointerOrientation == \"vertical\") {\r\n                if (y > boundingRect.y + textH + pointerLength) {\r\n                    textY = -textH - pointerLength;\r\n                    this._verticalOrientation = \"up\";\r\n                }\r\n                else {\r\n                    textY = pointerLength;\r\n                    this._verticalOrientation = \"down\";\r\n                }\r\n            }\r\n            else if (pointerOrientation == \"down\") {\r\n                textY = -textH - pointerLength;\r\n                this._verticalOrientation = \"up\";\r\n            }\r\n            else {\r\n                textY = pointerLength;\r\n                this._verticalOrientation = \"down\";\r\n            }\r\n        }\r\n        textY = $math.fitToRange(textY, boundingRect.y - y, boundingRect.y + boundingRect.height - textH - y);\r\n        label.x = textX;\r\n        label.y = textY;\r\n        this.drawBackground();\r\n    };\r\n    /**\r\n     * Overrides functionality from the superclass.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Tooltip.prototype.updateBackground = function () {\r\n        this.group.addToBack(this.background.group);\r\n    };\r\n    /**\r\n     * Draws Tooltip background (chrome, background and pointer/stem).\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Tooltip.prototype.drawBackground = function () {\r\n        var label = this.label;\r\n        var background = this.background;\r\n        var textWidth = label.measuredWidth;\r\n        var textHeight = label.measuredHeight;\r\n        var boundingRect = this._boundingRect;\r\n        var bgWidth = textWidth;\r\n        var bgX = label.pixelX - textWidth / 2;\r\n        var bgHeight = textHeight;\r\n        var bgY = label.pixelY;\r\n        var x = this._pointTo.x;\r\n        var y = this._pointTo.y;\r\n        var boundX1 = boundingRect.x - x;\r\n        var boundX2 = boundX1 + boundingRect.width;\r\n        var boundY1 = boundingRect.y - y;\r\n        var boundY2 = boundY1 + boundingRect.height;\r\n        background.x = bgX;\r\n        background.y = bgY;\r\n        background.width = bgWidth;\r\n        background.height = bgHeight;\r\n        if (this.fitPointerToBounds) {\r\n            background.pointerX = $math.fitToRange(-background.x, boundX1 - background.x, boundX2 - background.x);\r\n            background.pointerY = $math.fitToRange(-background.y, boundY1 - background.y, boundY2 - background.y);\r\n        }\r\n        else {\r\n            background.pointerX = -background.x;\r\n            background.pointerY = -background.y;\r\n        }\r\n        background.validate();\r\n    };\r\n    /**\r\n     * Set nes tooltip's anchor point and moves whole tooltip.\r\n     *\r\n     * @param x  X coordinate\r\n     * @param y  Y coordinate\r\n     */\r\n    Tooltip.prototype.pointTo = function (point, instantly) {\r\n        if (this._pointTo.x != point.x || this._pointTo.y != point.y) {\r\n            this._pointTo = point;\r\n            this.invalidate();\r\n            // this helps to avoid strange animation from nowhere on initial show or when balloon was hidden already\r\n            if (!this.visible || instantly) {\r\n                this.moveTo(this._pointTo);\r\n                if (this._animation) {\r\n                    this._animation.kill();\r\n                }\r\n            }\r\n            else {\r\n                // helps to avoid flicker on top/left corner\r\n                if (this.pixelX == 0 && this.pixelY == 0) {\r\n                    this.moveTo(this._pointTo);\r\n                }\r\n                else {\r\n                    if (this._animation) {\r\n                        this._animation.kill();\r\n                    }\r\n                    this._animation = new Animation(this, [{ property: \"x\", to: point.x, from: this.pixelX }, { property: \"y\", to: point.y, from: this.pixelY }], this.animationDuration, this.animationEasing).start();\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets numeric boundaries Tooltip needs to obey (so it does not go outside\r\n     * specific area).\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param rectangle Boundary rectangle\r\n     */\r\n    Tooltip.prototype.setBounds = function (rectangle) {\r\n        var oldRect = this._boundingRect;\r\n        if (oldRect.x != rectangle.x || oldRect.y != rectangle.y || oldRect.width != rectangle.width || oldRect.height != rectangle.height) {\r\n            this._boundingRect = rectangle;\r\n            this.invalidate();\r\n        }\r\n    };\r\n    Object.defineProperty(Tooltip.prototype, \"boundingContainer\", {\r\n        /**\r\n         * Sets a [[Container]] instance to be used when calculating numeric\r\n         * boundaries for the Tooltip.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @param container  Boundary container\r\n         */\r\n        set: function (container) {\r\n            this._boundingContainer = container;\r\n            // TODO remove closures ?\r\n            container.events.on(\"sizechanged\", this.updateBounds, this);\r\n            container.events.on(\"positionchanged\", this.updateBounds, this);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates numeric boundaries for the Tooltip, based on the\r\n     * `boundingCountrainer`.\r\n     */\r\n    Tooltip.prototype.updateBounds = function () {\r\n        var boundingContainer = this._boundingContainer;\r\n        // to global\r\n        var rect = $utils.spriteRectToSvg({\r\n            x: boundingContainer.pixelX,\r\n            y: boundingContainer.pixelY,\r\n            width: boundingContainer.maxWidth,\r\n            height: boundingContainer.maxHeight\r\n        }, boundingContainer);\r\n        this.setBounds(rect);\r\n    };\r\n    Object.defineProperty(Tooltip.prototype, \"verticalOrientation\", {\r\n        /**\r\n         * If tooltipOrientation is vertical, it can be drawn below or above point.\r\n         * We need to know this when solving overlapping.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return \"up\" | \"down\"\r\n         */\r\n        get: function () {\r\n            return this._verticalOrientation;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Tooltip.prototype, \"tooltip\", {\r\n        /**\r\n         * To avoid stackoverflow\r\n         * @ignore\r\n         */\r\n        get: function () {\r\n            return undefined;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Copies properties and other attributes.\r\n     *\r\n     * @param source  Source\r\n     */\r\n    Tooltip.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        this.label.copyFrom(source.label);\r\n        if (source._boundingRect) {\r\n            this._boundingRect = source._boundingRect;\r\n        }\r\n    };\r\n    /**\r\n     * Adds easing functions to \"function\" fields.\r\n     *\r\n     * @param field  Field name\r\n     * @return Assign as function?\r\n     */\r\n    Tooltip.prototype.asFunction = function (field) {\r\n        return field == \"animationEasing\" || _super.prototype.asIs.call(this, field);\r\n    };\r\n    return Tooltip;\r\n}(Container));\r\nexport { Tooltip };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Tooltip\"] = Tooltip;\r\n//# sourceMappingURL=Tooltip.js.map","/**\r\n * Legend-related functionality.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Component } from \"../core/Component\";\r\nimport { DataItem } from \"../core/DataItem\";\r\nimport { ListTemplate, ListDisposer } from \"../core/utils/List\";\r\nimport { RoundedRectangle } from \"../core/elements/RoundedRectangle\";\r\nimport { Container } from \"../core/Container\";\r\nimport { Label } from \"../core/elements/Label\";\r\nimport { keyboard } from \"../core/utils/Keyboard\";\r\nimport { registry } from \"../core/Registry\";\r\nimport { getInteraction } from \"../core/interaction/Interaction\";\r\nimport { percent } from \"../core/utils/Percent\";\r\nimport { InterfaceColorSet } from \"../core/utils/InterfaceColorSet\";\r\nimport * as $utils from \"../core/utils/Utils\";\r\nimport * as $type from \"../core/utils/Type\";\r\nimport * as $math from \"../core/utils/Math\";\r\nimport { Sprite } from \"../core/Sprite\";\r\nimport { Disposer } from \"../core/utils/Disposer\";\r\nimport { MouseCursorStyle } from \"../core/interaction/Mouse\";\r\nimport { defaultRules, ResponsiveBreakpoints } from \"../core/utils/Responsive\";\r\nimport { Scrollbar } from \"../core/elements/Scrollbar\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[Legend]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar LegendDataItem = /** @class */ (function (_super) {\r\n    __extends(LegendDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function LegendDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * @ignore\r\n         */\r\n        _this.childrenCreated = false;\r\n        _this.className = \"LegendDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(LegendDataItem.prototype, \"label\", {\r\n        /**\r\n         * A legend item's [[Label]] element.\r\n         *\r\n         * @return Label\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            if (!this._label) {\r\n                var label_1 = this.component.labels.create();\r\n                this._label = label_1;\r\n                this.addSprite(label_1);\r\n                this._disposers.push(label_1);\r\n                label_1.parent = this.itemContainer;\r\n                this._disposers.push(new Disposer(function () {\r\n                    if ($type.hasValue(_this.component)) {\r\n                        _this.component.labels.removeValue(label_1);\r\n                    }\r\n                }));\r\n            }\r\n            return this._label;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LegendDataItem.prototype, \"color\", {\r\n        /**\r\n         * @return Main color\r\n         */\r\n        get: function () {\r\n            return this.properties.color;\r\n        },\r\n        /**\r\n         * Main color of legend data item.\r\n         *\r\n         * This is set by the target element this legend item represents, like\r\n         * a Series or a Slice.\r\n         *\r\n         * It can be used to derive a color in legend's sub-items, like label:\r\n         *\r\n         * ```TypeScript\r\n         * chart.legend.labels.template.text = \"[{color}]{name}[/]\";\r\n         * ```\r\n         * ```JavaScript\r\n         * chart.legend.labels.template.text = \"[{color}]{name}[/]\";\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // ...\r\n         *   \"legend\": {\r\n         *     // ...\r\n         *     \"labels\": {\r\n         *       \"text\": \"[{color}]{name}[/]\"\r\n         *     }\r\n         *   }\r\n         * }\r\n         * ```\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/legend/#Legend_labels} For more information about configuring legend labels.\r\n         * @param value  Main color\r\n         */\r\n        set: function (value) {\r\n            this.setProperty(\"color\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LegendDataItem.prototype, \"valueLabel\", {\r\n        /**\r\n         * A legend item's [[Label]] element for \"value label\".\r\n         *\r\n         * @return Label\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            if (!this._valueLabel) {\r\n                var valueLabel_1 = this.component.valueLabels.create();\r\n                this._valueLabel = valueLabel_1;\r\n                this.addSprite(valueLabel_1);\r\n                this._disposers.push(valueLabel_1);\r\n                valueLabel_1.parent = this.itemContainer;\r\n                this._disposers.push(new Disposer(function () {\r\n                    if ($type.hasValue(_this.component)) {\r\n                        _this.component.valueLabels.removeValue(valueLabel_1);\r\n                    }\r\n                }));\r\n            }\r\n            return this._valueLabel;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LegendDataItem.prototype, \"itemContainer\", {\r\n        /**\r\n         * A reference to the main [[Container]] that holds legend item's elements:\r\n         * marker and labels.\r\n         *\r\n         * @return Item container\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            if (!this._itemContainer) {\r\n                var component_1 = this.component;\r\n                var itemContainer_1 = component_1.itemContainers.create();\r\n                itemContainer_1.parent = component_1;\r\n                this._itemContainer = itemContainer_1;\r\n                this.addSprite(itemContainer_1);\r\n                this._disposers.push(itemContainer_1);\r\n                // Add click/tap event to toggle item\r\n                if (itemContainer_1.togglable) {\r\n                    itemContainer_1.events.on(\"toggled\", function (ev) {\r\n                        component_1.toggleDataItem(ev.target.dataItem);\r\n                    }, undefined, false);\r\n                }\r\n                // Add focus event so that we can track which object is currently in focus\r\n                // for keyboard toggling\r\n                if (itemContainer_1.focusable) {\r\n                    itemContainer_1.events.on(\"focus\", function (ev) {\r\n                        component_1.focusedItem = ev.target.dataItem;\r\n                    }, undefined, false);\r\n                    itemContainer_1.events.on(\"blur\", function (ev) {\r\n                        component_1.focusedItem = undefined;\r\n                    }, undefined, false);\r\n                }\r\n                this._disposers.push(new Disposer(function () {\r\n                    if ($type.hasValue(_this.component)) {\r\n                        _this.component.itemContainers.removeValue(itemContainer_1);\r\n                    }\r\n                }));\r\n                if (this.dataContext.uidAttr) {\r\n                    itemContainer_1.readerControls = this.dataContext.uidAttr();\r\n                    itemContainer_1.readerLabelledBy = this.dataContext.uidAttr();\r\n                }\r\n                var sprite = this.dataContext;\r\n                if ((sprite instanceof DataItem || sprite instanceof Sprite) && !sprite.isDisposed()) {\r\n                    var visibilitychanged = function (ev) {\r\n                        itemContainer_1.readerChecked = ev.visible;\r\n                        itemContainer_1.events.disableType(\"toggled\");\r\n                        itemContainer_1.isActive = !ev.visible;\r\n                        itemContainer_1.events.enableType(\"toggled\");\r\n                    };\r\n                    sprite.addDisposer(new Disposer(function () {\r\n                        if (_this.component) {\r\n                            _this.component.dataItems.remove(_this);\r\n                        }\r\n                    }));\r\n                    if (sprite instanceof Sprite) {\r\n                        itemContainer_1.addDisposer(sprite.events.on(\"visibilitychanged\", visibilitychanged, undefined, false));\r\n                        itemContainer_1.addDisposer(sprite.events.on(\"hidden\", function (ev) {\r\n                            itemContainer_1.readerChecked = false;\r\n                            itemContainer_1.events.disableType(\"toggled\");\r\n                            itemContainer_1.isActive = true;\r\n                            itemContainer_1.events.enableType(\"toggled\");\r\n                        }, undefined, false));\r\n                        itemContainer_1.addDisposer(sprite.events.on(\"shown\", function (ev) {\r\n                            itemContainer_1.readerChecked = true;\r\n                            itemContainer_1.events.disableType(\"toggled\");\r\n                            itemContainer_1.isActive = false;\r\n                            itemContainer_1.events.enableType(\"toggled\");\r\n                        }, undefined, false));\r\n                    }\r\n                    else {\r\n                        itemContainer_1.addDisposer(sprite.events.on(\"visibilitychanged\", visibilitychanged, undefined, false));\r\n                    }\r\n                }\r\n            }\r\n            return this._itemContainer;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LegendDataItem.prototype, \"marker\", {\r\n        /**\r\n         * A [[Container]] that holds legend item's marker element.\r\n         *\r\n         * @return Marker\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            if (!this._marker) {\r\n                var marker_1 = this.component.markers.create();\r\n                this._marker = marker_1;\r\n                marker_1.parent = this.itemContainer;\r\n                this.addSprite(marker_1);\r\n                this._disposers.push(marker_1);\r\n                this._disposers.push(new Disposer(function () {\r\n                    if ($type.hasValue(_this.component)) {\r\n                        _this.component.markers.removeValue(marker_1);\r\n                    }\r\n                }));\r\n            }\r\n            return this._marker;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return LegendDataItem;\r\n}(DataItem));\r\nexport { LegendDataItem };\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a class that carries legend settings.\r\n *\r\n * A legend might change its settings dynamically. Legend can also be shared\r\n * by several elements, requiring different settings.\r\n *\r\n * Having legend's settings in a separate object is a good way to \"hot swap\"\r\n * a set of settings for the legend.\r\n */\r\nvar LegendSettings = /** @class */ (function () {\r\n    function LegendSettings() {\r\n        /**\r\n         * Should marker be created for each legend item.\r\n         */\r\n        this.createMarker = true;\r\n    }\r\n    return LegendSettings;\r\n}());\r\nexport { LegendSettings };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * [[Legend]] class is used to create legend for the chart.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/legend/} for Legend documentation\r\n * @see {@link ILegendEvents} for a list of available events\r\n * @see {@link ILegendAdapters} for a list of available Adapters\r\n */\r\nvar Legend = /** @class */ (function (_super) {\r\n    __extends(Legend, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Legend() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"Legend\";\r\n        // Set defaults\r\n        _this.layout = \"grid\";\r\n        _this.setPropertyValue(\"useDefaultMarker\", false);\r\n        _this.setPropertyValue(\"scrollable\", false);\r\n        _this.setPropertyValue(\"contentAlign\", \"center\");\r\n        // Create a template container and list for legend items\r\n        var itemContainer = new Container();\r\n        itemContainer.applyOnClones = true;\r\n        itemContainer.padding(8, 0, 8, 0);\r\n        itemContainer.margin(0, 10, 0, 10);\r\n        itemContainer.layout = \"horizontal\";\r\n        itemContainer.clickable = true;\r\n        itemContainer.focusable = true;\r\n        itemContainer.role = \"switch\";\r\n        itemContainer.togglable = true;\r\n        itemContainer.cursorOverStyle = MouseCursorStyle.pointer;\r\n        itemContainer.background.fillOpacity = 0; // creates hit area\r\n        // Create container list using item template we just created\r\n        _this.itemContainers = new ListTemplate(itemContainer);\r\n        _this._disposers.push(new ListDisposer(_this.itemContainers));\r\n        _this._disposers.push(_this.itemContainers.template);\r\n        // Set up global keyboard events for toggling elements\r\n        _this._disposers.push(getInteraction().body.events.on(\"keyup\", function (ev) {\r\n            if (keyboard.isKey(ev.event, \"enter\") && _this.focusedItem && _this.focusedItem.itemContainer.clickable) {\r\n                _this.toggleDataItem(_this.focusedItem);\r\n            }\r\n        }, _this));\r\n        var interfaceColors = new InterfaceColorSet();\r\n        // Create a template container and list for the a marker\r\n        var marker = new Container();\r\n        marker.width = 23;\r\n        marker.height = 23;\r\n        marker.interactionsEnabled = false;\r\n        marker.applyOnClones = true;\r\n        marker.setStateOnChildren = true;\r\n        marker.background.fillOpacity = 0;\r\n        marker.background.strokeOpacity = 0;\r\n        marker.propertyFields.fill = \"fill\";\r\n        marker.valign = \"middle\";\r\n        var disabledColor = interfaceColors.getFor(\"disabledBackground\");\r\n        marker.events.on(\"childadded\", function (event) {\r\n            var child = event.newValue;\r\n            var activeState = child.states.create(\"active\");\r\n            activeState.properties.stroke = disabledColor;\r\n            activeState.properties.fill = disabledColor;\r\n        });\r\n        _this.markers = new ListTemplate(marker);\r\n        _this._disposers.push(new ListDisposer(_this.markers));\r\n        _this._disposers.push(_this.markers.template);\r\n        // Create a legend background element\r\n        var rectangle = marker.createChild(RoundedRectangle);\r\n        rectangle.width = percent(100);\r\n        rectangle.height = percent(100);\r\n        rectangle.applyOnClones = true;\r\n        rectangle.propertyFields.fill = \"fill\";\r\n        rectangle.strokeOpacity = 0;\r\n        // Create a template container and list for item labels\r\n        var label = new Label();\r\n        label.text = \"{name}\";\r\n        label.margin(0, 5, 0, 5);\r\n        label.valign = \"middle\";\r\n        label.applyOnClones = true;\r\n        label.states.create(\"active\").properties.fill = interfaceColors.getFor(\"disabledBackground\");\r\n        _this.labels = new ListTemplate(label);\r\n        _this._disposers.push(new ListDisposer(_this.labels));\r\n        _this._disposers.push(_this.labels.template);\r\n        label.interactionsEnabled = false;\r\n        label.truncate = true;\r\n        label.fullWords = false;\r\n        // Create a template container and list for item value labels\r\n        var valueLabel = new Label();\r\n        valueLabel.margin(0, 5, 0, 0);\r\n        valueLabel.valign = \"middle\";\r\n        valueLabel.width = 50; // to avoid rearranging legend entries when value changes.\r\n        valueLabel.align = \"right\";\r\n        valueLabel.textAlign = \"end\";\r\n        valueLabel.applyOnClones = true;\r\n        valueLabel.states.create(\"active\").properties.fill = interfaceColors.getFor(\"disabledBackground\");\r\n        valueLabel.interactionsEnabled = false;\r\n        _this.valueLabels = new ListTemplate(valueLabel);\r\n        _this._disposers.push(new ListDisposer(_this.valueLabels));\r\n        _this._disposers.push(_this.valueLabels.template);\r\n        _this.position = \"bottom\"; // don't use setPropertyValue here!\r\n        // Create a state for disabled legend items\r\n        itemContainer.states.create(\"active\");\r\n        itemContainer.setStateOnChildren = true;\r\n        // Apply accessibility settings\r\n        _this.role = \"group\";\r\n        _this.events.on(\"layoutvalidated\", _this.handleScrollbar, _this, false);\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    Legend.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        if (!$type.hasValue(this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"Legend\");\r\n        }\r\n    };\r\n    /**\r\n     * Returns a new/empty DataItem of the type appropriate for this object.\r\n     *\r\n     * @see {@link DataItem}\r\n     * @return Data Item\r\n     */\r\n    Legend.prototype.createDataItem = function () {\r\n        return new LegendDataItem();\r\n    };\r\n    /**\r\n     * [validateDataElement description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem Data item\r\n     * @todo Description\r\n     * @todo Figure out how to update appearance of legend item without losing focus\r\n     * @todo Update legend marker appearance as apperance of related series changes\r\n     */\r\n    Legend.prototype.validateDataElement = function (dataItem) {\r\n        _super.prototype.validateDataElement.call(this, dataItem);\r\n        // Get data item (legend item's) container\r\n        var container = dataItem.itemContainer;\r\n        var marker = dataItem.marker;\r\n        $utils.used(dataItem.label);\r\n        var valueLabel = dataItem.valueLabel;\r\n        // Set parent and update current state\r\n        container.readerChecked = dataItem.dataContext.visible;\r\n        // Tell series its legend data item\r\n        dataItem.dataContext.legendDataItem = dataItem;\r\n        dataItem.label.width = undefined;\r\n        if (valueLabel.align == \"right\") {\r\n            valueLabel.width = undefined;\r\n        }\r\n        var legendSettings = dataItem.dataContext.legendSettings;\r\n        // If we are not using default markers, create a unique legend marker based\r\n        // on the data item type\r\n        var dataContext = dataItem.dataContext;\r\n        if (dataContext.createLegendMarker && (!this.useDefaultMarker || !(dataContext instanceof Sprite))) {\r\n            if (!dataItem.childrenCreated) {\r\n                dataContext.createLegendMarker(marker);\r\n                dataItem.childrenCreated = true;\r\n            }\r\n        }\r\n        if (dataContext.updateLegendValue) {\r\n            dataContext.updateLegendValue(); // this solves issue with external legend, as legend is created after chart updates legend values\r\n        }\r\n        if (dataContext.component && dataContext.component.updateLegendValue) {\r\n            dataContext.component.updateLegendValue(dataContext);\r\n        }\r\n        if (valueLabel.invalid) {\r\n            valueLabel.validate();\r\n        }\r\n        if (valueLabel.text == \"\" || valueLabel.text == undefined) {\r\n            valueLabel.__disabled = true;\r\n        }\r\n        else {\r\n            valueLabel.__disabled = false;\r\n        }\r\n        if (legendSettings && (legendSettings.itemValueText != undefined || legendSettings.valueText != undefined)) {\r\n            valueLabel.__disabled = false;\r\n        }\r\n        var visible = dataItem.dataContext.visible;\r\n        if (visible === undefined) {\r\n            visible = true;\r\n        }\r\n        visible = $type.toBoolean(visible);\r\n        dataItem.dataContext.visible = visible;\r\n        container.events.disableType(\"toggled\");\r\n        container.isActive = !visible;\r\n        if (container.isActive) {\r\n            container.setState(\"active\", 0);\r\n        }\r\n        else {\r\n            container.setState(\"default\", 0);\r\n        }\r\n        container.events.enableType(\"toggled\");\r\n    };\r\n    Legend.prototype.afterDraw = function () {\r\n        var _this = this;\r\n        var maxWidth = this.getPropertyValue(\"maxWidth\");\r\n        var maxLabelWidth = 0;\r\n        this.labels.each(function (label) {\r\n            if (label.invalid) {\r\n                label.validate();\r\n            }\r\n            if (label.measuredWidth + label.pixelMarginLeft + label.pixelMarginRight > maxLabelWidth) {\r\n                maxLabelWidth = label.measuredWidth + label.pixelMarginLeft + label.pixelMarginRight;\r\n            }\r\n        });\r\n        var maxValueLabelWidth = 0;\r\n        this.valueLabels.each(function (label) {\r\n            if (label.invalid) {\r\n                label.validate();\r\n            }\r\n            if (label.measuredWidth + label.pixelMarginLeft + label.pixelMarginRight > maxValueLabelWidth) {\r\n                maxValueLabelWidth = label.measuredWidth + label.pixelMarginLeft + label.pixelMarginRight;\r\n            }\r\n        });\r\n        var maxMarkerWidth = 0;\r\n        this.markers.each(function (marker) {\r\n            if (marker.invalid) {\r\n                marker.validate();\r\n            }\r\n            if (marker.measuredWidth + marker.pixelMarginLeft + marker.pixelMarginRight > maxMarkerWidth) {\r\n                maxMarkerWidth = marker.measuredWidth + marker.pixelMarginLeft + marker.pixelMarginRight;\r\n            }\r\n        });\r\n        var itemContainer = this.itemContainers.template;\r\n        var margin = itemContainer.pixelMarginRight + itemContainer.pixelMarginLeft;\r\n        var maxAdjustedLabelWidth;\r\n        var trueMaxWidth = maxLabelWidth + maxValueLabelWidth + maxMarkerWidth;\r\n        if (!$type.isNumber(maxWidth)) {\r\n            maxAdjustedLabelWidth = maxLabelWidth;\r\n        }\r\n        else {\r\n            maxWidth = maxWidth - margin;\r\n            if (maxWidth > trueMaxWidth) {\r\n                maxWidth = trueMaxWidth;\r\n            }\r\n            maxAdjustedLabelWidth = maxWidth - maxMarkerWidth - maxValueLabelWidth;\r\n        }\r\n        this.labels.each(function (label) {\r\n            if (_this.valueLabels.template.align == \"right\" || label.measuredWidth > maxAdjustedLabelWidth) {\r\n                label.width = maxAdjustedLabelWidth - label.pixelMarginLeft - label.pixelMarginRight;\r\n            }\r\n        });\r\n        if (this.valueLabels.template.align == \"right\") {\r\n            this.valueLabels.each(function (valueLabel) {\r\n                valueLabel.width = maxValueLabelWidth;\r\n            });\r\n        }\r\n        _super.prototype.afterDraw.call(this);\r\n    };\r\n    Legend.prototype.handleScrollbar = function () {\r\n        var scrollbar = this.scrollbar;\r\n        if (this.scrollable && scrollbar) {\r\n            scrollbar.height = this.measuredHeight;\r\n            scrollbar.x = this.measuredWidth - scrollbar.pixelWidth - scrollbar.pixelMarginLeft;\r\n            if (this.contentHeight > this.measuredHeight) {\r\n                scrollbar.visible = true;\r\n                scrollbar.thumb.height = scrollbar.height * this.measuredHeight / this.contentHeight;\r\n                this.paddingRight = scrollbar.pixelWidth + scrollbar.pixelMarginLeft + +scrollbar.pixelMarginRight;\r\n            }\r\n            else {\r\n                scrollbar.visible = false;\r\n            }\r\n            this.updateMasks();\r\n        }\r\n    };\r\n    Object.defineProperty(Legend.prototype, \"position\", {\r\n        /**\r\n         * @return Position\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"position\");\r\n        },\r\n        /**\r\n         * Position of the legend.\r\n         *\r\n         * Options: \"left\", \"right\", \"top\", \"bottom\" (default), or \"absolute\".\r\n         *\r\n         * IMPORTANT: [[MapChart]] will ignore this setting, as it is using different\r\n         * layout structure than other charts.\r\n         *\r\n         * To position legend in [[MapChart]] set legend's `align` (`\"left\"` or\r\n         * `\"right\"`) and `valign` (`\"top\"` or `\"bottom\"`) properties instead.\r\n         *\r\n         * @default \"bottom\"\r\n         * @param value  Position\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"position\", value)) {\r\n                if (value == \"left\" || value == \"right\") {\r\n                    this.margin(10, 5, 10, 10);\r\n                    this.valign = \"middle\";\r\n                    this.valueLabels.template.align = \"right\";\r\n                    if (!$type.isNumber(this.maxColumns)) {\r\n                        this.maxColumns = 1;\r\n                    }\r\n                    this.width = undefined;\r\n                    this.maxWidth = 220;\r\n                }\r\n                else {\r\n                    this.maxColumns = undefined;\r\n                    this.width = percent(100);\r\n                    this.valueLabels.template.align = \"left\";\r\n                }\r\n                this.invalidate();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Legend.prototype, \"useDefaultMarker\", {\r\n        /**\r\n         * @return Use default marker?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"useDefaultMarker\");\r\n        },\r\n        /**\r\n         * Should legend try to mirror the look of the related item when building\r\n         * the marker for legend item?\r\n         *\r\n         * If set to `true` it will try to make the marker look like its related\r\n         * item.\r\n         *\r\n         * E.g. if an item is for a Line Series, it will display a line of the\r\n         * same thickness, color, and will use the same bullets if series have them.\r\n         *\r\n         * @default false\r\n         * @param value Use default marker?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"useDefaultMarker\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Legend.prototype, \"scrollable\", {\r\n        /**\r\n         * @return Legend Scrollable?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"scrollable\");\r\n        },\r\n        /**\r\n         * If set to `true` the Legend will display a scrollbar if its contents do\r\n         * not fit into its `maxHeight`.\r\n         *\r\n         * Please note that `maxHeight` is automatically set for Legend when its\r\n         * `position` is set to `\"left\"` or `\"right\"`.\r\n         *\r\n         * @default false\r\n         * @since 4.8.0\r\n         * @param  value  Legend Scrollable?\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"scrollable\", value, true)) {\r\n                if (value) {\r\n                    var scrollbar = this.createChild(Scrollbar);\r\n                    this.scrollbar = scrollbar;\r\n                    scrollbar.isMeasured = false;\r\n                    scrollbar.orientation = \"vertical\";\r\n                    scrollbar.endGrip.__disabled = true;\r\n                    scrollbar.startGrip.__disabled = true;\r\n                    scrollbar.visible = false;\r\n                    scrollbar.marginLeft = 5;\r\n                    this._mouseWheelDisposer = this.events.on(\"wheel\", this.handleWheel, this, false);\r\n                    this._disposers.push(this._mouseWheelDisposer);\r\n                    this._disposers.push(scrollbar.events.on(\"rangechanged\", this.updateMasks, this, false));\r\n                }\r\n                else {\r\n                    if (this._mouseWheelDisposer) {\r\n                        this._mouseWheelDisposer.dispose();\r\n                        if (this.scrollbar) {\r\n                            this.scrollbar.dispose();\r\n                            this.scrollbar = undefined;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Handles mouse wheel scrolling of legend.\r\n     *\r\n     * @param  event  Event\r\n     */\r\n    Legend.prototype.handleWheel = function (event) {\r\n        var shift = event.shift.y;\r\n        var scrollbar = this.scrollbar;\r\n        if (scrollbar) {\r\n            var ds = (shift / 1000 * this.measuredHeight / this.contentHeight);\r\n            var delta = scrollbar.end - scrollbar.start;\r\n            if (shift > 0) {\r\n                scrollbar.start = $math.max(0, scrollbar.start - ds);\r\n                scrollbar.end = scrollbar.start + delta;\r\n            }\r\n            else {\r\n                scrollbar.end = $math.min(1, scrollbar.end - ds);\r\n                scrollbar.start = scrollbar.end - delta;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    Legend.prototype.updateMasks = function () {\r\n        var _this = this;\r\n        if (this.scrollbar) {\r\n            this.itemContainers.each(function (itemContainer) {\r\n                itemContainer.dy = -_this.scrollbar.thumb.pixelY * _this.contentHeight / _this.measuredHeight;\r\n                itemContainer.maskRectangle = { x: 0, y: -itemContainer.dy, width: _this.measuredWidth, height: _this.measuredHeight };\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Toggles a legend item.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param item Legend item\r\n     * @todo Maybe do it with togglable instead\r\n     */\r\n    Legend.prototype.toggleDataItem = function (item) {\r\n        var dataContext = item.dataContext;\r\n        if (!dataContext.visible || dataContext.isHiding || (dataContext instanceof Sprite && dataContext.isHidden)) {\r\n            item.color = item.colorOrig;\r\n            item.itemContainer.isActive = false;\r\n            if (dataContext.hidden === true) {\r\n                dataContext.hidden = false;\r\n            }\r\n            if (dataContext.show) {\r\n                dataContext.show();\r\n            }\r\n            else {\r\n                dataContext.visible = true;\r\n            }\r\n        }\r\n        else {\r\n            item.itemContainer.isActive = true;\r\n            if (dataContext.hide) {\r\n                dataContext.hide();\r\n            }\r\n            else {\r\n                dataContext.visible = false;\r\n            }\r\n            item.color = new InterfaceColorSet().getFor(\"disabledBackground\");\r\n        }\r\n    };\r\n    Object.defineProperty(Legend.prototype, \"preloader\", {\r\n        /**\r\n         * Override preloader method so that legend does not accidentally show its\r\n         * own preloader.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return Always `undefined`\r\n         */\r\n        get: function () {\r\n            return;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * [handleDataItemPropertyChange description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Legend.prototype.handleDataItemPropertyChange = function (dataItem, name) {\r\n        dataItem.valueLabel.invalidate();\r\n        dataItem.label.invalidate();\r\n    };\r\n    return Legend;\r\n}(Component));\r\nexport { Legend };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Legend\"] = Legend;\r\n/**\r\n * Add default responsive rules\r\n */\r\n/**\r\n * Move legend to below the chart if chart is narrow\r\n */\r\ndefaultRules.push({\r\n    relevant: ResponsiveBreakpoints.widthXS,\r\n    state: function (target, stateId) {\r\n        if (target instanceof Legend && (target.position == \"left\" || target.position == \"right\")) {\r\n            var state = target.states.create(stateId);\r\n            state.properties.position = \"bottom\";\r\n            return state;\r\n        }\r\n        return null;\r\n    }\r\n});\r\n/**\r\n * Move legend to the right if chart is very short\r\n */\r\ndefaultRules.push({\r\n    relevant: ResponsiveBreakpoints.heightXS,\r\n    state: function (target, stateId) {\r\n        if (target instanceof Legend && (target.position == \"top\" || target.position == \"bottom\")) {\r\n            var state = target.states.create(stateId);\r\n            state.properties.position = \"right\";\r\n            return state;\r\n        }\r\n        return null;\r\n    }\r\n});\r\n/**\r\n * Disable legend altogether on small charts\r\n */\r\ndefaultRules.push({\r\n    relevant: ResponsiveBreakpoints.isXS,\r\n    state: function (target, stateId) {\r\n        if (target instanceof Legend) {\r\n            var state = target.states.create(stateId);\r\n            state.properties.disabled = true;\r\n            return state;\r\n        }\r\n        return null;\r\n    }\r\n});\r\n//# sourceMappingURL=Legend.js.map","/**\r\n */\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { color } from \"../utils/Color\";\r\n/**\r\n * Defines a class that holds default properties for new SVG elements\r\n */\r\nvar SVGDefaults = /** @class */ (function () {\r\n    function SVGDefaults() {\r\n    }\r\n    SVGDefaults.opacity = 1;\r\n    SVGDefaults.strokeOpacity = 1;\r\n    SVGDefaults.strokeWidth = 1;\r\n    SVGDefaults.fillOpacity = 1;\r\n    SVGDefaults.fill = color(\"#000000\");\r\n    SVGDefaults.stroke = color(\"#000000\");\r\n    SVGDefaults.focusable = undefined;\r\n    SVGDefaults.tabindex = 0;\r\n    return SVGDefaults;\r\n}());\r\nexport { SVGDefaults };\r\n//# sourceMappingURL=SVGDefaults.js.map","import { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { AMElement } from \"./AMElement\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates an SVG `<g>` element.\r\n *\r\n * SVG groups are used for elements that need more elements just one.\r\n *\r\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Element/g} About `<g>` element\r\n */\r\nvar Group = /** @class */ (function (_super) {\r\n    __extends(Group, _super);\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param elementName Element type (should be \"g\")\r\n     */\r\n    function Group(elementName) {\r\n        return _super.call(this, elementName) || this;\r\n    }\r\n    /**\r\n     * Adds an element to group.\r\n     *\r\n     * This will manipulate DOM. `element` will be physically moved into group.\r\n     *\r\n     * @param element  Element\r\n     */\r\n    Group.prototype.add = function (element) {\r\n        if (element) {\r\n            this.node.appendChild(element.node);\r\n        }\r\n    };\r\n    /**\r\n     * Adds an element to group.\r\n     *\r\n     * This will manipulate DOM. `element` will be physically moved into group.\r\n     *\r\n     * @param element  Element\r\n     */\r\n    Group.prototype.addToBack = function (element) {\r\n        if (element) {\r\n            var first = this.node.childNodes[0];\r\n            if (first) {\r\n                if (first != element.node) {\r\n                    this.node.insertBefore(element.node, first);\r\n                }\r\n            }\r\n            else {\r\n                this.node.appendChild(element.node);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Removes the `element` from group.\r\n     *\r\n     * Please note that this will not dispose the element itself, it will just\r\n     * remove it from the group.\r\n     *\r\n     * @param element  Element\r\n     */\r\n    Group.prototype.removeElement = function (element) {\r\n        // todo: not sure about the speed, need to investigate, maybe it's faster to check if node is a child\r\n        if (element) {\r\n            try {\r\n                if (element.node && element.node.parentNode == this.node) {\r\n                    this.node.removeChild(element.node);\r\n                }\r\n            }\r\n            catch (err) {\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Checks if this group already has the child element added\r\n     *\r\n     * @param element\r\n     * @return {boolean}\r\n     */\r\n    Group.prototype.hasChild = function (element) {\r\n        for (var i = 0; i < this.node.childNodes.length; i++) {\r\n            if (this.node.childNodes[i] == element.node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    Object.defineProperty(Group.prototype, \"content\", {\r\n        /**\r\n         * @return SVG markup\r\n         */\r\n        get: function () {\r\n            return this.node.innerHTML;\r\n        },\r\n        /**\r\n         * Content of the group element.\r\n         *\r\n         * Can be used to add a lot of proprietary SVG markup into group.\r\n         *\r\n         * @param value  SVG markup\r\n         */\r\n        set: function (value) {\r\n            this.node.innerHTML = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Removes all children from the group.\r\n     */\r\n    Group.prototype.removeChildren = function () {\r\n        if (this.node.childNodes) {\r\n            while (this.node.childNodes.length > 0) {\r\n                var childNode = this.node.firstChild;\r\n                if (childNode && childNode.parentNode) {\r\n                    childNode.parentNode.removeChild(childNode);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    return Group;\r\n}(AMElement));\r\nexport { Group };\r\n//# sourceMappingURL=Group.js.map","/**\r\n * Interaction Object module\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { InteractionObjectEventDispatcher } from \"./InteractionObjectEvents\";\r\nimport { BaseObjectEvents } from \"../Base\";\r\nimport { List } from \"../utils/List\";\r\nimport { Dictionary, DictionaryDisposer } from \"../utils/Dictionary\";\r\nimport { getInteraction } from \"./Interaction\";\r\nimport * as $type from \"../utils/Type\";\r\n/**\r\n * Re-exports\r\n */\r\nexport { InteractionObjectEventDispatcher };\r\n/**\r\n * Interaction object represents an object that is subject for any kind of\r\n * interaction with it with any input devices: mouse, touch or keyboard.\r\n *\r\n * Any DOM element can be wrapped into an Internaction object which in turn\r\n * enables attaching various interaction events to it, such as: hit, drag,\r\n * swipe, etc.\r\n *\r\n * To create an [[InteractionObject]] out of a [[Sprite]], use:\r\n * `interaction.getInteractionFromSprite(sprite: Sprite)`\r\n *\r\n * To create an [[InteractionObject]] out of a a regular element:\r\n * `interaction.getInteraction(element: HTMLElement)`\r\n */\r\nvar InteractionObject = /** @class */ (function (_super) {\r\n    __extends(InteractionObject, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function InteractionObject(element) {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * @ignore\r\n         * An [[EventDispatcher]] instance which holds events for this object\r\n         */\r\n        _this._eventDispatcher = new InteractionObjectEventDispatcher(_this);\r\n        /**\r\n         * Collection of Disposers for various events. (so that those get disposed\r\n         * when the whole InteractionObject is disposed)\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        _this.eventDisposers = new Dictionary();\r\n        /**\r\n         * A [[Dictionary]] that holds temporarily replaced original style values for\r\n         * HTML element, so that they can be restored when the functionality that\r\n         * replaced them is done.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        _this.replacedStyles = new Dictionary();\r\n        _this._clickable = false;\r\n        _this._contextMenuDisabled = false;\r\n        _this._hoverable = false;\r\n        _this._trackable = false;\r\n        _this._draggable = false;\r\n        _this._swipeable = false;\r\n        _this._resizable = false;\r\n        _this._wheelable = false;\r\n        _this._inert = false;\r\n        /**\r\n         * Is element currently hovered?\r\n         */\r\n        _this._isHover = false;\r\n        /**\r\n         * Was this element hovered via pointer or is it just \"pretenting\" to be\r\n         * hovered.\r\n         *\r\n         * @ignore\r\n         */\r\n        _this.isRealHover = false;\r\n        /**\r\n         * Is the element hovered by touch pointer?\r\n         */\r\n        _this._isHoverByTouch = false;\r\n        /**\r\n         * Has element got any pointers currently pressing down on it?\r\n         */\r\n        _this._isDown = false;\r\n        /**\r\n         * Does element have focus?\r\n         */\r\n        _this._isFocused = false;\r\n        /**\r\n         * Is element currently protected from touch interactions?\r\n         */\r\n        _this._isTouchProtected = false;\r\n        /**\r\n         * Options used for inertia functionality.\r\n         */\r\n        _this._inertiaOptions = new Dictionary();\r\n        /**\r\n         * A collection of different inertia types, currently playing out.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        _this.inertias = new Dictionary();\r\n        /**\r\n         * Click/tap options.\r\n         */\r\n        _this._hitOptions = {};\r\n        /**\r\n         * Hover options.\r\n         */\r\n        _this._hoverOptions = {};\r\n        /**\r\n         * Swipe gesture options.\r\n         */\r\n        _this._swipeOptions = {};\r\n        /**\r\n         * Keyboard options.\r\n         */\r\n        _this._keyboardOptions = {};\r\n        /**\r\n         * Mouse options.\r\n         */\r\n        _this._mouseOptions = {};\r\n        /**\r\n         * Cursor options.\r\n         */\r\n        _this._cursorOptions = {\r\n            \"defaultStyle\": [{\r\n                    \"property\": \"cursor\",\r\n                    \"value\": \"default\"\r\n                }]\r\n        };\r\n        _this._disposers.push(_this._eventDispatcher);\r\n        _this._element = element;\r\n        _this.className = \"InteractionObject\";\r\n        _this._disposers.push(new DictionaryDisposer(_this.inertias));\r\n        _this._disposers.push(new DictionaryDisposer(_this.eventDisposers));\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    ;\r\n    Object.defineProperty(InteractionObject.prototype, \"events\", {\r\n        /**\r\n         * An [[EventDispatcher]] instance which holds events for this object\r\n         */\r\n        get: function () {\r\n            return this._eventDispatcher;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(InteractionObject.prototype, \"isHover\", {\r\n        /**\r\n         * @return Hovered?\r\n         */\r\n        get: function () {\r\n            return this._isHover;\r\n        },\r\n        /**\r\n         * Indicates if this element is currently hovered.\r\n         *\r\n         * @param value Hovered?\r\n         */\r\n        set: function (value) {\r\n            if (this.isHover != value) {\r\n                this._isHover = value;\r\n                if (value) {\r\n                    getInteraction().overObjects.moveValue(this);\r\n                }\r\n                else {\r\n                    this.isRealHover = false;\r\n                    getInteraction().overObjects.removeValue(this);\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(InteractionObject.prototype, \"isHoverByTouch\", {\r\n        /**\r\n         * @return Hovered?\r\n         */\r\n        get: function () {\r\n            return this._isHoverByTouch;\r\n        },\r\n        /**\r\n         * Indicates if this element is currently hovered.\r\n         *\r\n         * @param value Hovered?\r\n         */\r\n        set: function (value) {\r\n            if (this.isHoverByTouch != value) {\r\n                this._isHoverByTouch = value;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(InteractionObject.prototype, \"overPointers\", {\r\n        /**\r\n         * A list of pointers currently over the element.\r\n         *\r\n         * @see {@link Pointer}\r\n         * @return List if pointers currently hovering the element\r\n         */\r\n        get: function () {\r\n            if (!this._overPointers) {\r\n                this._overPointers = new List();\r\n            }\r\n            return this._overPointers;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(InteractionObject.prototype, \"isDown\", {\r\n        /**\r\n         * @return Has down pointers?\r\n         */\r\n        get: function () {\r\n            return this._isDown;\r\n        },\r\n        /**\r\n         * Indicates if this element has currently any pointers pressing on it.\r\n         *\r\n         * @param value Has down pointers?\r\n         */\r\n        set: function (value) {\r\n            if (this.isDown != value) {\r\n                this._isDown = value;\r\n                if (value) {\r\n                    getInteraction().downObjects.moveValue(this);\r\n                }\r\n                else {\r\n                    getInteraction().downObjects.removeValue(this);\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(InteractionObject.prototype, \"downPointers\", {\r\n        /**\r\n         * A list of pointers currently pressing down on this element.\r\n         *\r\n         * @see {@link Pointer}\r\n         * @return List of down pointers\r\n         */\r\n        get: function () {\r\n            if (!this._downPointers) {\r\n                this._downPointers = new List();\r\n            }\r\n            return this._downPointers;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(InteractionObject.prototype, \"isFocused\", {\r\n        /**\r\n         * @return Focused?\r\n         */\r\n        get: function () {\r\n            return this._isFocused;\r\n        },\r\n        /**\r\n         * Indicates if this element is currently focused.\r\n         *\r\n         * @param value Focused?\r\n         */\r\n        set: function (value) {\r\n            if (this.isFocused != value) {\r\n                this._isFocused = value;\r\n                if (value) {\r\n                    getInteraction().focusedObject = this;\r\n                }\r\n                else {\r\n                    getInteraction().focusedObject = undefined;\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(InteractionObject.prototype, \"isTouchProtected\", {\r\n        /**\r\n         * @ignore\r\n         * @return Touch protected?\r\n         */\r\n        get: function () {\r\n            return this._isTouchProtected;\r\n        },\r\n        /**\r\n         * Indicates if this element is currently being protected from touch actions.\r\n         *\r\n         * @ignore\r\n         * @param value Touch protected?\r\n         */\r\n        set: function (value) {\r\n            if (this._isTouchProtected != value) {\r\n                this._isTouchProtected = value;\r\n                if (value) {\r\n                    getInteraction().unprepElement(this);\r\n                }\r\n                else if (this.draggable || this.swipeable || this.trackable || this.resizable) {\r\n                    getInteraction().prepElement(this);\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(InteractionObject.prototype, \"clickable\", {\r\n        /**\r\n         * @return Clickable?\r\n         */\r\n        get: function () {\r\n            return this._clickable;\r\n        },\r\n        /**\r\n         * Is element clickable? Clickable elements will generate \"hit\" events when\r\n         * clicked or tapped.\r\n         *\r\n         * @param value Clickable?\r\n         */\r\n        set: function (value) {\r\n            if (this._clickable !== value) {\r\n                this._clickable = value;\r\n                getInteraction().processClickable(this);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(InteractionObject.prototype, \"contextMenuDisabled\", {\r\n        /**\r\n         * @return Context menu disabled?\r\n         */\r\n        get: function () {\r\n            return this._contextMenuDisabled;\r\n        },\r\n        /**\r\n         * Should element prevent context menu to be displayed, e.g. when\r\n         * right-clicked?\r\n         *\r\n         * @default false\r\n         * @param value Context menu disabled?\r\n         */\r\n        set: function (value) {\r\n            if (this._contextMenuDisabled !== value) {\r\n                this._contextMenuDisabled = value;\r\n                getInteraction().processContextMenu(this);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(InteractionObject.prototype, \"hoverable\", {\r\n        /**\r\n         * @return Hoverable?\r\n         */\r\n        get: function () {\r\n            return this._hoverable;\r\n        },\r\n        /**\r\n         * Indicates if element should generate hover events.\r\n         *\r\n         * @param value Hoverable?\r\n         */\r\n        set: function (value) {\r\n            if (this._hoverable !== value) {\r\n                this._hoverable = value;\r\n                getInteraction().processHoverable(this);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(InteractionObject.prototype, \"trackable\", {\r\n        /**\r\n         * @return Track pointer?\r\n         */\r\n        get: function () {\r\n            return this._trackable;\r\n        },\r\n        /**\r\n         * Indicates if pointer movement over element should be tracked.\r\n         *\r\n         * @param value Track pointer?\r\n         */\r\n        set: function (value) {\r\n            if (this._trackable !== value) {\r\n                this._trackable = value;\r\n                getInteraction().processTrackable(this);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(InteractionObject.prototype, \"draggable\", {\r\n        /**\r\n         * @return Draggable?\r\n         */\r\n        get: function () {\r\n            return this._draggable;\r\n        },\r\n        /**\r\n         * Indicates if element can be dragged. (moved)\r\n         *\r\n         * @param value Draggable?\r\n         */\r\n        set: function (value) {\r\n            if (this._draggable !== value) {\r\n                this._draggable = value;\r\n                getInteraction().processDraggable(this);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(InteractionObject.prototype, \"swipeable\", {\r\n        /**\r\n         * @return Track swipe?\r\n         */\r\n        get: function () {\r\n            return this._swipeable;\r\n        },\r\n        /**\r\n         * Indicates whether element should react to swipe gesture.\r\n         *\r\n         * @param value Track swipe?\r\n         */\r\n        set: function (value) {\r\n            if (this._swipeable !== value) {\r\n                this._swipeable = value;\r\n                getInteraction().processSwipeable(this);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(InteractionObject.prototype, \"resizable\", {\r\n        /**\r\n         * @return Resizeble?\r\n         */\r\n        get: function () {\r\n            return this._resizable;\r\n        },\r\n        /**\r\n         * Indicates if element can be resized.\r\n         *\r\n         * @param value Resizeable?\r\n         */\r\n        set: function (value) {\r\n            if (this._resizable !== value) {\r\n                this._resizable = value;\r\n                getInteraction().processResizable(this);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(InteractionObject.prototype, \"wheelable\", {\r\n        /**\r\n         * @return Track wheel?\r\n         */\r\n        get: function () {\r\n            return this._wheelable;\r\n        },\r\n        /**\r\n         * Indicates whether track moouse wheel rotation over element.\r\n         *\r\n         * @param value Track wheel?\r\n         */\r\n        set: function (value) {\r\n            if (this._wheelable !== value) {\r\n                this._wheelable = value;\r\n                getInteraction().processWheelable(this);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(InteractionObject.prototype, \"inert\", {\r\n        /**\r\n         * @return Inert?\r\n         */\r\n        get: function () {\r\n            return this._inert;\r\n        },\r\n        /**\r\n         * Indicates if element is inert, i.e. if it should carry movement momentum\r\n         * after it is dragged and released.\r\n         *\r\n         * @param value Inert?\r\n         */\r\n        set: function (value) {\r\n            if (this._inert !== value) {\r\n                this._inert = value;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(InteractionObject.prototype, \"focusable\", {\r\n        /**\r\n         * @return Focusable?\r\n         */\r\n        get: function () {\r\n            return this._focusable;\r\n        },\r\n        /**\r\n         * Indicates if element can gain focus.\r\n         *\r\n         * @param value Focusable?\r\n         */\r\n        set: function (value) {\r\n            if (this._focusable !== value) {\r\n                this._focusable = value;\r\n                if (this._focusable && this.tabindex == -1) {\r\n                    this._tabindex = 1;\r\n                }\r\n                getInteraction().processFocusable(this);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(InteractionObject.prototype, \"tabindex\", {\r\n        /**\r\n         * @return Tab index\r\n         */\r\n        get: function () {\r\n            return $type.getValueDefault(this._tabindex, -1);\r\n        },\r\n        /**\r\n         * Element's tab index.\r\n         *\r\n         * @param value Tab index\r\n         */\r\n        set: function (value) {\r\n            if (this._tabindex !== value) {\r\n                this._tabindex = value;\r\n                if (value > -1) {\r\n                    this.focusable = true;\r\n                }\r\n                getInteraction().processFocusable(this);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(InteractionObject.prototype, \"element\", {\r\n        /**\r\n         * @return Element\r\n         */\r\n        get: function () {\r\n            return this._element;\r\n        },\r\n        /**\r\n         * A DOM element associated with this element.\r\n         *\r\n         * @param element Element\r\n         */\r\n        set: function (element) {\r\n            this._element = element;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(InteractionObject.prototype, \"originalPosition\", {\r\n        /**\r\n         * @ignore Exclude from docs\r\n         * @return Position.\r\n         */\r\n        get: function () {\r\n            return this._originalPosition || { x: 0, y: 0 };\r\n        },\r\n        /**\r\n         * Element's original position.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @param value Position\r\n         */\r\n        set: function (value) {\r\n            this._originalPosition = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(InteractionObject.prototype, \"originalScale\", {\r\n        /**\r\n         * @return Scale\r\n         */\r\n        get: function () {\r\n            return $type.getValueDefault(this._originalScale, 1);\r\n        },\r\n        /**\r\n         * Element's original scale.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @param value Scale\r\n         */\r\n        set: function (value) {\r\n            if (this._originalScale !== value) {\r\n                this._originalScale = value;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(InteractionObject.prototype, \"originalAngle\", {\r\n        /**\r\n         * @return Angle\r\n         */\r\n        get: function () {\r\n            return $type.getValueDefault(this._originalAngle, 0);\r\n        },\r\n        /**\r\n         * Element's original angle.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @param value Angle\r\n         */\r\n        set: function (value) {\r\n            if (this._originalAngle !== value) {\r\n                this._originalAngle = value;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(InteractionObject.prototype, \"inertiaOptions\", {\r\n        /**\r\n         * @return Options\r\n         */\r\n        get: function () {\r\n            if (this.sprite && this.sprite._adapterO) {\r\n                return this.sprite._adapterO.apply(\"inertiaOptions\", this._inertiaOptions);\r\n            }\r\n            else {\r\n                return this._inertiaOptions;\r\n            }\r\n        },\r\n        /**\r\n         * Inertia options.\r\n         *\r\n         * @param value  Options\r\n         */\r\n        set: function (value) {\r\n            this._inertiaOptions = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(InteractionObject.prototype, \"hitOptions\", {\r\n        /**\r\n         * @return Options\r\n         */\r\n        get: function () {\r\n            if (this.sprite && this.sprite._adapterO) {\r\n                return this.sprite._adapterO.apply(\"hitOptions\", this._hitOptions);\r\n            }\r\n            else {\r\n                return this._hitOptions;\r\n            }\r\n        },\r\n        /**\r\n         * Hit options.\r\n         *\r\n         * @param value  Options\r\n         */\r\n        set: function (value) {\r\n            this._hitOptions = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(InteractionObject.prototype, \"hoverOptions\", {\r\n        /**\r\n         * @return Options\r\n         */\r\n        get: function () {\r\n            if (this.sprite && this.sprite._adapterO) {\r\n                return this.sprite._adapterO.apply(\"hoverOptions\", this._hoverOptions);\r\n            }\r\n            else {\r\n                return this._hoverOptions;\r\n            }\r\n        },\r\n        /**\r\n         * Hover options.\r\n         *\r\n         * @param value  Options\r\n         */\r\n        set: function (value) {\r\n            this._hoverOptions = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(InteractionObject.prototype, \"swipeOptions\", {\r\n        /**\r\n         * @return Options\r\n         */\r\n        get: function () {\r\n            if (this.sprite && this.sprite._adapterO) {\r\n                return this.sprite._adapterO.apply(\"swipeOptions\", this._swipeOptions);\r\n            }\r\n            else {\r\n                return this._swipeOptions;\r\n            }\r\n        },\r\n        /**\r\n         * Swipe options.\r\n         *\r\n         * @param value  Options\r\n         */\r\n        set: function (value) {\r\n            this._swipeOptions = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(InteractionObject.prototype, \"keyboardOptions\", {\r\n        /**\r\n         * @return Options\r\n         */\r\n        get: function () {\r\n            if (this.sprite && this.sprite._adapterO) {\r\n                return this.sprite._adapterO.apply(\"keyboardOptions\", this._keyboardOptions);\r\n            }\r\n            else {\r\n                return this._keyboardOptions;\r\n            }\r\n        },\r\n        /**\r\n         * Keyboard options.\r\n         *\r\n         * @param value  Options\r\n         */\r\n        set: function (value) {\r\n            this._keyboardOptions = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(InteractionObject.prototype, \"mouseOptions\", {\r\n        /**\r\n         * @return Options\r\n         */\r\n        get: function () {\r\n            if (this.sprite && this.sprite._adapterO) {\r\n                return this.sprite._adapterO.apply(\"mouseOptions\", this._mouseOptions);\r\n            }\r\n            else {\r\n                return this._mouseOptions;\r\n            }\r\n        },\r\n        /**\r\n         * Mouse options.\r\n         *\r\n         * Enables controlling options related to the mouse, for example sensitivity\r\n         * of its mouse wheel.\r\n         *\r\n         * E.g. the below will reduce chart's wheel-zoom speed to half its default\r\n         * speed:\r\n         *\r\n         * ```TypeScript\r\n         * chart.plotContainer.mouseOptions.sensitivity = 0.5;\r\n         * ```\r\n         * ```JavaScript\r\n         * chart.plotContainer.mouseOptions.sensitivity = 0.5;\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // ...\r\n         *   \"plotContainer\": {\r\n         *     \"mouseOptions\": {\r\n         *       \"sensitivity\": 0.5\r\n         *     }\r\n         *   }\r\n         * }\r\n         * ```\r\n         *\r\n         * @since 4.5.14\r\n         * @param value  Options\r\n         */\r\n        set: function (value) {\r\n            this._mouseOptions = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(InteractionObject.prototype, \"cursorOptions\", {\r\n        /**\r\n         * @return Options\r\n         */\r\n        get: function () {\r\n            if (this.sprite && this.sprite._adapterO) {\r\n                return this.sprite._adapterO.apply(\"cursorOptions\", this._cursorOptions);\r\n            }\r\n            else {\r\n                return this._cursorOptions;\r\n            }\r\n        },\r\n        /**\r\n         * Cursor options.\r\n         *\r\n         * @param value  Options\r\n         */\r\n        set: function (value) {\r\n            this._cursorOptions = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Copies all properties and related assets from another object of the same\r\n     * type.\r\n     *\r\n     * @param source Source object\r\n     */\r\n    InteractionObject.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        this.inertiaOptions = source.inertiaOptions;\r\n        this.hitOptions = source.hitOptions;\r\n        this.hoverOptions = source.hoverOptions;\r\n        this.swipeOptions = source.swipeOptions;\r\n        this.keyboardOptions = source.keyboardOptions;\r\n        this.cursorOptions = source.cursorOptions;\r\n        this.contextMenuDisabled = source.contextMenuDisabled;\r\n        getInteraction().applyCursorOverStyle(this);\r\n    };\r\n    /**\r\n     * @ignore Exclude from docs\r\n     */\r\n    InteractionObject.prototype.setEventDisposer = function (key, value, f) {\r\n        var disposer = this.eventDisposers.getKey(key);\r\n        if (value) {\r\n            if (disposer == null) {\r\n                this.eventDisposers.setKey(key, f());\r\n            }\r\n        }\r\n        else {\r\n            if (disposer != null) {\r\n                disposer.dispose();\r\n                this.eventDisposers.removeKey(key);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Disposes object.\r\n     */\r\n    InteractionObject.prototype.dispose = function () {\r\n        _super.prototype.dispose.call(this);\r\n        // Remove from all interaction registries\r\n        var interaction = getInteraction();\r\n        interaction.overObjects.removeValue(this);\r\n        interaction.downObjects.removeValue(this);\r\n        interaction.trackedObjects.removeValue(this);\r\n        interaction.transformedObjects.removeValue(this);\r\n        // Unlock document wheel\r\n        if (this.isHover && this.wheelable) {\r\n            interaction.unlockWheel();\r\n        }\r\n        if (interaction.focusedObject === this) {\r\n            interaction.focusedObject = undefined;\r\n        }\r\n    };\r\n    return InteractionObject;\r\n}(BaseObjectEvents));\r\nexport { InteractionObject };\r\n//# sourceMappingURL=InteractionObject.js.map","/**\r\n * Functionality related simulating of dragging of elements using keyboard.\r\n */\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { getInteraction } from \"./Interaction\";\r\nimport { system } from \"../System\";\r\nimport * as $array from \"../utils/Array\";\r\n/**\r\n * [[InteractionKeyboardObject]] is used to simulate dragging of the `draggable`\r\n * element using keyboard arrows.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nvar InteractionKeyboardObject = /** @class */ (function () {\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param io An InteractionObject\r\n     */\r\n    function InteractionKeyboardObject(io, ev) {\r\n        /**\r\n         * Indicates if this object has already been deleted. Any\r\n         * destruction/disposal code should take this into account when deciding\r\n         * wheter to run potentially costly disposal operations if they already have\r\n         * been run.\r\n         */\r\n        this._disposed = false;\r\n        /**\r\n         * Indicates direction of current horizontal movement.\r\n         *\r\n         * 0 - not moving horizontally\r\n         * 1 - moving right\r\n         * -1 - moving left\r\n         */\r\n        this.directionX = 0;\r\n        /**\r\n         * Indicates direction of current vertical movement.\r\n         *\r\n         * 0 - not moving vertically\r\n         * 1 - moving down\r\n         * -1 - moving up\r\n         */\r\n        this.directionY = 0;\r\n        this.interaction = io;\r\n        this.keyboardEvent = ev;\r\n        this._startedOn = new Date().getTime();\r\n        getInteraction().processDragStart(io);\r\n        system.animations.push(this);\r\n        this.update();\r\n    }\r\n    /**\r\n     * It's an update method which is called by the system if\r\n     * [[InteractionObject]] is used as animation.\r\n     *\r\n     * This will update coordinates of the element based on the movement\r\n     * directions.\r\n     */\r\n    InteractionKeyboardObject.prototype.update = function () {\r\n        // Init and get settings\r\n        var io = this.interaction;\r\n        var speed = getInteraction().getKeyboardOption(io, \"speed\"), accelleration = getInteraction().getKeyboardOption(io, \"accelleration\"), accellerationDelay = getInteraction().getKeyboardOption(io, \"accellerationDelay\"), shift = {\r\n            x: 0,\r\n            y: 0\r\n        };\r\n        // If SHIFT key is pressed we slash speed by half and disable accelleration\r\n        if (this.keyboardEvent.shiftKey) {\r\n            speed *= 0.5;\r\n            accelleration = 1;\r\n        }\r\n        // If CTRL is pressed we increase speed by x2\r\n        else if (this.keyboardEvent.ctrlKey) {\r\n            speed *= 2;\r\n        }\r\n        // Get elapsed time\r\n        var ms = new Date().getTime() - this._startedOn;\r\n        var accelleratedMs = ms - accellerationDelay;\r\n        // Add accellerated movement\r\n        if ((accelleration > 0) && (accelleratedMs > 0)) {\r\n            var accellerationFactor = ms / accellerationDelay;\r\n            ms = accellerationDelay;\r\n            shift.x += this.directionX * (speed * accelleration * accellerationFactor * accelleratedMs);\r\n            shift.y += this.directionY * (speed * accelleration * accellerationFactor * accelleratedMs);\r\n        }\r\n        // Calculate position\r\n        shift.x += this.directionX * (speed * ms);\r\n        shift.y += this.directionY * (speed * ms);\r\n        // Simulate move on Interaction\r\n        getInteraction().handleTransformMove(io, shift, { x: 0, y: 0 }, this.keyboardEvent, true, false);\r\n    };\r\n    /**\r\n     * Returns if this object has been already been disposed.\r\n     *\r\n     * @return Is disposed?\r\n     */\r\n    InteractionKeyboardObject.prototype.isDisposed = function () {\r\n        return this._disposed;\r\n    };\r\n    /**\r\n     * Disposes this object. Removes from system animations.\r\n     */\r\n    InteractionKeyboardObject.prototype.dispose = function () {\r\n        if (!this._disposed) {\r\n            getInteraction().processDragStop(this.interaction);\r\n            $array.remove(system.animations, this);\r\n        }\r\n    };\r\n    return InteractionKeyboardObject;\r\n}());\r\nexport { InteractionKeyboardObject };\r\n//# sourceMappingURL=InteractionKeyboardObject.js.map","/**\r\n * Functionality related to inertia\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObject } from \"../Base\";\r\nimport { getInteraction } from \"./Interaction\";\r\nimport { AnimationDisposer } from \"../utils/Animation\";\r\nimport * as $type from \"../utils/Type\";\r\n/**\r\n * A point of inertia is to simulate gradually drecreasing motion even after\r\n * actual interaction by user, that caused it, has already ended.\r\n *\r\n * [[Inertia]] object will continue triggering the same [[Sprite]] handlers\r\n * as if the interaction was still happening, gradually reducing\r\n * shift/angle/scale values until full stop.\r\n *\r\n * Basically, from the target element's point of view, while inertia is\r\n * playing, it is still being interacted with by user, albeit with a\r\n * decreasing speed.\r\n */\r\nvar Inertia = /** @class */ (function (_super) {\r\n    __extends(Inertia, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Inertia(interaction, type, point, startPoint) {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        /**\r\n         * List of animations currently playing.\r\n         */\r\n        _this.animations = [];\r\n        _this.className = \"Inertia\";\r\n        _this.interaction = interaction;\r\n        _this.type = type;\r\n        _this.point = point;\r\n        _this.startPoint = startPoint;\r\n        // Make animations disposable\r\n        _this._disposers.push(new AnimationDisposer(_this.animations));\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Inertia.prototype, \"x\", {\r\n        /**\r\n         * Returns current X coordinate.\r\n         *\r\n         * @return X\r\n         */\r\n        get: function () {\r\n            return this.point.x;\r\n        },\r\n        /**\r\n         * Sets current X coordinate.\r\n         *\r\n         * Will trigger \"drag\" event for the target element.\r\n         *\r\n         * @param value X\r\n         */\r\n        set: function (value) {\r\n            if ($type.isNumber(value)) {\r\n                this.point.x = value;\r\n                this.handleMove();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Inertia.prototype, \"y\", {\r\n        /**\r\n         * Returns current Y coordinate.\r\n         *\r\n         * @return Y\r\n         */\r\n        get: function () {\r\n            return this.point.y;\r\n        },\r\n        /**\r\n         * Sets current Y coordinate.\r\n         *\r\n         * Will trigger \"drag\" event for the target element.\r\n         *\r\n         * @param value Y\r\n         */\r\n        set: function (value) {\r\n            if ($type.isNumber(value)) {\r\n                this.point.y = value;\r\n                this.handleMove();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Simulates dragging of element.\r\n     */\r\n    Inertia.prototype.handleMove = function () {\r\n        // Prepare {InteractionEvent} object\r\n        if (this.interaction.events.isEnabled(\"drag\")) {\r\n            var imev = {\r\n                type: \"drag\",\r\n                target: this.interaction,\r\n                shift: {\r\n                    x: this.x - this.startPoint.x,\r\n                    y: this.y - this.startPoint.y\r\n                },\r\n                startPoint: this.startPoint,\r\n                point: {\r\n                    x: this.x,\r\n                    y: this.y\r\n                },\r\n                touch: false\r\n            };\r\n            // Call handler\r\n            this.interaction.events.dispatchImmediately(\"drag\", imev);\r\n        }\r\n    };\r\n    /**\r\n     * Finishes up the inertia animation. (removes reference to this animation\r\n     * object)\r\n     */\r\n    Inertia.prototype.done = function () {\r\n        // Remove inertia animation from the object\r\n        this.interaction.inertias.removeKey(this.type);\r\n        // Move ended\r\n        if (this.type === \"move\") {\r\n            getInteraction().processDragStop(this.interaction);\r\n        }\r\n        // Destroy\r\n        this.dispose();\r\n    };\r\n    return Inertia;\r\n}(BaseObject));\r\nexport { Inertia };\r\n//# sourceMappingURL=Inertia.js.map","/**\r\n * Export module.\r\n *\r\n * Parts of Export functionality rely on the following third party libraries:\r\n *\r\n * [canvg.js](https://github.com/canvg/canvg)\r\n * Copyright (c) Gabe Lerner\r\n * Licensed under [MIT](https://github.com/canvg/canvg/blob/master/LICENSE)\r\n *\r\n * [pdfmake](http://pdfmake.org/)\r\n * Copyright (c) 2014 bpampuch\r\n * Licensed under [MIT](https://github.com/bpampuch/pdfmake/blob/master/LICENSE)\r\n *\r\n * [SheetJS Community Edition](https://github.com/sheetjs/js-xlsx)\r\n * Licensed under [Apache License 2.0](https://github.com/SheetJS/js-xlsx/blob/master/LICENSE)\r\n *\r\n * [JSZip](http://stuartk.com/jszip)\r\n * Copyright (c) Stuart Knightley\r\n * Dual licenced under the [MIT license or GPLv3](https://raw.githubusercontent.com/Stuk/jszip/master/LICENSE.markdown).\r\n */\r\nimport { __awaiter, __extends, __generator } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { ExportMenu } from \"./ExportMenu\";\r\nimport { Adapter } from \"../utils/Adapter\";\r\nimport { Sprite } from \"../Sprite\";\r\nimport { Modal } from \"../elements/Modal\";\r\nimport { List } from \"../utils/List\";\r\nimport { Dictionary } from \"../utils/Dictionary\";\r\nimport { DateFormatter } from \"../formatters/DateFormatter\";\r\nimport { DurationFormatter } from \"../formatters/DurationFormatter\";\r\nimport { NumberFormatter } from \"../formatters/NumberFormatter\";\r\nimport { Language } from \"../utils/Language\";\r\nimport { Validatable } from \"../utils/Validatable\";\r\nimport { color } from \"../utils/Color\";\r\nimport { registry } from \"../Registry\";\r\nimport { options } from \"../Options\";\r\nimport { StyleRule, getComputedStyle } from \"../utils/DOM\";\r\nimport * as $browser from \"../utils/Browser\";\r\nimport * as $object from \"../utils/Object\";\r\nimport * as $net from \"../utils/Net\";\r\nimport * as $dom from \"../utils/DOM\";\r\nimport * as $type from \"../utils/Type\";\r\nimport * as $utils from \"../utils/Utils\";\r\nimport * as $array from \"../utils/Array\";\r\nimport * as $math from \"../utils/Math\";\r\n// This is used to cache the pdfmake loading\r\nvar pdfmakePromise;\r\n/**\r\n * Loads pdfmake dynamic module\r\n *\r\n * This is an asynchronous function. Check the description of `getImage()`\r\n * for description and example usage.\r\n *\r\n * @ignore Exclude from docs\r\n * @return Instance of pdfmake\r\n * @async\r\n */\r\nfunction _pdfmake() {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var a, pdfmake, vfs_fonts, global;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, Promise.all([\r\n                        import(/* webpackChunkName: \"pdfmake\" */ \"pdfmake/build/pdfmake.js\"),\r\n                        import(/* webpackChunkName: \"pdfmake\" */ \"../../pdfmake/vfs_fonts\")\r\n                    ])];\r\n                case 1:\r\n                    a = _a.sent();\r\n                    pdfmake = a[0];\r\n                    vfs_fonts = a[1];\r\n                    global = window;\r\n                    global.pdfMake = global.pdfMake || {};\r\n                    global.pdfMake.vfs = vfs_fonts.default;\r\n                    pdfmake.vfs = vfs_fonts.default;\r\n                    return [2 /*return*/, pdfmake];\r\n            }\r\n        });\r\n    });\r\n}\r\n// TODO better parsing\r\nvar fontFamilySrcRegexp = /src: ([^;]+);/;\r\n// TODO better checks\r\nfunction supportsBlobUri() {\r\n    return window.navigator.msSaveOrOpenBlob != null;\r\n}\r\n// TODO move into utils or something ?\r\nfunction blobToDataUri(blob) {\r\n    return new Promise(function (resolve, reject) {\r\n        // TODO handle abort ?\r\n        var f = new FileReader();\r\n        f.onload = function (e) { resolve(f.result); };\r\n        f.onerror = function (e) { reject(e); };\r\n        f.readAsDataURL(blob);\r\n    });\r\n}\r\nfunction getCssRules(s) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var sheet, e_1;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    sheet = s.sheet;\r\n                    _a.label = 1;\r\n                case 1:\r\n                    _a.trys.push([1, 2, , 4]);\r\n                    return [2 /*return*/, sheet.cssRules];\r\n                case 2:\r\n                    e_1 = _a.sent();\r\n                    return [4 /*yield*/, new Promise(function (success, error) {\r\n                            s.addEventListener(\"load\", function () {\r\n                                success(sheet.cssRules);\r\n                            }, true);\r\n                            s.addEventListener(\"error\", function (e) {\r\n                                error(e);\r\n                            }, true);\r\n                            setTimeout(function () {\r\n                                error(new Error(\"Timeout while waiting for <style> to load\"));\r\n                            }, 10000);\r\n                        })];\r\n                case 3: \r\n                // Needed because of https://bugzilla.mozilla.org/show_bug.cgi?id=625013\r\n                return [2 /*return*/, _a.sent()];\r\n                case 4: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n// This loads a stylesheet by URL and then calls the function with it\r\n// TODO this should be moved into utils or something\r\nfunction loadStylesheet(doc, url, f) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var response, e_2, s, rules;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    _a.trys.push([0, 2, , 3]);\r\n                    return [4 /*yield*/, $net.load(url)];\r\n                case 1:\r\n                    response = _a.sent();\r\n                    return [3 /*break*/, 3];\r\n                case 2:\r\n                    e_2 = _a.sent();\r\n                    console.error(\"Failed to load stylesheet\", url, e_2);\r\n                    return [2 /*return*/];\r\n                case 3:\r\n                    s = doc.createElement(\"style\");\r\n                    s.textContent = response.response;\r\n                    doc.head.appendChild(s);\r\n                    _a.label = 4;\r\n                case 4:\r\n                    _a.trys.push([4, , 7, 8]);\r\n                    return [4 /*yield*/, getCssRules(s)];\r\n                case 5:\r\n                    rules = _a.sent();\r\n                    return [4 /*yield*/, eachStylesheet(doc, url, rules, f)];\r\n                case 6:\r\n                    _a.sent();\r\n                    return [3 /*break*/, 8];\r\n                case 7:\r\n                    doc.head.removeChild(s);\r\n                    return [7 /*endfinally*/];\r\n                case 8: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n// This calls a function for each CSSRule inside of a CSSStyleSheet.\r\n// If the CSSStyleSheet has any @import, then it will recursively call the function for those CSSRules too.\r\n// TODO this should be moved into utils or something\r\nfunction eachStylesheet(doc, topUrl, rules, f) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var promises, length, i, rule, url;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    promises = [];\r\n                    length = rules.length;\r\n                    for (i = 0; i < length; i++) {\r\n                        rule = rules[i];\r\n                        if (rule.type === CSSRule.IMPORT_RULE) {\r\n                            url = rule.href;\r\n                            if (url) {\r\n                                url = $utils.joinUrl(topUrl, url);\r\n                                promises.push(loadStylesheet(doc, url, f));\r\n                            }\r\n                        }\r\n                        else {\r\n                            f(topUrl, rule);\r\n                        }\r\n                    }\r\n                    if (!promises.length) return [3 /*break*/, 2];\r\n                    return [4 /*yield*/, Promise.all(promises)];\r\n                case 1:\r\n                    _a.sent();\r\n                    _a.label = 2;\r\n                case 2: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n// This calls a function for each CSSRule for all of the stylesheets in the page.\r\n// If the CSSStyleSheet has any @import, then it will recursively call the function for those CSSRules too.\r\n// TODO this should be moved into utils or something\r\nfunction eachStylesheets(f) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var iframe, doc_1;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    iframe = document.createElement(\"iframe\");\r\n                    // This causes it to use the same origin policy as the parent page\r\n                    iframe.src = \"about:blank\";\r\n                    // This tries to make it more accessible for screen readers\r\n                    iframe.setAttribute(\"title\", \"\");\r\n                    document.head.appendChild(iframe);\r\n                    _a.label = 1;\r\n                case 1:\r\n                    _a.trys.push([1, , 3, 4]);\r\n                    doc_1 = iframe.contentDocument;\r\n                    // TODO use $dom.getRoot instead of document ?\r\n                    return [4 /*yield*/, Promise.all($array.map(document.styleSheets, function (sheet) {\r\n                            var url = sheet.href;\r\n                            if (url == null) {\r\n                                return eachStylesheet(doc_1, location.href, sheet.cssRules, f);\r\n                            }\r\n                            else {\r\n                                url = $utils.joinUrl(location.href, url);\r\n                                return loadStylesheet(doc_1, url, f);\r\n                            }\r\n                        }))];\r\n                case 2:\r\n                    // TODO use $dom.getRoot instead of document ?\r\n                    _a.sent();\r\n                    return [3 /*break*/, 4];\r\n                case 3:\r\n                    document.head.removeChild(iframe);\r\n                    return [7 /*endfinally*/];\r\n                case 4: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * [[Export]] allows downloading of current snapshot of the chart as an\r\n * image, PDF, or its data in various formats.\r\n *\r\n * The export functionality is enabled by default in charts and is accessible\r\n * via API or optional export menu.\r\n *\r\n * To enable menu, simply access export's `menu` property. E.g.:\r\n *\r\n * ```TypeScript\r\n * chart.exporting.menu = new am4core.ExportMenu();\r\n * ```\r\n * ```JavaScript\r\n * chart.exporting.menu = new am4core.ExportMenu();\r\n * ```\r\n * ```JSON\r\n * {\r\n *   // ...\r\n *   \"exporting\": {\r\n *     \"menu\": {}\r\n *   }\r\n * }\r\n * ```\r\n *\r\n * To export via API, use `export()` method:\r\n *\r\n * ```TypeScript\r\n * chart.exporting.export(type, [options]);\r\n * ```\r\n * ```JavaScript\r\n * chart.exporting.export(type, [options]);\r\n * ```\r\n *\r\n * E.g.:\r\n *\r\n * ```TypeScript\r\n * chart.exporting.export(\"png\");\r\n * ```\r\n * ```JavaScript\r\n * chart.exporting.export(\"png\");\r\n * ```\r\n *\r\n * @todo Better loading indicator?\r\n * @todo Implement multiplier option\r\n * @todo Handling of hanged exports\r\n * @important\r\n */\r\nvar Export = /** @class */ (function (_super) {\r\n    __extends(Export, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Export(container) {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * Adapter.\r\n         */\r\n        _this.adapter = new Adapter(_this);\r\n        /**\r\n         * Holds options for each format.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        _this._formatOptions = new Dictionary();\r\n        /**\r\n         * Extra [[Sprite]] elements to include in exports.\r\n         */\r\n        _this._extraSprites = [];\r\n        /**\r\n         * A list of [[Sprite]] elements that need to be valid before export\r\n         * commences.\r\n         */\r\n        _this._validateSprites = [];\r\n        /**\r\n         * Indicates whether data fields were generated dynamically (`true`) or\r\n         * if they were pre-set by the user (`false`).\r\n         */\r\n        _this._dynamicDataFields = true;\r\n        /**\r\n         * Holds a list of objects that were temporarily removed from the DOM while\r\n         * exporting. Those most probably are tainted images, or foreign objects that\r\n         * would otherwise prevent SVG to be converted to canvas.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        _this._removedObjects = new List();\r\n        /**\r\n         * Holds references to the objects that were temporarily hidden when export\r\n         * started, so that we can reveal them back when export ends.\r\n         */\r\n        _this._hiddenObjects = [];\r\n        /**\r\n         * Indicates if non-exportable objects are now hidden;\r\n         */\r\n        _this._objectsAlreadyHidden = false;\r\n        /**\r\n         * Exported files will be prefixed with whatever it is set here.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        _this._filePrefix = \"amCharts\";\r\n        /**\r\n         * If you are using web fonts (such as Google Fonts), your chart might be\r\n         * using them as well.\r\n         *\r\n         * Normally, exporting to image will require to download these fonts so the\r\n         * are carried over to exported image.\r\n         *\r\n         * This setting can be used to disable or enable this functionality.\r\n         *\r\n         * @default true\r\n         */\r\n        _this.useWebFonts = true;\r\n        /**\r\n         * Many modern displays have use more actual pixels per displayed pixel. This\r\n         * results in sharper images on screen. Unfortunately, when exported to a\r\n         * bitmap image of the sam width/height size it will lose those extra pixels,\r\n         * resulting in somewhat blurry image.\r\n         *\r\n         * This is why we are going to export images larger than they are, so that we\r\n         * don't lose any details.\r\n         *\r\n         * If you'd rather export images without change in size, set this to `false`.\r\n         *\r\n         * @default true\r\n         */\r\n        _this.useRetina = true;\r\n        /**\r\n         * By default Export will try to use built-in method for transforming chart\r\n         * into an image for download, then fallback to external library (canvg) for\r\n         * conversion if failed.\r\n         *\r\n         * Setting this to `false` will force use of external library for all export\r\n         * operations.\r\n         *\r\n         * It might be useful to turn off simplified export if you are using strict\r\n         * content security policies, that disallow images with blobs as their\r\n         * source.\r\n         *\r\n         * @default true\r\n         * @since 4.2.5\r\n         */\r\n        _this.useSimplifiedExport = true;\r\n        /**\r\n         * If export operation takes longer than milliseconds in this second, we will\r\n         * show a modal saying export operation took longer than expected.\r\n         */\r\n        _this.timeoutDelay = 2000;\r\n        _this._container = container;\r\n        _this.className = \"Export\";\r\n        // Set default options\r\n        _this._formatOptions.setKey(\"png\", {});\r\n        _this._formatOptions.setKey(\"jpg\", {\r\n            quality: 0.8\r\n        });\r\n        _this._formatOptions.setKey(\"gif\", {});\r\n        _this._formatOptions.setKey(\"svg\", {});\r\n        _this._formatOptions.setKey(\"pdf\", {\r\n            fontSize: 14,\r\n            imageFormat: \"png\",\r\n            addURL: true,\r\n            addColumnNames: true\r\n        });\r\n        _this._formatOptions.setKey(\"json\", {\r\n            indent: 2,\r\n            useLocale: true\r\n        });\r\n        _this._formatOptions.setKey(\"csv\", {\r\n            addColumnNames: true,\r\n            emptyAs: \"\"\r\n        });\r\n        _this._formatOptions.setKey(\"xlsx\", {\r\n            addColumnNames: true,\r\n            useLocale: true,\r\n            emptyAs: \"\"\r\n        });\r\n        _this._formatOptions.setKey(\"html\", {\r\n            addColumnNames: true,\r\n            emptyAs: \"\"\r\n        });\r\n        _this._formatOptions.setKey(\"pdfdata\", {\r\n            fontSize: 14,\r\n            imageFormat: \"png\",\r\n            addURL: true,\r\n            addColumnNames: true,\r\n            emptyAs: \"\"\r\n        });\r\n        _this._formatOptions.setKey(\"print\", {\r\n            delay: 500,\r\n            printMethod: \"iframe\"\r\n        });\r\n        // Add options adapter\r\n        _this.adapter.add(\"options\", function (arg) {\r\n            var formatOptions = _this._formatOptions.getKey(arg.type);\r\n            if (arg.options) {\r\n                arg.options = $object.merge(formatOptions, arg.options);\r\n            }\r\n            else {\r\n                arg.options = formatOptions;\r\n            }\r\n            return arg;\r\n        });\r\n        _this.applyTheme();\r\n        _this.dispatchImmediately(\"inited\");\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Export.prototype, \"menu\", {\r\n        /**\r\n         * @return ExportMenu instance\r\n         */\r\n        get: function () {\r\n            return this._menu;\r\n        },\r\n        /**\r\n         * An instance of [[ExportMenu]].\r\n         *\r\n         * To add an export menu to a chart, set this to a new instance of\r\n         * [[ExportMenu]].\r\n         *\r\n         * ```TypeScript\r\n         * chart.exporting.menu = new am4core.ExportMenu();\r\n         * ```\r\n         * ```JavaScript\r\n         * chart.exporting.menu = new am4core.ExportMenu();\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // ...\r\n         *   \"exporting\": {\r\n         *     \"menu\": {}\r\n         *   }\r\n         * }\r\n         * ```\r\n         *\r\n         * @param menu  ExportMenu instance\r\n         */\r\n        set: function (menu) {\r\n            var _this = this;\r\n            if (this._menu) {\r\n                this.removeDispose(this._menu);\r\n            }\r\n            this._menu = menu;\r\n            // Set container and language\r\n            this._menu.container = this.container;\r\n            this._menu.language = this._language;\r\n            // Add adapter to check for browser support\r\n            this._menu.adapter.add(\"branch\", function (arg) {\r\n                arg.branch.unsupported = !_this.typeSupported(arg.branch.type);\r\n                return arg;\r\n            });\r\n            // Add click events\r\n            this._menu.events.on(\"hit\", function (ev) {\r\n                _this.export(ev.branch.type, ev.branch.options);\r\n                _this.menu.close();\r\n            });\r\n            this._menu.events.on(\"enter\", function (ev) {\r\n                _this.export(ev.branch.type, ev.branch.options);\r\n                _this.menu.close();\r\n            });\r\n            this._menu.events.on(\"over\", function (ev) {\r\n                _this._disablePointers();\r\n            });\r\n            this._menu.events.on(\"out\", function (ev) {\r\n                _this._releasePointers();\r\n            });\r\n            // Dispatch event\r\n            this.dispatchImmediately(\"menucreated\");\r\n            // Prefix with Sprite's class name\r\n            this._menu.adapter.add(\"classPrefix\", function (obj) {\r\n                obj.classPrefix = options.classNamePrefix + obj.classPrefix;\r\n                return obj;\r\n            });\r\n            // Add menu to disposers so that it's destroyed when Export is disposed\r\n            this._disposers.push(this._menu);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Checks if this specific menu item type is supported by current system.\r\n     *\r\n     * @param type  Menu item type\r\n     * @return `false` if not supported\r\n     */\r\n    Export.prototype.typeSupported = function (type) {\r\n        var supported = true;\r\n        if (type === \"pdf\") {\r\n            //supported = this.downloadSupport();\r\n        }\r\n        else if (type === \"xlsx\") {\r\n            //supported = (this.downloadSupport() && this._hasData()) ? true : false;\r\n            supported = this._hasData() ? true : false;\r\n        }\r\n        else if (type == \"print\" && !window.print) {\r\n            supported = false;\r\n        }\r\n        else if ([\"json\", \"csv\", \"html\", \"pdfdata\"].indexOf(type) !== -1 && !this._hasData()) {\r\n            supported = false;\r\n        }\r\n        return this.adapter.apply(\"supported\", {\r\n            supported: supported,\r\n            type: type\r\n        }).supported;\r\n    };\r\n    /**\r\n     * Checks if data is available.\r\n     *\r\n     * @return Has data?\r\n     */\r\n    Export.prototype._hasData = function () {\r\n        return this.data && this.data.length;\r\n    };\r\n    /**\r\n     * Get function to handle export for particular format.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Export.prototype._getFunction = function (type) {\r\n        switch (type) {\r\n            case \"png\":\r\n            case \"gif\":\r\n            case \"jpg\":\r\n                return this.getImage;\r\n            case \"svg\":\r\n                return this.getSVG;\r\n            case \"pdf\":\r\n            case \"pdfdata\":\r\n                return this.getPDF;\r\n            case \"xlsx\":\r\n                return this.getExcel;\r\n            case \"csv\":\r\n                return this.getCSV;\r\n            case \"json\":\r\n                return this.getJSON;\r\n            case \"html\":\r\n                return this.getHTML;\r\n            case \"print\":\r\n                return this.getPrint;\r\n            default:\r\n                return this.unsupported;\r\n        }\r\n    };\r\n    /**\r\n     * Initiates export procedure.\r\n     *\r\n     * @param type     Export type\r\n     * @param options  Options\r\n     * @return `true` if export was successful\r\n     * @async\r\n     */\r\n    Export.prototype.export = function (type, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var event_1, func, data, event_2, event_3;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        // Check if it's a custom item, and do nothing or execute custom callback\r\n                        if (type == \"custom\") {\r\n                            this.handleCustom(options);\r\n                            return [2 /*return*/, true];\r\n                        }\r\n                        // Dispatch event\r\n                        if (this.events.isEnabled(\"exportstarted\")) {\r\n                            event_1 = {\r\n                                \"type\": \"exportstarted\",\r\n                                \"target\": this,\r\n                                \"format\": type,\r\n                                \"options\": options\r\n                            };\r\n                            this.events.dispatchImmediately(\"exportstarted\", event_1);\r\n                        }\r\n                        // Schedule a preloader\r\n                        this.showPreloader();\r\n                        // Schedule a timeout\r\n                        if (this.timeoutDelay) {\r\n                            this.hideTimeout();\r\n                            this._timeoutTimeout = this.setTimeout(function () {\r\n                                // Dispatch event\r\n                                if (_this.events.isEnabled(\"exporttimedout\")) {\r\n                                    var event_4 = {\r\n                                        \"type\": \"exporttimedout\",\r\n                                        \"target\": _this,\r\n                                        \"format\": type,\r\n                                        \"options\": options\r\n                                    };\r\n                                    _this.events.dispatchImmediately(\"exporttimedout\", event_4);\r\n                                }\r\n                                // Show modal\r\n                                _this.showTimeout();\r\n                            }, this.timeoutDelay);\r\n                        }\r\n                        // Hide items that should not be exported\r\n                        this.hideNonExportableSprites();\r\n                        func = this._getFunction(type);\r\n                        // Give chance for plugins to override both function and options\r\n                        options = this.adapter.apply(\"options\", {\r\n                            options: options,\r\n                            type: type\r\n                        }).options;\r\n                        func = this.adapter.apply(\"exportFunction\", {\r\n                            func: func,\r\n                            type: type,\r\n                            options: options\r\n                        }).func;\r\n                        return [4 /*yield*/, func.call(this, type, options)];\r\n                    case 1:\r\n                        data = _a.sent();\r\n                        // Restore temporarily hidden elements\r\n                        this.restoreNonExportableSprites();\r\n                        if (data) {\r\n                            // Dispatch event\r\n                            if (this.events.isEnabled(\"exportfinished\")) {\r\n                                event_2 = {\r\n                                    \"type\": \"exportfinished\",\r\n                                    \"target\": this,\r\n                                    \"format\": type,\r\n                                    \"options\": options\r\n                                };\r\n                                this.events.dispatchImmediately(\"exportfinished\", event_2);\r\n                            }\r\n                            // Hide preloader and timeout modals\r\n                            this.hidePreloader();\r\n                            this.hideTimeout();\r\n                            if (this.menu) {\r\n                                this.menu.close();\r\n                            }\r\n                            // Download or print\r\n                            if (type === \"print\") {\r\n                                return [2 /*return*/, this.print(data, options, this.adapter.apply(\"title\", {\r\n                                        title: this.title,\r\n                                        options: options\r\n                                    }).title)];\r\n                            }\r\n                            else {\r\n                                if (type == \"pdfdata\") {\r\n                                    return [2 /*return*/, this.download(data, this.filePrefix + \".pdf\")];\r\n                                }\r\n                                return [2 /*return*/, this.download(data, this.filePrefix + \".\" + type)];\r\n                            }\r\n                        }\r\n                        else {\r\n                            // Throw exception?\r\n                            // @todo\r\n                            // Dispatch event\r\n                            if (this.events.isEnabled(\"error\")) {\r\n                                event_3 = {\r\n                                    \"type\": \"error\",\r\n                                    \"target\": this,\r\n                                    \"format\": type,\r\n                                    \"options\": options\r\n                                };\r\n                                this.events.dispatchImmediately(\"error\", event_3);\r\n                            }\r\n                            return [2 /*return*/, false];\r\n                        }\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * A function that should handle unsupported export types.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param type     Export type\r\n     * @param options  Options\r\n     * @return Promise\r\n     * @async\r\n     */\r\n    Export.prototype.unsupported = function (type, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                // TODO should this return `undefined`?\r\n                return [2 /*return*/, \"\"];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Handles click on a \"custom\" menu item.\r\n     *\r\n     * Basically, if it has \"callback\" enabled, it will be called. Nothing else.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param options  Options\r\n     */\r\n    Export.prototype.handleCustom = function (options) {\r\n        if ($type.hasValue(options) && $type.hasValue(options.callback)) {\r\n            options.callback.call(options.callbackTarget || this, options);\r\n        }\r\n    };\r\n    /**\r\n     * Requests a Print of the chart.\r\n     *\r\n     * @param type     Export type\r\n     * @param options  Options\r\n     * @return Promise\r\n     * @async\r\n     */\r\n    Export.prototype.getPrint = function (type, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, this.getImage(\"png\", options)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * A function that returns data: URI encoded @font-family, so that way it can be embedded into SVG.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return String which can be embedded directly into a <style> element.\r\n     * @async\r\n     */\r\n    Export.prototype.getFontFamilies = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var DOMURL, blobs, promises, a;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        DOMURL = this.getDOMURL();\r\n                        blobs = [];\r\n                        promises = [];\r\n                        return [4 /*yield*/, eachStylesheets(function (topUrl, rule) {\r\n                                if (rule.type === CSSRule.FONT_FACE_RULE) {\r\n                                    var cssText_1 = rule.cssText;\r\n                                    // TODO this is necessary because Edge doesn't let you access the src using getPropertyValue\r\n                                    var src = fontFamilySrcRegexp.exec(cssText_1);\r\n                                    if (src !== null) {\r\n                                        // TODO make this faster (don't create Promises for non-url stuff)\r\n                                        var urls = src[1].split(/ *, */).map(function (url) { return __awaiter(_this, void 0, void 0, function () {\r\n                                            var a, after, fullUrl, response, url_1, e_3;\r\n                                            return __generator(this, function (_a) {\r\n                                                switch (_a.label) {\r\n                                                    case 0:\r\n                                                        a = /^url\\([\"']?([^\"'\\)]+)[\"']?\\)([^,]*)$/.exec(url);\r\n                                                        if (!(a === null)) return [3 /*break*/, 1];\r\n                                                        return [2 /*return*/, url];\r\n                                                    case 1:\r\n                                                        after = a[2];\r\n                                                        fullUrl = $utils.joinUrl(topUrl, a[1]);\r\n                                                        _a.label = 2;\r\n                                                    case 2:\r\n                                                        _a.trys.push([2, 7, , 8]);\r\n                                                        return [4 /*yield*/, $net.load(fullUrl, undefined, { responseType: \"blob\" })];\r\n                                                    case 3:\r\n                                                        response = _a.sent();\r\n                                                        if (!supportsBlobUri()) return [3 /*break*/, 4];\r\n                                                        url_1 = DOMURL.createObjectURL(response.blob);\r\n                                                        blobs.push(url_1);\r\n                                                        return [3 /*break*/, 6];\r\n                                                    case 4: return [4 /*yield*/, blobToDataUri(response.blob)];\r\n                                                    case 5:\r\n                                                        url_1 = _a.sent();\r\n                                                        _a.label = 6;\r\n                                                    case 6: \r\n                                                    // TODO should it should escape the URI ?\r\n                                                    return [2 /*return*/, \"url(\\\"\" + url_1 + \"\\\")\" + after];\r\n                                                    case 7:\r\n                                                        e_3 = _a.sent();\r\n                                                        console.error(\"Failed to load font\", fullUrl, e_3);\r\n                                                        return [2 /*return*/, null];\r\n                                                    case 8: return [2 /*return*/];\r\n                                                }\r\n                                            });\r\n                                        }); });\r\n                                        promises.push(Promise.all(urls).then(function (a) {\r\n                                            a = a.filter(function (x) { return x != null; });\r\n                                            if (a.length === 0) {\r\n                                                return \"\";\r\n                                            }\r\n                                            else {\r\n                                                return cssText_1.replace(fontFamilySrcRegexp, \"src: \" + a.join(\", \") + \";\");\r\n                                            }\r\n                                        }));\r\n                                    }\r\n                                }\r\n                            })];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, Promise.all(promises)];\r\n                    case 2:\r\n                        a = _a.sent();\r\n                        return [2 /*return*/, {\r\n                                blobs: blobs,\r\n                                cssText: a.filter(function (x) { return !!x; }).join(\"\\n\")\r\n                            }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Produces image output from the element.\r\n     *\r\n     * Converts to a `Canvas` first, then produces an image to download.\r\n     *\r\n     * This is an asynchronous function. Rather than returning a result, it\r\n     * returns a Promise.\r\n     *\r\n     * You can use `await` notion from other async functions, or `then()`\r\n     * anywhere else.\r\n     *\r\n     * ```TypeScript\r\n     * let img;\r\n     *\r\n     * // Async\r\n     * img = await chart.exporting.getImage( \"png\" );\r\n     *\r\n     * // Sync\r\n     * chart.exporting.getImage( \"png\" ).then( ( data ) => {\r\n     *   img = data;\r\n     * } );\r\n     * ```\r\n     * ```JavaScript\r\n     * var img;\r\n     * chart.exporting.getImage( \"png\" ).then( ( data ) => {\r\n     *   img = data;\r\n     * } );\r\n     * ```\r\n     *\r\n     * @param  type           Image format\r\n     * @param  options        Options\r\n     * @param  includeExtras  Should extra sprites be included if set?\r\n     * @return Promise\r\n     */\r\n    Export.prototype.getImage = function (type, options, includeExtras) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var prehidden, canvas, uri, e_4, data, data;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        prehidden = this._objectsAlreadyHidden;\r\n                        if (!prehidden) {\r\n                            this.hideNonExportableSprites();\r\n                        }\r\n                        if (!$type.hasValue(options)) {\r\n                            options = this.getFormatOptions(type);\r\n                        }\r\n                        // Wait for required elements to be ready before proceeding\r\n                        return [4 /*yield*/, this.awaitValidSprites()];\r\n                    case 1:\r\n                        // Wait for required elements to be ready before proceeding\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.simplifiedImageExport()];\r\n                    case 2:\r\n                        if (!_a.sent()) return [3 /*break*/, 10];\r\n                        _a.label = 3;\r\n                    case 3:\r\n                        _a.trys.push([3, 7, , 9]);\r\n                        return [4 /*yield*/, this.getCanvas(options)];\r\n                    case 4:\r\n                        canvas = _a.sent();\r\n                        if (!(includeExtras !== false)) return [3 /*break*/, 6];\r\n                        return [4 /*yield*/, this.addExtras(canvas, options)];\r\n                    case 5:\r\n                        canvas = _a.sent();\r\n                        _a.label = 6;\r\n                    case 6:\r\n                        uri = canvas.toDataURL(this.getContentType(type), options.quality);\r\n                        // Get rid of the canvas\r\n                        this.disposeCanvas(canvas);\r\n                        if (!prehidden) {\r\n                            this.restoreNonExportableSprites();\r\n                        }\r\n                        return [2 /*return*/, uri];\r\n                    case 7:\r\n                        e_4 = _a.sent();\r\n                        console.error(e_4.message + \"\\n\" + e_4.stack);\r\n                        console.warn(\"Simple export failed, falling back to advanced export\");\r\n                        return [4 /*yield*/, this.getImageAdvanced(type, options, includeExtras)];\r\n                    case 8:\r\n                        data = _a.sent();\r\n                        if (!prehidden) {\r\n                            this.restoreNonExportableSprites();\r\n                        }\r\n                        return [2 /*return*/, data];\r\n                    case 9: return [3 /*break*/, 12];\r\n                    case 10: return [4 /*yield*/, this.getImageAdvanced(type, options, includeExtras)];\r\n                    case 11:\r\n                        data = _a.sent();\r\n                        if (!prehidden) {\r\n                            this.restoreNonExportableSprites();\r\n                        }\r\n                        return [2 /*return*/, data];\r\n                    case 12: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Adds extra elements to the canvas.\r\n     *\r\n     * @param  canvas   Original canvas\r\n     * @param  options  Options\r\n     */\r\n    Export.prototype.addExtras = function (canvas, options, advanced) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var middleLeft_1, middleTop_1, middleWidth_1, middleHeight_1, extraRight_1, extraBottom_1, extras, newCanvas, ctx_1, background, left_1, top_1, right_1, bottom_1;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!this.extraSprites.length) return [3 /*break*/, 2];\r\n                        middleLeft_1 = 0;\r\n                        middleTop_1 = 0;\r\n                        middleWidth_1 = canvas.width;\r\n                        middleHeight_1 = canvas.height;\r\n                        extraRight_1 = 0;\r\n                        extraBottom_1 = 0;\r\n                        return [4 /*yield*/, Promise.all($array.map(this.extraSprites, function (extraSprite) { return __awaiter(_this, void 0, void 0, function () {\r\n                                var extra, extraCanvas, extraWidth, extraHeight;\r\n                                return __generator(this, function (_a) {\r\n                                    switch (_a.label) {\r\n                                        case 0:\r\n                                            if (extraSprite instanceof Sprite) {\r\n                                                extra = {\r\n                                                    sprite: extraSprite,\r\n                                                    position: \"bottom\"\r\n                                                };\r\n                                            }\r\n                                            else {\r\n                                                extra = extraSprite;\r\n                                            }\r\n                                            // Set defaults\r\n                                            extra.position = extra.position || \"bottom\";\r\n                                            extra.marginTop = extra.marginTop || 0;\r\n                                            extra.marginRight = extra.marginRight || 0;\r\n                                            extra.marginBottom = extra.marginBottom || 0;\r\n                                            extra.marginLeft = extra.marginLeft || 0;\r\n                                            if (!advanced) return [3 /*break*/, 2];\r\n                                            return [4 /*yield*/, extra.sprite.exporting.getCanvasAdvanced(options)];\r\n                                        case 1:\r\n                                            extraCanvas = _a.sent();\r\n                                            return [3 /*break*/, 4];\r\n                                        case 2: return [4 /*yield*/, extra.sprite.exporting.getCanvas(options)];\r\n                                        case 3:\r\n                                            extraCanvas = _a.sent();\r\n                                            _a.label = 4;\r\n                                        case 4:\r\n                                            extraWidth = extraCanvas.width + extra.marginLeft + extra.marginRight;\r\n                                            extraHeight = extraCanvas.height + extra.marginTop + extra.marginBottom;\r\n                                            if (extra.position == \"top\") {\r\n                                                middleWidth_1 = extra.crop ? middleHeight_1 : $math.max(middleWidth_1, extraWidth);\r\n                                                middleTop_1 += extraHeight;\r\n                                            }\r\n                                            else if (extra.position == \"right\") {\r\n                                                middleHeight_1 = extra.crop ? middleHeight_1 : $math.max(middleHeight_1, extraHeight);\r\n                                                extraRight_1 += extraWidth;\r\n                                            }\r\n                                            else if (extra.position == \"left\") {\r\n                                                middleHeight_1 = extra.crop ? middleHeight_1 : $math.max(middleHeight_1, extraHeight);\r\n                                                middleLeft_1 += extraWidth;\r\n                                            }\r\n                                            else if (extra.position === \"bottom\") {\r\n                                                middleWidth_1 = extra.crop ? middleHeight_1 : $math.max(middleWidth_1, extraWidth);\r\n                                                extraBottom_1 += extraHeight;\r\n                                            }\r\n                                            return [2 /*return*/, {\r\n                                                    canvas: extraCanvas,\r\n                                                    position: extra.position,\r\n                                                    left: extra.marginLeft,\r\n                                                    top: extra.marginTop,\r\n                                                    width: extraWidth,\r\n                                                    height: extraHeight\r\n                                                }];\r\n                                    }\r\n                                });\r\n                            }); }))];\r\n                    case 1:\r\n                        extras = _a.sent();\r\n                        newCanvas = this.getDisposableCanvas();\r\n                        newCanvas.width = middleLeft_1 + middleWidth_1 + extraRight_1;\r\n                        newCanvas.height = middleTop_1 + middleHeight_1 + extraBottom_1;\r\n                        ctx_1 = newCanvas.getContext(\"2d\");\r\n                        background = this.backgroundColor || this.findBackgroundColor(this.sprite.dom);\r\n                        if (background) {\r\n                            ctx_1.fillStyle = background.toString();\r\n                            ctx_1.fillRect(0, 0, newCanvas.width, newCanvas.height);\r\n                        }\r\n                        left_1 = middleLeft_1;\r\n                        top_1 = middleTop_1;\r\n                        right_1 = left_1 + middleWidth_1;\r\n                        bottom_1 = top_1 + middleHeight_1;\r\n                        // Radiates outwards from center\r\n                        $array.each(extras, function (extra) {\r\n                            if (extra.position == \"top\") {\r\n                                top_1 -= extra.height;\r\n                                ctx_1.drawImage(extra.canvas, middleLeft_1 + extra.left, top_1 + extra.top);\r\n                            }\r\n                            else if (extra.position == \"right\") {\r\n                                ctx_1.drawImage(extra.canvas, right_1 + extra.left, middleTop_1 + extra.top);\r\n                                right_1 += extra.width;\r\n                            }\r\n                            else if (extra.position == \"left\") {\r\n                                left_1 -= extra.width;\r\n                                ctx_1.drawImage(extra.canvas, left_1 + extra.left, middleTop_1 + extra.top);\r\n                            }\r\n                            else if (extra.position === \"bottom\") {\r\n                                ctx_1.drawImage(extra.canvas, middleLeft_1 + extra.left, bottom_1 + extra.top);\r\n                                bottom_1 += extra.height;\r\n                            }\r\n                            _this.disposeCanvas(extra.canvas);\r\n                        });\r\n                        ctx_1.drawImage(canvas, middleLeft_1, middleTop_1);\r\n                        return [2 /*return*/, newCanvas];\r\n                    case 2: return [2 /*return*/, canvas];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Returns canvas representation of the [[Sprite]].\r\n     *\r\n     * @param   options  Options\r\n     * @return           Canvas\r\n     */\r\n    Export.prototype.getCanvas = function (options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var background, DOMURL, url, blobs, canvas, width, height, font, fontSize, pixelRatio, ctx, promises, a, data, svg, img;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        // Options are set?\r\n                        if (!$type.hasValue(options)) {\r\n                            options = {};\r\n                        }\r\n                        background = this.backgroundColor || this.findBackgroundColor(this.sprite.dom);\r\n                        DOMURL = this.getDOMURL();\r\n                        url = null;\r\n                        blobs = null;\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, , 4, 5]);\r\n                        width = this.sprite.pixelWidth, height = this.sprite.pixelHeight, font = $dom.findFont(this.sprite.dom), fontSize = $dom.findFontSize(this.sprite.dom);\r\n                        // Create canvas and its 2D context\r\n                        canvas = this.getDisposableCanvas();\r\n                        pixelRatio = this.getPixelRatio(options);\r\n                        canvas.style.width = width + 'px';\r\n                        canvas.style.height = height + 'px';\r\n                        canvas.width = width * pixelRatio;\r\n                        canvas.height = height * pixelRatio;\r\n                        ctx = canvas.getContext(\"2d\");\r\n                        if (pixelRatio != 1) {\r\n                            ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n                        }\r\n                        // Add background if necessary\r\n                        if (background) {\r\n                            ctx.fillStyle = background.toString();\r\n                            ctx.fillRect(0, 0, width, height);\r\n                        }\r\n                        promises = [];\r\n                        if (this.useWebFonts) {\r\n                            // TODO what if one of the other things errors before it's been able to set `blobs` ?\r\n                            promises.push(this.getFontFamilies().then(function (fonts) {\r\n                                blobs = fonts.blobs;\r\n                                return fonts.cssText;\r\n                            }));\r\n                        }\r\n                        promises.push(this.imagesToDataURI(this.sprite.dom, options));\r\n                        promises.push(this.prepForeignObjects(this.sprite.dom, options));\r\n                        return [4 /*yield*/, Promise.all(promises)];\r\n                    case 2:\r\n                        a = _a.sent();\r\n                        data = this.normalizeSVG(\"<style>\" + a[0] + \"</style>\" + this.serializeElement(this.sprite.paper.defs) + this.serializeElement(this.sprite.dom), options, width, height, font, fontSize);\r\n                        svg = new Blob([data], { type: \"image/svg+xml\" });\r\n                        url = DOMURL.createObjectURL(svg);\r\n                        return [4 /*yield*/, this.loadNewImage(url, width, height, \"anonymous\")];\r\n                    case 3:\r\n                        img = _a.sent();\r\n                        // Draw image on canvas\r\n                        ctx.drawImage(img, 0, 0);\r\n                        return [3 /*break*/, 5];\r\n                    case 4:\r\n                        if (url !== null) {\r\n                            DOMURL.revokeObjectURL(url);\r\n                        }\r\n                        if (blobs !== null) {\r\n                            $array.each(blobs, function (url) {\r\n                                DOMURL.revokeObjectURL(url);\r\n                            });\r\n                        }\r\n                        // Restore replaced tainted images in DOM\r\n                        this.restoreRemovedObjects();\r\n                        return [7 /*endfinally*/];\r\n                    case 5: return [2 /*return*/, canvas];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Returns canvas representation of the [[Sprite]] using canvg.\r\n     *\r\n     * @param   options  Options\r\n     * @return           Canvas\r\n     */\r\n    Export.prototype.getCanvasAdvanced = function (options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var background, canvg, width, height, font, fontSize, data, canvas, pixelRatio, config;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        // Options are set?\r\n                        if (!$type.hasValue(options)) {\r\n                            options = {};\r\n                        }\r\n                        // Convert external images to data uris\r\n                        return [4 /*yield*/, this.imagesToDataURI(this.sprite.dom, options)];\r\n                    case 1:\r\n                        // Convert external images to data uris\r\n                        _a.sent();\r\n                        background = this.backgroundColor || this.findBackgroundColor(this.sprite.dom);\r\n                        return [4 /*yield*/, this.canvg];\r\n                    case 2:\r\n                        canvg = _a.sent();\r\n                        width = this.sprite.pixelWidth, height = this.sprite.pixelHeight, font = $dom.findFont(this.sprite.dom), fontSize = $dom.findFontSize(this.sprite.dom);\r\n                        data = this.normalizeSVG(this.serializeElement(this.sprite.paper.defs) + this.serializeElement(this.sprite.dom), options, width, height, font, fontSize, background);\r\n                        canvas = this.getDisposableCanvas();\r\n                        pixelRatio = this.getPixelRatio(options);\r\n                        canvas.style.width = (width * pixelRatio) + 'px';\r\n                        canvas.style.height = (height * pixelRatio) + 'px';\r\n                        canvas.width = width * pixelRatio;\r\n                        canvas.height = height * pixelRatio;\r\n                        config = {\r\n                            //ignoreDimensions: true,\r\n                            useCORS: true\r\n                        };\r\n                        if (pixelRatio != 1) {\r\n                            config.ignoreDimensions = true;\r\n                            config.scaleWidth = width * pixelRatio;\r\n                            config.scaleHeight = height * pixelRatio;\r\n                        }\r\n                        canvg(canvas, data, config);\r\n                        return [2 /*return*/, canvas];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Tries to dynamically load [canvg.js](https://github.com/canvg/canvg) and\r\n     * export an image using its functions.\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @param type     Image format\r\n     * @param options  Options\r\n     * @return Data uri\r\n     */\r\n    Export.prototype.getImageAdvanced = function (type, options, includeExtras) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var prehidden, canvas, uri;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        prehidden = this._objectsAlreadyHidden;\r\n                        if (!prehidden) {\r\n                            this.hideNonExportableSprites();\r\n                        }\r\n                        if (!$type.hasValue(options)) {\r\n                            options = this.getFormatOptions(type);\r\n                        }\r\n                        return [4 /*yield*/, this.getCanvasAdvanced(options)];\r\n                    case 1:\r\n                        canvas = _a.sent();\r\n                        if (!(includeExtras !== false)) return [3 /*break*/, 3];\r\n                        return [4 /*yield*/, this.addExtras(canvas, options, true)];\r\n                    case 2:\r\n                        canvas = _a.sent();\r\n                        _a.label = 3;\r\n                    case 3:\r\n                        uri = canvas.toDataURL(this.getContentType(type), options.quality);\r\n                        // Get rid of the canvas\r\n                        this.disposeCanvas(canvas);\r\n                        if (!prehidden) {\r\n                            this.restoreNonExportableSprites();\r\n                        }\r\n                        return [2 /*return*/, uri];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Creates a `<canvas>` element and returns it.\r\n     *\r\n     * @return Canvas element\r\n     */\r\n    Export.prototype.getDisposableCanvas = function () {\r\n        var canvas = document.createElement(\"canvas\");\r\n        canvas.style.position = \"fixed\";\r\n        canvas.style.top = \"-10000px\";\r\n        document.body.appendChild(canvas);\r\n        return canvas;\r\n    };\r\n    /**\r\n     * Removes canvas.\r\n     *\r\n     * @param canvas  Canvas element\r\n     */\r\n    Export.prototype.disposeCanvas = function (canvas) {\r\n        document.body.removeChild(canvas);\r\n    };\r\n    /**\r\n     * Returns pixel ratio for retina displays.\r\n     *\r\n     * @return Pixel ratio\r\n     */\r\n    Export.prototype.getPixelRatio = function (options) {\r\n        var scale = options && options.scale ? options.scale : 1;\r\n        return (this.useRetina ? $utils.getPixelRatio() : 1) * scale;\r\n    };\r\n    /**\r\n     * Converts all `<image>` tags in SVG to use data uris instead of external\r\n     * URLs\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param el       SVG node\r\n     * @param options  Options\r\n     * @return Promise\r\n     */\r\n    Export.prototype.imagesToDataURI = function (el, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var images, promises, count, i, image, href;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        images = el.querySelectorAll(\"image\");\r\n                        if (!images.length) return [3 /*break*/, 2];\r\n                        promises = [];\r\n                        // There are images, process each of them\r\n                        for (count = images.length, i = 0; i < count; i++) {\r\n                            image = images[i];\r\n                            href = image.getAttributeNS(Export.XLINK, \"href\");\r\n                            // no href?\r\n                            if (!href) {\r\n                                continue;\r\n                            }\r\n                            if (href.indexOf(\"data:image\") !== -1) {\r\n                                // Ignore image if it's already in Data URI format\r\n                            }\r\n                            else {\r\n                                // SVG or bitmap image?\r\n                                if (href.indexOf(\".svg\") !== -1) {\r\n                                    promises.push(this.svgToDataURI(image, options));\r\n                                }\r\n                                else {\r\n                                    promises.push(this.imageToDataURI(image, options));\r\n                                }\r\n                            }\r\n                        }\r\n                        return [4 /*yield*/, Promise.all(promises)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                    case 2: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * `foreignObject` elements cannot be exported. This function hides them\r\n     * temprarily. In the future it might try to convert them to SVG to make them\r\n     * exportable.\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param el       SVG node\r\n     * @param options  Options\r\n     * @return Promise\r\n     */\r\n    Export.prototype.prepForeignObjects = function (el, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var objects, count, i;\r\n            return __generator(this, function (_a) {\r\n                objects = el.querySelectorAll(\"foreignObject\");\r\n                if (objects.length) {\r\n                    // There are foreign objects, process each of them\r\n                    for (count = objects.length, i = 0; i < count; i++) {\r\n                        this.temporarilyRemoveObject(objects[i]);\r\n                    }\r\n                }\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Converts an SVG `<image>` to use its data uri for `href` instead of\r\n     * external file.\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param el       SVG element\r\n     * @param options  Options\r\n     */\r\n    Export.prototype.imageToDataURI = function (el, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var img, canvas, uri, e_5;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 2, , 3]);\r\n                        return [4 /*yield*/, this.loadNewImage(el.getAttributeNS(Export.XLINK, \"href\"), null, null, \"anonymous\")];\r\n                    case 1:\r\n                        // Create image\r\n                        img = _a.sent();\r\n                        canvas = document.createElement(\"canvas\");\r\n                        canvas.width = img.width;\r\n                        canvas.height = img.height;\r\n                        // Draw new image on it via `toDataURL`\r\n                        canvas.getContext(\"2d\").drawImage(img, 0, 0);\r\n                        // Replace image `href` with data uri\r\n                        // If we got to this point it means image has loaded, however we might\r\n                        // still get an error with `toDataURL()`\r\n                        try {\r\n                            uri = canvas.toDataURL();\r\n                            el.setAttribute(\"href\", uri);\r\n                            return [2 /*return*/, uri];\r\n                        }\r\n                        catch (e) {\r\n                            // Give up and temporarily remove the element href temporarily\r\n                            if (options.keepTainted !== false) {\r\n                                /*this._removedObjects.push({\r\n                                    \"element\": el,\r\n                                    \"originalHref\": el.getAttributeNS(Export.XLINK, \"href\")\r\n                                });\r\n                                el.setAttributeNS(Export.XLINK, \"href\", \"\");*/\r\n                                this.temporarilyRemoveObject(el);\r\n                            }\r\n                            return [2 /*return*/, undefined];\r\n                        }\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        e_5 = _a.sent();\r\n                        // Give up and temporarily remove the element's href\r\n                        if (!options || options.keepTainted !== false) {\r\n                            /*this._removedObjects.push({\r\n                                \"element\": el,\r\n                                \"originalHref\": el.getAttributeNS(Export.XLINK, \"href\")\r\n                            });\r\n                            el.setAttributeNS(Export.XLINK, \"href\", \"\");*/\r\n                            this.temporarilyRemoveObject(el);\r\n                        }\r\n                        return [2 /*return*/, undefined];\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Converts `<image>` with external SVG source to data uri. Loads external SVG\r\n     * file, then converts it to data uri and replaces the `xlink:href` parameter.\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param el        An SVG element\r\n     * @param options   Options\r\n     */\r\n    Export.prototype.svgToDataURI = function (el, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var href, data, charset, uri, e_6;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        href = el.getAttributeNS(Export.XLINK, \"href\");\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, $net.load(href)];\r\n                    case 2:\r\n                        data = _a.sent();\r\n                        charset = this.adapter.apply(\"charset\", {\r\n                            charset: \"base64\",\r\n                            type: \"svg\",\r\n                            options: options\r\n                        }).charset;\r\n                        uri = this.adapter.apply(\"svgToDataURI\", {\r\n                            data: \"data:\" + this.getContentType(\"svg\") + \";\" + charset + \",\" + btoa(data.response),\r\n                            options: options\r\n                        }).data;\r\n                        el.setAttributeNS(Export.XLINK, \"href\", uri);\r\n                        return [2 /*return*/, uri];\r\n                    case 3:\r\n                        e_6 = _a.sent();\r\n                        // Disable temporarily\r\n                        if (!options || options.keepTainted !== false) {\r\n                            /*this._removedObjects.push({\r\n                                \"element\": el,\r\n                                \"originalHref\": href\r\n                            });\r\n                            el.setAttributeNS(Export.XLINK, \"href\", \"\");*/\r\n                            this.temporarilyRemoveObject(el);\r\n                        }\r\n                        return [2 /*return*/, undefined];\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Temporarily removes element from DOM, and replaces it with a dummy\r\n     * placeholder, as well as stores it for later restoration.\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param el Node\r\n     */\r\n    Export.prototype.temporarilyRemoveObject = function (el, placeholder) {\r\n        // Get parent\r\n        var parent = el.parentElement || el.parentNode;\r\n        // Create a placeholder group element if it has not been passed in\r\n        if (!placeholder) {\r\n            placeholder = this.sprite.paper.add(\"g\").node;\r\n        }\r\n        parent.insertBefore(placeholder, el);\r\n        // Check if we have a textContents we can replace with\r\n        // @todo Perhaps we should explore alternatives to creating text nodes\r\n        // i.e. creating a text version of the HTML-based Text, just for export\r\n        // purposes. Converting HTML into SVG is very complicated\r\n        if (el.textContent) {\r\n            /*let text = this.sprite.paper.add(\"text\").node;\r\n            text.textContent = el.textContent;\r\n            placeholder.appendChild(text);\r\n\r\n            // Copy properties from the removing element to the placeholder\r\n            $dom.copyAttributes(el, placeholder);*/\r\n        }\r\n        // Remove the old element\r\n        parent.removeChild(el);\r\n        // Log removed item\r\n        this._removedObjects.push({\r\n            \"element\": el,\r\n            \"placeholder\": placeholder\r\n        });\r\n    };\r\n    /**\r\n     * Restores all (possibly tainted or unsupported) objects that were\r\n     * temporarily removed when exporting.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Export.prototype.restoreRemovedObjects = function () {\r\n        var obj;\r\n        while (true) {\r\n            obj = this._removedObjects.pop();\r\n            if (!obj) {\r\n                break;\r\n            }\r\n            //obj.element.setAttribute(\"href\", obj.originalHref);\r\n            var parent_1 = obj.placeholder.parentElement || obj.placeholder.parentNode;\r\n            parent_1.insertBefore(obj.element, obj.placeholder);\r\n            //parent.removeChild(obj.placeholder);\r\n        }\r\n    };\r\n    /**\r\n     * Checkes if simplified export can be used using `createObjectURL` and SVG\r\n     * document does not contain any external images.\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return `true` if simplified export can be used\r\n     */\r\n    Export.prototype.simplifiedImageExport = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var cache, canvas, ctx, DOMURL, svg, url, img, e_7, e_8;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (this.useSimplifiedExport === false) {\r\n                            return [2 /*return*/, false];\r\n                        }\r\n                        cache = registry.getCache(\"simplifiedImageExport\");\r\n                        if (cache === false || cache === true) {\r\n                            return [2 /*return*/, cache];\r\n                        }\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 6, , 7]);\r\n                        canvas = document.createElement(\"canvas\");\r\n                        canvas.width = 1;\r\n                        canvas.height = 1;\r\n                        ctx = canvas.getContext(\"2d\");\r\n                        DOMURL = this.getDOMURL();\r\n                        svg = new Blob([this.normalizeSVG(\"<g></g>\", {}, 1, 1)], { type: \"image/svg+xml\" });\r\n                        url = DOMURL.createObjectURL(svg);\r\n                        img = void 0;\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        _a.trys.push([2, 4, , 5]);\r\n                        return [4 /*yield*/, this.loadNewImage(url, 1, 1)];\r\n                    case 3:\r\n                        img = _a.sent();\r\n                        return [3 /*break*/, 5];\r\n                    case 4:\r\n                        e_7 = _a.sent();\r\n                        return [2 /*return*/, false];\r\n                    case 5:\r\n                        ctx.drawImage(img, 0, 0);\r\n                        DOMURL.revokeObjectURL(url);\r\n                        try {\r\n                            //let uri = canvas.toDataURL(\"image/png\");\r\n                            registry.setCache(\"simplifiedImageExport\", true);\r\n                            return [2 /*return*/, true];\r\n                        }\r\n                        catch (e) {\r\n                            registry.setCache(\"simplifiedImageExport\", false);\r\n                            return [2 /*return*/, false];\r\n                        }\r\n                        return [3 /*break*/, 7];\r\n                    case 6:\r\n                        e_8 = _a.sent();\r\n                        registry.setCache(\"simplifiedImageExport\", false);\r\n                        return [2 /*return*/, false];\r\n                    case 7: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Returns a new `<image>` element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param url          URL of the image\r\n     * @param width        Width (px)\r\n     * @param height       Height (px)\r\n     * @param crossOrigin  Cross-Origin setting\r\n     * @return Promise\r\n     */\r\n    Export.prototype.loadNewImage = function (url, width, height, crossOrigin) {\r\n        return new Promise(function (success, error) {\r\n            // New image\r\n            var image;\r\n            if (width && height) {\r\n                image = new Image(width, height);\r\n            }\r\n            else {\r\n                image = new Image();\r\n            }\r\n            // Set crossorigin\r\n            if (crossOrigin) {\r\n                image.setAttribute(\"crossOrigin\", crossOrigin);\r\n            }\r\n            // Report success on load\r\n            image.onload = function () {\r\n                success(image);\r\n            };\r\n            function onerror() {\r\n                // Error occurred. Just in case it's the crossOrigin issue, let's try\r\n                // stripping off this attribute and trying again\r\n                if (crossOrigin) {\r\n                    // Retain old uri\r\n                    var currentHref = image.src;\r\n                    // Set up another `onerror` to handle situations where image is not\r\n                    // loadable at all (i.e. protected by CORS)\r\n                    image.onerror = function () {\r\n                        // Nope, no luck\r\n                        error(new Error(\"Loading image \\\"\" + url + \"\\\" failed\"));\r\n                    };\r\n                    // remove the `crossOrigin` attribute\r\n                    image.removeAttribute(\"crossorigin\");\r\n                    // retry\r\n                    image.src = \"\";\r\n                    image.src = currentHref;\r\n                }\r\n                else {\r\n                    error(new Error(\"Loading image \\\"\" + url + \"\\\" failed\"));\r\n                }\r\n            }\r\n            // Set image error handlers\r\n            image.onabort = onerror;\r\n            image.onerror = onerror;\r\n            // Trigger load\r\n            image.src = url;\r\n        });\r\n    };\r\n    /**\r\n     * Returns current DOM URL.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return URL\r\n     */\r\n    Export.prototype.getDOMURL = function () {\r\n        return self.URL || self.webkitURL || self;\r\n    };\r\n    /**\r\n     * Returns an SVG representation of the chart.\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @param type     Type of the export\r\n     * @param options  Options\r\n     * @return Promise\r\n     */\r\n    Export.prototype.getSVG = function (type, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var prehidden, width, height, font, fontSize, svg, charset, uri;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        prehidden = this._objectsAlreadyHidden;\r\n                        if (!prehidden) {\r\n                            this.hideNonExportableSprites();\r\n                        }\r\n                        // Wait for required elements to be ready before proceeding\r\n                        return [4 /*yield*/, this.awaitValidSprites()];\r\n                    case 1:\r\n                        // Wait for required elements to be ready before proceeding\r\n                        _a.sent();\r\n                        width = this.sprite.pixelWidth, height = this.sprite.pixelHeight, font = $dom.findFont(this.sprite.dom), fontSize = $dom.findFontSize(this.sprite.dom);\r\n                        svg = this.normalizeSVG(this.serializeElement(this.sprite.paper.defs) + this.serializeElement(this.sprite.dom), options, width, height, font, fontSize);\r\n                        charset = this.adapter.apply(\"charset\", {\r\n                            charset: \"charset=utf-8\",\r\n                            type: \"svg\",\r\n                            options: options\r\n                        }).charset;\r\n                        uri = this.adapter.apply(\"getSVG\", {\r\n                            data: \"data:\" + this.getContentType(type) + \";\" + charset + \",\" + encodeURIComponent(svg),\r\n                            options: options\r\n                        }).data;\r\n                        if (!prehidden) {\r\n                            this.restoreNonExportableSprites();\r\n                        }\r\n                        return [2 /*return*/, uri];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Checks if SVG is fully formatted. Encloses in `<svg>...</svg>` if\r\n     * necessary.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param svg       Input SVG\r\n     * @param options   Options\r\n     * @param width     Width of the SVG viewport\r\n     * @param height    Height of the SVG viewport\r\n     * @param font      Font family to use as a base\r\n     * @param fontSize  Font size to use as a base\r\n     * @return Output SVG\r\n     * @todo Add style params to existing <svg>\r\n     */\r\n    Export.prototype.normalizeSVG = function (svg, options, width, height, font, fontSize, background) {\r\n        // Construct width/height params\r\n        var dimParams = \"\";\r\n        if (width) {\r\n            dimParams += \"width=\\\"\" + width + \"px\\\" \";\r\n        }\r\n        if (height) {\r\n            dimParams += \"height=\\\"\" + height + \"px\\\" \";\r\n        }\r\n        // Apply font settings\r\n        var styleParams = \"\";\r\n        if (font) {\r\n            styleParams += \"font-family: \" + font.replace(/\"/g, \"\") + \";\";\r\n        }\r\n        if (fontSize) {\r\n            styleParams += \"font-size: \" + fontSize + \";\";\r\n        }\r\n        // Add missing <svg> enclosure\r\n        if (!svg.match(/<svg/)) {\r\n            svg = \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><svg \" + dimParams + \" style=\\\"\" + styleParams + \"\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\" + svg + \"</svg>\";\r\n        }\r\n        else {\r\n            if (dimParams !== \"\") {\r\n                // Clear current params\r\n                svg = svg.replace(/(<svg[^>]*)width=\"[^\"]*\"/, \"$1\");\r\n                svg = svg.replace(/(<svg[^>]*)height=\"[^\"]*\"/, \"$1\");\r\n                // Add new params\r\n                svg = svg.replace(/(<svg)/, \"$1\" + dimParams);\r\n            }\r\n            /*if (styleParams !== \"\") {\r\n                // Clear current params\r\n                svg = svg.replace(/(<svg[^>]*)stylewidth=\"[^\"]*\"/, \"$1\");\r\n                svg = svg.replace(/(<svg[^>]*)height=\"[^\"]*\"/, \"$1\");\r\n\r\n                // Add new params\r\n                svg = svg.replace(/(<svg)/, \"$1\" + dimParams);\r\n            }*/\r\n        }\r\n        if (background) {\r\n            svg = svg.replace(/(<svg[^>]*>)/, \"$1<rect width=\\\"100%\\\" height=\\\"100%\\\" fill=\\\"\" + background.rgba + \"\\\"/>\");\r\n            //svg = svg.replace(/<\\/svg>/, \"<rect width=\\\"100%\\\" height=\\\"100%\\\" fill=\\\"\" + background.rgba + \"\\\"/></svg>\");\r\n        }\r\n        if ($browser.isInternetExplorer()) {\r\n            // IE can't handle exporting <feColorMatrix> for some reason\r\n            svg = svg.replace(/<feColorMatrix [^\\/>]*\\/>/gi, \"\");\r\n        }\r\n        // Remove base uri-related stuff\r\n        var reg = new RegExp(\"url\\\\(\" + $utils.escapeForRgex($utils.getBaseURI()), \"g\");\r\n        svg = svg.replace(reg, \"url(#\");\r\n        svg = this.adapter.apply(\"normalizeSVG\", {\r\n            data: svg,\r\n            options: options\r\n        }).data;\r\n        return svg;\r\n    };\r\n    /**\r\n     * Serializes an element and returns its contents.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param element  An element to serialize\r\n     * @return A serialized XML\r\n     */\r\n    Export.prototype.serializeElement = function (element) {\r\n        return new XMLSerializer().serializeToString(element);\r\n    };\r\n    /**\r\n     * Returns a PDF containing chart image.\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @param type     Type of the export\r\n     * @param options  Options\r\n     * @return Promise\r\n     * @async\r\n     * @todo Account for header when calculating vertical fit\r\n     */\r\n    Export.prototype.getPDF = function (type, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var image, pdfmake, defaultMargins, doc, title, _a, _b, _c;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0: return [4 /*yield*/, this.getImage(options.imageFormat || \"png\", options)];\r\n                    case 1:\r\n                        image = _d.sent();\r\n                        return [4 /*yield*/, this.pdfmake];\r\n                    case 2:\r\n                        pdfmake = _d.sent();\r\n                        defaultMargins = [30, 30, 30, 30];\r\n                        doc = {\r\n                            pageSize: options.pageSize || \"A4\",\r\n                            pageOrientation: options.pageOrientation || \"portrait\",\r\n                            pageMargins: options.pageMargins || defaultMargins,\r\n                            //header: <any>[],\r\n                            content: []\r\n                        };\r\n                        title = this.adapter.apply(\"title\", {\r\n                            title: this.title,\r\n                            options: options\r\n                        }).title;\r\n                        if (title) {\r\n                            doc.content.push({\r\n                                text: title,\r\n                                fontSize: options.fontSize,\r\n                                bold: true,\r\n                                margin: [0, 0, 0, 15]\r\n                            });\r\n                        }\r\n                        // Add page URL?\r\n                        if (options.addURL) {\r\n                            doc.content.push({\r\n                                text: this.language.translate(\"Saved from\") + \": \" + document.location.href,\r\n                                fontSize: options.fontSize,\r\n                                margin: [0, 0, 0, 15]\r\n                            });\r\n                        }\r\n                        // Add image\r\n                        if (type != \"pdfdata\") {\r\n                            doc.content.push({\r\n                                image: image,\r\n                                fit: this.getPageSizeFit(doc.pageSize, doc.pageMargins)\r\n                            });\r\n                        }\r\n                        if (!(type == \"pdfdata\" || options.addData)) return [3 /*break*/, 4];\r\n                        _b = (_a = doc.content).push;\r\n                        _c = {};\r\n                        return [4 /*yield*/, this.getPDFData(\"pdf\", options)];\r\n                    case 3:\r\n                        _b.apply(_a, [(_c.table = _d.sent(),\r\n                                _c)]);\r\n                        _d.label = 4;\r\n                    case 4:\r\n                        // Apply adapters\r\n                        doc = this.adapter.apply(\"pdfmakeDocument\", {\r\n                            doc: doc,\r\n                            options: options\r\n                        }).doc;\r\n                        return [4 /*yield*/, new Promise(function (success, error) {\r\n                                pdfmake.createPdf(doc).getDataUrl(function (uri) {\r\n                                    success(uri);\r\n                                });\r\n                            })];\r\n                    case 5: \r\n                    // Create PDF\r\n                    return [2 /*return*/, _d.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Returns chart's data formatted suitable for PDF export (pdfmake).\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @since 4.7.0\r\n     * @param type     Type of the export\r\n     * @param options  Options\r\n     * @return Promise\r\n     * @async\r\n     */\r\n    Export.prototype.getPDFData = function (type, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var content, dataFields, data, len, i;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                content = {\r\n                    \"body\": []\r\n                };\r\n                dataFields = this.adapter.apply(\"formatDataFields\", {\r\n                    dataFields: this.dataFields,\r\n                    format: \"pdf\"\r\n                }).dataFields;\r\n                data = this.data;\r\n                // Vertical or horizontal (default) layout\r\n                if (options.pivot) {\r\n                    $object.each(dataFields, function (key, val) {\r\n                        var dataRow = [];\r\n                        if (options.addColumnNames) {\r\n                            dataRow.push(val);\r\n                        }\r\n                        for (var len = data.length, i = 0; i < len; i++) {\r\n                            var dataValue = data[i][key];\r\n                            dataRow.push(_this.convertToSpecialFormat(key, dataValue, options, true));\r\n                        }\r\n                        content.body.push(_this.getPDFDataRow(dataRow, options, undefined, true));\r\n                    });\r\n                }\r\n                else {\r\n                    // Add column names?\r\n                    if (options.addColumnNames) {\r\n                        content.body.push(this.getPDFDataRow(dataFields, options, undefined, true));\r\n                        content.headerRows = 1;\r\n                    }\r\n                    for (len = data.length, i = 0; i < len; i++) {\r\n                        content.body.push(this.getPDFDataRow(data[i], options, dataFields));\r\n                    }\r\n                }\r\n                return [2 /*return*/, this.adapter.apply(\"pdfmakeTable\", {\r\n                        table: content,\r\n                        options: options\r\n                    }).table];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Formats a row of data for use in PDF data table (pdfmake).\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @since 4.7.0\r\n     * @param  row         An object holding data for the row\r\n     * @param  options     Options\r\n     * @param  dataFields  Data fields\r\n     * @param  asIs        Do not try to convert to dates\r\n     * @return Formated Data line\r\n     */\r\n    Export.prototype.getPDFDataRow = function (row, options, dataFields, asIs) {\r\n        var _this = this;\r\n        if (asIs === void 0) { asIs = false; }\r\n        // Init\r\n        var items = [];\r\n        // Data fields\r\n        if (!dataFields) {\r\n            dataFields = row;\r\n        }\r\n        // Process each row item\r\n        $object.each(dataFields, function (key, name) {\r\n            // Get value\r\n            var value = _this.convertEmptyValue(key, row[key], options);\r\n            // Convert dates\r\n            var item = asIs ? value : _this.convertToSpecialFormat(key, value, options);\r\n            item = \"\" + item;\r\n            // Add to item\r\n            items.push(item);\r\n        });\r\n        return items;\r\n    };\r\n    /**\r\n     * Returns fit dimensions for available page sizes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param pageSize Page size\r\n     * @return `[width, height]` in pixels\r\n     */\r\n    Export.prototype.getPageSizeFit = function (pageSize, margins) {\r\n        // Check margins\r\n        var newMargins = [0, 0, 0, 0];\r\n        if (typeof margins == \"number\") {\r\n            newMargins = [margins, margins, margins, margins];\r\n        }\r\n        else if (margins.length == 2) {\r\n            newMargins = [margins[0], margins[1], margins[0], margins[1]];\r\n        }\r\n        else if (margins.length == 4) {\r\n            newMargins = margins;\r\n        }\r\n        // Define available page sizes\r\n        var sizes = {\r\n            \"4A0\": [4767.87, 6740.79],\r\n            \"2A0\": [3370.39, 4767.87],\r\n            A0: [2383.94, 3370.39],\r\n            A1: [1683.78, 2383.94],\r\n            A2: [1190.55, 1683.78],\r\n            A3: [841.89, 1190.55],\r\n            A4: [595.28, 841.89],\r\n            A5: [419.53, 595.28],\r\n            A6: [297.64, 419.53],\r\n            A7: [209.76, 297.64],\r\n            A8: [147.40, 209.76],\r\n            A9: [104.88, 147.40],\r\n            A10: [73.70, 104.88],\r\n            B0: [2834.65, 4008.19],\r\n            B1: [2004.09, 2834.65],\r\n            B2: [1417.32, 2004.09],\r\n            B3: [1000.63, 1417.32],\r\n            B4: [708.66, 1000.63],\r\n            B5: [498.90, 708.66],\r\n            B6: [354.33, 498.90],\r\n            B7: [249.45, 354.33],\r\n            B8: [175.75, 249.45],\r\n            B9: [124.72, 175.75],\r\n            B10: [87.87, 124.72],\r\n            C0: [2599.37, 3676.54],\r\n            C1: [1836.85, 2599.37],\r\n            C2: [1298.27, 1836.85],\r\n            C3: [918.43, 1298.27],\r\n            C4: [649.13, 918.43],\r\n            C5: [459.21, 649.13],\r\n            C6: [323.15, 459.21],\r\n            C7: [229.61, 323.15],\r\n            C8: [161.57, 229.61],\r\n            C9: [113.39, 161.57],\r\n            C10: [79.37, 113.39],\r\n            RA0: [2437.80, 3458.27],\r\n            RA1: [1729.13, 2437.80],\r\n            RA2: [1218.90, 1729.13],\r\n            RA3: [864.57, 1218.90],\r\n            RA4: [609.45, 864.57],\r\n            SRA0: [2551.18, 3628.35],\r\n            SRA1: [1814.17, 2551.18],\r\n            SRA2: [1275.59, 1814.17],\r\n            SRA3: [907.09, 1275.59],\r\n            SRA4: [637.80, 907.09],\r\n            EXECUTIVE: [521.86, 756.00],\r\n            FOLIO: [612.00, 936.00],\r\n            LEGAL: [612.00, 1008.00],\r\n            LETTER: [612.00, 792.00],\r\n            TABLOID: [792.00, 1224.00]\r\n        };\r\n        // Calculate size\r\n        var fitSize = sizes[pageSize];\r\n        fitSize[0] -= newMargins[0] + newMargins[2];\r\n        fitSize[1] -= newMargins[1] + newMargins[3];\r\n        return fitSize;\r\n    };\r\n    /**\r\n     * Returns an Excel file of chart's data.\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @param type     Type of the export\r\n     * @param options  Options\r\n     * @return Promise\r\n     * @async\r\n     * @todo Handle dates\r\n     * @todo Support for multi-sheet\r\n     */\r\n    Export.prototype.getExcel = function (type, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var XLSX, wbOptions, sheetName, wb, data, dataFields, len, i, uri;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.xlsx];\r\n                    case 1:\r\n                        XLSX = _a.sent();\r\n                        wbOptions = this.adapter.apply(\"xlsxWorkbookOptions\", {\r\n                            options: {\r\n                                bookType: \"xlsx\",\r\n                                bookSST: false,\r\n                                type: \"base64\",\r\n                            }\r\n                        }).options;\r\n                        sheetName = this.normalizeExcelSheetName(this.adapter.apply(\"xlsxSheetName\", {\r\n                            name: this.title || this.language.translate(\"Data\")\r\n                        }).name);\r\n                        wb = {\r\n                            SheetNames: [sheetName],\r\n                            Sheets: {}\r\n                        };\r\n                        data = [];\r\n                        dataFields = this.adapter.apply(\"formatDataFields\", {\r\n                            dataFields: this.dataFields,\r\n                            format: \"xslx\"\r\n                        }).dataFields;\r\n                        // Vertical or horizontal (default) layout\r\n                        if (options.pivot) {\r\n                            $object.each(dataFields, function (key, val) {\r\n                                var dataRow = [];\r\n                                if (options.addColumnNames) {\r\n                                    dataRow.push(val);\r\n                                }\r\n                                for (var len = _this.data.length, i = 0; i < len; i++) {\r\n                                    var dataValue = _this.data[i][key];\r\n                                    dataRow.push(_this.convertToSpecialFormat(key, dataValue, options, true));\r\n                                }\r\n                                data.push(_this.getExcelRow(dataRow, options, undefined, true));\r\n                            });\r\n                        }\r\n                        else {\r\n                            // Add column names?\r\n                            if (options.addColumnNames) {\r\n                                data.push(this.getExcelRow(dataFields, options, undefined, true));\r\n                            }\r\n                            // Add lines\r\n                            for (len = this.data.length, i = 0; i < len; i++) {\r\n                                data.push(this.getExcelRow(this.data[i], options, dataFields));\r\n                            }\r\n                        }\r\n                        // Create sheet and add data\r\n                        wb.Sheets[sheetName] = XLSX.utils.aoa_to_sheet(data);\r\n                        uri = this.adapter.apply(\"getExcel\", {\r\n                            data: \"data:\" + this.getContentType(type) + \";base64,\" + XLSX.write(wb, wbOptions),\r\n                            options: options\r\n                        }).data;\r\n                        return [2 /*return*/, uri];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This is needed to work around Excel limitations.\r\n     *\r\n     * @param name  Source name\r\n     * @return Normalized name\r\n     */\r\n    Export.prototype.normalizeExcelSheetName = function (name) {\r\n        name = name.replace(/([:\\\\\\/?*\\[\\]]+)/g, \" \");\r\n        return $utils.truncateWithEllipsis(name, 31, \"...\", true);\r\n    };\r\n    /**\r\n     * Rertuns an array of values to be used as Excel row.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param  row         Row data\r\n     * @param  options     Options\r\n     * @param  dataFields  Data fields\r\n     * @param  asIs        Do not try to convert to dates\r\n     * @return Array of values\r\n     */\r\n    Export.prototype.getExcelRow = function (row, options, dataFields, asIs) {\r\n        var _this = this;\r\n        if (asIs === void 0) { asIs = false; }\r\n        // Init\r\n        var items = [];\r\n        // Data fields\r\n        if (!dataFields) {\r\n            dataFields = row;\r\n        }\r\n        // Process each row item\r\n        $object.each(dataFields, function (key, name) {\r\n            // Get value\r\n            var value = _this.convertEmptyValue(key, row[key], options);\r\n            // Convert dates\r\n            var item = asIs ? value : _this.convertToSpecialFormat(key, value, options, true);\r\n            items.push(item);\r\n        });\r\n        return items;\r\n    };\r\n    /**\r\n     * Returns chart's data formatted as CSV.\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @param type     Type of the export\r\n     * @param options  Options\r\n     * @return Promise\r\n     * @async\r\n     */\r\n    Export.prototype.getCSV = function (type, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var csv, dataFields, br, data, len, i, row, charset, uri;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                csv = \"\";\r\n                dataFields = this.adapter.apply(\"formatDataFields\", {\r\n                    dataFields: this.dataFields,\r\n                    format: \"csv\"\r\n                }).dataFields;\r\n                br = \"\";\r\n                data = this.data;\r\n                // Vertical or horizontal (default) layout\r\n                if (options.pivot) {\r\n                    $object.each(dataFields, function (key, val) {\r\n                        var dataRow = [];\r\n                        if (options.addColumnNames) {\r\n                            dataRow.push(val);\r\n                        }\r\n                        for (var len = data.length, i = 0; i < len; i++) {\r\n                            var dataValue = data[i][key];\r\n                            dataRow.push(_this.convertToSpecialFormat(key, dataValue, options, true));\r\n                        }\r\n                        csv += br + _this.getCSVRow(dataRow, options, undefined, true);\r\n                        br = \"\\n\";\r\n                    });\r\n                }\r\n                else {\r\n                    for (len = data.length, i = 0; i < len; i++) {\r\n                        row = this.getCSVRow(data[i], options, dataFields);\r\n                        if (options.reverse) {\r\n                            csv = row + br + csv;\r\n                        }\r\n                        else {\r\n                            csv += br + row;\r\n                        }\r\n                        br = \"\\n\";\r\n                    }\r\n                    // Add column names?\r\n                    if (options.addColumnNames) {\r\n                        csv = this.getCSVRow(dataFields, options, undefined, true) + br + csv;\r\n                    }\r\n                }\r\n                charset = this.adapter.apply(\"charset\", {\r\n                    charset: \"charset=utf-8\",\r\n                    type: type,\r\n                    options: options\r\n                }).charset;\r\n                uri = this.adapter.apply(\"getCSV\", {\r\n                    data: \"data:\" + this.getContentType(type) + \";\" + charset + \",\" + encodeURIComponent(csv),\r\n                    options: options\r\n                }).data;\r\n                return [2 /*return*/, uri];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Formats a row of CSV data.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param  row         An object holding data for the row\r\n     * @param  options     Options\r\n     * @param  dataFields  Data fields\r\n     * @param  asIs        Do not try to convert to dates\r\n     * @return Formated CSV line\r\n     */\r\n    Export.prototype.getCSVRow = function (row, options, dataFields, asIs) {\r\n        var _this = this;\r\n        if (asIs === void 0) { asIs = false; }\r\n        // Init\r\n        var separator = options.separator || \",\";\r\n        var items = [];\r\n        // Data fields\r\n        if (!dataFields) {\r\n            dataFields = row;\r\n        }\r\n        // Process each row item\r\n        $object.each(dataFields, function (key, name) {\r\n            // Get value\r\n            var value = _this.convertEmptyValue(key, row[key], options);\r\n            // Check if we need to skip\r\n            // This is no longer required because we are iterating via dataFields anyway\r\n            /*if ($type.hasValue(this.dataFields) && !$type.hasValue(this.dataFields[key])) {\r\n                return;\r\n            }*/\r\n            // Convert dates\r\n            var item = asIs ? value : _this.convertToSpecialFormat(key, value, options);\r\n            // Cast and escape doublequotes\r\n            item = \"\" + item;\r\n            item = item.replace(/\"/g, '\"\"');\r\n            // Enclose into double quotes\r\n            if (options.forceQuotes || (item.search(new RegExp(\"\\\"|\\n|\" + separator, \"g\")) >= 0)) {\r\n                item = \"\\\"\" + item + \"\\\"\";\r\n            }\r\n            // Add to item\r\n            items.push(item);\r\n        });\r\n        return items.join(separator);\r\n    };\r\n    /**\r\n     * Returns chart's data formatted as HTML table.\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @since 4.7.0\r\n     * @param type     Type of the export\r\n     * @param options  Options\r\n     * @return Promise\r\n     * @async\r\n     */\r\n    Export.prototype.getHTML = function (type, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var html, dataFields, data, len, i, charset, uri;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                html = \"<table>\";\r\n                if (options.tableClass) {\r\n                    html = \"<table class=\\\"\" + options.tableClass + \"\\\">\";\r\n                }\r\n                dataFields = this.adapter.apply(\"formatDataFields\", {\r\n                    dataFields: this.dataFields,\r\n                    format: \"html\"\r\n                }).dataFields;\r\n                data = this.data;\r\n                // Vertical or horizontal (default) layout\r\n                if (options.pivot) {\r\n                    $object.each(dataFields, function (key, val) {\r\n                        var dataRow = [];\r\n                        if (options.addColumnNames) {\r\n                            dataRow.push(val);\r\n                        }\r\n                        for (var len = data.length, i = 0; i < len; i++) {\r\n                            var dataValue = data[i][key];\r\n                            dataRow.push(_this.convertToSpecialFormat(key, dataValue, options, true));\r\n                        }\r\n                        html += \"\\n\" + _this.getHTMLRow(dataRow, options, undefined, true);\r\n                    });\r\n                }\r\n                else {\r\n                    // Add column names?\r\n                    if (options.addColumnNames) {\r\n                        html += \"\\n\" + this.getHTMLRow(dataFields, options, undefined, true, true);\r\n                    }\r\n                    for (len = data.length, i = 0; i < len; i++) {\r\n                        html += \"\\n\" + this.getHTMLRow(data[i], options, dataFields);\r\n                    }\r\n                }\r\n                html += \"</table>\";\r\n                charset = this.adapter.apply(\"charset\", {\r\n                    charset: \"charset=utf-8\",\r\n                    type: type,\r\n                    options: options\r\n                }).charset;\r\n                uri = this.adapter.apply(\"getHTML\", {\r\n                    data: \"data:\" + this.getContentType(type) + \";\" + charset + \",\" + encodeURIComponent(html),\r\n                    options: options\r\n                }).data;\r\n                return [2 /*return*/, uri];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Formats a row of HTML data.\r\n     *\r\n     * @since 4.7.0\r\n     * @ignore Exclude from docs\r\n     * @param  row         An object holding data for the row\r\n     * @param  options     Options\r\n     * @param  dataFields  Data fields\r\n     * @param  asIs        Do not try to convert to dates\r\n     * @return Formated HTML row\r\n     */\r\n    Export.prototype.getHTMLRow = function (row, options, dataFields, asIs, headerRow) {\r\n        var _this = this;\r\n        if (asIs === void 0) { asIs = false; }\r\n        if (headerRow === void 0) { headerRow = false; }\r\n        // Init output\r\n        var html = \"\\t<tr>\";\r\n        if (options.rowClass) {\r\n            html = \"\\t<tr class=\\\"\" + options.rowClass + \"\\\">\";\r\n        }\r\n        // Data fields\r\n        if (!dataFields) {\r\n            dataFields = row;\r\n        }\r\n        // th or dh?\r\n        var tag = headerRow ? \"th\" : \"td\";\r\n        // Process each row item\r\n        var first = true;\r\n        $object.each(dataFields, function (key, name) {\r\n            // Get value\r\n            var value = _this.convertEmptyValue(key, row[key], options);\r\n            // Convert dates\r\n            var item = asIs ? value : _this.convertToSpecialFormat(key, value, options);\r\n            // Escape HTML entities\r\n            item = \"\" + item;\r\n            item = item.replace(/[\\u00A0-\\u9999<>\\&]/gim, function (i) {\r\n                return \"&#\" + i.charCodeAt(0) + \";\";\r\n            });\r\n            // Which tag to use\r\n            var useTag = tag;\r\n            if (options.pivot && first) {\r\n                useTag = \"th\";\r\n            }\r\n            // Add cell\r\n            if (options.cellClass) {\r\n                html += \"\\n\\t\\t<\" + useTag + \" class=\\\"\" + options.cellClass + \"\\\">\" + item + \"</\" + useTag + \">\";\r\n            }\r\n            else {\r\n                html += \"\\n\\t\\t<\" + useTag + \">\" + item + \"</\" + useTag + \">\";\r\n            }\r\n            first = false;\r\n        });\r\n        html += \"\\n\\t</tr>\";\r\n        return html;\r\n    };\r\n    /**\r\n     * Returns chart's data in JSON format.\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @param type     Type of the export\r\n     * @param options  Options\r\n     * @return Promise\r\n     * @async\r\n     */\r\n    Export.prototype.getJSON = function (type, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var data, dataFields, sourceData, _loop_1, len, i, json, charset, uri;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                dataFields = this.adapter.apply(\"formatDataFields\", {\r\n                    dataFields: this.dataFields,\r\n                    format: \"csv\"\r\n                }).dataFields;\r\n                if (!this._dynamicDataFields) {\r\n                    data = [];\r\n                    sourceData = this.data;\r\n                    _loop_1 = function (len, i) {\r\n                        var value = sourceData[i];\r\n                        if (typeof value == \"object\") {\r\n                            var newValue_1 = {};\r\n                            $object.each(value, function (field, item) {\r\n                                if ($type.hasValue(dataFields[field])) {\r\n                                    newValue_1[dataFields[field]] = _this.convertToSpecialFormat(field, item, options);\r\n                                }\r\n                            });\r\n                            data.push(newValue_1);\r\n                        }\r\n                    };\r\n                    for (len = sourceData.length, i = 0; i < len; i++) {\r\n                        _loop_1(len, i);\r\n                    }\r\n                }\r\n                else {\r\n                    data = this.data;\r\n                }\r\n                json = JSON.stringify(data, function (key, value) {\r\n                    if (typeof value == \"object\") {\r\n                        $object.each(value, function (field, item) {\r\n                            value[field] = _this.convertToSpecialFormat(field, item, options);\r\n                        });\r\n                    }\r\n                    return value;\r\n                }, options.indent);\r\n                charset = this.adapter.apply(\"charset\", {\r\n                    charset: \"charset=utf-8\",\r\n                    type: type,\r\n                    options: options\r\n                }).charset;\r\n                uri = this.adapter.apply(\"getJSON\", {\r\n                    data: \"data:\" + this.getContentType(type) + \";\" + charset + \",\" + encodeURIComponent(json),\r\n                    options: options\r\n                }).data;\r\n                return [2 /*return*/, uri];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Converts the value to proper date format.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param  field         Field name\r\n     * @param  value         Value\r\n     * @param  options       Options\r\n     * @param  keepOriginal  Will ignore formatting and will keep value as it is in data\r\n     * @return Formatted date value or unmodified value\r\n     */\r\n    Export.prototype.convertToSpecialFormat = function (field, value, options, keepOriginal) {\r\n        // Is this a timestamp or duration?\r\n        if (typeof value == \"number\") {\r\n            if (this.isDateField(field)) {\r\n                value = new Date(value);\r\n            }\r\n            else if (this.isDurationField(field)) {\r\n                return this.durationFormatter.format(value, this.durationFormat);\r\n            }\r\n            else if (this.isNumberField(field) && this.numberFormat) {\r\n                return this.numberFormatter.format(value, this.numberFormat);\r\n            }\r\n        }\r\n        if (value instanceof Date) {\r\n            if (options.useTimestamps) {\r\n                value = value.getTime();\r\n            }\r\n            else if (options.useLocale) {\r\n                if (!keepOriginal) {\r\n                    value = value.toLocaleString();\r\n                }\r\n            }\r\n            else {\r\n                value = this.dateFormatter.format(value, this.dateFormat);\r\n            }\r\n        }\r\n        else if ($type.isString(value) && this.isDateField(field) && this.dateFormat) {\r\n            value = this.dateFormatter.format(this.dateFormatter.parse(value), this.dateFormat);\r\n        }\r\n        return value;\r\n    };\r\n    /**\r\n     * Converts empty value based on `emptyAs` option.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Export.prototype.convertEmptyValue = function (field, value, options) {\r\n        return $type.hasValue(value) ? value : options.emptyAs;\r\n    };\r\n    /**\r\n     * Triggers download of the file.\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @param uri       Data URI with file content\r\n     * @param fileName  File name\r\n     * @return Promise\r\n     * @async\r\n     */\r\n    Export.prototype.download = function (uri, fileName) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var parts, contentType, decoded, blob_1, chars, i, charCode, blob, link_1, parts, contentType, decoded, blob_2, url_2, chars, i, charCode, blob, url_3, link, parts, contentType, iframe, idoc;\r\n            return __generator(this, function (_a) {\r\n                if (this.msBlobDownloadSupport()) {\r\n                    parts = uri.split(\";\");\r\n                    contentType = parts.shift().replace(/data:/, \"\");\r\n                    uri = decodeURIComponent(parts.join(\";\").replace(/^[^,]*,/, \"\"));\r\n                    // Check if we need to Base64-decode\r\n                    if ([\"image/svg+xml\", \"application/json\", \"text/csv\"].indexOf(contentType) == -1) {\r\n                        try {\r\n                            decoded = atob(uri);\r\n                            uri = decoded;\r\n                        }\r\n                        catch (e) {\r\n                            // Error occurred, meaning string was not Base64-encoded. Do nothing.\r\n                            return [2 /*return*/, false];\r\n                        }\r\n                    }\r\n                    else {\r\n                        blob_1 = new Blob([uri], { type: contentType });\r\n                        window.navigator.msSaveBlob(blob_1, fileName);\r\n                        return [2 /*return*/, true];\r\n                    }\r\n                    chars = new Array(uri.length);\r\n                    for (i = 0; i < uri.length; ++i) {\r\n                        charCode = uri.charCodeAt(i);\r\n                        chars[i] = charCode;\r\n                    }\r\n                    blob = new Blob([new Uint8Array(chars)], { type: contentType });\r\n                    window.navigator.msSaveBlob(blob, fileName);\r\n                }\r\n                else if (this.blobDownloadSupport()) {\r\n                    link_1 = document.createElement(\"a\");\r\n                    link_1.download = fileName;\r\n                    document.body.appendChild(link_1);\r\n                    parts = uri.split(\";\");\r\n                    contentType = parts.shift().replace(/data:/, \"\");\r\n                    uri = decodeURIComponent(parts.join(\";\").replace(/^[^,]*,/, \"\"));\r\n                    if ([\"image/svg+xml\", \"application/json\", \"text/csv\", \"text/html\"].indexOf(contentType) == -1) {\r\n                        try {\r\n                            decoded = atob(uri);\r\n                            uri = decoded;\r\n                        }\r\n                        catch (e) {\r\n                            // Error occurred, meaning string was not Base64-encoded. Do nothing.\r\n                            return [2 /*return*/, false];\r\n                        }\r\n                    }\r\n                    else {\r\n                        blob_2 = new Blob([uri], { type: contentType });\r\n                        url_2 = window.URL.createObjectURL(blob_2);\r\n                        link_1.href = url_2;\r\n                        link_1.download = fileName;\r\n                        link_1.click();\r\n                        setTimeout(function () {\r\n                            document.body.removeChild(link_1);\r\n                            window.URL.revokeObjectURL(url_2);\r\n                        }, 100);\r\n                        return [2 /*return*/, true];\r\n                    }\r\n                    chars = new Array(uri.length);\r\n                    for (i = 0; i < uri.length; ++i) {\r\n                        charCode = uri.charCodeAt(i);\r\n                        chars[i] = charCode;\r\n                    }\r\n                    blob = new Blob([new Uint8Array(chars)], { type: contentType });\r\n                    url_3 = window.URL.createObjectURL(blob);\r\n                    link_1.href = url_3;\r\n                    link_1.download = fileName;\r\n                    document.body.appendChild(link_1);\r\n                    link_1.click();\r\n                    document.body.removeChild(link_1);\r\n                    setTimeout(function () {\r\n                        window.URL.revokeObjectURL(url_3);\r\n                    }, 100);\r\n                }\r\n                else if (this.linkDownloadSupport()) {\r\n                    link = document.createElement(\"a\");\r\n                    link.download = fileName;\r\n                    link.href = uri;\r\n                    document.body.appendChild(link);\r\n                    link.click();\r\n                    document.body.removeChild(link);\r\n                }\r\n                else if (this.legacyIE()) {\r\n                    parts = uri.match(/^data:(.*);[ ]*([^,]*),(.*)$/);\r\n                    if (parts.length === 4) {\r\n                        // Base64-encoded or text-based stuff?\r\n                        if (parts[2] == \"base64\") {\r\n                            // Base64-encoded - probably an image\r\n                            if (parts[1].match(/^image\\//)) {\r\n                                // Yep, an image. Let's create a temporary image placeholder,\r\n                                // so that user can use do Save As.\r\n                                this.showModal(\"<img src=\\\"\" + uri + \"\\\" style=\\\"float: left; max-width: 50%; max-height: 80%; margin: 0 1em 0.5em 0; border: 1px solid #eee;\\\" />\" +\r\n                                    \"<p>\" + this.language.translate(\"To save the image, right-click thumbnail on the left and choose \\\"Save picture as...\\\"\") +\r\n                                    \"</p>\" +\r\n                                    \"<p style=\\\"text-align: center;\\\"><small>\" + this.language.translate(\"(Press ESC to close this message)\") + \"</small></p>\", this.language.translate(\"Image Export Complete\"));\r\n                            }\r\n                        }\r\n                        else {\r\n                            contentType = void 0;\r\n                            if (fileName.match(/\\.svg$/)) {\r\n                                contentType = \"image/svg+xml\";\r\n                            }\r\n                            else {\r\n                                contentType = \"text/plain\";\r\n                                fileName += \".txt\";\r\n                            }\r\n                            iframe = document.createElement(\"iframe\");\r\n                            iframe.width = \"1px\";\r\n                            iframe.height = \"1px\";\r\n                            iframe.style.display = \"none\";\r\n                            document.body.appendChild(iframe);\r\n                            idoc = iframe.contentDocument;\r\n                            idoc.open(contentType, \"replace\");\r\n                            // TODO test this with various encodings (e.g. UTF)\r\n                            //idoc.charset = parts[2].replace(/charset=/, \"\");\r\n                            idoc.write(decodeURIComponent(parts[3]));\r\n                            idoc.close();\r\n                            idoc.execCommand(\"SaveAs\", true, fileName);\r\n                            // Destroy the iframe\r\n                            document.body.removeChild(iframe);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    /**\r\n                     * Something else - perhaps a mobile.\r\n                     * Let's just display it in the same page.\r\n                     * (hey we don't like it either)\r\n                     */\r\n                    window.location.href = uri;\r\n                }\r\n                return [2 /*return*/, true];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Returns `true` if browser has any supported methods to trigger download\r\n     * of a binary file.\r\n     *\r\n     * @return Supports downloads?\r\n     */\r\n    Export.prototype.downloadSupport = function () {\r\n        //return !this.legacyIE();\r\n        return this.linkDownloadSupport() || this.msBlobDownloadSupport();\r\n    };\r\n    /**\r\n     * Checks if the browser supports \"download\" attribute on links.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Browser supports triggering downloads?\r\n     */\r\n    Export.prototype.linkDownloadSupport = function () {\r\n        // Do we have this cached?\r\n        var cache = registry.getCache(\"linkDownloadSupport\");\r\n        if (cache === false || cache === true) {\r\n            return cache;\r\n        }\r\n        var a = document.createElement(\"a\");\r\n        var res = typeof a.download !== \"undefined\";\r\n        registry.setCache(\"linkDownloadSupport\", res);\r\n        return res;\r\n    };\r\n    /**\r\n     * Checks if the browser supports download via `msBlob`.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Browser supports triggering downloads?\r\n     */\r\n    Export.prototype.blobDownloadSupport = function () {\r\n        return $type.hasValue(window.Blob);\r\n    };\r\n    /**\r\n     * Checks if the browser supports download via `msBlob`.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Browser supports triggering downloads?\r\n     */\r\n    Export.prototype.msBlobDownloadSupport = function () {\r\n        return $type.hasValue(window.navigator.msSaveOrOpenBlob);\r\n    };\r\n    /**\r\n     * Checks if this is a legacy version of IE.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return IE9 or less?\r\n     */\r\n    Export.prototype.legacyIE = function () {\r\n        // Create a temporary <div> with conditional tags in it an an <i> tag.\r\n        // Count <i>s. If there are some, we have IE9 or late on our hands.\r\n        var div = document.createElement(\"div\");\r\n        div.innerHTML = \"<!--[if lt IE 10]><i></i><![endif]-->\";\r\n        return div.getElementsByTagName(\"i\").length == 1;\r\n    };\r\n    /**\r\n     * Initiates print of the chart.\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @param data     Data URI for the image\r\n     * @param options  Options\r\n     * @param title    Optional title to use (uses window's title by default)\r\n     * @return Promise\r\n     * @async\r\n     */\r\n    Export.prototype.print = function (data, options, title) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                if (options.printMethod == \"css\") {\r\n                    return [2 /*return*/, this.printViaCSS(data, options, title)];\r\n                }\r\n                else {\r\n                    return [2 /*return*/, this.printViaIframe(data, options, title)];\r\n                }\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    Export.prototype.printViaCSS = function (data, options, title) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var scroll, rule, originalTitle, img, isIOS;\r\n            return __generator(this, function (_a) {\r\n                scroll = document.documentElement.scrollTop || document.body.scrollTop;\r\n                rule = new StyleRule(\"body > *\", {\r\n                    \"display\": \"none\",\r\n                    \"position\": \"fixed\",\r\n                    \"visibility\": \"hidden\",\r\n                    \"opacity\": \"0\",\r\n                    \"clipPath\": \"polygon(0px 0px,0px 0px,0px 0px,0px 0px);\"\r\n                });\r\n                if (title && document && document.title) {\r\n                    originalTitle = document.title;\r\n                    document.title = title;\r\n                }\r\n                img = new Image();\r\n                img.src = data;\r\n                img.style.maxWidth = \"100%\";\r\n                img.style.display = \"block\";\r\n                img.style.position = \"relative\";\r\n                img.style.visibility = \"visible\";\r\n                img.style.opacity = \"1\";\r\n                img.style.clipPath = \"none\";\r\n                document.body.appendChild(img);\r\n                // Print\r\n                this.setTimeout(function () {\r\n                    window.print();\r\n                }, 50);\r\n                isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\r\n                if (isIOS && (options.delay < 1000)) {\r\n                    options.delay = 1000;\r\n                }\r\n                else if (options.delay < 100) {\r\n                    options.delay = 100;\r\n                }\r\n                // Delay function that resets back the document the way ot was before\r\n                this.setTimeout(function () {\r\n                    // Remove image\r\n                    document.body.removeChild(img);\r\n                    // Reset back all elements\r\n                    /*for (let len = items.length, i = 0; i < len; i++) {\r\n                        let item = <HTMLElement>items[i];\r\n                        if ($dom.isElement(item)) {\r\n                            item.style.display = states[i];\r\n                        }\r\n                    }*/\r\n                    rule.dispose();\r\n                    // Restore title\r\n                    if (originalTitle) {\r\n                        document.title = document.title;\r\n                    }\r\n                    // Scroll back the document the way it was before\r\n                    document.documentElement.scrollTop = document.body.scrollTop = scroll;\r\n                }, options.delay || 500);\r\n                return [2 /*return*/, true];\r\n            });\r\n        });\r\n    };\r\n    Export.prototype.printViaIframe = function (data, options, title) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var iframe, img, isIOS;\r\n            return __generator(this, function (_a) {\r\n                iframe = document.createElement(\"iframe\");\r\n                iframe.style.visibility = \"hidden\";\r\n                document.body.appendChild(iframe);\r\n                // This is needed for FireFox\r\n                iframe.contentWindow.document.open();\r\n                iframe.contentWindow.document.close();\r\n                img = new Image();\r\n                img.src = data;\r\n                img.style.maxWidth = \"100%\";\r\n                if (title) {\r\n                    iframe.contentWindow.document.title = title;\r\n                }\r\n                iframe.contentWindow.document.body.appendChild(img);\r\n                iframe.load = function () {\r\n                    iframe.contentWindow.document.body.appendChild(img);\r\n                };\r\n                // Print\r\n                this.setTimeout(function () {\r\n                    try {\r\n                        if (!iframe.contentWindow.document.execCommand(\"print\", false, null)) {\r\n                            iframe.contentWindow.print();\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        iframe.contentWindow.print();\r\n                    }\r\n                }, options.delay || 50);\r\n                isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\r\n                if (isIOS && (options.delay < 1000)) {\r\n                    options.delay = 1000;\r\n                }\r\n                else if (options.delay < 100) {\r\n                    options.delay = 100;\r\n                }\r\n                // Delay function that resets back the document the way ot was before\r\n                this.setTimeout(function () {\r\n                    // Remove image\r\n                    document.body.removeChild(iframe);\r\n                }, options.delay + 50 || 100);\r\n                return [2 /*return*/, true];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Finds a background color for the element. If element is transparent it goes\r\n     * up the DOM hierarchy to find a parent element that does.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param element Element\r\n     * @return Color code\r\n     */\r\n    Export.prototype.findBackgroundColor = function (element) {\r\n        // Check if element has styles set\r\n        var opacity = 1, currentColor = getComputedStyle(element, \"background-color\");\r\n        // Check opacity\r\n        if (currentColor.match(/[^,]*,[^,]*,[^,]*,[ ]?0/) || currentColor == \"transparent\") {\r\n            opacity = 0;\r\n        }\r\n        if (opacity == 0) {\r\n            var parent_2 = element.parentElement; // || <Element>element.parentNode;\r\n            // Completely transparent. Look for a parent\r\n            if (parent_2) {\r\n                return this.findBackgroundColor(parent_2);\r\n            }\r\n            else {\r\n                return color(\"#fff\");\r\n            }\r\n        }\r\n        else {\r\n            return color(currentColor, opacity);\r\n        }\r\n    };\r\n    Object.defineProperty(Export.prototype, \"container\", {\r\n        /**\r\n         * @return Reference\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"container\", {\r\n                container: this._container\r\n            }).container;\r\n        },\r\n        /**\r\n         * A reference to a container to be used to place [[ExportMenu]] in.\r\n         *\r\n         * @param value Reference\r\n         */\r\n        set: function (value) {\r\n            this._container = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"sprite\", {\r\n        /**\r\n         * @return Sprite\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"sprite\", {\r\n                sprite: this._sprite\r\n            }).sprite;\r\n        },\r\n        /**\r\n         * A reference to [[Sprite]] to export. Can be any Sprite, including some\r\n         * internal elements.\r\n         *\r\n         * @param value Sprite\r\n         */\r\n        set: function (value) {\r\n            this._sprite = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"extraSprites\", {\r\n        /**\r\n         * @return Sprite\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"extraSprites\", {\r\n                extraSprites: this._extraSprites\r\n            }).extraSprites;\r\n        },\r\n        /**\r\n         * An array of extra [[Sprite]] elements to include in export.\r\n         *\r\n         * It can be used to export any external elements, or even other charts.\r\n         *\r\n         * E.g.:\r\n         *\r\n         * ```TypeScript\r\n         * chart.exporting.extraSprites.push(chart2);\r\n         * ```\r\n         * ```JavaScript\r\n         * chart.exporting.extraSprites.push(chart2);\r\n         * ```\r\n         *\r\n         * @since 4.2.0\r\n         * @param value Sprite\r\n         */\r\n        set: function (value) {\r\n            this._extraSprites = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"validateSprites\", {\r\n        /**\r\n         * @return Sprite\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"validateSprites\", {\r\n                validateSprites: this._validateSprites\r\n            }).validateSprites;\r\n        },\r\n        /**\r\n         * An array of [[Sprite]] elements that need to be valid before export\r\n         * commences.\r\n         *\r\n         * If any of those elements is not completely ready when export is triggered,\r\n         * the export will wait until they are (their `validated` event triggers)\r\n         * before going through with the export opertaion.\r\n         *\r\n         * This is useful if you need to modify chart appearance for the export.\r\n         *\r\n         * E.g.:\r\n         *\r\n         * ```TypeScript\r\n         * // Add watermark\r\n         * let watermark = chart.createChild(am4core.Label);\r\n         * watermark.text = \"Copyright (C) 2019\";\r\n         * watermark.disabled = true;\r\n         *\r\n         * // Add watermark to validated sprites\r\n         * chart.exporting.validateSprites.push(watermark);\r\n         *\r\n         * // Enable watermark on export\r\n         * chart.exporting.events.on(\"exportstarted\", function(ev) {\r\n         *   watermark.disabled = false;\r\n         * });\r\n         *\r\n         * // Disable watermark when export finishes\r\n         * chart.exporting.events.on(\"exportfinished\", function(ev) {\r\n         *   watermark.disabled = true;\r\n         * });\r\n         * ```\r\n         * ```JavaScript\r\n         * // Add watermark\r\n         * var watermark = chart.createChild(am4core.Label);\r\n         * watermark.text = \"Copyright (C) 2019\";\r\n         * watermark.disabled = true;\r\n         *\r\n         * // Add watermark to validated sprites\r\n         * chart.exporting.validateSprites.push(watermark);\r\n         *\r\n         * // Enable watermark on export\r\n         * chart.exporting.events.on(\"exportstarted\", function(ev) {\r\n         *   watermark.disabled = false;\r\n         * });\r\n         *\r\n         * // Disable watermark when export finishes\r\n         * chart.exporting.events.on(\"exportfinished\", function(ev) {\r\n         *   watermark.disabled = true;\r\n         * });\r\n         * ```\r\n         *\r\n         * @since 4.6.8\r\n         * @param value Sprite\r\n         */\r\n        set: function (value) {\r\n            this._validateSprites = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"data\", {\r\n        /**\r\n         * @return Data\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"data\", {\r\n                data: this._data\r\n            }).data;\r\n        },\r\n        /**\r\n         * Data to export.\r\n         *\r\n         * @param value Data\r\n         */\r\n        set: function (value) {\r\n            this._data = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"dataFields\", {\r\n        /**\r\n         * @return Field names `{ field: fieldName }`\r\n         */\r\n        get: function () {\r\n            if (!this._dataFields) {\r\n                this.generateDataFields();\r\n            }\r\n            return this.adapter.apply(\"dataFields\", {\r\n                dataFields: this._dataFields\r\n            }).dataFields;\r\n        },\r\n        /**\r\n         * Data fields in `{ field: fieldName }` format. Those are used for\r\n         * exporting in data formats to name the columns.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/exporting/#Changing_order_and_names_of_columns} for examples and details\r\n         * @param value Field names\r\n         */\r\n        set: function (value) {\r\n            this._dataFields = value;\r\n            this._dynamicDataFields = false;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Called after target chart's data updates.\r\n     *\r\n     * @ignore\r\n     */\r\n    Export.prototype.handleDataUpdated = function () {\r\n        if (this._dynamicDataFields) {\r\n            this._dataFields = undefined;\r\n        }\r\n    };\r\n    Object.defineProperty(Export.prototype, \"dateFormatter\", {\r\n        /**\r\n         * @return A DateFormatter instance\r\n         */\r\n        get: function () {\r\n            if (!this._dateFormatter) {\r\n                this._dateFormatter = new DateFormatter();\r\n                this._dateFormatter.language = this.language;\r\n            }\r\n            return this.adapter.apply(\"dateFormatter\", {\r\n                dateFormatter: this._dateFormatter\r\n            }).dateFormatter;\r\n        },\r\n        /**\r\n         * A [[DateFormatter]] to use when formatting dates when exporting data.\r\n         *\r\n         * @param value DateFormatter instance\r\n         */\r\n        set: function (value) {\r\n            this._dateFormatter = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"dateFormat\", {\r\n        /**\r\n         * @return Date format\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"dateFormat\", {\r\n                dateFormat: this._dateFormat\r\n            }).dateFormat;\r\n        },\r\n        /**\r\n         * A date format to use for exporting dates. Will use [[DateFormatter]]\r\n         * format if not set.\r\n         *\r\n         * @param value Date format\r\n         */\r\n        set: function (value) {\r\n            this._dateFormat = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"dateFields\", {\r\n        /**\r\n         * @return Date field list\r\n         */\r\n        get: function () {\r\n            if (!this._dateFields) {\r\n                this._dateFields = new List();\r\n            }\r\n            return this.adapter.apply(\"dateFields\", {\r\n                dateFields: this._dateFields\r\n            }).dateFields;\r\n        },\r\n        /**\r\n         * A list of fields that hold date values.\r\n         *\r\n         * @param value Date field list\r\n         */\r\n        set: function (value) {\r\n            this._dateFields = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"numberFormatter\", {\r\n        /**\r\n         * @return A NumberFormatter instance\r\n         */\r\n        get: function () {\r\n            if (!this._numberFormatter) {\r\n                this._numberFormatter = new NumberFormatter();\r\n                this._numberFormatter.language = this.language;\r\n            }\r\n            return this.adapter.apply(\"numberFormatter\", {\r\n                numberFormatter: this._numberFormatter\r\n            }).numberFormatter;\r\n        },\r\n        /**\r\n         * A [[NumberFormatter]] to use when formatting dates when exporting data.\r\n         *\r\n         * @since 4.5.15\r\n         * @param value NumberFormatter instance\r\n         */\r\n        set: function (value) {\r\n            this._numberFormatter = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"numberFormat\", {\r\n        /**\r\n         * @return Number format\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"numberFormat\", {\r\n                numberFormat: this._numberFormat\r\n            }).numberFormat;\r\n        },\r\n        /**\r\n         * A number format to use for exporting dates. Will use [[NumberFormatter]]\r\n         * format if not set.\r\n         *\r\n         * @since 4.5.15\r\n         * @param value Number format\r\n         */\r\n        set: function (value) {\r\n            this._numberFormat = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"numberFields\", {\r\n        /**\r\n         * @return Number field list\r\n         */\r\n        get: function () {\r\n            if (!this._numberFields) {\r\n                this._numberFields = new List();\r\n            }\r\n            return this.adapter.apply(\"numberFields\", {\r\n                numberFields: this._numberFields\r\n            }).numberFields;\r\n        },\r\n        /**\r\n         * A list of fields that hold number values.\r\n         *\r\n         * @since 4.5.15\r\n         * @param value Number field list\r\n         */\r\n        set: function (value) {\r\n            this._numberFields = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"durationFormatter\", {\r\n        /**\r\n         * @return A DurationFormatter instance\r\n         */\r\n        get: function () {\r\n            if (!this._durationFormatter) {\r\n                this._durationFormatter = new DurationFormatter();\r\n                this._durationFormatter.language = this.language;\r\n            }\r\n            return this.adapter.apply(\"durationFormatter\", {\r\n                durationFormatter: this._durationFormatter\r\n            }).durationFormatter;\r\n        },\r\n        /**\r\n         * A [[DurationFormatter]] to use when formatting duration values when\r\n         * exporting data.\r\n         *\r\n         * @param value  DurationFormatter instance\r\n         */\r\n        set: function (value) {\r\n            this._durationFormatter = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"durationFormat\", {\r\n        /**\r\n         * @return Duration format\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"durationFormat\", {\r\n                durationFormat: this._durationFormat\r\n            }).durationFormat;\r\n        },\r\n        /**\r\n         * A format to use when formatting values from `durationFields`.\r\n         * Will use [[DurationFormatter]] format if not set.\r\n         *\r\n         * @param value Duration format\r\n         */\r\n        set: function (value) {\r\n            this._durationFormat = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"durationFields\", {\r\n        /**\r\n         * @return Duration field list\r\n         */\r\n        get: function () {\r\n            if (!this._durationFields) {\r\n                this._durationFields = new List();\r\n            }\r\n            return this.adapter.apply(\"durationFields\", {\r\n                durationFields: this._durationFields\r\n            }).durationFields;\r\n        },\r\n        /**\r\n         * A list of fields that hold duration values.\r\n         *\r\n         * @param value Duration field list\r\n         */\r\n        set: function (value) {\r\n            this._durationFields = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Generates data fields out of the first row of data.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Export.prototype.generateDataFields = function () {\r\n        var _this = this;\r\n        this._dataFields = {};\r\n        if (this.data.length) {\r\n            $array.each(this.data, function (row) {\r\n                $object.each(row, function (key, value) {\r\n                    if (!$type.hasValue(_this._dataFields[key])) {\r\n                        _this._dataFields[key] = _this.adapter.apply(\"dataFieldName\", {\r\n                            name: key,\r\n                            field: key\r\n                        }).name;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Cheks against `dateFields` property to determine if this field holds\r\n     * dates.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param field   Field name\r\n     * @param options Options\r\n     * @return `true` if it's a date field\r\n     */\r\n    Export.prototype.isDateField = function (field) {\r\n        return this.adapter.apply(\"isDateField\", {\r\n            isDateField: this.dateFields.contains(field),\r\n            field: field\r\n        }).isDateField;\r\n    };\r\n    /**\r\n     * Cheks against `numberFields` property to determine if this field holds\r\n     * numbers.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param field   Field name\r\n     * @param options Options\r\n     * @return `true` if it's a number field\r\n     */\r\n    Export.prototype.isNumberField = function (field) {\r\n        return this.adapter.apply(\"isNumberField\", {\r\n            isNumberField: this.numberFields.contains(field),\r\n            field: field\r\n        }).isNumberField;\r\n    };\r\n    /**\r\n     * Cheks against `durationFields` property to determine if this field holds\r\n     * durations.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param field   Field name\r\n     * @param options Options\r\n     * @return `true` if it's a date field\r\n     */\r\n    Export.prototype.isDurationField = function (field) {\r\n        return this.adapter.apply(\"isDurationField\", {\r\n            isDurationField: this.durationFields.contains(field),\r\n            field: field\r\n        }).isDurationField;\r\n    };\r\n    /**\r\n     * Returns proper content type for the export type.\r\n     *\r\n     * @param type  Export format/type\r\n     * @return Proper content type, i.e. \"image/jpeg\"\r\n     */\r\n    Export.prototype.getContentType = function (type) {\r\n        var contentType = \"\";\r\n        switch (type) {\r\n            case \"png\":\r\n            case \"gif\":\r\n                contentType = \"image/\" + type;\r\n                break;\r\n            case \"jpg\":\r\n                contentType = \"image/jpeg\";\r\n                break;\r\n            case \"svg\":\r\n                contentType = \"image/svg+xml\";\r\n                break;\r\n            case \"csv\":\r\n                contentType = \"text/csv\";\r\n                break;\r\n            case \"json\":\r\n                contentType = \"application/json\";\r\n                break;\r\n            case \"html\":\r\n                contentType = \"text/html\";\r\n                break;\r\n            case \"pdf\":\r\n            case \"pdfdata\":\r\n                contentType = \"application/pdf\";\r\n                break;\r\n            case \"xlsx\":\r\n                contentType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\r\n                break;\r\n        }\r\n        return this.adapter.apply(\"contentType\", {\r\n            contentType: contentType,\r\n            type: type\r\n        }).contentType;\r\n    };\r\n    Object.defineProperty(Export.prototype, \"filePrefix\", {\r\n        /**\r\n         * @return File prefix\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"filePrefix\", {\r\n                filePrefix: this._filePrefix\r\n            }).filePrefix;\r\n        },\r\n        /**\r\n         * A file prefix to be used for all exported formats.\r\n         *\r\n         * Export will apply format-related extension to it. E.g. if this is set to\r\n         * \"myExport\", the file name of the PNG exported image will be \"myExport.png\".\r\n         *\r\n         * @param value File prefix\r\n         */\r\n        set: function (value) {\r\n            this._filePrefix = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"backgroundColor\", {\r\n        /**\r\n         * @return Background color\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"backgroundColor\", {\r\n                backgroundColor: this._backgroundColor\r\n            }).backgroundColor;\r\n        },\r\n        /**\r\n         * A background color to be used for exported images. If set, this will\r\n         * override the automatically acquired background color.\r\n         *\r\n         * @param value Color\r\n         */\r\n        set: function (value) {\r\n            this._backgroundColor = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"title\", {\r\n        /**\r\n         * @return Title\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"title\", {\r\n                title: this._title\r\n            }).title;\r\n        },\r\n        /**\r\n         * A title to be used when printing.\r\n         *\r\n         * @param value Title\r\n         */\r\n        set: function (value) {\r\n            this._title = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Displays a preloader/exporting indicator.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Add ability to change text\r\n     */\r\n    Export.prototype.showPreloader = function () {\r\n        var preloader = this.preloader;\r\n        if (preloader) {\r\n            preloader.progress = 0.5;\r\n            preloader.label.text = \"...\";\r\n        }\r\n    };\r\n    /**\r\n     * Hides preloader/exporting indicator\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Export.prototype.hidePreloader = function () {\r\n        var preloader = this.preloader;\r\n        if (preloader) {\r\n            preloader.progress = 1;\r\n        }\r\n    };\r\n    Object.defineProperty(Export.prototype, \"preloader\", {\r\n        /**\r\n         * Returns a an instance of [[Preloader]] associated with the Sprite being\r\n         * exported.\r\n         *\r\n         * @return Preloader\r\n         */\r\n        get: function () {\r\n            return this._sprite && this._sprite.parent && this._sprite.parent.preloader ?\r\n                this._sprite.parent.preloader :\r\n                undefined;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Displays a modal saying export is taking longer than expected.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Export.prototype.showTimeout = function () {\r\n        this.showModal(this.adapter.apply(\"timeoutMessage\", {\r\n            message: this.language.translate(\"Export operation took longer than expected. Something might have gone wrong.\")\r\n        }).message);\r\n    };\r\n    /**\r\n     * Hides preloader/exporting indicator.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Export.prototype.hideTimeout = function () {\r\n        if (this._timeoutTimeout) {\r\n            this.removeDispose(this._timeoutTimeout);\r\n            this._timeoutTimeout = null;\r\n        }\r\n        this.hideModal();\r\n    };\r\n    Object.defineProperty(Export.prototype, \"language\", {\r\n        /**\r\n         * @return A [[Language]] instance to be used\r\n         */\r\n        get: function () {\r\n            if (!this._language) {\r\n                this._language = new Language();\r\n            }\r\n            return this._language;\r\n        },\r\n        /**\r\n         * A [[Language]] instance to be used for translations.\r\n         *\r\n         * @param value An instance of [[Language]]\r\n         */\r\n        set: function (value) {\r\n            this._language = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"modal\", {\r\n        /**\r\n         * Returns (and creates) [[Modal]].\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return Modal instance\r\n         */\r\n        get: function () {\r\n            if (!this._modal) {\r\n                this._modal = new Modal();\r\n                // Prefix with Sprite's class name\r\n                this._modal.adapter.add(\"classPrefix\", function (value) {\r\n                    value = options.classNamePrefix + value;\r\n                    return value;\r\n                });\r\n            }\r\n            return this._modal;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Shows [[Modal]] with specific text.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text Modal contents\r\n     */\r\n    Export.prototype.showModal = function (text, title) {\r\n        // Hide previous modal and preloader\r\n        this.hideModal();\r\n        this.hidePreloader();\r\n        // Create modal\r\n        var modal = this.modal;\r\n        modal.container = this.sprite.svgContainer.SVGContainer;\r\n        modal.content = text;\r\n        modal.readerTitle = title;\r\n        modal.open();\r\n    };\r\n    /**\r\n     * Hides modal window if one's currently open.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Export.prototype.hideModal = function () {\r\n        if (this._modal) {\r\n            this.modal.close();\r\n        }\r\n    };\r\n    /**\r\n     * Loads canvg dynamic module.\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Instance of canvg\r\n     * @async\r\n     */\r\n    Export.prototype._canvg = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var canvg;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, import(/* webpackChunkName: \"canvg\" */ \"canvg\")];\r\n                    case 1:\r\n                        canvg = (_a.sent());\r\n                        if (canvg.default != null) {\r\n                            return [2 /*return*/, canvg.default];\r\n                        }\r\n                        else {\r\n                            return [2 /*return*/, canvg];\r\n                        }\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Object.defineProperty(Export.prototype, \"canvg\", {\r\n        /**\r\n         * Returns canvg instance.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return Instance of canvg\r\n         */\r\n        get: function () {\r\n            return this._canvg();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"pdfmake\", {\r\n        /**\r\n         * Returns pdfmake instance.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return Instance of pdfmake\r\n         */\r\n        get: function () {\r\n            if (pdfmakePromise == null) {\r\n                pdfmakePromise = _pdfmake();\r\n            }\r\n            return pdfmakePromise;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Loads xlsx dynamic module.\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Instance of pdfmake\r\n     * @async\r\n     */\r\n    Export.prototype._xlsx = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, import(/* webpackChunkName: \"xlsx\" */ \"xlsx\")];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Object.defineProperty(Export.prototype, \"xlsx\", {\r\n        /**\r\n         * Returns xlsx instance.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return Instance of pdfmake\r\n         */\r\n        get: function () {\r\n            return this._xlsx();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Sets options for a format.\r\n     */\r\n    Export.prototype.setFormatOptions = function (type, options) {\r\n        this._formatOptions.setKey(type, options);\r\n    };\r\n    /**\r\n     * Returns current options for a format.\r\n     */\r\n    Export.prototype.getFormatOptions = function (type) {\r\n        return this._formatOptions.getKey(type);\r\n    };\r\n    /**\r\n     * Disables interactivity on parent chart.\r\n     */\r\n    Export.prototype._disablePointers = function () {\r\n        if (!$type.hasValue(this._spriteInteractionsEnabled)) {\r\n            this._spriteInteractionsEnabled = this.sprite.interactionsEnabled;\r\n        }\r\n        this.sprite.interactionsEnabled = false;\r\n    };\r\n    /**\r\n     * Releases temporarily disabled pointers on parent chart.\r\n     */\r\n    Export.prototype._releasePointers = function () {\r\n        if ($type.hasValue(this._spriteInteractionsEnabled)) {\r\n            this.sprite.interactionsEnabled = this._spriteInteractionsEnabled;\r\n        }\r\n    };\r\n    /**\r\n     * Hides all elements that should not be included in the exported image.\r\n     */\r\n    Export.prototype.hideNonExportableSprites = function () {\r\n        var _this = this;\r\n        if (this._objectsAlreadyHidden) {\r\n            return;\r\n        }\r\n        var svgContainer = this.sprite.svgContainer;\r\n        if (svgContainer) {\r\n            $array.each(svgContainer.nonExportableSprites, function (item) {\r\n                if (!item.isHidden && !item.isHiding && item.visible) {\r\n                    _this._hiddenObjects.push(item);\r\n                }\r\n                item.hide(0);\r\n            });\r\n        }\r\n        this._objectsAlreadyHidden = true;\r\n    };\r\n    /**\r\n     * Respores elements that were hidden before export.\r\n     */\r\n    Export.prototype.restoreNonExportableSprites = function () {\r\n        if (!this._objectsAlreadyHidden) {\r\n            return;\r\n        }\r\n        $array.each(this._hiddenObjects, function (item) {\r\n            item.show(0);\r\n        });\r\n        this._hiddenObjects = [];\r\n        this._objectsAlreadyHidden = false;\r\n    };\r\n    /**\r\n     * Checks if there are elements that absolutely need to be validated before\r\n     * export.\r\n     *\r\n     * If there are invalid elements, it will await for them to be validated.\r\n     *\r\n     * @return Promise\r\n     */\r\n    Export.prototype.awaitValidSprites = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var promises;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        promises = [];\r\n                        if (this.validateSprites.length) {\r\n                            $array.each(this.validateSprites, function (sprite, index) {\r\n                                if (sprite.invalid) {\r\n                                    promises.push(new Promise(function (resolve, reject) {\r\n                                        sprite.events.once(\"validated\", function (ev) {\r\n                                            resolve();\r\n                                        });\r\n                                    }));\r\n                                }\r\n                            });\r\n                        }\r\n                        if (!promises.length) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, Promise.all(promises)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        _a.label = 2;\r\n                    case 2: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Processes JSON-based config before it is applied to the object.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param config  Config\r\n     */\r\n    Export.prototype.processConfig = function (config) {\r\n        registry.registeredClasses[\"ExportMenu\"] = ExportMenu;\r\n        if (config) {\r\n            // Set up menu\r\n            if ($type.hasValue(config.menu) && !$type.hasValue(config.menu.type)) {\r\n                config.menu.type = \"ExportMenu\";\r\n            }\r\n        }\r\n        _super.prototype.processConfig.call(this, config);\r\n    };\r\n    /**\r\n     * XLINK namespace definition.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Export.XLINK = \"http://www.w3.org/1999/xlink\";\r\n    return Export;\r\n}(Validatable));\r\nexport { Export };\r\n//# sourceMappingURL=Export.js.map","import { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { dataLoader } from \"./DataLoader\";\r\nimport { JSONParser } from \"./JSONParser\";\r\nimport { CSVParser } from \"./CSVParser\";\r\nimport { BaseObjectEvents } from \"../Base\";\r\nimport { Adapter } from \"../utils/Adapter\";\r\nimport { Language } from \"../utils/Language\";\r\nimport { DateFormatter } from \"../formatters/DateFormatter\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $type from \"../utils/Type\";\r\nimport * as $object from \"../utils/Object\";\r\n;\r\n;\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Represents a single data source - external file with all of its settings,\r\n * such as format, data parsing, etc.\r\n *\r\n * ```TypeScript\r\n * chart.dataSource.url = \"http://www.myweb.com/data.json\";\r\n * chart.dataSource.parser = am4core.JSONParser;\r\n * ```\r\n * ```JavaScript\r\n * chart.dataSource.url = \"http://www.myweb.com/data.json\";\r\n * chart.dataSource.parser = am4core.JSONParser;\r\n * ```\r\n * ```JSON\r\n * {\r\n *   // ...\r\n *   \"dataSource\": {\r\n *     \"url\": \"http://www.myweb.com/data.json\",\r\n *     \"parser\": \"JSONParser\"\r\n *   },\r\n *   // ...\r\n * }\r\n * ```\r\n *\r\n * @see {@link IDataSourceEvents} for a list of available events\r\n * @see {@link IDataSourceAdapters} for a list of available Adapters\r\n */\r\nvar DataSource = /** @class */ (function (_super) {\r\n    __extends(DataSource, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function DataSource(url, parser) {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        /**\r\n         * Adapter.\r\n         */\r\n        _this.adapter = new Adapter(_this);\r\n        /**\r\n         * Custom options for HTTP(S) request.\r\n         */\r\n        _this._requestOptions = {};\r\n        /**\r\n         * If set to `true`, any subsequent data loads will be considered incremental\r\n         * (containing only new data points that are supposed to be added to existing\r\n         * data).\r\n         *\r\n         * NOTE: this setting works only with element's `data` property. It won't\r\n         * work with any other externally-loadable data property.\r\n         *\r\n         * @default false\r\n         */\r\n        _this._incremental = false;\r\n        /**\r\n         * A collection of key/value pairs to attach to a data source URL when making\r\n         * an incremental request.\r\n         */\r\n        _this._incrementalParams = {};\r\n        /**\r\n         * This setting is used only when `incremental = true`. If set to `true`,\r\n         * it will try to retain the same number of data items across each load.\r\n         *\r\n         * E.g. if incremental load yeilded 5 new records, then 5 items from the\r\n         * beginning of data will be removed so that we end up with the same number\r\n         * of data items.\r\n         *\r\n         * @default false\r\n         */\r\n        _this._keepCount = false;\r\n        /**\r\n         * If set to `true`, each subsequent load will be treated as an update to\r\n         * currently loaded data, meaning that it will try to update values on\r\n         * existing data items, not overwrite the whole data.\r\n         *\r\n         * This will work faster than complete update, and also will animate the\r\n         * values to their new positions.\r\n         *\r\n         * Data sources across loads must contain the same number of data items.\r\n         *\r\n         * Loader will not truncate the data set if loaded data has fewer data items,\r\n         * and if it is longer, the excess data items will be ignored.\r\n         *\r\n         * @default false\r\n         * @since 4.5.5\r\n         */\r\n        _this._updateCurrentData = false;\r\n        /**\r\n         * Will show loading indicator when loading files.\r\n         */\r\n        _this.showPreloader = true;\r\n        _this.className = \"DataSource\";\r\n        // Set defaults\r\n        if (url) {\r\n            _this.url = url;\r\n        }\r\n        // Set parser\r\n        if (parser) {\r\n            if (typeof parser == \"string\") {\r\n                _this.parser = dataLoader.getParserByType(parser);\r\n            }\r\n            else {\r\n                _this.parser = parser;\r\n            }\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Processes the loaded data.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param data         Raw (unparsed) data\r\n     * @param contentType  Content type of the loaded data (optional)\r\n     */\r\n    DataSource.prototype.processData = function (data, contentType) {\r\n        // Parsing started\r\n        this.dispatchImmediately(\"parsestarted\");\r\n        // Check if parser is set\r\n        if (!this.parser) {\r\n            // Try to resolve from data\r\n            this.parser = dataLoader.getParserByData(data, contentType);\r\n            if (!this.parser) {\r\n                // We have a problem - nobody knows what to do with the data\r\n                // Raise error\r\n                if (this.events.isEnabled(\"parseerror\")) {\r\n                    var event_1 = {\r\n                        type: \"parseerror\",\r\n                        message: this.language.translate(\"No parser available for file: %1\", null, this.url),\r\n                        target: this\r\n                    };\r\n                    this.events.dispatchImmediately(\"parseerror\", event_1);\r\n                }\r\n                this.dispatchImmediately(\"parseended\");\r\n                return;\r\n            }\r\n        }\r\n        // Apply options adapters\r\n        this.parser.options = this.adapter.apply(\"parserOptions\", this.parser.options);\r\n        this.parser.options.dateFields = this.adapter.apply(\"dateFields\", this.parser.options.dateFields || []);\r\n        this.parser.options.numberFields = this.adapter.apply(\"numberFields\", this.parser.options.numberFields || []);\r\n        // Check if we need to pass in date formatter\r\n        if (this.parser.options.dateFields && !this.parser.options.dateFormatter) {\r\n            this.parser.options.dateFormatter = this.dateFormatter;\r\n        }\r\n        // Parse\r\n        this.data = this.adapter.apply(\"parsedData\", this.parser.parse(this.adapter.apply(\"unparsedData\", data)));\r\n        // Check for parsing errors\r\n        if (!$type.hasValue(this.data) && this.events.isEnabled(\"parseerror\")) {\r\n            var event_2 = {\r\n                type: \"parseerror\",\r\n                message: this.language.translate(\"Error parsing file: %1\", null, this.url),\r\n                target: this\r\n            };\r\n            this.events.dispatchImmediately(\"parseerror\", event_2);\r\n        }\r\n        // Wrap up\r\n        this.dispatchImmediately(\"parseended\");\r\n        if ($type.hasValue(this.data)) {\r\n            this.dispatchImmediately(\"done\", {\r\n                \"data\": this.data\r\n            });\r\n        }\r\n        // The component is responsible for updating its own data vtriggered via\r\n        // events.\r\n        // Update last data load\r\n        this.lastLoad = new Date();\r\n    };\r\n    Object.defineProperty(DataSource.prototype, \"url\", {\r\n        /**\r\n         * @return URL\r\n         */\r\n        get: function () {\r\n            // Get URL\r\n            var url = this.disableCache\r\n                ? this.timestampUrl(this._url)\r\n                : this._url;\r\n            // Add incremental params\r\n            if (this.incremental && this.component.data.length) {\r\n                url = this.addUrlParams(url, this.incrementalParams);\r\n            }\r\n            return this.adapter.apply(\"url\", url);\r\n        },\r\n        /**\r\n         * URL of the data source.\r\n         *\r\n         * @param value  URL\r\n         */\r\n        set: function (value) {\r\n            this._url = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DataSource.prototype, \"requestOptions\", {\r\n        /**\r\n         * @return Options\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"requestOptions\", this._requestOptions);\r\n        },\r\n        /**\r\n         * Custom options for HTTP(S) request.\r\n         *\r\n         * At this moment the only option supported is: `requestHeaders`, which holds\r\n         * an array of objects for custom request headers, e.g.:\r\n         *\r\n         * ```TypeScript\r\n         * chart.dataSource.requestOptions.requestHeaders = [{\r\n         *   \"key\": \"x-access-token\",\r\n         *   \"value\": \"123456789\"\r\n         * }];\r\n         * ``````JavaScript\r\n         * chart.dataSource.requestOptions.requestHeaders = [{\r\n         *   \"key\": \"x-access-token\",\r\n         *   \"value\": \"123456789\"\r\n         * }];\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // ...\r\n         *   \"dataSource\": {\r\n         *     // ...\r\n         *     \"requestOptions\": {\r\n         *       \"requestHeaders\": [{\r\n         *         \"key\": \"x-access-token\",\r\n         *         \"value\": \"123456789\"\r\n         *       }]\r\n         *     }\r\n         *   }\r\n         * }\r\n         * ```\r\n         *\r\n         * NOTE: setting this options on an-already loaded DataSource will not\r\n         * trigger a reload.\r\n         *\r\n         * @param value  Options\r\n         */\r\n        set: function (value) {\r\n            this._requestOptions = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DataSource.prototype, \"parser\", {\r\n        /**\r\n         * @return Data parser\r\n         */\r\n        get: function () {\r\n            if (!this._parser) {\r\n                this._parser = new JSONParser();\r\n            }\r\n            return this.adapter.apply(\"parser\", this._parser);\r\n        },\r\n        /**\r\n         * A parser to be used to parse data.\r\n         *\r\n         * ```TypeScript\r\n         * chart.dataSource.url = \"http://www.myweb.com/data.json\";\r\n         * chart.dataSource.parser = am4core.JSONParser;\r\n         * ```\r\n         * ```JavaScript\r\n         * chart.dataSource.url = \"http://www.myweb.com/data.json\";\r\n         * chart.dataSource.parser = am4core.JSONParser;\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // ...\r\n         *   \"dataSource\": {\r\n         *     \"url\": \"http://www.myweb.com/data.json\",\r\n         *     \"parser\": \"JSONParser\"\r\n         *   },\r\n         *   // ...\r\n         * }\r\n         * ```\r\n         *\r\n         * @default JSONParser\r\n         * @param value  Data parser\r\n         */\r\n        set: function (value) {\r\n            this._parser = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DataSource.prototype, \"reloadFrequency\", {\r\n        /**\r\n         * @return Reload frequency (ms)\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"reloadTimeout\", this._reloadFrequency);\r\n        },\r\n        /**\r\n         * Data source reload frequency.\r\n         *\r\n         * If set, it will reload the same URL every X milliseconds.\r\n         *\r\n         * @param value Reload frequency (ms)\r\n         */\r\n        set: function (value) {\r\n            var _this = this;\r\n            if (this._reloadFrequency != value) {\r\n                this._reloadFrequency = value;\r\n                // Should we schedule a reload?\r\n                if (value) {\r\n                    if (!$type.hasValue(this._reloadDisposer)) {\r\n                        this._reloadDisposer = this.events.on(\"ended\", function (ev) {\r\n                            _this._reloadTimeout = setTimeout(function () {\r\n                                _this.load();\r\n                            }, _this.reloadFrequency);\r\n                        });\r\n                    }\r\n                }\r\n                else if ($type.hasValue(this._reloadDisposer)) {\r\n                    this._reloadDisposer.dispose();\r\n                    this._reloadDisposer = undefined;\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DataSource.prototype, \"incremental\", {\r\n        /**\r\n         * @return Incremental load?\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"incremental\", this._incremental);\r\n        },\r\n        /**\r\n         * Should subsequent reloads be treated as incremental?\r\n         *\r\n         * Incremental loads will assume that they contain only new data items\r\n         * since the last load.\r\n         *\r\n         * If `incremental = false` the loader will replace all of the target's\r\n         * data with each load.\r\n         *\r\n         * This setting does not have any effect trhe first time data is loaded.\r\n         *\r\n         * NOTE: this setting works only with element's `data` property. It won't\r\n         * work with any other externally-loadable data property.\r\n         *\r\n         * @default false\r\n         * @param Incremental load?\r\n         */\r\n        set: function (value) {\r\n            this._incremental = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DataSource.prototype, \"incrementalParams\", {\r\n        /**\r\n         * @return Incremental request parameters\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"incrementalParams\", this._incrementalParams);\r\n        },\r\n        /**\r\n         * An object consisting of key/value pairs to apply to an URL when data\r\n         * source is making an incremental request.\r\n         *\r\n         * @param value  Incremental request parameters\r\n         */\r\n        set: function (value) {\r\n            this._incrementalParams = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DataSource.prototype, \"keepCount\", {\r\n        /**\r\n         * @return keepCount load?\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"keepCount\", this._keepCount);\r\n        },\r\n        /**\r\n         * This setting is used only when `incremental = true`. If set to `true`,\r\n         * it will try to retain the same number of data items across each load.\r\n         *\r\n         * E.g. if incremental load yeilded 5 new records, then 5 items from the\r\n         * beginning of data will be removed so that we end up with the same number\r\n         * of data items.\r\n         *\r\n         * @default false\r\n         * @param Keep record count?\r\n         */\r\n        set: function (value) {\r\n            this._keepCount = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DataSource.prototype, \"updateCurrentData\", {\r\n        /**\r\n         * @return Update current data?\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"updateCurrentData\", this._updateCurrentData);\r\n        },\r\n        /**\r\n         * If set to `true`, each subsequent load will be treated as an update to\r\n         * currently loaded data, meaning that it will try to update values on\r\n         * existing data items, not overwrite the whole data.\r\n         *\r\n         * This will work faster than complete update, and also will animate the\r\n         * values to their new positions.\r\n         *\r\n         * Data sources across loads must contain the same number of data items.\r\n         *\r\n         * Loader will not truncate the data set if loaded data has fewer data items,\r\n         * and if it is longer, the excess data items will be ignored.\r\n         *\r\n         * NOTE: this setting is ignored if `incremental = true`.\r\n         *\r\n         * @default false\r\n         * @since 2.5.5\r\n         * @param Update current data?\r\n         */\r\n        set: function (value) {\r\n            this._updateCurrentData = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DataSource.prototype, \"language\", {\r\n        /**\r\n         * @return A [[Language]] instance to be used\r\n         */\r\n        get: function () {\r\n            if (this._language) {\r\n                return this._language;\r\n            }\r\n            else if (this.component) {\r\n                this._language = this.component.language;\r\n                return this._language;\r\n            }\r\n            this.language = new Language();\r\n            return this.language;\r\n        },\r\n        /**\r\n         * Language instance to use.\r\n         *\r\n         * Will inherit and use chart's language, if not set.\r\n         *\r\n         * @param value An instance of Language\r\n         */\r\n        set: function (value) {\r\n            this._language = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DataSource.prototype, \"dateFormatter\", {\r\n        /**\r\n         * @return A [[DateFormatter]] instance to be used\r\n         */\r\n        get: function () {\r\n            if (this._dateFormatter) {\r\n                return this._dateFormatter;\r\n            }\r\n            else if (this.component) {\r\n                this._dateFormatter = this.component.dateFormatter;\r\n                return this._dateFormatter;\r\n            }\r\n            this.dateFormatter = new DateFormatter();\r\n            return this.dateFormatter;\r\n        },\r\n        /**\r\n         * A [[DateFormatter]] to use when parsing dates from string formats.\r\n         *\r\n         * Will inherit and use chart's DateFormatter if not ser.\r\n         *\r\n         * @param value An instance of [[DateFormatter]]\r\n         */\r\n        set: function (value) {\r\n            this._dateFormatter = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds current timestamp to the URL.\r\n     *\r\n     * @param url  Source URL\r\n     * @return Timestamped URL\r\n     */\r\n    DataSource.prototype.timestampUrl = function (url) {\r\n        var tstamp = new Date().getTime().toString();\r\n        var params = {};\r\n        params[tstamp] = \"\";\r\n        return this.addUrlParams(url, params);\r\n    };\r\n    /**\r\n     * Disposes of this object.\r\n     */\r\n    DataSource.prototype.dispose = function () {\r\n        _super.prototype.dispose.call(this);\r\n        if (this._reloadTimeout) {\r\n            clearTimeout(this._reloadTimeout);\r\n        }\r\n        if ($type.hasValue(this._reloadDisposer)) {\r\n            this._reloadDisposer.dispose();\r\n            this._reloadDisposer = undefined;\r\n        }\r\n    };\r\n    /**\r\n     * Initiate the load.\r\n     *\r\n     * All loading in JavaScript is asynchronous. This function will trigger the\r\n     * load and will exit immediately.\r\n     *\r\n     * Use DataSource's events to watch for loaded data and errors.\r\n     */\r\n    DataSource.prototype.load = function () {\r\n        if (this.url) {\r\n            if (this._reloadTimeout) {\r\n                clearTimeout(this._reloadTimeout);\r\n            }\r\n            dataLoader.load(this);\r\n        }\r\n    };\r\n    /**\r\n     * Adds parameters to `url` as query strings. Will take care of proper\r\n     * separators.\r\n     *\r\n     * @param url     Source URL\r\n     * @param params  Parameters\r\n     * @return New URL\r\n     */\r\n    DataSource.prototype.addUrlParams = function (url, params) {\r\n        var join = url.match(/\\?/) ? \"&\" : \"?\";\r\n        var add = [];\r\n        $object.each(params, function (key, value) {\r\n            if (value != \"\") {\r\n                add.push(key + \"=\" + encodeURIComponent(value));\r\n            }\r\n            else {\r\n                add.push(key);\r\n            }\r\n        });\r\n        if (add.length) {\r\n            return url + join + add.join(\"&\");\r\n        }\r\n        return url;\r\n    };\r\n    /**\r\n     * Processes JSON-based config before it is applied to the object.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param config  Config\r\n     */\r\n    DataSource.prototype.processConfig = function (config) {\r\n        registry.registeredClasses[\"json\"] = JSONParser;\r\n        registry.registeredClasses[\"JSONParser\"] = JSONParser;\r\n        registry.registeredClasses[\"csv\"] = CSVParser;\r\n        registry.registeredClasses[\"CSVParser\"] = CSVParser;\r\n        _super.prototype.processConfig.call(this, config);\r\n    };\r\n    return DataSource;\r\n}(BaseObjectEvents));\r\nexport { DataSource };\r\n//# sourceMappingURL=DataSource.js.map","/**\r\n * Pointed rectangle module.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { PointedShape } from \"./PointedShape\";\r\nimport * as $math from \"../utils/Math\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Draws a rectangle with a pointer.\r\n *\r\n * @see {@link IPointedRectangleEvents} for a list of available events\r\n * @see {@link IPointedRectangleAdapters} for a list of available Adapters\r\n */\r\nvar PointedRectangle = /** @class */ (function (_super) {\r\n    __extends(PointedRectangle, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function PointedRectangle() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"PointedRectangle\";\r\n        _this.element = _this.paper.add(\"path\");\r\n        _this.cornerRadius = 6;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Draws the element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    PointedRectangle.prototype.draw = function () {\r\n        _super.prototype.draw.call(this);\r\n        var cr = this.cornerRadius;\r\n        var w = this.innerWidth;\r\n        var h = this.innerHeight;\r\n        if (w > 0 && h > 0) {\r\n            var x = this.pointerX;\r\n            var y = this.pointerY;\r\n            var bwh = this.pointerBaseWidth / 2;\r\n            var maxcr = $math.min(w / 2, h / 2);\r\n            var crtl = $math.fitToRange(cr, 0, maxcr);\r\n            var crtr = $math.fitToRange(cr, 0, maxcr);\r\n            var crbr = $math.fitToRange(cr, 0, maxcr);\r\n            var crbl = $math.fitToRange(cr, 0, maxcr);\r\n            // corner coordinates\r\n            // top left\r\n            var xtl = 0;\r\n            var ytl = 0;\r\n            // top right\r\n            var xtr = w;\r\n            var ytr = 0;\r\n            // bottom right\r\n            var xbr = w;\r\n            var ybr = h;\r\n            // bottom left\r\n            var xbl = 0;\r\n            var ybl = h;\r\n            var lineT = void 0;\r\n            var lineR = void 0;\r\n            var lineB = void 0;\r\n            var lineL = void 0;\r\n            // find stem base side: http://$math.stackexchange.com/questions/274712/calculate-on-which-side-of-straign-line-is-dot-located\r\n            // d=(x−x1)(y2−y1)−(y−y1)(x2−x1)\r\n            var d1 = (x - xtl) * (ybr - ytl) - (y - ytl) * (xbr - xtl);\r\n            var d2 = (x - xbl) * (ytr - ybl) - (y - ybl) * (xtr - xbl);\r\n            // top\r\n            if (d1 > 0 && d2 > 0) {\r\n                var stemX = $math.fitToRange(x, crtl + bwh, w - bwh - crtr);\r\n                y = $math.fitToRange(y, -Infinity, 0);\r\n                lineT = \"M\" + crtl + \",0 L\" + (stemX - bwh) + \",0 L\" + x + \",\" + y + \" L\" + (stemX + bwh) + \",0 L\" + (w - crtr) + \",0\";\r\n            }\r\n            else {\r\n                lineT = \"M\" + crtl + \",0 L\" + (w - crtr) + \",0\";\r\n            }\r\n            // bottom\r\n            if (d1 < 0 && d2 < 0) {\r\n                var stemX = $math.fitToRange(x, crbl + bwh, w - bwh - crbr);\r\n                y = $math.fitToRange(y, h, Infinity);\r\n                lineB = \" L\" + (w - crbr) + \",\" + h + \" L\" + (stemX + bwh) + \",\" + h + \" L\" + x + \",\" + y + \" L\" + (stemX - bwh) + \",\" + h + \" L\" + crbl + \",\" + h;\r\n            }\r\n            else {\r\n                lineB = \" L\" + crbl + \",\" + h;\r\n            }\r\n            // left\r\n            if (d1 < 0 && d2 > 0) {\r\n                var stemY = $math.fitToRange(y, crtl + bwh, h - crbl - bwh);\r\n                x = $math.fitToRange(x, -Infinity, 0);\r\n                lineL = \" L0,\" + (h - crbl) + \" L0,\" + (stemY + bwh) + \" L\" + x + \",\" + y + \" L0,\" + (stemY - bwh) + \" L0,\" + crtl;\r\n            }\r\n            else {\r\n                lineL = \" L0,\" + crtl;\r\n            }\r\n            // right\r\n            if (d1 > 0 && d2 < 0) {\r\n                var stemY = $math.fitToRange(y, crtr + bwh, h - bwh - crbr);\r\n                x = $math.fitToRange(x, w, Infinity);\r\n                lineR = \" L\" + w + \",\" + crtr + \" L\" + w + \",\" + (stemY - bwh) + \" L\" + x + \",\" + y + \" L\" + w + \",\" + (stemY + bwh) + \" L\" + w + \",\" + (h - crbr);\r\n            }\r\n            else {\r\n                lineR = \" L\" + w + \",\" + (h - crbr);\r\n            }\r\n            var arcTR = \" a\" + crtr + \",\" + crtr + \" 0 0 1 \" + crtr + \",\" + crtr;\r\n            var arcBR = \" a\" + crbr + \",\" + crbr + \" 0 0 1 -\" + crbr + \",\" + crbr;\r\n            var arcBL = \" a\" + crbl + \",\" + crbl + \" 0 0 1 -\" + crbl + \",-\" + crbl;\r\n            var arcTL = \" a\" + crtl + \",\" + crtl + \" 0 0 1 \" + crtl + \",-\" + crtl;\r\n            this.path = lineT + arcTR + lineR + arcBR + lineB + arcBL + lineL + arcTL;\r\n        }\r\n    };\r\n    Object.defineProperty(PointedRectangle.prototype, \"cornerRadius\", {\r\n        /**\r\n         * @return Corner radius (px)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"cornerRadius\");\r\n        },\r\n        /**\r\n         * Radius of rectangle's border in pixels.\r\n         *\r\n         * @default 0\r\n         * @param value  Corner radius (px)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"cornerRadius\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return PointedRectangle;\r\n}(PointedShape));\r\nexport { PointedRectangle };\r\n//# sourceMappingURL=PointedRectangle.js.map","/**\r\n * Pointed shape module.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite } from \"../Sprite\";\r\nimport * as $type from \"../utils/Type\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Draws a shape with a pointer.\r\n *\r\n * @see {@link IPointedShapeEvents} for a list of available events\r\n * @see {@link IPointedShapeAdapters} for a list of available Adapters\r\n */\r\nvar PointedShape = /** @class */ (function (_super) {\r\n    __extends(PointedShape, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function PointedShape() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"PointedShape\";\r\n        _this.pointerBaseWidth = 15;\r\n        _this.pointerLength = 10;\r\n        _this.pointerY = 0;\r\n        _this.pointerX = 0;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Draws the element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    PointedShape.prototype.draw = function () {\r\n        _super.prototype.draw.call(this);\r\n        if (!$type.isNumber(this.pointerX)) {\r\n            this.pointerX = this.pixelWidth / 2;\r\n        }\r\n        if (!$type.isNumber(this.pointerY)) {\r\n            this.pointerY = this.pixelHeight + 10;\r\n        }\r\n    };\r\n    Object.defineProperty(PointedShape.prototype, \"pointerBaseWidth\", {\r\n        /**\r\n         * @return Width (px)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"pointerBaseWidth\");\r\n        },\r\n        /**\r\n         * A width of the pinter's (stem's) thick end (base) in pixels.\r\n         *\r\n         * @default 15\r\n         * @param value  Width (px)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"pointerBaseWidth\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PointedShape.prototype, \"pointerLength\", {\r\n        /**\r\n         * @return Length (px)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"pointerLength\");\r\n        },\r\n        /**\r\n         * A length of the pinter (stem) in pixels.\r\n         *\r\n         * @default 10\r\n         * @param value  Length (px)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"pointerLength\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PointedShape.prototype, \"pointerX\", {\r\n        /**\r\n         * @return X\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"pointerX\");\r\n        },\r\n        /**\r\n         * X coordinate the shape is pointing to.\r\n         *\r\n         * @param value  X\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"pointerX\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PointedShape.prototype, \"pointerY\", {\r\n        /**\r\n         * @return Y\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"pointerY\");\r\n        },\r\n        /**\r\n         * Y coordinate the shape is pointing to.\r\n         *\r\n         * @param value  Y\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"pointerY\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return PointedShape;\r\n}(Sprite));\r\nexport { PointedShape };\r\n//# sourceMappingURL=PointedShape.js.map","/**\r\n * Resize button module.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Button } from \"./Button\";\r\nimport { Sprite } from \"../Sprite\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $path from \"../rendering/Path\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a draggable resize/grip button.\r\n *\r\n * @see {@link IResizeButtonEvents} for a list of available events\r\n * @see {@link IResizeButtonAdapters} for a list of available Adapters\r\n */\r\nvar ResizeButton = /** @class */ (function (_super) {\r\n    __extends(ResizeButton, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ResizeButton() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        _this.className = \"ResizeButton\";\r\n        // Set defaults\r\n        _this.orientation = \"horizontal\";\r\n        _this.layout = \"absolute\";\r\n        _this.horizontalCenter = \"middle\";\r\n        _this.verticalCenter = \"middle\";\r\n        _this.draggable = true;\r\n        _this.padding(8, 8, 8, 8);\r\n        _this.background.cornerRadius(20, 20, 20, 20);\r\n        // Create an icon\r\n        var icon = new Sprite();\r\n        icon.element = _this.paper.add(\"path\");\r\n        var path = $path.moveTo({ x: -2, y: -6 });\r\n        path += $path.lineTo({ x: -2, y: 6 });\r\n        path += $path.moveTo({ x: 2, y: -6 });\r\n        path += $path.lineTo({ x: 2, y: 6 });\r\n        icon.path = path;\r\n        icon.pixelPerfect = true;\r\n        icon.padding(0, 4, 0, 4);\r\n        icon.stroke = new InterfaceColorSet().getFor(\"alternativeText\");\r\n        icon.strokeOpacity = 0.7;\r\n        //icon.align = \"center\";\r\n        //icon.valign = \"middle\";\r\n        _this.icon = icon;\r\n        _this.label.dispose();\r\n        _this.label = undefined;\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ResizeButton.prototype, \"orientation\", {\r\n        /**\r\n         * Use for setting of direction (orientation) of the resize button.\r\n         *\r\n         * Available options: \"horizontal\", \"vertical\".\r\n         *\r\n         * @param value Orientation\r\n         */\r\n        set: function (value) {\r\n            var icon = this.icon;\r\n            if (icon) {\r\n                if (value == \"horizontal\") {\r\n                    icon.rotation = 0;\r\n                }\r\n                else {\r\n                    icon.rotation = -90;\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ResizeButton;\r\n}(Button));\r\nexport { ResizeButton };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ResizeButton\"] = ResizeButton;\r\n//# sourceMappingURL=ResizeButton.js.map","/**\r\n * Module for \"Drop Shadow\" filter.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Filter } from \"./Filter\";\r\nimport { color } from \"../../utils/Color\";\r\nimport { registry } from \"../../Registry\";\r\n;\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creats a \"Drop Shadow\" filter.\r\n */\r\nvar DropShadowFilter = /** @class */ (function (_super) {\r\n    __extends(DropShadowFilter, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function DropShadowFilter() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"DropShadowFilter\";\r\n        // Create elements\r\n        // NOTE: we do not need to add each individual element to `_disposers`\r\n        // because `filterPrimitives` has an event handler which automatically adds\r\n        // anything added to it to `_disposers`\r\n        _this.color = color(\"#000\");\r\n        _this.feGaussianBlur = _this.paper.add(\"feGaussianBlur\");\r\n        _this.feGaussianBlur.attr({ \"result\": \"blurOut\", \"in\": \"SourceGraphic\" });\r\n        _this.filterPrimitives.push(_this.feGaussianBlur);\r\n        _this.feOffset = _this.paper.add(\"feOffset\");\r\n        _this.feOffset.attr({ \"result\": \"offsetBlur\" });\r\n        _this.filterPrimitives.push(_this.feOffset);\r\n        _this.feFlood = _this.paper.add(\"feFlood\");\r\n        _this.feFlood.attr({ \"flood-color\": _this.color });\r\n        _this.filterPrimitives.push(_this.feFlood);\r\n        _this.feComposite = _this.paper.add(\"feComposite\");\r\n        _this.feComposite.attr({ \"in2\": \"offsetBlur\", operator: \"in\" });\r\n        _this.filterPrimitives.push(_this.feComposite);\r\n        _this.feMerge = _this.paper.addGroup(\"feMerge\");\r\n        _this.feMerge.add(_this.paper.add(\"feMergeNode\"));\r\n        _this.feMerge.add(_this.paper.add(\"feMergeNode\").attr({ \"in\": \"SourceGraphic\" }));\r\n        _this.filterPrimitives.push(_this.feMerge);\r\n        // Set default properties\r\n        _this.width = 200;\r\n        _this.height = 200;\r\n        _this.blur = 1.5;\r\n        _this.dx = 3;\r\n        _this.dy = 3;\r\n        _this.opacity = 0.5;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(DropShadowFilter.prototype, \"color\", {\r\n        /**\r\n         * @return Color\r\n         */\r\n        get: function () {\r\n            return this.properties.color;\r\n        },\r\n        /**\r\n         * Shadow color.\r\n         *\r\n         * @param value  Color\r\n         */\r\n        set: function (value) {\r\n            this.properties.color = value;\r\n            if (this.feFlood) {\r\n                this.feFlood.attr({ \"flood-color\": value });\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DropShadowFilter.prototype, \"opacity\", {\r\n        /**\r\n         * @return Opacity (0-1)\r\n         */\r\n        get: function () {\r\n            return this.properties.opacity;\r\n        },\r\n        /**\r\n         * Opacity of the shadow. (0-1)\r\n         *\r\n         * @param value  Opacity (0-1)\r\n         */\r\n        set: function (value) {\r\n            this.properties.opacity = value;\r\n            this.feFlood.attr({ \"flood-opacity\": value });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DropShadowFilter.prototype, \"dx\", {\r\n        /**\r\n         * @return Horizontal offset (px)\r\n         */\r\n        get: function () {\r\n            return this.properties.dx;\r\n        },\r\n        /**\r\n         * Horizontal offset in pixels.\r\n         *\r\n         * @param value  Horizontal offset (px)\r\n         */\r\n        set: function (value) {\r\n            this.properties.dx = value;\r\n            this.feOffset.attr({ \"dx\": value / this.scale });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DropShadowFilter.prototype, \"dy\", {\r\n        /**\r\n         * @return Vertical offset (px)\r\n         */\r\n        get: function () {\r\n            return this.properties.dy;\r\n        },\r\n        /**\r\n         * Vertical offset in pixels.\r\n         *\r\n         * @param value Vertical offset (px)\r\n         */\r\n        set: function (value) {\r\n            this.properties.dy = value;\r\n            this.feOffset.attr({ \"dy\": value / this.scale });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DropShadowFilter.prototype, \"blur\", {\r\n        /**\r\n         * @return Blur\r\n         */\r\n        get: function () {\r\n            return this.properties.blur;\r\n        },\r\n        /**\r\n         * Blur.\r\n         *\r\n         * @param value  Blur\r\n         */\r\n        set: function (value) {\r\n            this.properties.blur = value;\r\n            this.feGaussianBlur.attr({ \"stdDeviation\": value / this.scale });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * [updateScale description]\r\n     *\r\n     * @todo Description\r\n     */\r\n    DropShadowFilter.prototype.updateScale = function () {\r\n        this.dx = this.dx;\r\n        this.dy = this.dy;\r\n        this.blur = this.blur;\r\n    };\r\n    return DropShadowFilter;\r\n}(Filter));\r\nexport { DropShadowFilter };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"DropShadowFilter\"] = DropShadowFilter;\r\n//# sourceMappingURL=DropShadowFilter.js.map","/**\r\n * Serial chart module.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Chart, ChartDataItem } from \"../Chart\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { Series } from \"../series/Series\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport { ColorSet } from \"../../core/utils/ColorSet\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport { Disposer } from \"../../core/utils/Disposer\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[SerialChart]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar SerialChartDataItem = /** @class */ (function (_super) {\r\n    __extends(SerialChartDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function SerialChartDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"SerialChartDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    return SerialChartDataItem;\r\n}(ChartDataItem));\r\nexport { SerialChartDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * A base class for all series-based charts, like XY, Pie, etc.\r\n *\r\n * Is not useful on its own.\r\n *\r\n * @see {@link ISerialChartEvents} for a list of available Events\r\n * @see {@link ISerialChartAdapters} for a list of available Adapters\r\n */\r\nvar SerialChart = /** @class */ (function (_super) {\r\n    __extends(SerialChart, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function SerialChart() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        _this.className = \"SerialChart\";\r\n        _this.colors = new ColorSet();\r\n        _this._usesData = false;\r\n        // Create a container for series\r\n        var seriesContainer = _this.chartContainer.createChild(Container);\r\n        seriesContainer.shouldClone = false;\r\n        seriesContainer.width = percent(100);\r\n        seriesContainer.height = percent(100);\r\n        seriesContainer.isMeasured = false;\r\n        seriesContainer.layout = \"none\";\r\n        seriesContainer.zIndex = 2;\r\n        _this.seriesContainer = seriesContainer;\r\n        // Create a container for bullets\r\n        var bulletsContainer = _this.chartContainer.createChild(Container);\r\n        bulletsContainer.shouldClone = false;\r\n        bulletsContainer.width = percent(100);\r\n        bulletsContainer.height = percent(100);\r\n        bulletsContainer.isMeasured = false;\r\n        bulletsContainer.zIndex = 3;\r\n        bulletsContainer.layout = \"none\";\r\n        _this.bulletsContainer = bulletsContainer;\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    SerialChart.prototype.dispose = function () {\r\n        _super.prototype.dispose.call(this);\r\n        if (this.colors) {\r\n            this.colors.dispose();\r\n        }\r\n        if (this.patterns) {\r\n            this.patterns.dispose();\r\n        }\r\n    };\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor\r\n     */\r\n    SerialChart.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        // Add a default screen reader title for accessibility\r\n        // This will be overridden in screen reader if there are any `titles` set\r\n        if (!$type.hasValue(this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"Serial chart\");\r\n        }\r\n    };\r\n    Object.defineProperty(SerialChart.prototype, \"series\", {\r\n        /**\r\n         * A list of chart's series.\r\n         *\r\n         * @return Chart's series\r\n         */\r\n        get: function () {\r\n            if (!this._series) {\r\n                this._series = new ListTemplate(this.createSeries());\r\n                this._series.events.on(\"inserted\", this.handleSeriesAdded, this, false);\r\n                this._series.events.on(\"removed\", this.handleSeriesRemoved, this, false);\r\n                this._disposers.push(new ListDisposer(this._series));\r\n                this._disposers.push(this._series.template);\r\n            }\r\n            return this._series;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    SerialChart.prototype.handleSeriesRemoved = function (event) {\r\n        var _this = this;\r\n        var series = event.oldValue;\r\n        this.dataUsers.removeValue(series);\r\n        this.dataUsers.each(function (dataUser) {\r\n            dataUser.invalidateDataItems();\r\n        });\r\n        if (series.autoDispose) {\r\n            series.dispose();\r\n        }\r\n        //this.feedLegend();\r\n        if (this.legend) {\r\n            this.legend.dataItems.each(function (dataItem) {\r\n                if (dataItem.dataContext == series) {\r\n                    _this.legend.dataItems.remove(dataItem);\r\n                }\r\n            });\r\n            $array.each(this.legend.data, function (item) {\r\n                $array.remove(_this.legend.data, item);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Decorates a new [[Series]] object with required parameters when it is\r\n     * added to the chart.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param event  Event\r\n     */\r\n    SerialChart.prototype.handleSeriesAdded = function (event) {\r\n        var _this = this;\r\n        var series = event.newValue;\r\n        if (series.isDisposed()) {\r\n            return;\r\n        }\r\n        series.chart = this;\r\n        series.parent = this.seriesContainer;\r\n        series.bulletsContainer.parent = this.bulletsContainer;\r\n        this._dataUsers.moveValue(series);\r\n        series.addDisposer(new Disposer(function () {\r\n            _this.dataUsers.removeValue(series);\r\n        }));\r\n        this.handleSeriesAdded2(series);\r\n        if (!series.hiddenInLegend) {\r\n            if (this.legend) {\r\n                this.legend.addData(series);\r\n            }\r\n        }\r\n    };\r\n    SerialChart.prototype.handleSeriesAdded2 = function (series) {\r\n        var _this = this;\r\n        if (!this.dataInvalid) {\r\n            this._disposers.push(\r\n            // on exit only as data is usually passed after push\r\n            registry.events.once(\"exitframe\", function () {\r\n                if (!series.data || series.data.length == 0) {\r\n                    _this.invalidateData();\r\n                }\r\n            }));\r\n        }\r\n    };\r\n    /**\r\n     * Setups the legend to use the chart's data.\r\n     * @ignore\r\n     */\r\n    SerialChart.prototype.feedLegend = function () {\r\n        var legend = this.legend;\r\n        if (legend) {\r\n            var legendData_1 = [];\r\n            $iter.each(this.series.iterator(), function (series) {\r\n                if (!series.hiddenInLegend) {\r\n                    legendData_1.push(series);\r\n                }\r\n            });\r\n            legend.dataFields.name = \"name\";\r\n            legend.data = legendData_1;\r\n        }\r\n    };\r\n    /**\r\n     * Creates and returns a new Series, suitable for this chart type.\r\n     *\r\n     * @return New series\r\n     */\r\n    SerialChart.prototype.createSeries = function () {\r\n        return new Series();\r\n    };\r\n    Object.defineProperty(SerialChart.prototype, \"colors\", {\r\n        /**\r\n         * @return Color list\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"colors\");\r\n        },\r\n        /**\r\n         * Chart's color list.\r\n         *\r\n         * This list can be used by a number of serial items, like applying a new\r\n         * color for each Series added. Or, applying a new color for each slice\r\n         * of a Pie chart.\r\n         *\r\n         * Please see [[ColorSet]] for information on how you can set up to generate\r\n         * unique colors.\r\n         *\r\n         * A theme you are using may override default pre-defined colors.\r\n         *\r\n         * @param value Color list\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"colors\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SerialChart.prototype, \"patterns\", {\r\n        /**\r\n         * @return Pattern set\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"patterns\");\r\n        },\r\n        /**\r\n         * A [[PatternSet]] to use when creating patterned fills for slices.\r\n         *\r\n         * @since 4.7.5\r\n         * @param value  Pattern set\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"patterns\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Copies all parameters from another [[SerialChart]].\r\n     *\r\n     * @param source Source SerialChart\r\n     */\r\n    SerialChart.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        this.series.copyFrom(source.series);\r\n    };\r\n    /**\r\n     * Hides the chart instantly and then shows it. If defaultState.transitionDuration > 0, this will result an animation in which properties of hidden state will animate to properties of visible state.\r\n     */\r\n    SerialChart.prototype.appear = function () {\r\n        _super.prototype.appear.call(this);\r\n        this.series.each(function (series) {\r\n            if (series.showOnInit && series.inited) {\r\n                series.appear();\r\n            }\r\n        });\r\n    };\r\n    return SerialChart;\r\n}(Chart));\r\nexport { SerialChart };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"SerialChart\"] = SerialChart;\r\n//# sourceMappingURL=SerialChart.js.map","import { StyleRule } from \"../utils/DOM\";\r\nimport { InterfaceColorSet } from \"../utils/InterfaceColorSet\";\r\nimport { Dictionary } from \"../utils/Dictionary\";\r\nimport { MultiDisposer, CounterDisposer } from \"../utils/Disposer\";\r\nvar rules = new Dictionary();\r\n/**\r\n * A dynamically-loadable CSS module for Export menu.\r\n *\r\n * @ignore Exclude from docs\r\n * @param prefix  Prefix to addtach to class names\r\n * @return A MultiDisposer with style rules\r\n */\r\nexport default function (prefix) {\r\n    var newPrefix = (prefix ? prefix : \"amexport\");\r\n    var colorSet = new InterfaceColorSet();\r\n    var counter = rules.insertKeyIfEmpty(newPrefix, function () {\r\n        var disposer = new MultiDisposer([\r\n            /*new StyleRule(`.${newPrefix}-menu`, {\r\n                \"opacity\": \"0.3\",\r\n                \"transition\": \"all 100ms ease-in-out\",\r\n            }),\r\n\r\n            new StyleRule(`div:hover .${newPrefix}-menu, .${newPrefix}-menu.active`, {\r\n                \"opacity\": \"0.9\",\r\n            }),*/\r\n            new StyleRule(\".\" + newPrefix + \"-menu *\", {\r\n                \"box-sizing\": \"border-box\"\r\n            }),\r\n            new StyleRule(\".\" + newPrefix + \"-menu-level-0\", {\r\n                \"position\": \"absolute\",\r\n                \"top\": \"5px\",\r\n                \"right\": \"5px\",\r\n            }),\r\n            new StyleRule(\".\" + newPrefix + \"-menu-level-0.\" + newPrefix + \"-left\", {\r\n                \"right\": \"auto\",\r\n                \"left\": \"5px\",\r\n            }),\r\n            new StyleRule(\".\" + newPrefix + \"-menu-level-0.\" + newPrefix + \"-right\", {\r\n                \"right\": \"5px\",\r\n                \"left\": \"auto\",\r\n            }),\r\n            new StyleRule(\".\" + newPrefix + \"-menu-level-0.\" + newPrefix + \"-top\", {\r\n                \"top\": \"5px\",\r\n                \"bottom\": \"auto\",\r\n            }),\r\n            new StyleRule(\".\" + newPrefix + \"-menu-level-0.\" + newPrefix + \"-bottom\", {\r\n                \"top\": \"auto\",\r\n                \"bottom\": \"5px\",\r\n            }),\r\n            new StyleRule(\".\" + newPrefix + \"-item.\" + newPrefix + \"-item-level-0\", {\r\n                \"opacity\": \"0.3\",\r\n                \"width\": \"30px\",\r\n                \"min-height\": \"30px\",\r\n                \"transition\": \"all 100ms ease-in-out\",\r\n            }),\r\n            new StyleRule(\"div:hover .\" + newPrefix + \"-item.\" + newPrefix + \"-item-level-0, .\" + newPrefix + \"-item.\" + newPrefix + \"-item-level-0.active\", {\r\n                \"opacity\": \"0.9\",\r\n            }),\r\n            new StyleRule(\".\" + newPrefix + \"-item.\" + newPrefix + \"-item-level-0 > a\", {\r\n                \"padding\": \"0\",\r\n                \"text-align\": \"center\",\r\n                \"overflow\": \"hidden\"\r\n            }),\r\n            new StyleRule(\".\" + newPrefix + \"-item.\" + newPrefix + \"-item-level-0:before\", {\r\n                \"display\": \"block\"\r\n            }),\r\n            new StyleRule(\".\" + newPrefix + \"-item\", {\r\n                \"position\": \"relative\",\r\n                \"display\": \"block\",\r\n                \"opacity\": \"0\",\r\n                \"z-index\": \"1\",\r\n                \"border-radius\": \"3px\",\r\n                \"background-color\": colorSet.getFor(\"secondaryButton\").hex,\r\n                \"padding\": \"0\",\r\n                \"margin\": \"1px 1px 0 0\",\r\n                \"color\": colorSet.getFor(\"secondaryButton\").alternative.hex,\r\n                \"transition\": \"all 100ms ease-in-out, opacity 0.5s ease 0.5s\",\r\n            }),\r\n            new StyleRule(\".\" + newPrefix + \"-left .\" + newPrefix + \"-item\", {\r\n                \"margin\": \"1px 0 0 1px\",\r\n            }),\r\n            new StyleRule(\".\" + newPrefix + \"-item:hover, .\" + newPrefix + \"-item.active\", {\r\n                \"background\": colorSet.getFor(\"secondaryButtonHover\").hex,\r\n                \"color\": colorSet.getFor(\"secondaryButtonText\").hex,\r\n            }),\r\n            new StyleRule(\".\" + newPrefix + \"-item > .\" + newPrefix + \"-menu\", {\r\n                \"position\": \"absolute\",\r\n                \"top\": \"-1px\",\r\n                \"right\": \"0\",\r\n                \"margin-right\": \"100%\",\r\n            }),\r\n            new StyleRule(\".\" + newPrefix + \"-left .\" + newPrefix + \"-item > .\" + newPrefix + \"-menu\", {\r\n                \"left\": \"0\",\r\n                \"right\": \"auto\",\r\n                \"margin-left\": \"100%\",\r\n                \"margin-right\": \"auto\",\r\n            }),\r\n            new StyleRule(\".\" + newPrefix + \"-right .\" + newPrefix + \"-item > .\" + newPrefix + \"-menu\", {\r\n                \"left\": \"auto\",\r\n                \"right\": \"0\",\r\n                \"margin-left\": \"auto\",\r\n                \"margin-right\": \"100%\",\r\n            }),\r\n            new StyleRule(\".\" + newPrefix + \"-top .\" + newPrefix + \"-item > .\" + newPrefix + \"-menu\", {\r\n                \"top\": \"-1px\",\r\n                \"bottom\": \"auto\",\r\n            }),\r\n            new StyleRule(\".\" + newPrefix + \"-bottom .\" + newPrefix + \"-item > .\" + newPrefix + \"-menu\", {\r\n                \"top\": \"auto\",\r\n                \"bottom\": \"0\",\r\n            }),\r\n            new StyleRule(\".\" + newPrefix + \"-item > .\" + newPrefix + \"-menu\", {\r\n                \"display\": \"none\",\r\n            }),\r\n            new StyleRule(\".\" + newPrefix + \"-item:hover > .\" + newPrefix + \"-menu, .\" + newPrefix + \"-item.active > .\" + newPrefix + \"-menu\", {\r\n                \"display\": \"block\",\r\n            }),\r\n            new StyleRule(\".\" + newPrefix + \"-item:hover > .\" + newPrefix + \"-menu > .\" + newPrefix + \"-item, .\" + newPrefix + \"-item.active > .\" + newPrefix + \"-menu > .\" + newPrefix + \"-item\", {\r\n                \"opacity\": \"1\",\r\n            }),\r\n            new StyleRule(\".\" + newPrefix + \"-menu\", {\r\n                \"display\": \"block\",\r\n                \"list-style\": \"none\",\r\n                \"margin\": \"0\",\r\n                \"padding\": \"0\",\r\n            }),\r\n            new StyleRule(\".\" + newPrefix + \"-label\", {\r\n                \"display\": \"block\",\r\n                \"cursor\": \"default\",\r\n                \"padding\": \"0.5em 1em\",\r\n            }),\r\n            new StyleRule(\".\" + newPrefix + \"-icon\", {\r\n                \"display\": \"block\",\r\n                \"cursor\": \"default\",\r\n                \"padding\": \"0.2em 0.4em\",\r\n                \"width\": \"1.2em\",\r\n                \"height\": \"1.2em\",\r\n                \"min-width\": \"32px\",\r\n                \"min-height\": \"32px\",\r\n                \"margin\": \"auto auto\",\r\n                \"border-radius\": \"3px\",\r\n            }),\r\n            new StyleRule(\".\" + newPrefix + \"-item-level-0 > .\" + newPrefix + \"-icon\", {\r\n                \"padding\": \"0.1em 0.2em\",\r\n            }),\r\n            new StyleRule(\".\" + newPrefix + \"-clickable\", {\r\n                \"cursor\": \"pointer\",\r\n            }),\r\n        ]);\r\n        return new CounterDisposer(function () {\r\n            rules.removeKey(newPrefix);\r\n            disposer.dispose();\r\n        });\r\n    });\r\n    return counter.increment();\r\n}\r\n//# sourceMappingURL=ExportCSS.js.map","/**\r\n * ExportMenu provides functionality for building Export menu\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport exportCSS from \"./ExportCSS\";\r\nimport { Adapter } from \"../utils/Adapter\";\r\nimport { List } from \"../utils/List\";\r\nimport { getInteraction } from \"../interaction/Interaction\";\r\nimport { MutableValueDisposer } from \"../utils/Disposer\";\r\nimport { Language } from \"../utils/Language\";\r\nimport { Validatable } from \"../utils/Validatable\";\r\nimport { keyboard } from \"../utils/Keyboard\";\r\nimport * as $utils from \"../utils/Utils\";\r\nimport * as $iter from \"../utils/Iterator\";\r\nimport * as $dom from \"../utils/DOM\";\r\nimport * as $type from \"../utils/Type\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a menu for Export operations.\r\n *\r\n * To add an export menu to a chart, set this to a new instance of\r\n * [[ExportMenu]].\r\n *\r\n * ```TypeScript\r\n * chart.exporting.menu = new am4core.ExportMenu();\r\n * ```\r\n * ```JavaScript\r\n * chart.exporting.menu = new am4core.ExportMenu();\r\n * ```\r\n * ```JSON\r\n * {\r\n *   // ...\r\n *   \"exporting\": {\r\n *     \"menu\": {}\r\n *   }\r\n * }\r\n * ```\r\n * @important\r\n */\r\nvar ExportMenu = /** @class */ (function (_super) {\r\n    __extends(ExportMenu, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ExportMenu() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * An [[Adapter]].\r\n         */\r\n        _this.adapter = new Adapter(_this);\r\n        /**\r\n         * How many milliseconds to hold menu/sub-menu open after it loses focus or\r\n         * hover, before auto-closing it.\r\n         *\r\n         * @default 1000\r\n         */\r\n        _this.closeDelay = 1000;\r\n        /**\r\n         * Close the menu automatically when some export operation is triggered.\r\n         *\r\n         * @default true\r\n         * @since 4.2.2\r\n         */\r\n        _this.closeOnClick = true;\r\n        /**\r\n         * An instance of [[Language]].\r\n         */\r\n        _this._language = new MutableValueDisposer();\r\n        /**\r\n         * What HTML tags to use to build menu.\r\n         */\r\n        _this._menuTag = \"ul\";\r\n        /**\r\n         * Which tag to use to enclose individual menu items.\r\n         */\r\n        _this._itemTag = \"li\";\r\n        /**\r\n         * Tag to wrap menu item labels in.\r\n         */\r\n        _this._labelTag = \"a\";\r\n        /**\r\n         * Tag to use for icons\r\n         */\r\n        _this._iconTag = \"img\";\r\n        /**\r\n         * Prefix for class names applied to menu elements.\r\n         */\r\n        _this._classPrefix = \"amexport\";\r\n        /**\r\n         * If set to `true` [[ExportMenu]] will load it's own external CSS when\r\n         * instantiated.\r\n         */\r\n        _this._defaultStyles = true;\r\n        /**\r\n         * Horizontal positioning.\r\n         */\r\n        _this._align = \"right\";\r\n        /**\r\n         * Vertical positioning.\r\n         */\r\n        _this._verticalAlign = \"top\";\r\n        /**\r\n         * A tabindex to apply to Export Menu.\r\n         */\r\n        _this._tabindex = 0;\r\n        /**\r\n         * Whether next menu close event should be ignored.\r\n         */\r\n        _this._ignoreNextClose = false;\r\n        /**\r\n         * Default menu items.\r\n         */\r\n        _this._items = [\r\n            {\r\n                \"label\": \"...\",\r\n                \"menu\": [\r\n                    {\r\n                        \"label\": \"Image\",\r\n                        \"menu\": [\r\n                            { \"type\": \"png\", \"label\": \"PNG\" },\r\n                            { \"type\": \"jpg\", \"label\": \"JPG\" },\r\n                            { \"type\": \"svg\", \"label\": \"SVG\" },\r\n                            { \"type\": \"pdf\", \"label\": \"PDF\" }\r\n                        ]\r\n                    }, {\r\n                        \"label\": \"Data\",\r\n                        \"menu\": [\r\n                            { \"type\": \"json\", \"label\": \"JSON\" },\r\n                            { \"type\": \"csv\", \"label\": \"CSV\" },\r\n                            { \"type\": \"xlsx\", \"label\": \"XLSX\" },\r\n                            { \"type\": \"html\", \"label\": \"HTML\" },\r\n                            { \"type\": \"pdfdata\", \"label\": \"PDF\" }\r\n                        ]\r\n                    }, {\r\n                        \"label\": \"Print\", \"type\": \"print\"\r\n                    }\r\n                ]\r\n            }\r\n        ];\r\n        _this.className = \"ExportMenu\";\r\n        _this._disposers.push(_this._language);\r\n        _this.invalidate();\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * (Re)draws the Export menu.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    ExportMenu.prototype.validate = function () {\r\n        this.draw();\r\n        _super.prototype.validate.call(this);\r\n    };\r\n    /**\r\n     * Draws the menu based on current items.\r\n     *\r\n     * Normally, there's no need to call this explicitly. The chart, if it has\r\n     * export menu enabled, will automatically draw the menu.\r\n     */\r\n    ExportMenu.prototype.draw = function () {\r\n        var _this = this;\r\n        // Create top-level menu item, or clear it\r\n        if (!this._element) {\r\n            this._element = this.createMenuElement(0);\r\n        }\r\n        else {\r\n            this._element.innerHTML = \"\";\r\n            this._element.className = this.getMenuItemClass(0);\r\n        }\r\n        // See if we're loading external CSS\r\n        // Hide it until CSS is loaded\r\n        if (this.defaultStyles) {\r\n            this._element.style.display = \"none\";\r\n        }\r\n        // Append to container\r\n        $type.getValue(this._container).appendChild(this._element);\r\n        // Apply adapter to menu items before processing\r\n        var items = this.adapter.apply(\"items\", {\r\n            items: this._items\r\n        }).items;\r\n        for (var len = items.length, i = 0; i < len; i++) {\r\n            this.drawBranch(this._element, items[i], 0);\r\n        }\r\n        // Apply adapter to finalized menu element\r\n        this._element = this.adapter.apply(\"menuElement\", {\r\n            menuElement: this._element\r\n        }).menuElement;\r\n        // Set up global \"down\" event\r\n        this._disposers.push(getInteraction().body.events.on(\"down\", function (ev) {\r\n            if (!ev.pointer.touch) {\r\n                _this._ignoreNextClose = false;\r\n            }\r\n            _this.close();\r\n        }));\r\n        // Set up global event on ESC press to close the menu\r\n        this._disposers.push(getInteraction().body.events.on(\"keyup\", function (ev) {\r\n            var key = keyboard.getEventKey(ev.event);\r\n            switch (key) {\r\n                case \"esc\":\r\n                    _this.close();\r\n                    break;\r\n                case \"up\":\r\n                case \"down\":\r\n                case \"left\":\r\n                case \"right\":\r\n                    _this.moveSelection(key);\r\n                    break;\r\n            }\r\n        }));\r\n        if (this.defaultStyles) {\r\n            this.loadDefaultCSS();\r\n        }\r\n    };\r\n    /**\r\n     * Creates a new branch in export menu. This function is recursive for\r\n     * building multi-level menus.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param container Container to put branch elements in\r\n     * @param branch    Menu item\r\n     * @param level     Current nesting level\r\n     */\r\n    ExportMenu.prototype.drawBranch = function (container, branch, level) {\r\n        var _this = this;\r\n        // Apply adapter\r\n        branch = this.adapter.apply(\"branch\", {\r\n            branch: branch,\r\n            level: level\r\n        }).branch;\r\n        // Unsupported?\r\n        // ExportMenu does not check or know for specific browser/system\r\n        // capabilities. It must happen in some other code and applied via Adapter.\r\n        // Export itself will check compatibility, but there might be other plugins\r\n        // that influence it or even add any specific export functionality.\r\n        if (branch.unsupported === true) {\r\n            return;\r\n        }\r\n        // Init ascendants\r\n        if (!branch.ascendants) {\r\n            branch.ascendants = new List();\r\n        }\r\n        // Get type\r\n        var type = branch.type;\r\n        // Create an item\r\n        var element = this.createItemElement(level, type);\r\n        // Create label\r\n        var label;\r\n        // Create icon\r\n        if (branch.icon) {\r\n            label = this.createIconElement(level, type);\r\n            label.src = branch.icon;\r\n            if (branch.label) {\r\n                label.title = branch.label;\r\n            }\r\n        }\r\n        else if (branch.svg) {\r\n            label = this.createSvgElement(level, type, branch.svg);\r\n            if (branch.label) {\r\n                label.title = branch.label;\r\n            }\r\n        }\r\n        else {\r\n            label = this.createLabelElement(level, type);\r\n            label.innerHTML = (branch.label ? this.language.translate(branch.label) : \"\");\r\n        }\r\n        // Apply reader text to label\r\n        var readerLabel = this.getReaderLabel(branch, label.innerHTML);\r\n        label.setAttribute(\"aria-label\", readerLabel);\r\n        // Add Label\r\n        element.appendChild(label);\r\n        // Create interaction object\r\n        // TODO clean this up when it's disposed\r\n        branch.interactions = getInteraction().getInteraction(label);\r\n        branch.element = element;\r\n        // Create interaction manager we can set event listeners to\r\n        if (this.typeClickable(type)) {\r\n            //branch.interactions.clickable = true;\r\n            // TODO clean this up when it's disposed\r\n            branch.interactions.events.on(\"hit\", function (ev) {\r\n                if (_this.events.isEnabled(\"hit\")) {\r\n                    var event_1 = {\r\n                        \"type\": \"hit\",\r\n                        \"event\": ev.event,\r\n                        \"target\": _this,\r\n                        \"branch\": branch\r\n                    };\r\n                    _this.events.dispatchImmediately(\"hit\", event_1);\r\n                }\r\n            });\r\n            // TODO clean this up when it's disposed\r\n            branch.interactions.events.on(\"keyup\", function (ev) {\r\n                if (keyboard.isKey(ev.event, \"enter\")) {\r\n                    if (_this.events.isEnabled(\"enter\")) {\r\n                        var event_2 = {\r\n                            \"type\": \"enter\",\r\n                            \"event\": ev.event,\r\n                            \"target\": _this,\r\n                            \"branch\": branch\r\n                        };\r\n                        _this.events.dispatchImmediately(\"enter\", event_2);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        {\r\n            var submenu_1 = this.getSubMenu(branch);\r\n            // Add ENTER event to open sub-menus\r\n            if (submenu_1 != null) {\r\n                // TODO clean this up when it's disposed\r\n                branch.interactions.events.on(\"keyup\", function (ev) {\r\n                    if (keyboard.isKey(ev.event, \"enter\")) {\r\n                        // This is item has sub-menu, activate the first child on ENTER\r\n                        _this.selectBranch(submenu_1[0]);\r\n                        // Attempt to set focus\r\n                        _this.setFocus(submenu_1[0]);\r\n                    }\r\n                });\r\n                branch.interactions.events.on(\"hit\", function (ev) {\r\n                    _this.selectBranch(branch);\r\n                });\r\n            }\r\n        }\r\n        // Add events\r\n        // TODO clean this up when it's disposed\r\n        branch.interactions.events.on(\"over\", function (ev) {\r\n            if (ev.pointer.touch) {\r\n                // Cancel pending menu closure\r\n                _this._ignoreNextClose = true;\r\n            }\r\n            _this.selectBranch(branch);\r\n            if (_this.events.isEnabled(\"over\")) {\r\n                var event_3 = {\r\n                    \"type\": \"over\",\r\n                    \"event\": ev.event,\r\n                    \"target\": _this,\r\n                    \"branch\": branch\r\n                };\r\n                _this.events.dispatchImmediately(\"over\", event_3);\r\n            }\r\n        });\r\n        // TODO clean this up when it's disposed\r\n        branch.interactions.events.on(\"out\", function (ev) {\r\n            if (!ev.pointer.touch) {\r\n                _this.delayUnselectBranch(branch);\r\n            }\r\n            if (_this.events.isEnabled(\"out\")) {\r\n                var event_4 = {\r\n                    \"type\": \"out\",\r\n                    \"event\": ev.event,\r\n                    \"target\": _this,\r\n                    \"branch\": branch\r\n                };\r\n                _this.events.dispatchImmediately(\"out\", event_4);\r\n            }\r\n        });\r\n        // TODO clean this up when it's disposed\r\n        branch.interactions.events.on(\"focus\", function (ev) {\r\n            _this.selectBranch(branch);\r\n        });\r\n        // TODO clean this up when it's disposed\r\n        branch.interactions.events.on(\"blur\", function (ev) {\r\n            _this.delayUnselectBranch(branch);\r\n        });\r\n        // Increment level\r\n        var local_level = level + 1;\r\n        // Has sub-menu?\r\n        if (branch.menu) {\r\n            var submenu = this.createMenuElement(local_level);\r\n            for (var len = branch.menu.length, i = 0; i < len; i++) {\r\n                var ascendants = new List();\r\n                branch.menu[i].ascendants = ascendants;\r\n                if (branch.ascendants.length) {\r\n                    ascendants.copyFrom(branch.ascendants);\r\n                }\r\n                ascendants.push(branch);\r\n                this.drawBranch(submenu, branch.menu[i], local_level);\r\n            }\r\n            // Sub-menu is empty (all items are not supported)\r\n            // Do not draw this menu item at all\r\n            if (submenu.innerHTML == \"\") {\r\n                return;\r\n            }\r\n            element.appendChild(submenu);\r\n        }\r\n        // Should this item be hidden?\r\n        if (branch.hidden) {\r\n            this.hideBranch(branch);\r\n        }\r\n        // Add id?\r\n        if (branch.id) {\r\n            element.setAttribute(\"id\", branch.id);\r\n        }\r\n        // Background color?\r\n        if (branch.color) {\r\n            element.style.backgroundColor = branch.color.hex;\r\n        }\r\n        // Append to container\r\n        container.appendChild(element);\r\n    };\r\n    /**\r\n     * Creates a menu element to hold its elements in. Usually it's an `<ul>`\r\n     * tag.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param level  Current nesting level\r\n     * @return HTML element reference\r\n     */\r\n    ExportMenu.prototype.createMenuElement = function (level) {\r\n        var element = document.createElement(this.menuTag);\r\n        element.className = this.getMenuItemClass(level);\r\n        // Accessibility\r\n        if (level === 0) {\r\n            element.setAttribute(\"role\", \"menu\");\r\n        }\r\n        return element;\r\n    };\r\n    /**\r\n     * Generates a class name for the menu element based on its nesting level.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param level  Current nesting level\r\n     * @return Class name(s)\r\n     */\r\n    ExportMenu.prototype.getMenuItemClass = function (level) {\r\n        var className = this.classPrefix + \"-menu \" + this.classPrefix + \"-menu-level-\" + level;\r\n        if (level === 0) {\r\n            className += \" \" + this.classPrefix + \"-menu-root \" +\r\n                this.classPrefix + \"-\" + this.align + \" \" +\r\n                this.classPrefix + \"-\" + this.verticalAlign;\r\n        }\r\n        return this.adapter.apply(\"menuClass\", {\r\n            className: className,\r\n            level: level\r\n        }).className;\r\n    };\r\n    /**\r\n     * Creates menu item. Usually `<li>` tag. Its label and sub-elements will go\r\n     * into this element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param level  Current nesting level\r\n     * @param type   Type of the menu item\r\n     * @return HTML element reference\r\n     */\r\n    ExportMenu.prototype.createItemElement = function (level, type) {\r\n        var element = document.createElement(this.itemTag);\r\n        var className = this.classPrefix + \"-item \" + this.classPrefix\r\n            + \"-item-level-\" + level\r\n            + \" \" + this.classPrefix + \"-item-\" + (type || \"blank\");\r\n        element.className = this.adapter.apply(\"itemClass\", {\r\n            className: className,\r\n            level: level,\r\n            type: type\r\n        }).className;\r\n        return element;\r\n    };\r\n    /**\r\n     * Creates a \"label\" part of the menu item. It could be text or any HTML\r\n     * content.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param level  Current nesting level\r\n     * @param type   Type of the menu item\r\n     * @return An HTML Element\r\n     */\r\n    ExportMenu.prototype.createLabelElement = function (level, type) {\r\n        var element = document.createElement(this.labelTag);\r\n        var className = this.classPrefix + \"-label \" + this.classPrefix\r\n            + \"-label-level-\" + level\r\n            + \" \" + this.classPrefix + \"-item-\" + (type || \"blank\");\r\n        if (this.typeClickable(type)) {\r\n            className += \" \" + this.classPrefix + \"-clickable\";\r\n        }\r\n        element.className = this.adapter.apply(\"labelClass\", {\r\n            className: className,\r\n            level: level,\r\n            type: type\r\n        }).className;\r\n        // Accessible navigation\r\n        element.setAttribute(\"tabindex\", this.tabindex.toString());\r\n        element.setAttribute(\"role\", \"menuitem\");\r\n        return element;\r\n    };\r\n    /**\r\n     * Creates a \"icon\" part of the menu item.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param level  Current nesting level\r\n     * @param type   Type of the menu item\r\n     * @return An HTML Element\r\n     */\r\n    ExportMenu.prototype.createIconElement = function (level, type) {\r\n        var element = document.createElement(this.iconTag);\r\n        var className = this.classPrefix + \"-icon \" + this.classPrefix\r\n            + \"-icon-level-\" + level\r\n            + \" \" + this.classPrefix + \"-item-\" + (type || \"blank\");\r\n        if (this.typeClickable(type)) {\r\n            className += \" \" + this.classPrefix + \"-clickable\";\r\n        }\r\n        element.className = this.adapter.apply(\"labelClass\", {\r\n            className: className,\r\n            level: level,\r\n            type: type\r\n        }).className;\r\n        // Accessible navigation\r\n        element.setAttribute(\"tabindex\", this.tabindex.toString());\r\n        element.setAttribute(\"role\", \"menuitem\");\r\n        return element;\r\n    };\r\n    /**\r\n     * Creates a a custom element out of raw HTML.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param level  Current nesting level\r\n     * @param type   Type of the menu item\r\n     * @return An HTML Element\r\n     */\r\n    ExportMenu.prototype.createSvgElement = function (level, type, svg) {\r\n        var parser = new DOMParser();\r\n        var element = parser.parseFromString(svg, \"image/svg+xml\").documentElement;\r\n        var className = this.classPrefix + \"-icon \" + this.classPrefix\r\n            + \"-icon-level-\" + level\r\n            + \" \" + this.classPrefix + \"-item-\" + (type || \"blank\");\r\n        if (this.typeClickable(type)) {\r\n            className += \" \" + this.classPrefix + \"-clickable\";\r\n        }\r\n        element.setAttribute(\"class\", this.adapter.apply(\"labelClass\", {\r\n            className: className,\r\n            level: level,\r\n            type: type\r\n        }).className);\r\n        // Accessible navigation\r\n        element.setAttribute(\"tabindex\", this.tabindex.toString());\r\n        element.setAttribute(\"role\", \"menuitem\");\r\n        return element;\r\n    };\r\n    /**\r\n     * Destroys the menu and all its elements.\r\n     */\r\n    ExportMenu.prototype.dispose = function () {\r\n        if (!this._disposed) {\r\n            _super.prototype.dispose.call(this);\r\n            if (this._element && this._element.parentNode) {\r\n                this._element.parentNode.removeChild(this._element);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Checks whether menu item type is supposed to be clickable.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param type  Menu item type\r\n     * @return Is clickable?\r\n     */\r\n    ExportMenu.prototype.typeClickable = function (type) {\r\n        return $type.hasValue(type);\r\n    };\r\n    /**\r\n     * Checks whether menu item has any sub-items.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param branch  A menu item\r\n     * @return Has sub-items?\r\n     */\r\n    ExportMenu.prototype.hasSubMenu = function (branch) {\r\n        return (branch.menu && branch.menu.length) ? true : false;\r\n    };\r\n    /**\r\n     * Returns sub-items (if they exist).\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param branch  A menu item\r\n     * @return Submenus\r\n     */\r\n    ExportMenu.prototype.getSubMenu = function (branch) {\r\n        if (branch.menu && branch.menu.length) {\r\n            return branch.menu;\r\n        }\r\n    };\r\n    /**\r\n     * Generates and returns an applicable label to be used for screen readers.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param item   A menu item instance\r\n     * @param label  Current label\r\n     * @return Reader text\r\n     */\r\n    ExportMenu.prototype.getReaderLabel = function (branch, label) {\r\n        // Strip any HTML from the label\r\n        label = $utils.stripTags(label);\r\n        // Add textual note if the branch is clickable\r\n        if (this.hasSubMenu(branch)) {\r\n            label += \" [\" + this.language.translate(\"Click, tap or press ENTER to open\") + \"]\";\r\n        }\r\n        else if (branch.type == \"print\") {\r\n            label = this.language.translate(\"Click, tap or press ENTER to print.\");\r\n        }\r\n        else if (this.typeClickable(branch.type)) {\r\n            label = this.language.translate(\"Click, tap or press ENTER to export as %1.\", undefined, label);\r\n        }\r\n        return this.adapter.apply(\"rederLabel\", {\r\n            label: label,\r\n            branch: branch\r\n        }).label;\r\n    };\r\n    Object.defineProperty(ExportMenu.prototype, \"container\", {\r\n        /**\r\n         * @return Container\r\n         */\r\n        get: function () {\r\n            return this._container;\r\n        },\r\n        /**\r\n         * Getters and setters\r\n         */\r\n        /**\r\n         * An HTML container to place the Menu in.\r\n         *\r\n         * A container must be an HTML element, because menu itself is HTML, and\r\n         * cannot be placed into SVG.\r\n         *\r\n         * @param container Reference to container element\r\n         * @todo Check if menu is already build. If it is, just move it to a new container\r\n         */\r\n        set: function (container) {\r\n            this._container = container;\r\n            this.invalidate();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ExportMenu.prototype, \"items\", {\r\n        /**\r\n         * @return Menu items\r\n         */\r\n        get: function () {\r\n            return this._items;\r\n        },\r\n        /**\r\n         * A list of menu items. Can be nested.\r\n         *\r\n         * @param items  Menu items\r\n         */\r\n        set: function (items) {\r\n            this._items = items;\r\n            this.invalidate();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ExportMenu.prototype, \"tag\", {\r\n        /**\r\n         * Sets main menu tag to place menu in.\r\n         *\r\n         * This also sets up how menu items are built.\r\n         *\r\n         * If you set this to \"ul\", menu items will be wrapped into `<li>` tags.\r\n         *\r\n         * If set to \"div\", menu items will be wrapped in `<div>` tags.\r\n         *\r\n         * @default \"ul\"\r\n         * @param tag Tag to use for menu\r\n         */\r\n        set: function (tag) {\r\n            this._menuTag = tag;\r\n            this._itemTag = tag == \"ul\" ? \"li\" : \"div\";\r\n            this.invalidate();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ExportMenu.prototype, \"menuTag\", {\r\n        /**\r\n         * Returns current menu tag.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return Menu tag (item that contains sub-items)\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"menuTag\", {\r\n                tag: this._menuTag\r\n            }).tag;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ExportMenu.prototype, \"itemTag\", {\r\n        /**\r\n         * Returns tag to wrap items into.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return Item tag\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"itemTag\", {\r\n                tag: this._itemTag\r\n            }).tag;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ExportMenu.prototype, \"labelTag\", {\r\n        /**\r\n         * Returns menu label tag.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return Label tag\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"labelTag\", {\r\n                tag: this._labelTag\r\n            }).tag;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ExportMenu.prototype, \"iconTag\", {\r\n        /**\r\n         * Returns icon tag.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return Icon tag\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"iconTag\", {\r\n                tag: this._iconTag\r\n            }).tag;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ExportMenu.prototype, \"align\", {\r\n        /**\r\n         * @return Horizontal alignment\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"align\", {\r\n                align: this._align\r\n            }).align;\r\n        },\r\n        /**\r\n         * A horizontal alignment for the menu placement.\r\n         *\r\n         * @param value Horizontal alignment\r\n         */\r\n        set: function (value) {\r\n            this._align = value;\r\n            this.invalidate();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ExportMenu.prototype, \"verticalAlign\", {\r\n        /**\r\n         * @return Vertical alignment\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"verticalAlign\", {\r\n                verticalAlign: this._verticalAlign\r\n            }).verticalAlign;\r\n        },\r\n        /**\r\n         * A vertical alignment for the menu placement.\r\n         *\r\n         * @param value Vertical alignment\r\n         */\r\n        set: function (value) {\r\n            this._verticalAlign = value;\r\n            this.invalidate();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ExportMenu.prototype, \"classPrefix\", {\r\n        /**\r\n         * @return Class name prefix\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"classPrefix\", {\r\n                classPrefix: this._classPrefix\r\n            }).classPrefix;\r\n        },\r\n        /**\r\n         * Class name prefix.\r\n         *\r\n         * @default \"amexport\"\r\n         * @param value Class name prefix\r\n         */\r\n        set: function (value) {\r\n            this._classPrefix = value;\r\n            this.invalidate();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ExportMenu.prototype, \"defaultStyles\", {\r\n        /**\r\n         * @return Should ExportMenu load its own CSS?\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"defaultStyles\", {\r\n                defaultStyles: this._defaultStyles\r\n            }).defaultStyles;\r\n        },\r\n        /**\r\n         * Indicates whether [[ExportMenu]] should load external CSS to style itself.\r\n         *\r\n         * If set to `false`, the menu will not be styled, and will rely on some\r\n         * external CSS.\r\n         *\r\n         * @default true\r\n         * @param Should ExportMenu load its own CSS?\r\n         */\r\n        set: function (value) {\r\n            if (this._defaultStyles != value) {\r\n                this._defaultStyles = value;\r\n                if (value) {\r\n                    this.loadDefaultCSS();\r\n                }\r\n            }\r\n            this.invalidate();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Loads the default CSS.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    ExportMenu.prototype.loadDefaultCSS = function () {\r\n        this._disposers.push(exportCSS(this.classPrefix));\r\n        if (this._element) {\r\n            this._element.style.display = \"\";\r\n        }\r\n    };\r\n    Object.defineProperty(ExportMenu.prototype, \"tabindex\", {\r\n        /**\r\n         * @return Tab index\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"tabindex\", {\r\n                tabindex: this._tabindex\r\n            }).tabindex;\r\n        },\r\n        /**\r\n         * A tab index for the menu.\r\n         *\r\n         * Tab index will influence the order in which elements on the chart and\r\n         * the whole page are selected when pressing TAB key.\r\n         *\r\n         * @param value Tab index\r\n         */\r\n        set: function (value) {\r\n            this._tabindex = value;\r\n            this.invalidate();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ExportMenu.prototype, \"language\", {\r\n        /**\r\n         * @return A [[Language]] instance to be used\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            var language = this._language.get();\r\n            if (language == null) {\r\n                language = new Language();\r\n                // TODO code duplication with `set language()`\r\n                this._language.set(language, language.events.on(\"localechanged\", function (ev) {\r\n                    _this.invalidate();\r\n                }));\r\n            }\r\n            return language;\r\n        },\r\n        /**\r\n         * A [[Language]] instance.\r\n         *\r\n         * @param value An instance of [[Language]]\r\n         */\r\n        set: function (value) {\r\n            var _this = this;\r\n            this._language.set(value, value.events.on(\"localechanged\", function (ev) {\r\n                _this.invalidate();\r\n            }));\r\n            this.invalidate();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Controlling the menu\r\n     */\r\n    /**\r\n     * Removes all active classes from menu items. Useful on touch devices and\r\n     * keyboard navigation where open menu can be closed instantly by clicking or\r\n     * tapping outside it.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    ExportMenu.prototype.close = function () {\r\n        var _this = this;\r\n        if (this._ignoreNextClose) {\r\n            this._ignoreNextClose = false;\r\n            return;\r\n        }\r\n        if (this.closeOnClick) {\r\n            this._element.style.pointerEvents = \"none\";\r\n            setTimeout(function () {\r\n                _this._element.style.pointerEvents = \"auto\";\r\n            }, 100);\r\n        }\r\n        if (this._currentSelection) {\r\n            this.setBlur(this._currentSelection);\r\n            this._currentSelection = undefined;\r\n        }\r\n        if (this._element) {\r\n            var items = this._element.getElementsByClassName(\"active\");\r\n            for (var len = items.length, i = len - 1; i >= 0; i--) {\r\n                if (items[i]) {\r\n                    $dom.removeClass(items[i], \"active\");\r\n                }\r\n            }\r\n        }\r\n        this.events.dispatchImmediately(\"closed\", {\r\n            type: \"closed\",\r\n            target: this\r\n        });\r\n    };\r\n    /**\r\n     * Selects a branch in the menu.\r\n     *\r\n     * Handles closing of currently open branch.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param branch Branch to select\r\n     */\r\n    ExportMenu.prototype.selectBranch = function (branch) {\r\n        var _this = this;\r\n        // Cancel previous closure\r\n        if (branch.closeTimeout) {\r\n            this.removeDispose(branch.closeTimeout);\r\n            branch.closeTimeout = undefined;\r\n        }\r\n        // Add active class\r\n        $dom.addClass(branch.interactions.element.parentElement, \"active\");\r\n        // Remove current selection\r\n        if (this._currentSelection && this._currentSelection !== branch && this._currentSelection.ascendants) {\r\n            $iter.each($iter.concat($iter.fromArray([this._currentSelection]), this._currentSelection.ascendants.iterator()), function (ascendant) {\r\n                if (!branch.ascendants.contains(ascendant) && branch !== ascendant) {\r\n                    _this.unselectBranch(ascendant, true);\r\n                }\r\n            });\r\n        }\r\n        // Select and/or cancel timeout for current ascendants\r\n        $iter.each(branch.ascendants.iterator(), function (ascendant) {\r\n            if (ascendant.closeTimeout) {\r\n                _this.removeDispose(ascendant.closeTimeout);\r\n                ascendant.closeTimeout = undefined;\r\n            }\r\n            $dom.addClass(ascendant.interactions.element.parentElement, \"active\");\r\n        });\r\n        // Log current selection\r\n        this._currentSelection = branch;\r\n        // Invoke event\r\n        if (this.events.isEnabled(\"branchselected\")) {\r\n            var event_5 = {\r\n                type: \"branchselected\",\r\n                target: this,\r\n                branch: branch\r\n            };\r\n            this.events.dispatchImmediately(\"branchselected\", event_5);\r\n        }\r\n    };\r\n    /**\r\n     * Unselects a branch. Also selects a branch one level up if necessary.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param branch Branch to unselect\r\n     * @param simple If `true`, only the branch will be unselected without selecting parent branch\r\n     */\r\n    ExportMenu.prototype.unselectBranch = function (branch, simple) {\r\n        // Remove active class\r\n        $dom.removeClass(branch.interactions.element.parentElement, \"active\");\r\n        // Remove current selection\r\n        if (this._currentSelection == branch) {\r\n            this._currentSelection = undefined;\r\n        }\r\n        // Invoke event\r\n        if (this.events.isEnabled(\"branchunselected\")) {\r\n            var event_6 = {\r\n                type: \"branchunselected\",\r\n                target: this,\r\n                branch: branch\r\n            };\r\n            this.events.dispatchImmediately(\"branchunselected\", event_6);\r\n        }\r\n    };\r\n    /**\r\n     * Delay unselection of a branch. This can still be cancelled in some other\r\n     * place if the branch or its children regain focus.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param branch Branch to unselect\r\n     * @param simple If `true`, only the branch will be unselected without selecting parent branch\r\n     */\r\n    ExportMenu.prototype.delayUnselectBranch = function (branch, simple) {\r\n        var _this = this;\r\n        // Schedule branch unselection\r\n        if (branch.closeTimeout) {\r\n            this.removeDispose(branch.closeTimeout);\r\n            branch.closeTimeout = undefined;\r\n        }\r\n        branch.closeTimeout = this.setTimeout(function () {\r\n            _this.unselectBranch(branch, simple);\r\n        }, this.closeDelay);\r\n        // Schedule unselection of all ascendants\r\n        // In case focus went away from the export menu altogether, this will ensure\r\n        // that all items will be closed.\r\n        // In case we're jumping to other menu item, those delayed unselections will\r\n        // be cancelled by `selectBranch`\r\n        if (simple !== true && branch.ascendants) {\r\n            $iter.each(branch.ascendants.iterator(), function (ascendant) {\r\n                _this.delayUnselectBranch(ascendant, true);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Navigates the menu based on which direction kayboard key was pressed.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param key A key that was pressed\r\n     */\r\n    ExportMenu.prototype.moveSelection = function (key) {\r\n        // Check if there's a current selection\r\n        if (!this._currentSelection) {\r\n            return;\r\n        }\r\n        var newSelection;\r\n        if (key == \"up\") {\r\n            // Try moving up in current menu list, or to the last item if already\r\n            // at the top\r\n            newSelection = this.getPrevSibling(this._currentSelection);\r\n        }\r\n        else if (key == \"down\") {\r\n            // Try moving down in current menu list, or to the top item if already\r\n            // at the bottom\r\n            newSelection = this.getNextSibling(this._currentSelection);\r\n        }\r\n        else if ((key == \"left\" && this.align == \"right\") || (key == \"right\" && this.align == \"left\")) {\r\n            var menu = this.getSubMenu(this._currentSelection);\r\n            // Go one level-deeper\r\n            if (menu != null) {\r\n                newSelection = menu[0];\r\n            }\r\n        }\r\n        else if ((key == \"right\" && this.align == \"right\") || (key == \"left\" && this.align == \"left\")) {\r\n            // Go one level-deeper\r\n            newSelection = this.getParentItem(this._currentSelection);\r\n        }\r\n        if (newSelection && newSelection !== this._currentSelection) {\r\n            this.selectBranch(newSelection);\r\n            this.setFocus(newSelection);\r\n            this._currentSelection = newSelection;\r\n        }\r\n    };\r\n    /**\r\n     * Returns all siblings of a menu item, including this same menu item.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param branch  Menu item\r\n     * @return List of sibling menu items\r\n     */\r\n    ExportMenu.prototype.getSiblings = function (branch) {\r\n        var parent = this.getParentItem(branch);\r\n        if (parent && parent.menu) {\r\n            return parent.menu;\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Returns menu items parent item.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param branch  Menu item\r\n     * @return Parent menu item\r\n     */\r\n    ExportMenu.prototype.getParentItem = function (branch) {\r\n        if (branch.ascendants && branch.ascendants.length) {\r\n            return branch.ascendants.getIndex(branch.ascendants.length - 1);\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    };\r\n    /**\r\n     * Returns next sibling in the same menu branch. If there is no next sibling,\r\n     * the first one is returned. If there is just one item, that item is\r\n     * returned. Unsupported menu items are skipped.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param branch  Menu item to search siblings for\r\n     * @return Menu item\r\n     */\r\n    ExportMenu.prototype.getNextSibling = function (branch) {\r\n        var siblings = this.getSiblings(branch);\r\n        if (siblings.length > 1) {\r\n            var next = siblings.indexOf(branch) + 1;\r\n            next = siblings.length == next ? 0 : next;\r\n            return siblings[next].unsupported ? this.getNextSibling(siblings[next]) : siblings[next];\r\n        }\r\n        else {\r\n            return branch;\r\n        }\r\n    };\r\n    /**\r\n     * Returns previous sibling in the same menu branch. If there is no next\r\n     * sibling, the first one is returned. If there is just one item, that item is\r\n     * returned. Unsupported menu items are skipped.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param branch  Menu item to search siblings for\r\n     * @return Menu item\r\n     */\r\n    ExportMenu.prototype.getPrevSibling = function (branch) {\r\n        var siblings = this.getSiblings(branch);\r\n        if (siblings.length > 1) {\r\n            var prev = siblings.indexOf(branch) - 1;\r\n            prev = prev == -1 ? siblings.length - 1 : prev;\r\n            return siblings[prev].unsupported ? this.getPrevSibling(siblings[prev]) : siblings[prev];\r\n        }\r\n        else {\r\n            return branch;\r\n        }\r\n    };\r\n    /**\r\n     * Attempts to set focus on particular menu element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param branch Menu item\r\n     */\r\n    ExportMenu.prototype.setFocus = function (branch) {\r\n        if (branch.interactions) {\r\n            try {\r\n                branch.interactions.element.focus();\r\n            }\r\n            catch (e) {\r\n                // nothing\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Attempts to remove focus from the menu element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param branch Menu item\r\n     */\r\n    ExportMenu.prototype.setBlur = function (branch) {\r\n        if (branch.interactions) {\r\n            try {\r\n                branch.interactions.element.blur();\r\n            }\r\n            catch (e) {\r\n                // nothing\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Hides the whole branch of menu.\r\n     *\r\n     * @param  branch  branch\r\n     */\r\n    ExportMenu.prototype.hideBranch = function (branch) {\r\n        branch.element.style.display = \"none\";\r\n    };\r\n    /**\r\n     * Show the branch of menu.\r\n     *\r\n     * @param  branch  branch\r\n     */\r\n    ExportMenu.prototype.showBranch = function (branch) {\r\n        branch.element.style.display = \"\";\r\n    };\r\n    return ExportMenu;\r\n}(Validatable));\r\nexport { ExportMenu };\r\n//# sourceMappingURL=ExportMenu.js.map","/**\r\n * Grip module.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Button } from \"./Button\";\r\nimport { Sprite } from \"../Sprite\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { registry } from \"../Registry\";\r\nimport { percent } from \"../utils/Percent\";\r\nimport * as $path from \"../rendering/Path\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a grip element that can be used for scrolling or other things.\r\n *\r\n * @see {@link IGripEvents} for a list of available events\r\n * @see {@link IGripAdapters} for a list of available Adapters\r\n * @since 4.4.0\r\n */\r\nvar Grip = /** @class */ (function (_super) {\r\n    __extends(Grip, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Grip() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        _this.className = \"Grip\";\r\n        var cs = new InterfaceColorSet();\r\n        // Set defaults\r\n        _this.layout = \"absolute\";\r\n        _this.padding(10, 10, 10, 10);\r\n        _this.margin(3, 3, 3, 3);\r\n        _this.background.fillOpacity = 0.3;\r\n        _this.background.cornerRadius(10, 10, 10, 10);\r\n        // Create an icon\r\n        var icon = new Sprite();\r\n        icon.element = _this.paper.add(\"path\");\r\n        var path = $path.moveTo({ x: -6, y: 0 });\r\n        path += $path.lineTo({ x: 6, y: 0 });\r\n        path += $path.moveTo({ x: -8, y: -6 });\r\n        path += $path.lineTo({ x: 0, y: -12 });\r\n        path += $path.lineTo({ x: 8, y: -6 });\r\n        path += $path.moveTo({ x: -8, y: 6 });\r\n        path += $path.lineTo({ x: 0, y: 12 });\r\n        path += $path.lineTo({ x: 8, y: 6 });\r\n        icon.path = path;\r\n        icon.strokeWidth = 2;\r\n        icon.fillOpacity = 0;\r\n        icon.pixelPerfect = true;\r\n        icon.padding(0, 4, 0, 4);\r\n        icon.stroke = cs.getFor(\"text\");\r\n        icon.strokeOpacity = 0.7;\r\n        icon.align = \"center\";\r\n        icon.valign = \"middle\";\r\n        _this.icon = icon;\r\n        _this.label.dispose();\r\n        _this.label = undefined;\r\n        // Set default position\r\n        _this.position = \"right\";\r\n        // Set up autohide\r\n        _this.autoHideDelay = 3000;\r\n        _this.events.on(\"shown\", function (ev) {\r\n            if (_this._autoHideTimeout) {\r\n                _this._autoHideTimeout.dispose();\r\n            }\r\n            if (_this.autoHideDelay) {\r\n                _this._autoHideTimeout = _this.setTimeout(function () {\r\n                    _this.hide();\r\n                }, _this.autoHideDelay);\r\n            }\r\n        });\r\n        _this.events.on(\"down\", function (ev) {\r\n            if (_this._autoHideTimeout) {\r\n                _this._autoHideTimeout.dispose();\r\n            }\r\n        });\r\n        _this.events.on(\"out\", function (ev) {\r\n            if (_this.autoHideDelay) {\r\n                _this._autoHideTimeout = _this.setTimeout(function () {\r\n                    _this.hide();\r\n                }, _this.autoHideDelay);\r\n            }\r\n        });\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Grip.prototype, \"position\", {\r\n        /**\r\n         * @return Position\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"position\");\r\n        },\r\n        /**\r\n         * Sets position of the grip.\r\n         *\r\n         * Available options: \"left\", \"right\" (default), \"top\", \"bottom\".\r\n         *\r\n         * @param  value  Position\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"position\", value)) {\r\n                switch (value) {\r\n                    case \"left\":\r\n                        this.align = \"left\";\r\n                        this.valign = \"middle\";\r\n                        this.horizontalCenter = \"left\";\r\n                        this.verticalCenter = \"middle\";\r\n                        this.icon.rotation = 0;\r\n                        this.width = undefined;\r\n                        this.height = percent(30);\r\n                        break;\r\n                    case \"right\":\r\n                        this.align = \"right\";\r\n                        this.valign = \"middle\";\r\n                        this.horizontalCenter = \"right\";\r\n                        this.verticalCenter = \"middle\";\r\n                        this.icon.rotation = 0;\r\n                        this.width = undefined;\r\n                        this.height = percent(30);\r\n                        break;\r\n                    case \"top\":\r\n                        this.align = \"center\";\r\n                        this.valign = \"top\";\r\n                        this.horizontalCenter = \"middle\";\r\n                        this.verticalCenter = \"top\";\r\n                        this.icon.rotation = 90;\r\n                        this.width = percent(30);\r\n                        this.height = undefined;\r\n                        break;\r\n                    case \"bottom\":\r\n                        this.align = \"center\";\r\n                        this.valign = \"bottom\";\r\n                        this.horizontalCenter = \"middle\";\r\n                        this.verticalCenter = \"bottom\";\r\n                        this.icon.rotation = 90;\r\n                        this.width = percent(30);\r\n                        this.height = undefined;\r\n                        break;\r\n                    default:\r\n                        this.align = \"center\";\r\n                        this.valign = \"middle\";\r\n                        this.horizontalCenter = \"middle\";\r\n                        this.verticalCenter = \"middle\";\r\n                        this.icon.rotation = 90;\r\n                        this.width = percent(30);\r\n                        this.height = undefined;\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Grip.prototype, \"autoHideDelay\", {\r\n        /**\r\n         * @return Delay\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"autoHideDelay\");\r\n        },\r\n        /**\r\n         * Number of milliseconds to show grip until it is hidden automatically.\r\n         *\r\n         * @default 3000\r\n         * @param  value  Delay\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"autoHideDelay\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Grip;\r\n}(Button));\r\nexport { Grip };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Grip\"] = Grip;\r\n//# sourceMappingURL=Grip.js.map","/**\r\n * [[Chart]] class provides base functionality for all chart types to inherit.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { registry } from \"../core/Registry\";\r\nimport { Component } from \"../core/Component\";\r\nimport { MutableValueDisposer } from \"../core/utils/Disposer\";\r\nimport { ListTemplate, ListDisposer } from \"../core/utils/List\";\r\nimport { Container } from \"../core/Container\";\r\nimport { Label } from \"../core/elements/Label\";\r\nimport { Grip } from \"../core/elements/Grip\";\r\nimport { DataItem } from \"../core/DataItem\";\r\nimport { percent } from \"../core/utils/Percent\";\r\nimport * as $iter from \"../core/utils/Iterator\";\r\nimport * as $type from \"../core/utils/Type\";\r\nimport { defaultRules, ResponsiveBreakpoints } from \"../core/utils/Responsive\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[Chart]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar ChartDataItem = /** @class */ (function (_super) {\r\n    __extends(ChartDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ChartDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"ChartDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    return ChartDataItem;\r\n}(DataItem));\r\nexport { ChartDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * A base class for all Charts.\r\n *\r\n * @see {@link IChartEvents} for a list of available Events\r\n * @see {@link IChartAdapters} for a list of available Adapters\r\n */\r\nvar Chart = /** @class */ (function (_super) {\r\n    __extends(Chart, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Chart() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        /**\r\n         * A reference to chart's [[Legend]].\r\n         * @ignore\r\n         */\r\n        _this._legend = new MutableValueDisposer();\r\n        if (_this.constructor === Chart) {\r\n            throw new Error(\"'Chart' cannot be instantiated directly. Please use a specific chart type.\");\r\n        }\r\n        _this.className = \"Chart\";\r\n        // Create a list of titles\r\n        var template = new Label();\r\n        _this.titles = new ListTemplate(template);\r\n        _this._disposers.push(new ListDisposer(_this.titles));\r\n        _this._disposers.push(template);\r\n        // Chart component is also a container. it holds _chartAndLegendCont and titles\r\n        _this.width = percent(100);\r\n        _this.height = percent(100);\r\n        _this.layout = \"vertical\";\r\n        // Chart and legend\r\n        var chartAndLegendContainer = _this.createChild(Container);\r\n        chartAndLegendContainer.shouldClone = false;\r\n        chartAndLegendContainer.layout = \"vertical\";\r\n        chartAndLegendContainer.width = percent(100);\r\n        chartAndLegendContainer.height = percent(100);\r\n        _this.chartAndLegendContainer = chartAndLegendContainer;\r\n        // Chart container holds all the elements of a chart, extept titles and legend\r\n        var chartContainer = chartAndLegendContainer.createChild(Container);\r\n        chartContainer.shouldClone = false;\r\n        chartContainer.width = percent(100);\r\n        chartContainer.height = percent(100);\r\n        _this.chartContainer = chartContainer;\r\n        _this.showOnInit = true;\r\n        _this._disposers.push(_this._legend);\r\n        // Add title list events to apply certain formatting options and to make\r\n        // the chart reference them as accessible screen reader labels\r\n        _this.titles.events.on(\"inserted\", function (label) {\r\n            _this.processTitle(label);\r\n            _this.updateReaderTitleReferences();\r\n        }, _this, false);\r\n        _this.titles.events.on(\"removed\", function (label) {\r\n            _this.updateReaderTitleReferences();\r\n        }, _this, false);\r\n        // Accessibility\r\n        // It seems we can't set focusable on the whole chart because it seems to\r\n        // mess up the whole focus event system - getting a focus on an inside\r\n        // object also trigger focus on parent\r\n        //this.focusable = true;\r\n        _this.role = \"region\";\r\n        _this.defaultState.transitionDuration = 1;\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    Chart.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        if (!$type.hasValue(this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"Chart\");\r\n        }\r\n    };\r\n    /**\r\n     * Initiates drawing of the chart.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Chart.prototype.draw = function () {\r\n        this.fixLayout();\r\n        _super.prototype.draw.call(this);\r\n    };\r\n    /**\r\n     * Updates legend's hierarchy based on the position.\r\n     */\r\n    Chart.prototype.fixLayout = function () {\r\n        var legend = this.legend;\r\n        if (legend) {\r\n            var chartAndLegendContainer = this.chartAndLegendContainer;\r\n            var chartContainer = this.chartContainer;\r\n            chartContainer.x = undefined;\r\n            chartContainer.y = undefined;\r\n            legend.x = undefined;\r\n            legend.y = undefined;\r\n            switch (legend.position) {\r\n                case \"left\":\r\n                    chartAndLegendContainer.layout = \"horizontal\";\r\n                    legend.toBack();\r\n                    break;\r\n                case \"right\":\r\n                    chartAndLegendContainer.layout = \"horizontal\";\r\n                    legend.toFront();\r\n                    break;\r\n                case \"top\":\r\n                    chartAndLegendContainer.layout = \"vertical\";\r\n                    legend.toBack();\r\n                    break;\r\n                case \"bottom\":\r\n                    chartAndLegendContainer.layout = \"vertical\";\r\n                    legend.toFront();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Setups the legend to use the chart's data.\r\n     */\r\n    Chart.prototype.feedLegend = function () {\r\n        // Nothing here. This method is provided only as a \"placeholder\" for\r\n        // extending classes to override\r\n    };\r\n    /**\r\n     * Adds a new title to the chart when it is inserted into chart's titles\r\n     * list.\r\n     * @param event  An event object which is triggered when inserting into titles list\r\n     * @return Label object\r\n     */\r\n    Chart.prototype.processTitle = function (event) {\r\n        var title = event.newValue;\r\n        title.parent = this;\r\n        title.toBack();\r\n        title.shouldClone = false;\r\n        title.align = \"center\";\r\n        // Need to explicitly apply the `id` attribute so it can be referenced by\r\n        // `aria-labelledby`\r\n        title.uidAttr();\r\n        return title;\r\n    };\r\n    /**\r\n     * Checks if chart has any title elements. If it does, we will use them in an\r\n     * `aria-labelledby` attribute so that screen readers can use them to properly\r\n     * describe the chart when it is focused or hovered.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Chart.prototype.updateReaderTitleReferences = function () {\r\n        if (this.titles.length) {\r\n            var titleIds_1 = [];\r\n            $iter.each(this.titles.iterator(), function (title) {\r\n                titleIds_1.push(title.uid);\r\n            });\r\n            this.setSVGAttribute({ \"aria-labelledby\": titleIds_1.join(\" \") });\r\n        }\r\n        else {\r\n            this.removeSVGAttribute(\"aria-labelledby\");\r\n        }\r\n    };\r\n    Object.defineProperty(Chart.prototype, \"legend\", {\r\n        /**\r\n         * @return Legend\r\n         */\r\n        get: function () {\r\n            return this._legend.get();\r\n        },\r\n        /**\r\n         * Holds the instance of chart's [[Leged]].\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/legend/} for more information about legends\r\n         * @param Legend\r\n         */\r\n        set: function (legend) {\r\n            this.setLegend(legend);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Prepares the legend instance for use in this chart.\r\n     *\r\n     * @param legend  Legend\r\n     */\r\n    Chart.prototype.setLegend = function (legend) {\r\n        var _this = this;\r\n        if (this._legend.get() !== legend) {\r\n            if (legend) {\r\n                legend.maxWidth = 200;\r\n                // Set legend options\r\n                legend.parent = this.chartAndLegendContainer;\r\n                this._legend.set(legend, legend.events.on(\"propertychanged\", function (event) {\r\n                    if (event.property == \"position\") {\r\n                        _this.fixLayout();\r\n                    }\r\n                }, undefined, false));\r\n            }\r\n            else {\r\n                this._legend.reset();\r\n            }\r\n            this.feedLegend();\r\n        }\r\n    };\r\n    /**\r\n     * Destroys this object and all related data.\r\n     */\r\n    Chart.prototype.dispose = function () {\r\n        // otherwise there might be some errors when disposing chart which was just inited\r\n        if (this.legend) {\r\n            this.legend.dispose();\r\n        }\r\n        _super.prototype.dispose.call(this);\r\n    };\r\n    /**\r\n     * Processes JSON-based config before it is applied to the object.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param config  Config\r\n     */\r\n    Chart.prototype.processConfig = function (config) {\r\n        if (config) {\r\n            // Set up legend\r\n            if ($type.hasValue(config.legend) && !$type.hasValue(config.legend.type)) {\r\n                config.legend.type = \"Legend\";\r\n            }\r\n        }\r\n        _super.prototype.processConfig.call(this, config);\r\n    };\r\n    /**\r\n     * Copies all properties from another instance of [[Series]].\r\n     *\r\n     * @param source  Source series\r\n     */\r\n    Chart.prototype.copyFrom = function (source) {\r\n        this.titles.copyFrom(source.titles);\r\n        this.chartContainer.copyFrom(source.chartContainer);\r\n        if (source.legend) {\r\n            this.legend = source.legend.clone();\r\n            this.legend.removeChildren();\r\n        }\r\n        _super.prototype.copyFrom.call(this, source);\r\n    };\r\n    Object.defineProperty(Chart.prototype, \"dragGrip\", {\r\n        /**\r\n         * @return Grip\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            if (!this._dragGrip) {\r\n                var grip_1 = this.tooltipContainer.createChild(Grip);\r\n                grip_1.align = \"right\";\r\n                grip_1.valign = \"middle\";\r\n                grip_1.hide(0);\r\n                grip_1.events.on(\"down\", function (ev) {\r\n                    if (ev.touch) {\r\n                        _this.interactionsEnabled = false;\r\n                    }\r\n                });\r\n                grip_1.events.on(\"up\", function (ev) {\r\n                    _this.interactionsEnabled = true;\r\n                });\r\n                this.events.on(\"down\", function (ev) {\r\n                    if (ev.touch) {\r\n                        grip_1.show();\r\n                    }\r\n                });\r\n                this._dragGrip = grip_1;\r\n            }\r\n            return this._dragGrip;\r\n        },\r\n        /**\r\n         * An instance of [[Grip]] which serves as a grip point which appears on\r\n         * touch and allows scrolling whole page even if chart is occupying the\r\n         * whole of the screen and would otherwise prevent scrolling.\r\n         *\r\n         * @since 4.4.0\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/touch/} For more information.\r\n         * @param  value  Grip\r\n         */\r\n        set: function (value) {\r\n            this._dragGrip = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Chart.prototype, \"focusable\", {\r\n        get: function () {\r\n            return this.parent.focusable;\r\n        },\r\n        set: function (value) {\r\n            this.parent.focusable = true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Chart;\r\n}(Component));\r\nexport { Chart };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Chart\"] = Chart;\r\n/**\r\n * Add default responsive rules\r\n */\r\n/**\r\n * Reduce horizontal margins\r\n */\r\ndefaultRules.push({\r\n    relevant: ResponsiveBreakpoints.widthXS,\r\n    state: function (target, stateId) {\r\n        if (target instanceof Chart) {\r\n            var state = target.states.create(stateId);\r\n            if (target.pixelPaddingLeft > 10) {\r\n                state.properties.paddingLeft = 10;\r\n            }\r\n            if (target.pixelPaddingRight > 10) {\r\n                state.properties.paddingRight = 10;\r\n            }\r\n            return state;\r\n        }\r\n        return null;\r\n    }\r\n});\r\n/**\r\n * Reduce vertical margins\r\n */\r\ndefaultRules.push({\r\n    relevant: ResponsiveBreakpoints.heightXS,\r\n    state: function (target, stateId) {\r\n        if (target instanceof Chart) {\r\n            var state = target.states.create(stateId);\r\n            if (target.pixelPaddingTop > 10) {\r\n                state.properties.paddingTop = 10;\r\n            }\r\n            if (target.pixelPaddingBottom > 10) {\r\n                state.properties.paddingBottom = 10;\r\n            }\r\n            return state;\r\n        }\r\n        return null;\r\n    }\r\n});\r\n/**\r\n * Remove horizontal padding\r\n */\r\ndefaultRules.push({\r\n    relevant: ResponsiveBreakpoints.widthXXS,\r\n    state: function (target, stateId) {\r\n        if (target instanceof Chart) {\r\n            var state = target.states.create(stateId);\r\n            state.properties.paddingLeft = 0;\r\n            state.properties.paddingRight = 0;\r\n            return state;\r\n        }\r\n        return null;\r\n    }\r\n});\r\n/**\r\n * Remove vertical padding\r\n */\r\ndefaultRules.push({\r\n    relevant: ResponsiveBreakpoints.heightXXS,\r\n    state: function (target, stateId) {\r\n        if (target instanceof Chart) {\r\n            var state = target.states.create(stateId);\r\n            state.properties.paddingTop = 0;\r\n            state.properties.paddingBottom = 0;\r\n            return state;\r\n        }\r\n        return null;\r\n    }\r\n});\r\n//# sourceMappingURL=Chart.js.map","import { __read, __spread } from \"tslib\";\r\nimport { options } from \"../Options\";\r\n/**\r\n * Outputs string to console if `verbose` is `true`.\r\n */\r\nexport function log() {\r\n    var messages = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        messages[_i] = arguments[_i];\r\n    }\r\n    if (options.verbose) {\r\n        if (console) {\r\n            console.log.apply(console, __spread(messages));\r\n        }\r\n    }\r\n}\r\n/**\r\n * Outputs a warning to the console.\r\n */\r\nexport function warn() {\r\n    var messages = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        messages[_i] = arguments[_i];\r\n    }\r\n    if (console) {\r\n        console.warn.apply(console, __spread(messages));\r\n    }\r\n}\r\n//# sourceMappingURL=Log.js.map","'use strict';\n\n/**\n * Copyright Marc J. Schmidt. See the LICENSE file at the top-level\n * directory of this distribution and at\n * https://github.com/marcj/css-element-queries/blob/master/LICENSE.\n */\n(function (root, factory) {\n    if (typeof define === \"function\" && define.amd) {\n        define(factory);\n    } else if (typeof exports === \"object\") {\n        module.exports = factory();\n    } else {\n        root.ResizeSensor = factory();\n    }\n}(typeof window !== 'undefined' ? window : this, function () {\n\n    // Make sure it does not throw in a SSR (Server Side Rendering) situation\n    if (typeof window === \"undefined\") {\n        return null;\n    }\n    // https://github.com/Semantic-Org/Semantic-UI/issues/3855\n    // https://github.com/marcj/css-element-queries/issues/257\n    var globalWindow = typeof window != 'undefined' && window.Math == Math\n        ? window\n        : typeof self != 'undefined' && self.Math == Math\n            ? self\n            : Function('return this')();\n    // Only used for the dirty checking, so the event callback count is limited to max 1 call per fps per sensor.\n    // In combination with the event based resize sensor this saves cpu time, because the sensor is too fast and\n    // would generate too many unnecessary events.\n    var requestAnimationFrame = globalWindow.requestAnimationFrame ||\n        globalWindow.mozRequestAnimationFrame ||\n        globalWindow.webkitRequestAnimationFrame ||\n        function (fn) {\n            return globalWindow.setTimeout(fn, 20);\n        };\n\n    /**\n     * Iterate over each of the provided element(s).\n     *\n     * @param {HTMLElement|HTMLElement[]} elements\n     * @param {Function}                  callback\n     */\n    function forEachElement(elements, callback){\n        var elementsType = Object.prototype.toString.call(elements);\n        var isCollectionTyped = ('[object Array]' === elementsType\n            || ('[object NodeList]' === elementsType)\n            || ('[object HTMLCollection]' === elementsType)\n            || ('[object Object]' === elementsType)\n            || ('undefined' !== typeof jQuery && elements instanceof jQuery) //jquery\n            || ('undefined' !== typeof Elements && elements instanceof Elements) //mootools\n        );\n        var i = 0, j = elements.length;\n        if (isCollectionTyped) {\n            for (; i < j; i++) {\n                callback(elements[i]);\n            }\n        } else {\n            callback(elements);\n        }\n    }\n\n    /**\n    * Get element size\n    * @param {HTMLElement} element\n    * @returns {Object} {width, height}\n    */\n    function getElementSize(element) {\n        if (!element.getBoundingClientRect) {\n            return {\n                width: element.offsetWidth,\n                height: element.offsetHeight\n            }\n        }\n\n        var rect = element.getBoundingClientRect();\n        return {\n            width: Math.round(rect.width),\n            height: Math.round(rect.height)\n        }\n    }\n\n    /**\n     * Apply CSS styles to element.\n     *\n     * @param {HTMLElement} element\n     * @param {Object} style\n     */\n    function setStyle(element, style) {\n        Object.keys(style).forEach(function(key) {\n            element.style[key] = style[key];\n        });\n    }\n\n    /**\n     * Class for dimension change detection.\n     *\n     * @param {Element|Element[]|Elements|jQuery} element\n     * @param {Function} callback\n     *\n     * @constructor\n     */\n    var ResizeSensor = function(element, callback) {\n        /**\n         *\n         * @constructor\n         */\n        function EventQueue() {\n            var q = [];\n            this.add = function(ev) {\n                q.push(ev);\n            };\n\n            var i, j;\n            this.call = function(sizeInfo) {\n                for (i = 0, j = q.length; i < j; i++) {\n                    q[i].call(this, sizeInfo);\n                }\n            };\n\n            this.remove = function(ev) {\n                var newQueue = [];\n                for(i = 0, j = q.length; i < j; i++) {\n                    if(q[i] !== ev) newQueue.push(q[i]);\n                }\n                q = newQueue;\n            };\n\n            this.length = function() {\n                return q.length;\n            }\n        }\n\n        /**\n         *\n         * @param {HTMLElement} element\n         * @param {Function}    resized\n         */\n        function attachResizeEvent(element, resized) {\n            if (!element) return;\n            if (element.resizedAttached) {\n                element.resizedAttached.add(resized);\n                return;\n            }\n\n            element.resizedAttached = new EventQueue();\n            element.resizedAttached.add(resized);\n\n            element.resizeSensor = document.createElement('div');\n            element.resizeSensor.dir = 'ltr';\n            element.resizeSensor.className = 'resize-sensor';\n\n            var style = {\n                pointerEvents: 'none',\n                position: 'absolute',\n                left: '0px',\n                top: '0px',\n                right: '0px',\n                bottom: '0px',\n                overflow: 'hidden',\n                zIndex: '-1',\n                visibility: 'hidden',\n                maxWidth: '100%'\n            };\n            var styleChild = {\n                position: 'absolute',\n                left: '0px',\n                top: '0px',\n                transition: '0s',\n            };\n\n            setStyle(element.resizeSensor, style);\n\n            var expand = document.createElement('div');\n            expand.className = 'resize-sensor-expand';\n            setStyle(expand, style);\n\n            var expandChild = document.createElement('div');\n            setStyle(expandChild, styleChild);\n            expand.appendChild(expandChild);\n\n            var shrink = document.createElement('div');\n            shrink.className = 'resize-sensor-shrink';\n            setStyle(shrink, style);\n\n            var shrinkChild = document.createElement('div');\n            setStyle(shrinkChild, styleChild);\n            setStyle(shrinkChild, { width: '200%', height: '200%' });\n            shrink.appendChild(shrinkChild);\n\n            element.resizeSensor.appendChild(expand);\n            element.resizeSensor.appendChild(shrink);\n            element.appendChild(element.resizeSensor);\n\n            var computedStyle = window.getComputedStyle(element);\n            var position = computedStyle ? computedStyle.getPropertyValue('position') : null;\n            if ('absolute' !== position && 'relative' !== position && 'fixed' !== position) {\n                element.style.position = 'relative';\n            }\n\n            var dirty, rafId;\n            var size = getElementSize(element);\n            var lastWidth = 0;\n            var lastHeight = 0;\n            var initialHiddenCheck = true;\n            var lastAnimationFrame = 0;\n\n            var resetExpandShrink = function () {\n                var width = element.offsetWidth;\n                var height = element.offsetHeight;\n\n                expandChild.style.width = (width + 10) + 'px';\n                expandChild.style.height = (height + 10) + 'px';\n\n                expand.scrollLeft = width + 10;\n                expand.scrollTop = height + 10;\n\n                shrink.scrollLeft = width + 10;\n                shrink.scrollTop = height + 10;\n            };\n\n            var reset = function() {\n                // Check if element is hidden\n                if (initialHiddenCheck) {\n                    var invisible = element.offsetWidth === 0 && element.offsetHeight === 0;\n                    if (invisible) {\n                        // Check in next frame\n                        if (!lastAnimationFrame){\n                            lastAnimationFrame = requestAnimationFrame(function(){\n                                lastAnimationFrame = 0;\n\n                                reset();\n                            });\n                        }\n\n                        return;\n                    } else {\n                        // Stop checking\n                        initialHiddenCheck = false;\n                    }\n                }\n\n                resetExpandShrink();\n            };\n            element.resizeSensor.resetSensor = reset;\n\n            var onResized = function() {\n                rafId = 0;\n\n                if (!dirty) return;\n\n                lastWidth = size.width;\n                lastHeight = size.height;\n\n                if (element.resizedAttached) {\n                    element.resizedAttached.call(size);\n                }\n            };\n\n            var onScroll = function() {\n                size = getElementSize(element);\n                dirty = size.width !== lastWidth || size.height !== lastHeight;\n\n                if (dirty && !rafId) {\n                    rafId = requestAnimationFrame(onResized);\n                }\n\n                reset();\n            };\n\n            var addEvent = function(el, name, cb) {\n                if (el.attachEvent) {\n                    el.attachEvent('on' + name, cb);\n                } else {\n                    el.addEventListener(name, cb);\n                }\n            };\n\n            addEvent(expand, 'scroll', onScroll);\n            addEvent(shrink, 'scroll', onScroll);\n\n            // Fix for custom Elements\n            requestAnimationFrame(reset);\n        }\n\n        forEachElement(element, function(elem){\n            attachResizeEvent(elem, callback);\n        });\n\n        this.detach = function(ev) {\n            ResizeSensor.detach(element, ev);\n        };\n\n        this.reset = function() {\n            element.resizeSensor.resetSensor();\n        };\n    };\n\n    ResizeSensor.reset = function(element) {\n        forEachElement(element, function(elem){\n            elem.resizeSensor.resetSensor();\n        });\n    };\n\n    ResizeSensor.detach = function(element, ev) {\n        forEachElement(element, function(elem){\n            if (!elem) return;\n            if(elem.resizedAttached && typeof ev === \"function\"){\n                elem.resizedAttached.remove(ev);\n                if(elem.resizedAttached.length()) return;\n            }\n            if (elem.resizeSensor) {\n                if (elem.contains(elem.resizeSensor)) {\n                    elem.removeChild(elem.resizeSensor);\n                }\n                delete elem.resizeSensor;\n                delete elem.resizedAttached;\n            }\n        });\n    };\n\n    if (typeof MutationObserver !== \"undefined\") {\n        var observer = new MutationObserver(function (mutations) {\n            for (var i in mutations) {\n                if (mutations.hasOwnProperty(i)) {\n                    var items = mutations[i].addedNodes;\n                    for (var j = 0; j < items.length; j++) {\n                        if (items[j].resizeSensor) {\n                            ResizeSensor.reset(items[j]);\n                        }\n                    }\n                }\n            }\n        });\n\n        document.addEventListener(\"DOMContentLoaded\", function (event) {\n            observer.observe(document.body, {\n                childList: true,\n                subtree: true,\n            });\n        });\n    }\n\n    return ResizeSensor;\n\n}));\n"],"sourceRoot":""}